{
  "version": 3,
  "sources": ["../../@vaadin/split-layout/theme/lumo/vaadin-split-layout-styles.js", "../../@vaadin/split-layout/src/vaadin-split-layout-mixin.js", "../../@vaadin/split-layout/src/vaadin-split-layout-styles.js", "../../@vaadin/split-layout/src/vaadin-split-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-split-layout',\r\n  css`\r\n    [part='splitter'] {\r\n      min-width: var(--lumo-space-s);\r\n      min-height: var(--lumo-space-s);\r\n      background-color: var(--lumo-contrast-5pct);\r\n      transition: 0.1s background-color;\r\n    }\r\n\r\n    [part='handle'] {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: var(--lumo-size-m);\r\n      height: var(--lumo-size-m);\r\n    }\r\n\r\n    [part='handle']::after {\r\n      content: '';\r\n      display: block;\r\n      --_handle-size: 4px;\r\n      width: var(--_handle-size);\r\n      height: 100%;\r\n      max-width: 100%;\r\n      max-height: 100%;\r\n      border-radius: var(--lumo-border-radius-s);\r\n      background-color: var(--lumo-contrast-30pct);\r\n      transition:\r\n        0.1s opacity,\r\n        0.1s background-color;\r\n    }\r\n\r\n    :host([orientation='vertical']) [part='handle']::after {\r\n      width: 100%;\r\n      height: var(--_handle-size);\r\n    }\r\n\r\n    /* Hover style */\r\n    @media (any-hover: hover) {\r\n      [part='splitter']:hover [part='handle']::after {\r\n        background-color: var(--lumo-contrast-40pct);\r\n      }\r\n    }\r\n\r\n    /* Active style */\r\n    [part='splitter']:active [part='handle']::after {\r\n      background-color: var(--lumo-contrast-50pct);\r\n    }\r\n\r\n    /* Small/minimal */\r\n    :host([theme~='small']) > [part='splitter'] {\r\n      border-left: 1px solid var(--lumo-contrast-10pct);\r\n      border-top: 1px solid var(--lumo-contrast-10pct);\r\n    }\r\n\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] {\r\n      min-width: 0;\r\n      min-height: 0;\r\n      background-color: transparent;\r\n    }\r\n\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']::after {\r\n      content: '';\r\n      position: absolute;\r\n      inset: -4px;\r\n    }\r\n\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] > [part='handle'] {\r\n      left: calc(50% - 0.5px);\r\n      top: calc(50% - 0.5px);\r\n    }\r\n\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter'] > [part='handle']::after {\r\n      opacity: 0;\r\n      --_handle-size: 5px;\r\n    }\r\n\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']:hover > [part='handle']::after,\r\n    :host(:is([theme~='small'], [theme~='minimal'])) > [part='splitter']:active > [part='handle']::after {\r\n      opacity: 1;\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-split-layout' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const SplitLayoutMixin = (superClass) =>\r\n  class SplitLayoutMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * The split layout's orientation. Possible values are: `horizontal|vertical`.\r\n         * @type {string}\r\n         */\r\n        orientation: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n          value: 'horizontal',\r\n        },\r\n\r\n        /** @private */\r\n        _previousPrimaryPointerEvents: String,\r\n\r\n        /** @private */\r\n        _previousSecondaryPointerEvents: String,\r\n      };\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._processChildren();\r\n\r\n      this.__observer = new MutationObserver((mutations) => {\r\n        mutations.forEach((mutation) => {\r\n          this._cleanupNodes(mutation.removedNodes);\r\n        });\r\n\r\n        this._processChildren();\r\n      });\r\n\r\n      this.__observer.observe(this, { childList: true });\r\n\r\n      const splitter = this.$.splitter;\r\n      addListener(splitter, 'track', this._onHandleTrack.bind(this));\r\n      addListener(splitter, 'down', this._setPointerEventsNone.bind(this));\r\n      addListener(splitter, 'up', this._restorePointerEvents.bind(this));\r\n    }\r\n\r\n    /** @private */\r\n    _cleanupNodes(nodes) {\r\n      nodes.forEach((node) => {\r\n        if (node.nodeType === Node.ELEMENT_NODE && !(node.parentElement instanceof this.constructor)) {\r\n          const slot = node.getAttribute('slot');\r\n          if (slot) {\r\n            this[`_${slot}Child`] = null;\r\n            node.removeAttribute('slot');\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    _processChildren() {\r\n      const children = [...this.children];\r\n\r\n      children.filter((child) => child.hasAttribute('slot')).forEach((child) => this._processChildWithSlot(child));\r\n\r\n      children\r\n        .filter((child) => !child.hasAttribute('slot'))\r\n        .forEach((child, i) => this._processChildWithoutSlot(child, i));\r\n    }\r\n\r\n    /** @private */\r\n    _processChildWithSlot(child) {\r\n      const slot = child.getAttribute('slot');\r\n      if (child.__autoSlotted) {\r\n        this[`_${slot}Child`] = null;\r\n        child.removeAttribute('slot');\r\n      } else {\r\n        this[`_${slot}Child`] = child;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _processChildWithoutSlot(child, idx) {\r\n      let slotName;\r\n      if (this._primaryChild || this._secondaryChild) {\r\n        slotName = this._primaryChild ? 'secondary' : 'primary';\r\n      } else {\r\n        slotName = idx === 0 ? 'primary' : 'secondary';\r\n      }\r\n\r\n      this[`_${slotName}Child`] = child;\r\n      child.setAttribute('slot', slotName);\r\n      child.__autoSlotted = true;\r\n    }\r\n\r\n    /** @private */\r\n    _setFlexBasis(element, flexBasis, containerSize) {\r\n      flexBasis = Math.max(0, Math.min(flexBasis, containerSize));\r\n      if (flexBasis === 0) {\r\n        // Pure zero does not play well in Safari\r\n        flexBasis = 0.000001;\r\n      }\r\n      element.style.flex = `1 1 ${flexBasis}px`;\r\n    }\r\n\r\n    /** @private */\r\n    _setPointerEventsNone(event) {\r\n      if (!this._primaryChild || !this._secondaryChild) {\r\n        return;\r\n      }\r\n      this._previousPrimaryPointerEvents = this._primaryChild.style.pointerEvents;\r\n      this._previousSecondaryPointerEvents = this._secondaryChild.style.pointerEvents;\r\n      this._primaryChild.style.pointerEvents = 'none';\r\n      this._secondaryChild.style.pointerEvents = 'none';\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    /** @private */\r\n    _restorePointerEvents() {\r\n      if (!this._primaryChild || !this._secondaryChild) {\r\n        return;\r\n      }\r\n      this._primaryChild.style.pointerEvents = this._previousPrimaryPointerEvents;\r\n      this._secondaryChild.style.pointerEvents = this._previousSecondaryPointerEvents;\r\n    }\r\n\r\n    /** @private */\r\n    _onHandleTrack(event) {\r\n      if (!this._primaryChild || !this._secondaryChild) {\r\n        return;\r\n      }\r\n\r\n      const size = this.orientation === 'vertical' ? 'height' : 'width';\r\n      if (event.detail.state === 'start') {\r\n        this._startSize = {\r\n          container: this.getBoundingClientRect()[size] - this.$.splitter.getBoundingClientRect()[size],\r\n          primary: this._primaryChild.getBoundingClientRect()[size],\r\n          secondary: this._secondaryChild.getBoundingClientRect()[size],\r\n        };\r\n\r\n        return;\r\n      }\r\n\r\n      const distance = this.orientation === 'vertical' ? event.detail.dy : event.detail.dx;\r\n      const isRtl = this.orientation !== 'vertical' && this.__isRTL;\r\n      const dirDistance = isRtl ? -distance : distance;\r\n\r\n      this._setFlexBasis(this._primaryChild, this._startSize.primary + dirDistance, this._startSize.container);\r\n      this._setFlexBasis(this._secondaryChild, this._startSize.secondary - dirDistance, this._startSize.container);\r\n\r\n      if (event.detail.state === 'end') {\r\n        this.dispatchEvent(new CustomEvent('splitter-dragend'));\r\n\r\n        delete this._startSize;\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const splitLayoutStyles = css`\r\n  :host {\r\n    display: flex;\r\n    overflow: hidden !important;\r\n    transform: translateZ(0);\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  :host([orientation='vertical']) {\r\n    flex-direction: column;\r\n  }\r\n\r\n  :host ::slotted(*) {\r\n    flex: 1 1 auto;\r\n    overflow: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n\r\n  [part='splitter'] {\r\n    flex: none;\r\n    position: relative;\r\n    z-index: 1;\r\n    overflow: visible;\r\n    min-width: 8px;\r\n    min-height: 8px;\r\n  }\r\n\r\n  :host(:not([orientation='vertical'])) > [part='splitter'] {\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  :host([orientation='vertical']) > [part='splitter'] {\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  [part='handle'] {\r\n    width: 40px;\r\n    height: 40px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate3d(-50%, -50%, 0);\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    [part~='splitter'] {\r\n      outline: 1px solid;\r\n    }\r\n\r\n    [part~='handle']::after {\r\n      background-color: AccentColor !important;\r\n      forced-color-adjust: none;\r\n    }\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { SplitLayoutMixin } from './vaadin-split-layout-mixin.js';\r\nimport { splitLayoutStyles } from './vaadin-split-layout-styles.js';\r\n\r\nregisterStyles('vaadin-split-layout', splitLayoutStyles, { moduleId: 'vaadin-split-layout-styles' });\r\n\r\n/**\r\n * `<vaadin-split-layout>` is a Web Component implementing a split layout for two\r\n * content elements with a draggable splitter between them.\r\n *\r\n * ```html\r\n * <vaadin-split-layout>\r\n *   <div>First content element</div>\r\n *   <div>Second content element</div>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * ### Horizontal and Vertical Layouts\r\n *\r\n * By default, the split's orientation is horizontal, meaning that the content elements are\r\n * positioned side by side in a flex container with a horizontal layout.\r\n *\r\n * You can change the split mode to vertical by setting the `orientation` attribute to `\"vertical\"`:\r\n *\r\n * ```html\r\n * <vaadin-split-layout orientation=\"vertical\">\r\n *   <div>Content on the top</div>\r\n *   <div>Content on the bottom</div>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * ### Layouts Combination\r\n *\r\n * For the layout contents, we usually use `<div>` elements in the examples,\r\n * although you can use any other elements as well.\r\n *\r\n * For instance, in order to have a nested vertical split layout inside a\r\n * horizontal one, you can include `<vaadin-split-layout>` as a content element\r\n * inside another split layout:\r\n *\r\n * ```html\r\n * <vaadin-split-layout>\r\n *   <div>First content element</div>\r\n *   <vaadin-split-layout orientation=\"vertical\">\r\n *     <div>Second content element</div>\r\n *     <div>Third content element</div>\r\n *   </vaadin-split-layout>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * You can also trigger the vertical mode in JavaScript by setting the property:\r\n * `splitLayout.orientation = \"vertical\";`.\r\n *\r\n * ### Split Layout Element Height\r\n *\r\n * `<vaadin-split-layout>` element itself is a flex container. It does not inherit\r\n * the parent height by default, but rather sets its height depending on the\r\n * content.\r\n *\r\n * You can use CSS to set the fixed height for the split layout, as usual with any\r\n * block element:\r\n *\r\n * ```html\r\n * <vaadin-split-layout style=\"height: 200px;\">\r\n *   <div>First content element</div>\r\n *   <div>Second content element</div>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * It is possible to define percentage height as well. Note that you have to set\r\n * the parent height in order to make percentages work correctly. In the following\r\n * example, the `<body>` is resized to fill the entire viewport, and the\r\n * `<vaadin-split-layout>` element is set to take 100% height of the `<body>`:\r\n *\r\n * ```html\r\n * <body style=\"height: 100vh; margin: 0;\">\r\n *   <vaadin-split-layout style=\"height: 100%;\">\r\n *     <div>First</div>\r\n *     <div>Second</div>\r\n *   </vaadin-split-layout>\r\n * </body>\r\n * ```\r\n *\r\n * Alternatively, you can use a flexbox layout to make `<vaadin-split-layout>`\r\n * fill up the parent:\r\n *\r\n * ```html\r\n * <body style=\"height: 100vh; margin: 0; display: flex;\">\r\n *   <vaadin-split-layout style=\"flex: 1;\">\r\n *     <div>First</div>\r\n *     <div>Second</div>\r\n *   </vaadin-split-layout>\r\n * </body>\r\n * ```\r\n *\r\n * ### Initial Splitter Position\r\n *\r\n * The initial splitter position is determined from the sizes of the content elements\r\n * inside the split layout. Therefore, changing `width` on the content elements\r\n * affects the initial splitter position for the horizontal layouts, while `height`\r\n * affects the vertical ones.\r\n *\r\n * Note that when the total size of the content elements does not fit the layout,\r\n * the content elements are scaled proportionally.\r\n *\r\n * When setting initial sizes with relative units, such as percentages, it is\r\n * recommended to assign the size for both content elements:\r\n *\r\n * ```html\r\n * <vaadin-split-layout>\r\n *   <div style=\"width: 75%;\">Three fourths</div>\r\n *   <div style=\"width: 25%;\">One fourth</div>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * ### Size Limits\r\n *\r\n * The `min-width`/`min-height`, and `max-width`/`max-height` CSS size values\r\n * for the content elements are respected and used to limit the splitter position\r\n * when it is dragged.\r\n *\r\n * It is preferred to set the limits only for a single content element, in order\r\n * to avoid size conflicts:\r\n *\r\n * ```html\r\n * <vaadin-split-layout>\r\n *   <div style=\"min-width: 50px; max-width: 150px;\">First</div>\r\n *   <div>Second</div>\r\n * </vaadin-split-layout>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description | Theme for Element\r\n * ----------------|----------------|----------------\r\n * `splitter` | Split element | vaadin-split-layout\r\n * `handle` | The handle of the splitter | vaadin-split-layout\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {Event} splitter-dragend - Fired after dragging the splitter have ended.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes SplitLayoutMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass SplitLayout extends SplitLayoutMixin(ElementMixin(ThemableMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <slot id=\"primary\" name=\"primary\"></slot>\r\n      <div part=\"splitter\" id=\"splitter\">\r\n        <div part=\"handle\"></div>\r\n      </div>\r\n      <slot id=\"secondary\" name=\"secondary\"></slot>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-split-layout';\r\n  }\r\n\r\n  /**\r\n   * Fired after dragging the splitter have ended.\r\n   *\r\n   * @event splitter-dragend\r\n   */\r\n}\r\n\r\ndefineCustomElement(SplitLayout);\r\n\r\nexport { SplitLayout };\r\n"],
  "mappings": "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",
  "names": []
}
