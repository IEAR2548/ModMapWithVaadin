{
  "version": 3,
  "sources": ["../../@vaadin/radio-group/theme/lumo/vaadin-radio-button-styles.js", "../../@vaadin/radio-group/src/vaadin-radio-button-mixin.js", "../../@vaadin/radio-group/src/vaadin-radio-button-styles.js", "../../@vaadin/radio-group/src/vaadin-radio-button.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-radio-button',\r\n  css`\r\n    :host {\r\n      color: var(--vaadin-radio-button-label-color, var(--lumo-body-text-color));\r\n      font-size: var(--vaadin-radio-button-label-font-size, var(--lumo-font-size-m));\r\n      font-family: var(--lumo-font-family);\r\n      line-height: var(--lumo-line-height-s);\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      -webkit-tap-highlight-color: transparent;\r\n      -webkit-user-select: none;\r\n      user-select: none;\r\n      cursor: default;\r\n      outline: none;\r\n      --_radio-button-size: var(--vaadin-radio-button-size, calc(var(--lumo-size-m) / 2));\r\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n      --_selection-color: var(--vaadin-selection-color, var(--lumo-primary-color));\r\n    }\r\n\r\n    :host([has-label]) ::slotted(label) {\r\n      padding: var(\r\n        --vaadin-radio-button-label-padding,\r\n        var(--lumo-space-xs) var(--lumo-space-s) var(--lumo-space-xs) var(--lumo-space-xs)\r\n      );\r\n    }\r\n\r\n    [part='radio'] {\r\n      width: var(--_radio-button-size);\r\n      height: var(--_radio-button-size);\r\n      margin: var(--lumo-space-xs);\r\n      position: relative;\r\n      border-radius: 50%;\r\n      background: var(--vaadin-radio-button-background, var(--lumo-contrast-20pct));\r\n      transition:\r\n        transform 0.2s cubic-bezier(0.12, 0.32, 0.54, 2),\r\n        background-color 0.15s;\r\n      will-change: transform;\r\n      cursor: var(--lumo-clickable-cursor);\r\n      /* Default field border color */\r\n      --_input-border-color: var(--vaadin-input-field-border-color, var(--lumo-contrast-50pct));\r\n    }\r\n\r\n    /* Used for activation \"halo\" */\r\n    [part='radio']::before {\r\n      pointer-events: none;\r\n      color: transparent;\r\n      width: 100%;\r\n      height: 100%;\r\n      line-height: var(--_radio-button-size);\r\n      border-radius: inherit;\r\n      background-color: inherit;\r\n      transform: scale(1.4);\r\n      opacity: 0;\r\n      transition:\r\n        transform 0.1s,\r\n        opacity 0.8s;\r\n      will-change: transform, opacity;\r\n    }\r\n\r\n    /* Used for the dot */\r\n    [part='radio']::after {\r\n      content: '';\r\n      pointer-events: none;\r\n      width: 0;\r\n      height: 0;\r\n      border: var(--vaadin-radio-button-dot-size, 3px) solid\r\n        var(--vaadin-radio-button-dot-color, var(--lumo-primary-contrast-color));\r\n      border-radius: 50%;\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%) scale(0);\r\n      transition: 0.25s transform;\r\n      will-change: transform;\r\n      background-clip: content-box;\r\n    }\r\n\r\n    :host([checked]) {\r\n      --vaadin-input-field-border-color: transparent;\r\n    }\r\n\r\n    :host([checked]) [part='radio'] {\r\n      background-color: var(--_selection-color);\r\n    }\r\n\r\n    :host([checked]) [part='radio']::after {\r\n      transform: translate(-50%, -50%) scale(1);\r\n    }\r\n\r\n    :host(:not([checked]):not([disabled]):hover) [part='radio'] {\r\n      background: var(--vaadin-radio-button-background-hover, var(--lumo-contrast-30pct));\r\n    }\r\n\r\n    :host([active]) [part='radio'] {\r\n      transform: scale(0.9);\r\n      transition-duration: 0.05s;\r\n    }\r\n\r\n    :host([active][checked]) [part='radio'] {\r\n      transform: scale(1.1);\r\n    }\r\n\r\n    :host([active]:not([checked])) [part='radio']::before {\r\n      transition-duration: 0.01s, 0.01s;\r\n      transform: scale(0);\r\n      opacity: 0.4;\r\n    }\r\n\r\n    :host([focus-ring]) [part='radio'] {\r\n      box-shadow:\r\n        0 0 0 1px var(--lumo-base-color),\r\n        0 0 0 calc(var(--_focus-ring-width) + 1px) var(--_focus-ring-color),\r\n        inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\r\n    }\r\n\r\n    :host([disabled]) {\r\n      pointer-events: none;\r\n      color: var(--lumo-disabled-text-color);\r\n      --vaadin-input-field-border-color: var(--lumo-contrast-20pct);\r\n    }\r\n\r\n    :host([disabled]) ::slotted(label) {\r\n      color: inherit;\r\n    }\r\n\r\n    :host([disabled]) [part='radio'] {\r\n      background-color: var(--vaadin-radio-button-disabled-background, var(--lumo-contrast-10pct));\r\n    }\r\n\r\n    :host([disabled]) [part='radio']::after {\r\n      border-color: var(--vaadin-radio-button-disabled-dot-color, var(--lumo-contrast-30pct));\r\n    }\r\n\r\n    /* RTL specific styles */\r\n    :host([dir='rtl'][has-label]) ::slotted(label) {\r\n      padding: var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-xs) var(--lumo-space-s);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-radio-button' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { ActiveMixin } from '@vaadin/a11y-base/src/active-mixin.js';\r\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\r\nimport { SlotStylesMixin } from '@vaadin/component-base/src/slot-styles-mixin.js';\r\nimport { CheckedMixin } from '@vaadin/field-base/src/checked-mixin.js';\r\nimport { InputController } from '@vaadin/field-base/src/input-controller.js';\r\nimport { LabelMixin } from '@vaadin/field-base/src/label-mixin.js';\r\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\r\n\r\n/**\r\n * A mixin providing common radio-button functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes ActiveMixin\r\n * @mixes CheckedMixin\r\n * @mixes DelegateFocusMixin\r\n * @mixes LabelMixin\r\n * @mixes SlotStylesMixin\r\n */\r\nexport const RadioButtonMixin = (superclass) =>\r\n  class RadioButtonMixinClass extends SlotStylesMixin(\r\n    LabelMixin(CheckedMixin(DelegateFocusMixin(ActiveMixin(superclass)))),\r\n  ) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * The name of the radio button.\r\n         *\r\n         * @type {string}\r\n         */\r\n        name: {\r\n          type: String,\r\n          value: '',\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @override */\r\n    static get delegateAttrs() {\r\n      return [...super.delegateAttrs, 'name'];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this._setType('radio');\r\n\r\n      // Set the string \"on\" as the default value for the radio button following the HTML specification:\r\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\r\n      this.value = 'on';\r\n\r\n      // Set tabindex to 0 by default to not lose focus on click in Safari\r\n      // See https://github.com/vaadin/web-components/pull/6780\r\n      this.tabindex = 0;\r\n    }\r\n\r\n    /** @protected */\r\n    get slotStyles() {\r\n      const tag = this.localName;\r\n\r\n      // Needed to override `opacity: 1` set on `input` by Tailwind CSS.\r\n      // See https://github.com/vaadin/web-components/issues/8881\r\n      return [\r\n        `\r\n          ${tag} > input[slot='input'] {\r\n            opacity: 0;\r\n          }\r\n        `,\r\n      ];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addController(\r\n        new InputController(this, (input) => {\r\n          this._setInputElement(input);\r\n          this._setFocusElement(input);\r\n          this.stateTarget = input;\r\n          this.ariaTarget = input;\r\n        }),\r\n      );\r\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const radioButtonStyles = css`\r\n  :host {\r\n    display: inline-block;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  :host([disabled]) {\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  .vaadin-radio-button-container {\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    align-items: baseline;\r\n  }\r\n\r\n  [part='radio'],\r\n  ::slotted(input),\r\n  ::slotted(label) {\r\n    grid-row: 1;\r\n  }\r\n\r\n  [part='radio'],\r\n  ::slotted(input) {\r\n    grid-column: 1;\r\n  }\r\n\r\n  [part='radio'] {\r\n    width: var(--vaadin-radio-button-size, 1em);\r\n    height: var(--vaadin-radio-button-size, 1em);\r\n    --_input-border-width: var(--vaadin-input-field-border-width, 0);\r\n    --_input-border-color: var(--vaadin-input-field-border-color, transparent);\r\n    box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\r\n  }\r\n\r\n  [part='radio']::before {\r\n    display: block;\r\n    content: '\\\\202F';\r\n    line-height: var(--vaadin-radio-button-size, 1em);\r\n    contain: paint;\r\n  }\r\n\r\n  /* visually hidden */\r\n  ::slotted(input) {\r\n    cursor: inherit;\r\n    margin: 0;\r\n    align-self: stretch;\r\n    -webkit-appearance: none;\r\n    width: initial;\r\n    height: initial;\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    [part='radio'] {\r\n      outline: 1px solid;\r\n      outline-offset: -1px;\r\n    }\r\n\r\n    :host([focused]) [part='radio'] {\r\n      outline-width: 2px;\r\n    }\r\n\r\n    :host([disabled]) [part='radio'] {\r\n      outline-color: GrayText;\r\n    }\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { RadioButtonMixin } from './vaadin-radio-button-mixin.js';\r\nimport { radioButtonStyles } from './vaadin-radio-button-styles.js';\r\n\r\nregisterStyles('vaadin-radio-button', radioButtonStyles, { moduleId: 'vaadin-radio-button-styles' });\r\n\r\n/**\r\n * `<vaadin-radio-button>` is a web component representing a choice in a radio group.\r\n * Only one radio button in the group can be selected at the same time.\r\n *\r\n * ```html\r\n * <vaadin-radio-group label=\"Travel class\">\r\n *   <vaadin-radio-button value=\"economy\" label=\"Economy\"></vaadin-radio-button>\r\n *   <vaadin-radio-button value=\"business\" label=\"Business\"></vaadin-radio-button>\r\n *   <vaadin-radio-button value=\"firstClass\" label=\"First Class\"></vaadin-radio-button>\r\n * </vaadin-radio-group>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name   | Description\r\n * ------------|----------------\r\n * `radio`     | The wrapper element that contains slotted `<input type=\"radio\">`.\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute    | Description | Part name\r\n * -------------|-------------|------------\r\n * `active`     | Set when the radio button is pressed down, either with a pointer or the keyboard. | `:host`\r\n * `disabled`   | Set when the radio button is disabled. | `:host`\r\n * `focus-ring` | Set when the radio button is focused using the keyboard. | `:host`\r\n * `focused`    | Set when the radio button is focused. | `:host`\r\n * `checked`    | Set when the radio button is checked. | `:host`\r\n * `has-label`  | Set when the radio button has a label. | `:host`\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} checked-changed - Fired when the `checked` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n * @mixes RadioButtonMixin\r\n */\r\nclass RadioButton extends RadioButtonMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\r\n  static get is() {\r\n    return 'vaadin-radio-button';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <div class=\"vaadin-radio-button-container\">\r\n        <div part=\"radio\" aria-hidden=\"true\"></div>\r\n        <slot name=\"input\"></slot>\r\n        <slot name=\"label\"></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(RadioButton);\r\n\r\nexport { RadioButton };\r\n"],
  "mappings": "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",
  "names": []
}
