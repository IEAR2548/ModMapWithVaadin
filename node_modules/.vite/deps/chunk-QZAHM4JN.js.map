{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/controller-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\r\n\r\n/**\r\n * @typedef ReactiveController\r\n * @type {import('lit').ReactiveController}\r\n */\r\n\r\n/**\r\n * A mixin for connecting controllers to the element.\r\n *\r\n * @polymerMixin\r\n */\r\nexport const ControllerMixin = dedupingMixin((superClass) => {\r\n  // If the superclass extends from LitElement,\r\n  // use its own controllers implementation.\r\n  if (typeof superClass.prototype.addController === 'function') {\r\n    return superClass;\r\n  }\r\n\r\n  return class ControllerMixinClass extends superClass {\r\n    constructor() {\r\n      super();\r\n\r\n      /**\r\n       * @type {Set<ReactiveController>}\r\n       */\r\n      this.__controllers = new Set();\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      this.__controllers.forEach((c) => {\r\n        if (c.hostConnected) {\r\n          c.hostConnected();\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      this.__controllers.forEach((c) => {\r\n        if (c.hostDisconnected) {\r\n          c.hostDisconnected();\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Registers a controller to participate in the element update cycle.\r\n     *\r\n     * @param {ReactiveController} controller\r\n     * @protected\r\n     */\r\n    addController(controller) {\r\n      this.__controllers.add(controller);\r\n      // Call hostConnected if a controller is added after the element is attached.\r\n      if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\r\n        controller.hostConnected();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Removes a controller from the element.\r\n     *\r\n     * @param {ReactiveController} controller\r\n     * @protected\r\n     */\r\n    removeController(controller) {\r\n      this.__controllers.delete(controller);\r\n    }\r\n  };\r\n});\r\n"],
  "mappings": ";;;;;AAiBO,IAAM,kBAAkB,cAAc,CAAC,eAAe;AAG3D,MAAI,OAAO,WAAW,UAAU,kBAAkB,YAAY;AAC5D,WAAO;AAAA,EACT;AAEA,SAAO,MAAM,6BAA6B,WAAW;AAAA,IACnD,cAAc;AACZ,YAAM;AAKN,WAAK,gBAAgB,oBAAI,IAAI;AAAA,IAC/B;AAAA;AAAA,IAGA,oBAAoB;AAClB,YAAM,kBAAkB;AAExB,WAAK,cAAc,QAAQ,CAAC,MAAM;AAChC,YAAI,EAAE,eAAe;AACnB,YAAE,cAAc;AAAA,QAClB;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA,IAGA,uBAAuB;AACrB,YAAM,qBAAqB;AAE3B,WAAK,cAAc,QAAQ,CAAC,MAAM;AAChC,YAAI,EAAE,kBAAkB;AACtB,YAAE,iBAAiB;AAAA,QACrB;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,cAAc,YAAY;AACxB,WAAK,cAAc,IAAI,UAAU;AAEjC,UAAI,KAAK,MAAM,UAAa,KAAK,eAAe,WAAW,eAAe;AACxE,mBAAW,cAAc;AAAA,MAC3B;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,iBAAiB,YAAY;AAC3B,WAAK,cAAc,OAAO,UAAU;AAAA,IACtC;AAAA,EACF;AACF,CAAC;",
  "names": []
}
