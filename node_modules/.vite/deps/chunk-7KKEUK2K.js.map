{
  "version": 3,
  "sources": ["../../@vaadin/grid/theme/lumo/vaadin-grid-sorter-styles.js", "../../@vaadin/grid/src/vaadin-grid-sorter-mixin.js", "../../@vaadin/grid/src/vaadin-grid-sorter.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-grid-sorter',\r\n  css`\r\n    :host {\r\n      justify-content: flex-start;\r\n      align-items: baseline;\r\n      -webkit-user-select: none;\r\n      user-select: none;\r\n      cursor: var(--lumo-clickable-cursor);\r\n    }\r\n\r\n    [part='content'] {\r\n      display: inline-block;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n\r\n    [part='indicators'] {\r\n      margin-left: var(--lumo-space-s);\r\n    }\r\n\r\n    [part='indicators']::before {\r\n      transform: scale(0.8);\r\n    }\r\n\r\n    :host(:not([direction]):not(:hover)) [part='indicators'] {\r\n      color: var(--lumo-tertiary-text-color);\r\n    }\r\n\r\n    :host([direction]) {\r\n      color: var(--vaadin-selection-color-text, var(--lumo-primary-text-color));\r\n    }\r\n\r\n    [part='order'] {\r\n      font-size: var(--lumo-font-size-xxs);\r\n      line-height: 1;\r\n    }\r\n\r\n    /* RTL specific styles */\r\n\r\n    :host([dir='rtl']) [part='indicators'] {\r\n      margin-right: var(--lumo-space-s);\r\n      margin-left: 0;\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-grid-sorter' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst template = document.createElement('template');\r\n\r\ntemplate.innerHTML = `\r\n  <style>\r\n    @font-face {\r\n      font-family: 'vaadin-grid-sorter-icons';\r\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQwAA0AAAAABuwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAEFAAAABkAAAAcfep+mUdERUYAAAP4AAAAHAAAAB4AJwAOT1MvMgAAAZgAAAA/AAAAYA8TBPpjbWFwAAAB7AAAAFUAAAFeF1fZ4mdhc3AAAAPwAAAACAAAAAgAAAAQZ2x5ZgAAAlgAAABcAAAAnMvguMloZWFkAAABMAAAAC8AAAA2C5Ap72hoZWEAAAFgAAAAHQAAACQGbQPHaG10eAAAAdgAAAAUAAAAHAoAAABsb2NhAAACRAAAABIAAAASAIwAYG1heHAAAAGAAAAAFgAAACAACwAKbmFtZQAAArQAAAECAAACZxWCgKhwb3N0AAADuAAAADUAAABZCrApUXicY2BkYGAA4rDECVrx/DZfGbhZGEDgyqNPOxH0/wNMq5kPALkcDEwgUQBWRA0dAHicY2BkYGA+8P8AAwMLAwgwrWZgZEAFbABY4QM8AAAAeJxjYGRgYOAAQiYGEICQSAAAAi8AFgAAeJxjYGY6yziBgZWBgWkm0xkGBoZ+CM34msGYkZMBFTAKoAkwODAwvmRiPvD/AIMDMxCD1CDJKjAwAgBktQsXAHicY2GAAMZQCM0EwqshbAALxAEKeJxjYGBgZoBgGQZGBhCIAPIYwXwWBhsgzcXAwcAEhIwMCi+Z/v/9/x+sSuElA4T9/4k4K1gHFwMMMILMY2QDYmaoABOQYGJABUA7WBiGNwAAJd4NIQAAAAAAAAAACAAIABAAGAAmAEAATgAAeJyNjLENgDAMBP9tIURJwQCMQccSZgk2i5fIYBDAidJjycXr7x5EPwE2wY8si7jmyBNXGo/bNBerxJNrpxhbO3/fEFpx8ZICpV+ghxJ74fAMe+h7Ox14AbrsHB14nK2QQWrDMBRER4mTkhQK3ZRQKOgCNk7oGQqhhEIX2WSlWEI1BAlkJ5CDdNsj5Ey9Rncdi38ES+jzNJo/HwTgATcoDEthhY3wBHc4CE+pfwsX5F/hGe7Vo/AcK/UhvMSz+mGXKhZU6pww8ISz3oWn1BvhgnwTnuEJf8Jz1OpFeIlX9YULDLdFi4ASHolkSR0iuYdjLak1vAequBhj21D61Nqyi6l3qWybGPjySbPHGScGJl6dP58MYcQRI0bts7mjebBqrFENH7t3qWtj0OuqHnXcW7b0HOTZFnKryRGW2hFX1m0O2vEM3opNMfTau+CS6Z3Vx6veNnEXY6jwDxhsc2gAAHicY2BiwA84GBgYmRiYGJkZmBlZGFkZ2djScyoLMgzZS/MyDQwMwLSrpYEBlIbxjQDrzgsuAAAAAAEAAf//AA94nGNgZGBg4AFiMSBmYmAEQnYgZgHzGAAD6wA2eJxjYGBgZACCKyoz1cD0o087YTQATOcIewAAAA==) format('woff');\r\n      font-weight: normal;\r\n      font-style: normal;\r\n    }\r\n  </style>\r\n`;\r\n\r\ndocument.head.appendChild(template.content);\r\n\r\nregisterStyles(\r\n  'vaadin-grid-sorter',\r\n  css`\r\n    :host {\r\n      display: inline-flex;\r\n      cursor: pointer;\r\n      max-width: 100%;\r\n    }\r\n\r\n    [part='content'] {\r\n      flex: 1 1 auto;\r\n    }\r\n\r\n    [part='indicators'] {\r\n      position: relative;\r\n      align-self: center;\r\n      flex: none;\r\n    }\r\n\r\n    [part='order'] {\r\n      display: inline;\r\n      vertical-align: super;\r\n    }\r\n\r\n    [part='indicators']::before {\r\n      font-family: 'vaadin-grid-sorter-icons';\r\n      display: inline-block;\r\n    }\r\n\r\n    :host(:not([direction])) [part='indicators']::before {\r\n      content: '\\\\e901';\r\n    }\r\n\r\n    :host([direction='asc']) [part='indicators']::before {\r\n      content: '\\\\e900';\r\n    }\r\n\r\n    :host([direction='desc']) [part='indicators']::before {\r\n      content: '\\\\e902';\r\n    }\r\n  `,\r\n  { moduleId: 'vaadin-grid-sorter-styles' },\r\n);\r\n\r\n/**\r\n * A mixin providing common sorter functionality.\r\n *\r\n * @polymerMixin\r\n */\r\nexport const GridSorterMixin = (superClass) =>\r\n  class GridSorterMixinClass extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * JS Path of the property in the item used for sorting the data.\r\n         */\r\n        path: String,\r\n\r\n        /**\r\n         * How to sort the data.\r\n         * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\r\n         * descending direction, or `null` for not sorting the data.\r\n         * @type {GridSorterDirection | undefined}\r\n         */\r\n        direction: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n          notify: true,\r\n          value: null,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * @type {number | null}\r\n         * @protected\r\n         */\r\n        _order: {\r\n          type: Number,\r\n          value: null,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_pathOrDirectionChanged(path, direction)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this.addEventListener('click', this._onClick.bind(this));\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      if (this._grid) {\r\n        this._grid.__applySorters();\r\n      } else {\r\n        this.__dispatchSorterChangedEvenIfPossible();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      if (!this.parentNode && this._grid) {\r\n        this._grid.__removeSorters([this]);\r\n      } else if (this._grid) {\r\n        this._grid.__applySorters();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _pathOrDirectionChanged() {\r\n      this.__dispatchSorterChangedEvenIfPossible();\r\n    }\r\n\r\n    /** @private */\r\n    __dispatchSorterChangedEvenIfPossible() {\r\n      if (this.path === undefined || this.direction === undefined || !this.isConnected) {\r\n        return;\r\n      }\r\n\r\n      this.dispatchEvent(\r\n        new CustomEvent('sorter-changed', {\r\n          detail: { shiftClick: Boolean(this._shiftClick), fromSorterClick: Boolean(this._fromSorterClick) },\r\n          bubbles: true,\r\n          composed: true,\r\n        }),\r\n      );\r\n      // Cleaning up as a programatically sorting can be done after some user interaction\r\n      this._fromSorterClick = false;\r\n      this._shiftClick = false;\r\n    }\r\n\r\n    /** @private */\r\n    _getDisplayOrder(order) {\r\n      return order === null ? '' : order + 1;\r\n    }\r\n\r\n    /** @private */\r\n    _onClick(e) {\r\n      if (e.defaultPrevented) {\r\n        // Something else has already handled the click event, do nothing.\r\n        return;\r\n      }\r\n\r\n      const activeElement = this.getRootNode().activeElement;\r\n      if (this !== activeElement && this.contains(activeElement)) {\r\n        // Some focusable content inside the sorter was clicked, do nothing.\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      this._shiftClick = e.shiftKey;\r\n      this._fromSorterClick = true;\r\n      if (this.direction === 'asc') {\r\n        this.direction = 'desc';\r\n      } else if (this.direction === 'desc') {\r\n        this.direction = null;\r\n      } else {\r\n        this.direction = 'asc';\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { GridSorterMixin } from './vaadin-grid-sorter-mixin.js';\r\n\r\n/**\r\n * `<vaadin-grid-sorter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\r\n * visual feedback, and handlers for sorting the grid data.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <vaadin-grid-column id=\"column\"></vaadin-grid-column>\r\n * ```\r\n * ```js\r\n * const column = document.querySelector('#column');\r\n * column.renderer = (root, column, model) => {\r\n *   let sorter = root.firstElementChild;\r\n *   if (!sorter) {\r\n *     sorter = document.createElement('vaadin-grid-sorter');\r\n *     root.appendChild(sorter);\r\n *   }\r\n *   sorter.path = 'name.first';\r\n * };\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------------|----------------\r\n * `content` | The slotted content wrapper\r\n * `indicators` | The internal sorter indicators.\r\n * `order` | The internal sorter order\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute    | Description | Part name\r\n * -------------|-------------|------------\r\n * `direction` | Sort direction of a sorter | :host\r\n *\r\n * @fires {CustomEvent} direction-changed - Fired when the `direction` property changes.\r\n * @fires {CustomEvent} sorter-changed - Fired when the `path` or `direction` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes GridSorterMixin\r\n * @mixes ThemableMixin\r\n * @mixes DirMixin\r\n */\r\nclass GridSorter extends GridSorterMixin(ThemableMixin(DirMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <div part=\"content\">\r\n        <slot></slot>\r\n      </div>\r\n      <div part=\"indicators\">\r\n        <span part=\"order\">[[_getDisplayOrder(_order)]]</span>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-grid-sorter';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridSorter);\r\n\r\nexport { GridSorter };\r\n"],
  "mappings": "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",
  "names": []
}
