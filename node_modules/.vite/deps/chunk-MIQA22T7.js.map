{
  "version": 3,
  "sources": ["../../@vaadin/dialog/theme/lumo/vaadin-dialog-styles.js", "../../@vaadin/dialog/src/vaadin-dialog-base-mixin.js", "../../@vaadin/dialog/src/vaadin-dialog-styles.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst dialogOverlay = css`\r\n  /* Optical centering */\r\n  :host::before,\r\n  :host::after {\r\n    content: '';\r\n    flex-basis: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  :host::after {\r\n    flex-grow: 1.1;\r\n  }\r\n\r\n  [part='overlay'] {\r\n    border-radius: var(--lumo-border-radius-l);\r\n    box-shadow:\r\n      0 0 0 1px var(--lumo-shade-5pct),\r\n      var(--lumo-box-shadow-xl);\r\n    background-image: none;\r\n    outline: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  [part='content'] {\r\n    padding: var(--lumo-space-l);\r\n  }\r\n\r\n  :host(:is([has-header], [has-title])) [part='header'] + [part='content'] {\r\n    padding-top: 0;\r\n  }\r\n\r\n  [part='header'],\r\n  [part='header-content'],\r\n  [part='footer'] {\r\n    gap: var(--lumo-space-xs) var(--lumo-space-s);\r\n    line-height: var(--lumo-line-height-s);\r\n  }\r\n\r\n  [part='header'] {\r\n    padding: var(--lumo-space-m);\r\n    background-color: var(--lumo-base-color);\r\n    border-radius: var(--lumo-border-radius-l) var(--lumo-border-radius-l) 0 0; /* Needed for Safari */\r\n  }\r\n\r\n  [part='footer'] {\r\n    padding: var(--lumo-space-s) var(--lumo-space-m);\r\n    background-color: var(--lumo-contrast-5pct);\r\n    border-radius: 0 0 var(--lumo-border-radius-l) var(--lumo-border-radius-l); /* Needed for Safari */\r\n  }\r\n\r\n  [part='title'] {\r\n    font-size: var(--lumo-font-size-xl);\r\n    font-weight: 600;\r\n    color: var(--lumo-header-text-color);\r\n    margin-inline-start: calc(var(--lumo-space-l) - var(--lumo-space-m));\r\n  }\r\n\r\n  /* No padding */\r\n  :host([theme~='no-padding']) [part='content'] {\r\n    padding: 0 !important;\r\n  }\r\n\r\n  @media (min-height: 320px) {\r\n    :host([overflow~='top']) [part='header'] {\r\n      box-shadow: 0 1px 0 0 var(--lumo-contrast-10pct);\r\n    }\r\n  }\r\n\r\n  /* Animations */\r\n\r\n  :host([opening]),\r\n  :host([closing]) {\r\n    animation: 0.25s lumo-overlay-dummy-animation;\r\n  }\r\n\r\n  :host([opening]) [part='overlay'] {\r\n    animation: 0.12s 0.05s vaadin-dialog-enter cubic-bezier(0.215, 0.61, 0.355, 1) both;\r\n  }\r\n\r\n  @keyframes vaadin-dialog-enter {\r\n    0% {\r\n      opacity: 0;\r\n      transform: scale(0.95);\r\n    }\r\n  }\r\n\r\n  :host([closing]) [part='overlay'] {\r\n    animation: 0.1s 0.03s vaadin-dialog-exit cubic-bezier(0.55, 0.055, 0.675, 0.19) both;\r\n  }\r\n\r\n  :host([closing]) [part='backdrop'] {\r\n    animation-delay: 0.05s;\r\n  }\r\n\r\n  @keyframes vaadin-dialog-exit {\r\n    100% {\r\n      opacity: 0;\r\n      transform: scale(1.02);\r\n    }\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-dialog-overlay', [overlay, dialogOverlay], { moduleId: 'lumo-dialog' });\r\n\r\nexport { dialogOverlay };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const DialogBaseMixin = (superClass) =>\r\n  class DialogBaseMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * True if the overlay is currently displayed.\r\n         * @type {boolean}\r\n         */\r\n        opened: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Set to true to disable closing dialog on outside click\r\n         * @attr {boolean} no-close-on-outside-click\r\n         * @type {boolean}\r\n         */\r\n        noCloseOnOutsideClick: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * Set to true to disable closing dialog on Escape press\r\n         * @attr {boolean} no-close-on-esc\r\n         * @type {boolean}\r\n         */\r\n        noCloseOnEsc: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * Set to true to remove backdrop and allow click events on background elements.\r\n         * @type {boolean}\r\n         */\r\n        modeless: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * Set the distance of the overlay from the top of its container.\r\n         * If a unitless number is provided, pixels are assumed.\r\n         *\r\n         * Note that the overlay top edge may not be the same as the viewport\r\n         * top edge (e.g. the Lumo theme defines some spacing to prevent the\r\n         * overlay from stretching all the way to the top of the viewport).\r\n         */\r\n        top: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * Set the distance of the overlay from the left of its container.\r\n         * If a unitless number is provided, pixels are assumed.\r\n         *\r\n         * Note that the overlay left edge may not be the same as the viewport\r\n         * left edge (e.g. the Lumo theme defines some spacing to prevent the\r\n         * overlay from stretching all the way to the left of the viewport).\r\n         */\r\n        left: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * Set the width of the overlay.\r\n         * If a unitless number is provided, pixels are assumed.\r\n         */\r\n        width: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * Set the height of the overlay.\r\n         * If a unitless number is provided, pixels are assumed.\r\n         */\r\n        height: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * The `role` attribute value to be set on the overlay. Defaults to \"dialog\".\r\n         *\r\n         * @attr {string} overlay-role\r\n         */\r\n        overlayRole: {\r\n          type: String,\r\n          value: 'dialog',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__positionChanged(top, left)', '__sizeChanged(width, height)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      const overlay = this.$.overlay;\r\n\r\n      overlay.addEventListener('vaadin-overlay-outside-click', this._handleOutsideClick.bind(this));\r\n      overlay.addEventListener('vaadin-overlay-escape-press', this._handleEscPress.bind(this));\r\n      overlay.addEventListener('vaadin-overlay-closed', this.__handleOverlayClosed.bind(this));\r\n\r\n      this._overlayElement = overlay;\r\n    }\r\n\r\n    /** @private */\r\n    __handleOverlayClosed() {\r\n      this.dispatchEvent(new CustomEvent('closed'));\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      // Restore opened state if overlay was opened when disconnecting\r\n      if (this.__restoreOpened) {\r\n        this.opened = true;\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      // Automatically close the overlay when dialog is removed from DOM\r\n      // Using a timeout to avoid toggling opened state, and dispatching change\r\n      // events, when just moving the dialog in the DOM\r\n      setTimeout(() => {\r\n        if (!this.isConnected) {\r\n          this.__restoreOpened = this.opened;\r\n          this.opened = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    _onOverlayOpened(e) {\r\n      if (e.detail.value === false) {\r\n        this.opened = false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Close the dialog if `noCloseOnOutsideClick` isn't set to true\r\n     * @private\r\n     */\r\n    _handleOutsideClick(e) {\r\n      if (this.noCloseOnOutsideClick) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Close the dialog if `noCloseOnEsc` isn't set to true\r\n     * @private\r\n     */\r\n    _handleEscPress(e) {\r\n      if (this.noCloseOnEsc) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _bringOverlayToFront() {\r\n      if (this.modeless) {\r\n        this._overlayElement.bringToFront();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __positionChanged(top, left) {\r\n      requestAnimationFrame(() => this.$.overlay.setBounds({ top, left }));\r\n    }\r\n\r\n    /** @private */\r\n    __sizeChanged(width, height) {\r\n      requestAnimationFrame(() => this.$.overlay.setBounds({ width, height }, false));\r\n    }\r\n\r\n    /**\r\n     * Fired when the dialog is closed.\r\n     *\r\n     * @event closed\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const dialogOverlay = css`\r\n  [part='header'],\r\n  [part='header-content'],\r\n  [part='footer'] {\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    flex: none;\r\n    pointer-events: none;\r\n    z-index: 1;\r\n  }\r\n\r\n  [part='header'] {\r\n    flex-wrap: nowrap;\r\n  }\r\n\r\n  ::slotted([slot='header-content']),\r\n  ::slotted([slot='title']),\r\n  ::slotted([slot='footer']) {\r\n    display: contents;\r\n    pointer-events: auto;\r\n  }\r\n\r\n  ::slotted([slot='title']) {\r\n    font: inherit !important;\r\n    overflow-wrap: anywhere;\r\n  }\r\n\r\n  [part='header-content'] {\r\n    flex: 1;\r\n  }\r\n\r\n  :host([has-title]) [part='header-content'],\r\n  [part='footer'] {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  :host(:not([has-title]):not([has-header])) [part='header'],\r\n  :host(:not([has-header])) [part='header-content'],\r\n  :host(:not([has-title])) [part='title'],\r\n  :host(:not([has-footer])) [part='footer'] {\r\n    display: none !important;\r\n  }\r\n\r\n  :host(:is([has-title], [has-header], [has-footer])) [part='content'] {\r\n    height: auto;\r\n  }\r\n\r\n  @media (min-height: 320px) {\r\n    :host(:is([has-title], [has-header], [has-footer])) .resizer-container {\r\n      overflow: hidden;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    :host(:is([has-title], [has-header], [has-footer])) [part='content'] {\r\n      flex: 1;\r\n      overflow: auto;\r\n    }\r\n  }\r\n\r\n  /*\r\n      NOTE(platosha): Make some min-width to prevent collapsing of the content\r\n      taking the parent width, e. g., <vaadin-grid> and such.\r\n    */\r\n  [part='content'] {\r\n    min-width: 12em; /* matches the default <vaadin-text-field> width */\r\n  }\r\n\r\n  :host([has-bounds-set]) [part='overlay'] {\r\n    max-width: none;\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    [part='overlay'] {\r\n      outline: 3px solid !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const resizableOverlay = css`\r\n  [part='overlay'] {\r\n    position: relative;\r\n    overflow: visible;\r\n    max-height: 100%;\r\n    display: flex;\r\n  }\r\n\r\n  [part='content'] {\r\n    box-sizing: border-box;\r\n    height: 100%;\r\n  }\r\n\r\n  .resizer-container {\r\n    overflow: auto;\r\n    flex-grow: 1;\r\n    border-radius: inherit; /* prevent child elements being drawn outside part=overlay */\r\n  }\r\n\r\n  [part='overlay'][style] .resizer-container {\r\n    min-height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  :host(:not([resizable])) .resizer {\r\n    display: none;\r\n  }\r\n\r\n  :host([resizable]) [part='title'] {\r\n    cursor: move;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .resizer {\r\n    position: absolute;\r\n    height: 16px;\r\n    width: 16px;\r\n  }\r\n\r\n  .resizer.edge {\r\n    height: 8px;\r\n    width: 8px;\r\n    inset: -4px;\r\n  }\r\n\r\n  .resizer.edge.n {\r\n    width: auto;\r\n    bottom: auto;\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  .resizer.ne {\r\n    top: -4px;\r\n    right: -4px;\r\n    cursor: nesw-resize;\r\n  }\r\n\r\n  .resizer.edge.e {\r\n    height: auto;\r\n    left: auto;\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  .resizer.se {\r\n    bottom: -4px;\r\n    right: -4px;\r\n    cursor: nwse-resize;\r\n  }\r\n\r\n  .resizer.edge.s {\r\n    width: auto;\r\n    top: auto;\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  .resizer.sw {\r\n    bottom: -4px;\r\n    left: -4px;\r\n    cursor: nesw-resize;\r\n  }\r\n\r\n  .resizer.edge.w {\r\n    height: auto;\r\n    right: auto;\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  .resizer.nw {\r\n    top: -4px;\r\n    left: -4px;\r\n    cursor: nwse-resize;\r\n  }\r\n`;\r\n"],
  "mappings": "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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgFtB,IAAM,mBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": ["overlay", "dialogOverlay"]
}
