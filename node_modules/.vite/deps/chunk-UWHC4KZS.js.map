{
  "version": 3,
  "sources": ["../../@vaadin/grid/src/vaadin-grid-filter-element-mixin.js", "../../@vaadin/grid/src/vaadin-grid-filter.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { timeOut } from '@vaadin/component-base/src/async.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin';\r\n\r\nregisterStyles(\r\n  'vaadin-grid-filter',\r\n  css`\r\n    :host {\r\n      display: inline-flex;\r\n      max-width: 100%;\r\n    }\r\n\r\n    ::slotted(*) {\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n    }\r\n  `,\r\n  { moduleId: 'vaadin-grid-filter-styles' },\r\n);\r\n\r\n/**\r\n * @polymerMixin\r\n *\r\n * @mixes ControllerMixin\r\n */\r\nexport const GridFilterElementMixin = (superClass) =>\r\n  class extends ControllerMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * JS Path of the property in the item used for filtering the data.\r\n         */\r\n        path: {\r\n          type: String,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Current filter value.\r\n         */\r\n        value: {\r\n          type: String,\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _textField: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_filterChanged(path, value, _textField)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._filterController = new SlotController(this, '', 'vaadin-text-field', {\r\n        initializer: (field) => {\r\n          field.addEventListener('input', (e) => {\r\n            this.value = e.target.value;\r\n          });\r\n\r\n          this._textField = field;\r\n        },\r\n      });\r\n      this.addController(this._filterController);\r\n    }\r\n\r\n    /** @private */\r\n    _filterChanged(path, value, textField) {\r\n      if (path === undefined || value === undefined || !textField) {\r\n        return;\r\n      }\r\n\r\n      textField.value = value;\r\n\r\n      this._debouncerFilterChanged = Debouncer.debounce(this._debouncerFilterChanged, timeOut.after(200), () => {\r\n        this.dispatchEvent(new CustomEvent('filter-changed', { bubbles: true }));\r\n      });\r\n    }\r\n\r\n    focus() {\r\n      if (this._textField) {\r\n        this._textField.focus();\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/text-field/src/vaadin-text-field.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin';\r\nimport { GridFilterElementMixin } from './vaadin-grid-filter-element-mixin.js';\r\n\r\n/**\r\n * `<vaadin-grid-filter>` is a helper element for the `<vaadin-grid>` that provides out-of-the-box UI controls,\r\n * and handlers for filtering the grid data.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <vaadin-grid-column id=\"column\"></vaadin-grid-column>\r\n * ```\r\n * ```js\r\n * const column = document.querySelector('#column');\r\n * column.headerRenderer = (root, column) => {\r\n *   let filter = root.firstElementChild;\r\n *   if (!filter) {\r\n *     filter = document.createElement('vaadin-grid-filter');\r\n *     root.appendChild(filter);\r\n *   }\r\n *   filter.path = 'name.first';\r\n * };\r\n * column.renderer = (root, column, model) => {\r\n *   root.textContent = model.item.name.first;\r\n * };\r\n * ```\r\n *\r\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes GridFilterElementMixin\r\n */\r\nclass GridFilter extends GridFilterElementMixin(ThemableMixin(PolymerElement)) {\r\n  static get template() {\r\n    return html`<slot></slot>`;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-grid-filter';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridFilter);\r\n\r\nexport { GridFilter };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;AAAA,EACE;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAWA,EAAE,UAAU,4BAA4B;AAC1C;AAOO,IAAM,yBAAyB,CAAC,eACrC,cAAc,gBAAgB,UAAU,EAAE;AAAA,EACxC,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA,MAIL,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA;AAAA;AAAA;AAAA,MAKA,OAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,MAAM;AAAA,MACR;AAAA;AAAA,MAGA,YAAY;AAAA,QACV,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,YAAY;AACrB,WAAO,CAAC,yCAAyC;AAAA,EACnD;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,oBAAoB,IAAI,eAAe,MAAM,IAAI,qBAAqB;AAAA,MACzE,aAAa,CAAC,UAAU;AACtB,cAAM,iBAAiB,SAAS,CAAC,MAAM;AACrC,eAAK,QAAQ,EAAE,OAAO;AAAA,QACxB,CAAC;AAED,aAAK,aAAa;AAAA,MACpB;AAAA,IACF,CAAC;AACD,SAAK,cAAc,KAAK,iBAAiB;AAAA,EAC3C;AAAA;AAAA,EAGA,eAAe,MAAM,OAAO,WAAW;AACrC,QAAI,SAAS,UAAa,UAAU,UAAa,CAAC,WAAW;AAC3D;AAAA,IACF;AAEA,cAAU,QAAQ;AAElB,SAAK,0BAA0B,UAAU,SAAS,KAAK,yBAAyB,QAAQ,MAAM,GAAG,GAAG,MAAM;AACxG,WAAK,cAAc,IAAI,YAAY,kBAAkB,EAAE,SAAS,KAAK,CAAC,CAAC;AAAA,IACzE,CAAC;AAAA,EACH;AAAA,EAEA,QAAQ;AACN,QAAI,KAAK,YAAY;AACnB,WAAK,WAAW,MAAM;AAAA,IACxB;AAAA,EACF;AACF;;;AC3DF,IAAM,aAAN,cAAyB,uBAAuB,cAAc,cAAc,CAAC,EAAE;AAAA,EAC7E,WAAW,WAAW;AACpB,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AACF;AAEA,oBAAoB,UAAU;",
  "names": []
}
