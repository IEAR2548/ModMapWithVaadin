{
  "version": 3,
  "sources": ["../../@vaadin/popover/src/vaadin-popover-overlay.js", "../../@vaadin/popover/src/vaadin-popover.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2024 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css, html, LitElement } from 'lit';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';\r\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { PopoverOverlayMixin } from './vaadin-popover-overlay-mixin.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-popover>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes DirMixin\r\n * @mixes PopoverOverlayMixin\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass PopoverOverlay extends PopoverOverlayMixin(DirMixin(ThemableMixin(PolylitMixin(LitElement)))) {\r\n  static get is() {\r\n    return 'vaadin-popover-overlay';\r\n  }\r\n\r\n  static get styles() {\r\n    return [\r\n      overlayStyles,\r\n      css`\r\n        :host {\r\n          --_vaadin-popover-content-width: auto;\r\n          --_vaadin-popover-content-height: auto;\r\n        }\r\n\r\n        :host([modeless][with-backdrop]) [part='backdrop'] {\r\n          pointer-events: none;\r\n        }\r\n\r\n        :host([position^='top'][top-aligned]) [part='overlay'],\r\n        :host([position^='bottom'][top-aligned]) [part='overlay'] {\r\n          margin-top: var(--vaadin-popover-offset-top, 0);\r\n        }\r\n\r\n        [part='overlay'] {\r\n          position: relative;\r\n          overflow: visible;\r\n          max-height: 100%;\r\n        }\r\n\r\n        [part='content'] {\r\n          overflow: auto;\r\n          box-sizing: border-box;\r\n          max-height: 100%;\r\n          width: var(--_vaadin-popover-content-width);\r\n          height: var(--_vaadin-popover-content-height);\r\n        }\r\n\r\n        /* Increase the area of the popover so the pointer can go from the target directly to it. */\r\n        [part='overlay']::before {\r\n          position: absolute;\r\n          content: '';\r\n          inset-block: calc(var(--vaadin-popover-offset-top, 0) * -1) calc(var(--vaadin-popover-offset-bottom, 0) * -1);\r\n          inset-inline: calc(var(--vaadin-popover-offset-start, 0) * -1) calc(var(--vaadin-popover-offset-end, 0) * -1);\r\n          z-index: -1;\r\n          pointer-events: auto;\r\n        }\r\n\r\n        :host([position^='top'][bottom-aligned]) [part='overlay'],\r\n        :host([position^='bottom'][bottom-aligned]) [part='overlay'] {\r\n          margin-bottom: var(--vaadin-popover-offset-bottom, 0);\r\n        }\r\n\r\n        :host([position^='start'][start-aligned]) [part='overlay'],\r\n        :host([position^='end'][start-aligned]) [part='overlay'] {\r\n          margin-inline-start: var(--vaadin-popover-offset-start, 0);\r\n        }\r\n\r\n        :host([position^='start'][end-aligned]) [part='overlay'],\r\n        :host([position^='end'][end-aligned]) [part='overlay'] {\r\n          margin-inline-end: var(--vaadin-popover-offset-end, 0);\r\n        }\r\n\r\n        [part='arrow'] {\r\n          display: none;\r\n          position: absolute;\r\n          height: 0;\r\n          width: 0;\r\n        }\r\n\r\n        :host([theme~='arrow']) [part='arrow'] {\r\n          display: block;\r\n        }\r\n      `,\r\n    ];\r\n  }\r\n\r\n  /** @protected */\r\n  render() {\r\n    return html`\r\n      <div id=\"backdrop\" part=\"backdrop\" hidden ?hidden=\"${!this.withBackdrop}\"></div>\r\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\r\n        <div part=\"arrow\"></div>\r\n        <div part=\"content\" id=\"content\"><slot></slot></div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(PopoverOverlay);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2024 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-popover-overlay.js';\r\nimport { css, html, LitElement } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport {\r\n  getDeepActiveElement,\r\n  getFocusableElements,\r\n  isElementFocused,\r\n  isKeyboardActive,\r\n} from '@vaadin/a11y-base/src/focus-utils.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\r\nimport { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';\r\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\r\nimport { isLastOverlay } from '@vaadin/overlay/src/vaadin-overlay-stack-mixin.js';\r\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\r\nimport { PopoverPositionMixin } from './vaadin-popover-position-mixin.js';\r\nimport { PopoverTargetMixin } from './vaadin-popover-target-mixin.js';\r\n\r\nconst DEFAULT_DELAY = 500;\r\n\r\nlet defaultFocusDelay = DEFAULT_DELAY;\r\nlet defaultHoverDelay = DEFAULT_DELAY;\r\nlet defaultHideDelay = DEFAULT_DELAY;\r\n\r\n/**\r\n * Controller for handling popover opened state.\r\n */\r\nclass PopoverOpenedStateController {\r\n  constructor(host) {\r\n    this.host = host;\r\n  }\r\n\r\n  /**\r\n   * Whether closing is currently in progress.\r\n   * @return {boolean}\r\n   */\r\n  get isClosing() {\r\n    return this.__closeTimeout != null;\r\n  }\r\n\r\n  /** @private */\r\n  get __focusDelay() {\r\n    const popover = this.host;\r\n    return popover.focusDelay != null && popover.focusDelay >= 0 ? popover.focusDelay : defaultFocusDelay;\r\n  }\r\n\r\n  /** @private */\r\n  get __hoverDelay() {\r\n    const popover = this.host;\r\n    return popover.hoverDelay != null && popover.hoverDelay >= 0 ? popover.hoverDelay : defaultHoverDelay;\r\n  }\r\n\r\n  /** @private */\r\n  get __hideDelay() {\r\n    const popover = this.host;\r\n    return popover.hideDelay != null && popover.hideDelay >= 0 ? popover.hideDelay : defaultHideDelay;\r\n  }\r\n\r\n  /**\r\n   * Schedule opening the popover.\r\n   * @param {Object} options\r\n   */\r\n  open(options = { immediate: false }) {\r\n    if (this.isClosing) {\r\n      // Abort closing on overlay mouseenter.\r\n      this.__abortClose();\r\n      return;\r\n    }\r\n\r\n    const { immediate, trigger } = options;\r\n    const shouldDelayHover = trigger === 'hover' && this.__hoverDelay > 0;\r\n    const shouldDelayFocus = trigger === 'focus' && this.__focusDelay > 0;\r\n\r\n    if (!immediate && (shouldDelayHover || shouldDelayFocus)) {\r\n      this.__scheduleOpen(trigger);\r\n    } else {\r\n      this.__showPopover();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schedule closing the popover.\r\n   * @param {boolean} immediate\r\n   */\r\n  close(immediate) {\r\n    if (this.__openTimeout != null) {\r\n      // Close immediately if still opening to not wait for hide delay.\r\n      this.__abortOpen();\r\n    } else if (immediate || this.__hideDelay === 0) {\r\n      // Close immediately e.g. on Esc press or with zero hide delay.\r\n      this.__abortClose();\r\n      this.__setOpened(false);\r\n    } else {\r\n      this.__scheduleClose();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __setOpened(opened) {\r\n    this.host.opened = opened;\r\n  }\r\n\r\n  /** @private */\r\n  __showPopover() {\r\n    this.__abortClose();\r\n    this.__setOpened(true);\r\n  }\r\n\r\n  /** @private */\r\n  __abortClose() {\r\n    if (this.__closeTimeout) {\r\n      clearTimeout(this.__closeTimeout);\r\n      this.__closeTimeout = null;\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __abortOpen() {\r\n    if (this.__openTimeout) {\r\n      clearTimeout(this.__openTimeout);\r\n      this.__openTimeout = null;\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __scheduleClose() {\r\n    this.__closeTimeout = setTimeout(() => {\r\n      this.__closeTimeout = null;\r\n      this.__setOpened(false);\r\n    }, this.__hideDelay);\r\n  }\r\n\r\n  /** @private */\r\n  __scheduleOpen(trigger) {\r\n    this.__abortOpen();\r\n\r\n    const delay = trigger === 'focus' ? this.__focusDelay : this.__hoverDelay;\r\n    this.__openTimeout = setTimeout(() => {\r\n      this.__openTimeout = null;\r\n      this.__showPopover();\r\n    }, delay);\r\n  }\r\n}\r\n\r\n/**\r\n * `<vaadin-popover>` is a Web Component for creating overlays\r\n * that are positioned next to specified DOM element (target).\r\n *\r\n * Unlike `<vaadin-tooltip>`, the popover supports rich content\r\n * that can be provided by using `renderer` function.\r\n *\r\n * ### Styling\r\n *\r\n * `<vaadin-popover>` uses `<vaadin-popover-overlay>` internal\r\n * themable component as the actual visible overlay.\r\n *\r\n * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation\r\n * for `<vaadin-popover-overlay>` parts.\r\n *\r\n * In addition to `<vaadin-overlay>` parts, the following parts are available for styling:\r\n *\r\n * Part name        | Description\r\n * -----------------|-------------------------------------------\r\n * `arrow`          | Optional arrow pointing to the target when using `theme=\"arrow\"`\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute        | Description\r\n * -----------------|----------------------------------------\r\n * `position`       | Reflects the `position` property value.\r\n *\r\n * Note: the `theme` attribute value set on `<vaadin-popover>` is\r\n * propagated to the internal `<vaadin-popover-overlay>` component.\r\n *\r\n * ### Custom CSS Properties\r\n *\r\n * The following custom CSS properties are available on the `<vaadin-popover>` element:\r\n *\r\n * Custom CSS property              | Description\r\n * ---------------------------------|-------------\r\n * `--vaadin-popover-offset-top`    | Used as an offset when the popover is aligned vertically below the target\r\n * `--vaadin-popover-offset-bottom` | Used as an offset when the popover is aligned vertically above the target\r\n * `--vaadin-popover-offset-start`  | Used as an offset when the popover is aligned horizontally after the target\r\n * `--vaadin-popover-offset-end`    | Used as an offset when the popover is aligned horizontally before the target\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\r\n * @fires {CustomEvent} closed - Fired when the popover is closed.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes OverlayClassMixin\r\n * @mixes PopoverPositionMixin\r\n * @mixes PopoverTargetMixin\r\n * @mixes ThemePropertyMixin\r\n */\r\nclass Popover extends PopoverPositionMixin(\r\n  PopoverTargetMixin(OverlayClassMixin(ThemePropertyMixin(ElementMixin(PolylitMixin(LitElement))))),\r\n) {\r\n  static get is() {\r\n    return 'vaadin-popover';\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        display: none !important;\r\n      }\r\n    `;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * String used to label the overlay to screen reader users.\r\n       *\r\n       * @attr {string} accessible-name\r\n       */\r\n      accessibleName: {\r\n        type: String,\r\n      },\r\n\r\n      /**\r\n       * Id of the element used as label of the overlay to screen reader users.\r\n       *\r\n       * @attr {string} accessible-name-ref\r\n       */\r\n      accessibleNameRef: {\r\n        type: String,\r\n      },\r\n\r\n      /**\r\n       * When true, the popover content automatically receives focus after\r\n       * it is opened. Modal popovers use this behavior by default.\r\n       */\r\n      autofocus: {\r\n        type: Boolean,\r\n      },\r\n\r\n      /**\r\n       * Height to be set on the overlay content.\r\n       *\r\n       * @attr {string} content-height\r\n       */\r\n      contentHeight: {\r\n        type: String,\r\n      },\r\n\r\n      /**\r\n       * Width to be set on the overlay content.\r\n       *\r\n       * @attr {string} content-width\r\n       */\r\n      contentWidth: {\r\n        type: String,\r\n      },\r\n\r\n      /**\r\n       * The delay in milliseconds before the popover is opened\r\n       * on focus when the corresponding trigger is used.\r\n       *\r\n       * When not specified, the global default (500ms) is used.\r\n       *\r\n       * @attr {number} focus-delay\r\n       */\r\n      focusDelay: {\r\n        type: Number,\r\n      },\r\n\r\n      /**\r\n       * The delay in milliseconds before the popover is closed\r\n       * on losing hover, when the corresponding trigger is used.\r\n       * On blur, the popover is closed immediately.\r\n       *\r\n       * When not specified, the global default (500ms) is used.\r\n       *\r\n       * @attr {number} hide-delay\r\n       */\r\n      hideDelay: {\r\n        type: Number,\r\n      },\r\n\r\n      /**\r\n       * The delay in milliseconds before the popover is opened\r\n       * on hover when the corresponding trigger is used.\r\n       *\r\n       * When not specified, the global default (500ms) is used.\r\n       *\r\n       * @attr {number} hover-delay\r\n       */\r\n      hoverDelay: {\r\n        type: Number,\r\n      },\r\n\r\n      /**\r\n       * True if the popover overlay is opened, false otherwise.\r\n       */\r\n      opened: {\r\n        type: Boolean,\r\n        value: false,\r\n        notify: true,\r\n        observer: '__openedChanged',\r\n      },\r\n\r\n      /**\r\n       * The `role` attribute value to be set on the overlay.\r\n       *\r\n       * @attr {string} overlay-role\r\n       */\r\n      overlayRole: {\r\n        type: String,\r\n        value: 'dialog',\r\n      },\r\n\r\n      /**\r\n       * Custom function for rendering the content of the overlay.\r\n       * Receives two arguments:\r\n       *\r\n       * - `root` The root container DOM element. Append your content to it.\r\n       * - `popover` The reference to the `vaadin-popover` element (overlay host).\r\n       */\r\n      renderer: {\r\n        type: Object,\r\n      },\r\n\r\n      /**\r\n       * When true, the popover prevents interacting with background elements\r\n       * by setting `pointer-events` style on the document body to `none`.\r\n       * This also enables trapping focus inside the overlay.\r\n       */\r\n      modal: {\r\n        type: Boolean,\r\n        value: false,\r\n      },\r\n\r\n      /**\r\n       * Set to true to disable closing popover overlay on outside click.\r\n       *\r\n       * @attr {boolean} no-close-on-outside-click\r\n       */\r\n      noCloseOnOutsideClick: {\r\n        type: Boolean,\r\n        value: false,\r\n      },\r\n\r\n      /**\r\n       * Set to true to disable closing popover overlay on Escape press.\r\n       * When the popover is modal, pressing Escape anywhere in the\r\n       * document closes the overlay. Otherwise, only Escape press\r\n       * from the popover itself or its target closes the overlay.\r\n       *\r\n       * @attr {boolean} no-close-on-esc\r\n       */\r\n      noCloseOnEsc: {\r\n        type: Boolean,\r\n        value: false,\r\n      },\r\n\r\n      /**\r\n       * Popover trigger mode, used to configure how the overlay is opened or closed.\r\n       * Could be set to multiple by providing an array, e.g. `trigger = ['hover', 'focus']`.\r\n       *\r\n       * Supported values:\r\n       * - `click` (default) - opens and closes on target click.\r\n       * - `hover` - opens on target mouseenter, closes on target mouseleave. Moving mouse\r\n       * to the popover overlay content keeps the overlay opened.\r\n       * - `focus` - opens on target focus, closes on target blur. Moving focus to the\r\n       * popover overlay content keeps the overlay opened.\r\n       *\r\n       * In addition to the behavior specified by `trigger`, the popover can be closed by:\r\n       * - pressing Escape key (unless `noCloseOnEsc` property is true)\r\n       * - outside click (unless `noCloseOnOutsideClick` property is true)\r\n       *\r\n       * When setting `trigger` property to `null`, `undefined` or empty array, the popover\r\n       * can be only opened programmatically by changing `opened` property. Note, closing\r\n       * on Escape press or outside click is still allowed unless explicitly disabled.\r\n       */\r\n      trigger: {\r\n        type: Array,\r\n        value: () => ['click'],\r\n      },\r\n\r\n      /**\r\n       * When true, the overlay has a backdrop (modality curtain) on top of the\r\n       * underlying page content, covering the whole viewport.\r\n       *\r\n       * @attr {boolean} with-backdrop\r\n       */\r\n      withBackdrop: {\r\n        type: Boolean,\r\n        value: false,\r\n      },\r\n\r\n      /** @private */\r\n      __shouldRestoreFocus: {\r\n        type: Boolean,\r\n        value: false,\r\n        sync: true,\r\n      },\r\n\r\n      /** @private */\r\n      __overlayId: {\r\n        type: String,\r\n      },\r\n    };\r\n  }\r\n\r\n  static get observers() {\r\n    return [\r\n      '__updateContentHeight(contentHeight, _overlayElement)',\r\n      '__updateContentWidth(contentWidth, _overlayElement)',\r\n      '__updateAriaAttributes(opened, overlayRole, target)',\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Sets the default focus delay to be used by all popover instances,\r\n   * except for those that have focus delay configured using property.\r\n   *\r\n   * @param {number} focusDelay\r\n   */\r\n  static setDefaultFocusDelay(focusDelay) {\r\n    defaultFocusDelay = focusDelay != null && focusDelay >= 0 ? focusDelay : DEFAULT_DELAY;\r\n  }\r\n\r\n  /**\r\n   * Sets the default hide delay to be used by all popover instances,\r\n   * except for those that have hide delay configured using property.\r\n   *\r\n   * @param {number} hideDelay\r\n   */\r\n  static setDefaultHideDelay(hideDelay) {\r\n    defaultHideDelay = hideDelay != null && hideDelay >= 0 ? hideDelay : DEFAULT_DELAY;\r\n  }\r\n\r\n  /**\r\n   * Sets the default hover delay to be used by all popover instances,\r\n   * except for those that have hover delay configured using property.\r\n   *\r\n   * @param {number} hoverDelay\r\n   */\r\n  static setDefaultHoverDelay(hoverDelay) {\r\n    defaultHoverDelay = hoverDelay != null && hoverDelay >= 0 ? hoverDelay : DEFAULT_DELAY;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.__overlayId = `vaadin-popover-${generateUniqueId()}`;\r\n\r\n    this.__onGlobalClick = this.__onGlobalClick.bind(this);\r\n    this.__onGlobalKeyDown = this.__onGlobalKeyDown.bind(this);\r\n    this.__onTargetClick = this.__onTargetClick.bind(this);\r\n    this.__onTargetFocusIn = this.__onTargetFocusIn.bind(this);\r\n    this.__onTargetFocusOut = this.__onTargetFocusOut.bind(this);\r\n    this.__onTargetMouseEnter = this.__onTargetMouseEnter.bind(this);\r\n    this.__onTargetMouseLeave = this.__onTargetMouseLeave.bind(this);\r\n\r\n    this._openedStateController = new PopoverOpenedStateController(this);\r\n  }\r\n\r\n  /** @protected */\r\n  render() {\r\n    const effectivePosition = this.__effectivePosition;\r\n\r\n    return html`\r\n      <vaadin-popover-overlay\r\n        id=\"${this.__overlayId}\"\r\n        role=\"${this.overlayRole}\"\r\n        aria-label=\"${ifDefined(this.accessibleName)}\"\r\n        aria-labelledby=\"${ifDefined(this.accessibleNameRef)}\"\r\n        .renderer=\"${this.renderer}\"\r\n        .owner=\"${this}\"\r\n        theme=\"${ifDefined(this._theme)}\"\r\n        .positionTarget=\"${this.target}\"\r\n        .position=\"${effectivePosition}\"\r\n        .opened=\"${this.opened}\"\r\n        .modeless=\"${!this.modal}\"\r\n        .focusTrap=\"${this.modal}\"\r\n        .withBackdrop=\"${this.withBackdrop}\"\r\n        ?no-horizontal-overlap=\"${this.__computeNoHorizontalOverlap(effectivePosition)}\"\r\n        ?no-vertical-overlap=\"${this.__computeNoVerticalOverlap(effectivePosition)}\"\r\n        .horizontalAlign=\"${this.__computeHorizontalAlign(effectivePosition)}\"\r\n        .verticalAlign=\"${this.__computeVerticalAlign(effectivePosition)}\"\r\n        @mousedown=\"${this.__onOverlayMouseDown}\"\r\n        @mouseenter=\"${this.__onOverlayMouseEnter}\"\r\n        @mouseleave=\"${this.__onOverlayMouseLeave}\"\r\n        @focusin=\"${this.__onOverlayFocusIn}\"\r\n        @focusout=\"${this.__onOverlayFocusOut}\"\r\n        @opened-changed=\"${this.__onOpenedChanged}\"\r\n        .restoreFocusOnClose=\"${this.__shouldRestoreFocus}\"\r\n        .restoreFocusNode=\"${this.target}\"\r\n        @vaadin-overlay-escape-press=\"${this.__onEscapePress}\"\r\n        @vaadin-overlay-outside-click=\"${this.__onOutsideClick}\"\r\n        @vaadin-overlay-open=\"${this.__onOverlayOpened}\"\r\n        @vaadin-overlay-closed=\"${this.__onOverlayClosed}\"\r\n      ></vaadin-popover-overlay>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Requests an update for the content of the popover.\r\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\r\n   *\r\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n   */\r\n  requestContentUpdate() {\r\n    if (!this.renderer || !this._overlayElement) {\r\n      return;\r\n    }\r\n\r\n    this._overlayElement.requestContentUpdate();\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    this._overlayElement = this.$[this.__overlayId];\r\n  }\r\n\r\n  /** @protected */\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    document.documentElement.addEventListener('click', this.__onGlobalClick, true);\r\n  }\r\n\r\n  /** @protected */\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n\r\n    document.documentElement.removeEventListener('click', this.__onGlobalClick, true);\r\n\r\n    // Automatically close popover when it is removed from DOM\r\n    // Avoid closing if the popover is just moved in the DOM\r\n    queueMicrotask(() => {\r\n      if (!this.isConnected) {\r\n        this._openedStateController.close(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} target\r\n   * @protected\r\n   * @override\r\n   */\r\n  _addTargetListeners(target) {\r\n    target.addEventListener('click', this.__onTargetClick);\r\n    target.addEventListener('mouseenter', this.__onTargetMouseEnter);\r\n    target.addEventListener('mouseleave', this.__onTargetMouseLeave);\r\n    target.addEventListener('focusin', this.__onTargetFocusIn);\r\n    target.addEventListener('focusout', this.__onTargetFocusOut);\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} target\r\n   * @protected\r\n   * @override\r\n   */\r\n  _removeTargetListeners(target) {\r\n    target.removeEventListener('click', this.__onTargetClick);\r\n    target.removeEventListener('mouseenter', this.__onTargetMouseEnter);\r\n    target.removeEventListener('mouseleave', this.__onTargetMouseLeave);\r\n    target.removeEventListener('focusin', this.__onTargetFocusIn);\r\n    target.removeEventListener('focusout', this.__onTargetFocusOut);\r\n  }\r\n\r\n  /** @private */\r\n  __openedChanged(opened, oldOpened) {\r\n    if (opened) {\r\n      document.addEventListener('keydown', this.__onGlobalKeyDown, true);\r\n    } else if (oldOpened) {\r\n      document.removeEventListener('keydown', this.__onGlobalKeyDown, true);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __updateAriaAttributes(opened, overlayRole, target) {\r\n    if (this.__oldTarget) {\r\n      const oldEffectiveTarget = this.__oldTarget.ariaTarget || this.__oldTarget;\r\n      oldEffectiveTarget.removeAttribute('aria-haspopup');\r\n      oldEffectiveTarget.removeAttribute('aria-expanded');\r\n      oldEffectiveTarget.removeAttribute('aria-controls');\r\n    }\r\n\r\n    if (target) {\r\n      const effectiveTarget = target.ariaTarget || target;\r\n\r\n      const isDialog = overlayRole === 'dialog' || overlayRole === 'alertdialog';\r\n      effectiveTarget.setAttribute('aria-haspopup', isDialog ? 'dialog' : 'true');\r\n\r\n      effectiveTarget.setAttribute('aria-expanded', opened ? 'true' : 'false');\r\n\r\n      if (opened) {\r\n        effectiveTarget.setAttribute('aria-controls', this.__overlayId);\r\n      } else {\r\n        effectiveTarget.removeAttribute('aria-controls');\r\n      }\r\n\r\n      this.__oldTarget = target;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Overlay's global outside click listener doesn't work when\r\n   * the overlay is modeless, so we use a separate listener.\r\n   * @private\r\n   */\r\n  __onGlobalClick(event) {\r\n    if (\r\n      this.opened &&\r\n      !this.modal &&\r\n      !event.composedPath().some((el) => el === this._overlayElement || el === this.target) &&\r\n      !this.noCloseOnOutsideClick &&\r\n      isLastOverlay(this._overlayElement)\r\n    ) {\r\n      this._openedStateController.close(true);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onTargetClick() {\r\n    if (this.__hasTrigger('click')) {\r\n      if (!this.opened) {\r\n        this.__shouldRestoreFocus = true;\r\n      }\r\n      if (this.opened) {\r\n        this._openedStateController.close(true);\r\n      } else {\r\n        this._openedStateController.open({ immediate: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Overlay's global Escape press listener doesn't work when\r\n   * the overlay is modeless, so we use a separate listener.\r\n   * @private\r\n   */\r\n  __onGlobalKeyDown(event) {\r\n    // Modal popover uses overlay logic for Esc key and focus trap.\r\n    if (this.modal) {\r\n      return;\r\n    }\r\n\r\n    if (event.key === 'Escape' && !this.noCloseOnEsc && this.opened && isLastOverlay(this._overlayElement)) {\r\n      // Prevent closing parent overlay (e.g. dialog)\r\n      event.stopPropagation();\r\n      this._openedStateController.close(true);\r\n    }\r\n\r\n    // Include popover content in the Tab order after the target.\r\n    if (event.key === 'Tab') {\r\n      if (event.shiftKey) {\r\n        this.__onGlobalShiftTab(event);\r\n      } else {\r\n        this.__onGlobalTab(event);\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onGlobalTab(event) {\r\n    const overlayPart = this._overlayElement.$.overlay;\r\n\r\n    // Move focus to the popover content on target element Tab\r\n    if (this.target && isElementFocused(this.__getTargetFocusable())) {\r\n      event.preventDefault();\r\n      overlayPart.focus();\r\n      return;\r\n    }\r\n\r\n    // Move focus to the next element after target on content Tab\r\n    const lastFocusable = this.__getLastFocusable(overlayPart);\r\n    if (lastFocusable && isElementFocused(lastFocusable)) {\r\n      const focusable = this.__getNextBodyFocusable(this.__getTargetFocusable());\r\n      if (focusable && focusable !== overlayPart) {\r\n        event.preventDefault();\r\n        focusable.focus();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Prevent focusing the popover content on previous element Tab\r\n    const activeElement = getDeepActiveElement();\r\n    const nextFocusable = this.__getNextBodyFocusable(activeElement);\r\n    if (nextFocusable === overlayPart && lastFocusable) {\r\n      // Move focus to the last overlay focusable and do NOT prevent keydown\r\n      // to move focus outside the popover content (e.g. to the URL bar).\r\n      lastFocusable.focus();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onGlobalShiftTab(event) {\r\n    const overlayPart = this._overlayElement.$.overlay;\r\n\r\n    // Prevent restoring focus after target blur on Shift + Tab\r\n    if (this.target && isElementFocused(this.__getTargetFocusable()) && this.__shouldRestoreFocus) {\r\n      this.__shouldRestoreFocus = false;\r\n      return;\r\n    }\r\n\r\n    // Move focus back to the target on overlay content Shift + Tab\r\n    if (this.target && isElementFocused(overlayPart)) {\r\n      event.preventDefault();\r\n      this.__getTargetFocusable().focus();\r\n      return;\r\n    }\r\n\r\n    // Move focus back to the popover on next element Shift + Tab\r\n    const nextFocusable = this.__getNextBodyFocusable(this.__getTargetFocusable());\r\n    if (nextFocusable && isElementFocused(nextFocusable)) {\r\n      const lastFocusable = this.__getLastFocusable(overlayPart);\r\n      if (lastFocusable) {\r\n        event.preventDefault();\r\n        lastFocusable.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __getNextBodyFocusable(target) {\r\n    const focusables = getFocusableElements(document.body);\r\n    const idx = focusables.findIndex((el) => el === target);\r\n    return focusables[idx + 1];\r\n  }\r\n\r\n  /** @private */\r\n  __getLastFocusable(container) {\r\n    const focusables = getFocusableElements(container);\r\n    return focusables.pop();\r\n  }\r\n\r\n  /** @private */\r\n  __getTargetFocusable() {\r\n    if (!this.target) {\r\n      return null;\r\n    }\r\n\r\n    // If target has `focusElement`, check if that one is focused.\r\n    return this.target.focusElement || this.target;\r\n  }\r\n\r\n  /** @private */\r\n  __onTargetFocusIn() {\r\n    this.__focusInside = true;\r\n\r\n    if (this.__hasTrigger('focus')) {\r\n      // When trigger is set to both focus and click, only open on\r\n      // keyboard focus, to prevent issue when immediately closing\r\n      // on click which occurs after the focus caused by mousedown.\r\n      if (this.__hasTrigger('click') && !isKeyboardActive()) {\r\n        return;\r\n      }\r\n\r\n      // Prevent overlay re-opening when restoring focus on close.\r\n      if (!this.__shouldRestoreFocus) {\r\n        this.__shouldRestoreFocus = true;\r\n        this._openedStateController.open({ trigger: 'focus' });\r\n      }\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onTargetFocusOut(event) {\r\n    // Do not close the popover on overlay focusout if it's not the last one.\r\n    // This covers the case when focus moves to the nested popover opened\r\n    // without focusing parent popover overlay (e.g. using hover trigger).\r\n    if (this._overlayElement.opened && !isLastOverlay(this._overlayElement)) {\r\n      return;\r\n    }\r\n\r\n    if ((this.__hasTrigger('focus') && this.__mouseDownInside) || this._overlayElement.contains(event.relatedTarget)) {\r\n      return;\r\n    }\r\n\r\n    this.__handleFocusout();\r\n  }\r\n\r\n  /** @private */\r\n  __onTargetMouseEnter() {\r\n    this.__hoverInside = true;\r\n\r\n    if (this.__hasTrigger('hover') && !this.opened) {\r\n      // Prevent closing due to `pointer-events: none` set on body.\r\n      if (this.modal) {\r\n        this.target.style.pointerEvents = 'auto';\r\n      }\r\n      this._openedStateController.open({ trigger: 'hover' });\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onTargetMouseLeave(event) {\r\n    // Do not close the popover on target focusout if the overlay is not the last one.\r\n    // This happens e.g. when opening the nested popover that uses non-modal overlay.\r\n    if (this._overlayElement.opened && !isLastOverlay(this._overlayElement)) {\r\n      return;\r\n    }\r\n\r\n    if (this._overlayElement.contains(event.relatedTarget)) {\r\n      return;\r\n    }\r\n\r\n    this.__handleMouseLeave();\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayFocusIn() {\r\n    this.__focusInside = true;\r\n\r\n    // When using Tab to move focus, restoring focus is reset. However, if pressing Tab\r\n    // causes focus to be moved inside the overlay, we should restore focus on close.\r\n    if (this.__hasTrigger('focus') || this.__hasTrigger('click')) {\r\n      this.__shouldRestoreFocus = true;\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayFocusOut(event) {\r\n    // Do not close the popover on overlay focusout if it's not the last one.\r\n    // This covers the following cases of nested overlay based components:\r\n    // 1. Moving focus to the nested overlay (e.g. vaadin-select, vaadin-menu-bar)\r\n    // 2. Closing not focused nested overlay on outside (e.g. vaadin-combo-box)\r\n    if (!isLastOverlay(this._overlayElement)) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      (this.__hasTrigger('focus') && this.__mouseDownInside) ||\r\n      event.relatedTarget === this.target ||\r\n      this._overlayElement.contains(event.relatedTarget)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.__handleFocusout();\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayMouseDown() {\r\n    if (this.__hasTrigger('focus')) {\r\n      this.__mouseDownInside = true;\r\n\r\n      document.addEventListener(\r\n        'mouseup',\r\n        () => {\r\n          this.__mouseDownInside = false;\r\n        },\r\n        { once: true },\r\n      );\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayMouseEnter() {\r\n    this.__hoverInside = true;\r\n\r\n    // Prevent closing if cursor moves to the overlay during hide delay.\r\n    if (this.__hasTrigger('hover') && this._openedStateController.isClosing) {\r\n      this._openedStateController.open({ immediate: true });\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayMouseLeave(event) {\r\n    // Do not close the popover on overlay focusout if it's not the last one.\r\n    // This happens when opening the nested component that uses \"modal\" overlay\r\n    // setting `pointer-events: none` on the body (combo-box, date-picker etc).\r\n    if (!isLastOverlay(this._overlayElement)) {\r\n      return;\r\n    }\r\n\r\n    if (event.relatedTarget === this.target) {\r\n      return;\r\n    }\r\n\r\n    this.__handleMouseLeave();\r\n  }\r\n\r\n  /** @private */\r\n  __handleFocusout() {\r\n    this.__focusInside = false;\r\n\r\n    if (this.__hasTrigger('hover') && this.__hoverInside) {\r\n      return;\r\n    }\r\n\r\n    if (this.__hasTrigger('focus')) {\r\n      this._openedStateController.close(true);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __handleMouseLeave() {\r\n    this.__hoverInside = false;\r\n\r\n    if (this.__hasTrigger('focus') && this.__focusInside) {\r\n      return;\r\n    }\r\n\r\n    if (this.__hasTrigger('hover')) {\r\n      this._openedStateController.close();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onOpenedChanged(event) {\r\n    this.opened = event.detail.value;\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayOpened() {\r\n    if (this.autofocus && !this.modal) {\r\n      this._overlayElement.$.overlay.focus();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onOverlayClosed() {\r\n    // Reset restoring focus state after a timeout to make sure focus was restored\r\n    // and then allow re-opening overlay on re-focusing target with focus trigger.\r\n    if (this.__shouldRestoreFocus) {\r\n      setTimeout(() => {\r\n        this.__shouldRestoreFocus = false;\r\n      });\r\n    }\r\n\r\n    // Restore pointer-events set when opening on hover.\r\n    if (this.modal && this.target.style.pointerEvents) {\r\n      this.target.style.pointerEvents = '';\r\n    }\r\n\r\n    this.dispatchEvent(new CustomEvent('closed'));\r\n  }\r\n\r\n  /**\r\n   * Close the popover if `noCloseOnEsc` isn't set to true.\r\n   * @private\r\n   */\r\n  __onEscapePress(e) {\r\n    if (this.noCloseOnEsc) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close the popover if `noCloseOnOutsideClick` isn't set to true.\r\n   * @private\r\n   */\r\n  __onOutsideClick(e) {\r\n    if (this.noCloseOnOutsideClick) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __hasTrigger(trigger) {\r\n    return Array.isArray(this.trigger) && this.trigger.includes(trigger);\r\n  }\r\n\r\n  /** @private */\r\n  __updateDimension(overlay, dimension, value) {\r\n    const prop = `--_vaadin-popover-content-${dimension}`;\r\n\r\n    if (value) {\r\n      overlay.style.setProperty(prop, value);\r\n    } else {\r\n      overlay.style.removeProperty(prop);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __updateContentHeight(height, overlay) {\r\n    if (overlay) {\r\n      this.__updateDimension(overlay, 'height', height);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __updateContentWidth(width, overlay) {\r\n    if (overlay) {\r\n      this.__updateDimension(overlay, 'width', width);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fired when the popover is closed.\r\n   *\r\n   * @event closed\r\n   */\r\n}\r\n\r\ndefineCustomElement(Popover);\r\n\r\nexport { Popover };\r\n"],
  "mappings": "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",
  "names": []
}
