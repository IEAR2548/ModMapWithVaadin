{
  "version": 3,
  "sources": ["../../@vaadin/form-layout/theme/lumo/vaadin-form-item-styles.js", "../../@vaadin/form-layout/src/vaadin-form-item-mixin.js", "../../@vaadin/form-layout/src/vaadin-form-item.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-form-item',\r\n  css`\r\n    /* font-weight, margin-bottom, transition and line-height same as for part label in text-field */\r\n    [part='label'] {\r\n      color: var(--lumo-secondary-text-color);\r\n      font-family: var(--lumo-font-family);\r\n      font-size: var(--lumo-font-size-s);\r\n      font-weight: 500;\r\n      margin-top: var(--lumo-space-m);\r\n      margin-left: calc(var(--lumo-border-radius-m) / 4);\r\n      margin-bottom: var(--lumo-space-xs);\r\n      transition: color 0.4s;\r\n      line-height: 1.333;\r\n    }\r\n\r\n    [part='required-indicator']::after {\r\n      content: var(--lumo-required-field-indicator, '\\\\2022');\r\n      transition: opacity 0.2s;\r\n      opacity: 0;\r\n      color: var(--lumo-required-field-indicator-color, var(--lumo-primary-text-color));\r\n      position: relative;\r\n      width: 1em;\r\n      text-align: center;\r\n    }\r\n\r\n    :host([required]) [part='required-indicator']::after {\r\n      opacity: 1;\r\n    }\r\n\r\n    :host([invalid]) [part='required-indicator']::after {\r\n      color: var(--lumo-required-field-indicator-color, var(--lumo-error-text-color));\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-form-item' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { addValueToAttribute, removeValueFromAttribute } from '@vaadin/component-base/src/dom-utils.js';\r\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\r\n\r\nlet spacingDeprecationNotified = false;\r\nlet labelWidthDeprecationNotified = false;\r\nlet labelSpacingDeprecationNotified = false;\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const FormItemMixin = (superClass) =>\r\n  class extends superClass {\r\n    constructor() {\r\n      super();\r\n      this.__updateInvalidState = this.__updateInvalidState.bind(this);\r\n\r\n      /**\r\n       * An observer for a field node to reflect its `required` and `invalid` attributes to the component.\r\n       *\r\n       * @type {MutationObserver}\r\n       * @private\r\n       */\r\n      this.__fieldNodeObserver = new MutationObserver(() => this.__updateRequiredState(this.__fieldNode.required));\r\n\r\n      /**\r\n       * The first label node in the label slot.\r\n       *\r\n       * @type {HTMLElement | null}\r\n       * @private\r\n       */\r\n      this.__labelNode = null;\r\n\r\n      /**\r\n       * The first field node in the content slot.\r\n       *\r\n       * An element is considered a field when it has the `checkValidity` or `validate` method.\r\n       *\r\n       * @type {HTMLElement | null}\r\n       * @private\r\n       */\r\n      this.__fieldNode = null;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      const computedStyle = getComputedStyle(this);\r\n      const spacing = computedStyle.getPropertyValue('--vaadin-form-item-row-spacing');\r\n      const labelWidth = computedStyle.getPropertyValue('--vaadin-form-item-label-width');\r\n      const labelSpacing = computedStyle.getPropertyValue('--vaadin-form-item-label-spacing');\r\n\r\n      if (!spacingDeprecationNotified && spacing !== '' && parseInt(spacing) !== 0) {\r\n        console.warn(\r\n          '`--vaadin-form-item-row-spacing` is deprecated since 24.7. Use `--vaadin-form-layout-row-spacing` on <vaadin-form-layout> instead.',\r\n        );\r\n        spacingDeprecationNotified = true;\r\n      }\r\n\r\n      if (!labelWidthDeprecationNotified && labelWidth !== '' && parseInt(labelWidth) !== 0) {\r\n        console.warn(\r\n          '`--vaadin-form-item-label-width` is deprecated since 24.7. Use `--vaadin-form-layout-label-width` on <vaadin-form-layout> instead.',\r\n        );\r\n        labelWidthDeprecationNotified = true;\r\n      }\r\n\r\n      if (!labelSpacingDeprecationNotified && labelSpacing !== '' && parseInt(labelSpacing) !== 0) {\r\n        console.warn(\r\n          '`--vaadin-form-item-label-spacing` is deprecated since 24.7. Use `--vaadin-form-layout-label-spacing` on <vaadin-form-layout> instead.',\r\n        );\r\n        labelSpacingDeprecationNotified = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns a target element to add ARIA attributes to for a field.\r\n     *\r\n     * - For Vaadin field components, the method returns an element\r\n     * obtained through the `ariaTarget` property defined in `FieldMixin`.\r\n     * - In other cases, the method returns the field element itself.\r\n     *\r\n     * @param {HTMLElement} field\r\n     * @protected\r\n     */\r\n    _getFieldAriaTarget(field) {\r\n      return field.ariaTarget || field;\r\n    }\r\n\r\n    /**\r\n     * Links the label to a field by adding the label id to\r\n     * the `aria-labelledby` attribute of the field's ARIA target element.\r\n     *\r\n     * @param {HTMLElement} field\r\n     * @private\r\n     */\r\n    __linkLabelToField(field) {\r\n      addValueToAttribute(this._getFieldAriaTarget(field), 'aria-labelledby', this.__labelId);\r\n    }\r\n\r\n    /**\r\n     * Unlinks the label from a field by removing the label id from\r\n     * the `aria-labelledby` attribute of the field's ARIA target element.\r\n     *\r\n     * @param {HTMLElement} field\r\n     * @private\r\n     */\r\n    __unlinkLabelFromField(field) {\r\n      removeValueFromAttribute(this._getFieldAriaTarget(field), 'aria-labelledby', this.__labelId);\r\n    }\r\n\r\n    /** @private */\r\n    __onLabelClick() {\r\n      const fieldNode = this.__fieldNode;\r\n      if (fieldNode) {\r\n        fieldNode.focus();\r\n        fieldNode.click();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __getValidateFunction(field) {\r\n      return field.validate || field.checkValidity;\r\n    }\r\n\r\n    /**\r\n     * A `slotchange` event handler for the label slot.\r\n     *\r\n     * - Ensures the label id is only assigned to the first label node.\r\n     * - Ensures the label node is linked to the first field node via the `aria-labelledby` attribute\r\n     * if both nodes are provided, and unlinked otherwise.\r\n     *\r\n     * @private\r\n     */\r\n    __onLabelSlotChange() {\r\n      if (this.__labelNode) {\r\n        this.__labelNode = null;\r\n\r\n        if (this.__fieldNode) {\r\n          this.__unlinkLabelFromField(this.__fieldNode);\r\n        }\r\n      }\r\n\r\n      const newLabelNode = this.$.labelSlot.assignedElements()[0];\r\n      if (newLabelNode) {\r\n        this.__labelNode = newLabelNode;\r\n\r\n        if (this.__labelNode.id) {\r\n          // The new label node already has an id. Let's use it.\r\n          this.__labelId = this.__labelNode.id;\r\n        } else {\r\n          // The new label node doesn't have an id yet. Generate a unique one.\r\n          this.__labelId = `label-${this.localName}-${generateUniqueId()}`;\r\n          this.__labelNode.id = this.__labelId;\r\n        }\r\n\r\n        if (this.__fieldNode) {\r\n          this.__linkLabelToField(this.__fieldNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * A `slotchange` event handler for the content slot.\r\n     *\r\n     * - Ensures the label node is only linked to the first field node via the `aria-labelledby` attribute.\r\n     * - Sets up an observer for the `required` attribute changes on the first field\r\n     * to reflect the attribute on the component. Ensures the observer is disconnected from the field\r\n     * as soon as it is removed or replaced by another one.\r\n     *\r\n     * @private\r\n     */\r\n    __onContentSlotChange() {\r\n      if (this.__fieldNode) {\r\n        // Discard the old field\r\n        this.__unlinkLabelFromField(this.__fieldNode);\r\n        this.__updateRequiredState(false);\r\n        this.__fieldNodeObserver.disconnect();\r\n        this.__fieldNode = null;\r\n      }\r\n\r\n      const fieldNodes = this.$.contentSlot.assignedElements();\r\n      if (fieldNodes.length > 1) {\r\n        console.warn(\r\n          `WARNING: Since Vaadin 23, placing multiple fields directly to a <vaadin-form-item> is deprecated.\r\nPlease wrap fields with a <vaadin-custom-field> instead.`,\r\n        );\r\n      }\r\n\r\n      const newFieldNode = fieldNodes.find((field) => {\r\n        return !!this.__getValidateFunction(field);\r\n      });\r\n      if (newFieldNode) {\r\n        this.__fieldNode = newFieldNode;\r\n        this.__updateRequiredState(this.__fieldNode.required);\r\n        this.__fieldNodeObserver.observe(this.__fieldNode, { attributes: true, attributeFilter: ['required'] });\r\n\r\n        if (this.__labelNode) {\r\n          this.__linkLabelToField(this.__fieldNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateRequiredState(required) {\r\n      if (required) {\r\n        this.setAttribute('required', '');\r\n        this.__fieldNode.addEventListener('blur', this.__updateInvalidState);\r\n        this.__fieldNode.addEventListener('change', this.__updateInvalidState);\r\n      } else {\r\n        this.removeAttribute('invalid');\r\n        this.removeAttribute('required');\r\n        this.__fieldNode.removeEventListener('blur', this.__updateInvalidState);\r\n        this.__fieldNode.removeEventListener('change', this.__updateInvalidState);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateInvalidState() {\r\n      const isValid = this.__getValidateFunction(this.__fieldNode).call(this.__fieldNode);\r\n      this.toggleAttribute('invalid', isValid === false);\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { FormItemMixin } from './vaadin-form-item-mixin.js';\r\nimport { formItemStyles } from './vaadin-form-layout-styles.js';\r\n\r\nregisterStyles('vaadin-form-item', formItemStyles, { moduleId: 'vaadin-form-item-styles' });\r\n\r\n/**\r\n * `<vaadin-form-item>` is a Web Component providing labelled form item wrapper\r\n * for using inside `<vaadin-form-layout>`.\r\n *\r\n * `<vaadin-form-item>` accepts a single child as the input content,\r\n * and also has a separate named `label` slot:\r\n *\r\n * ```html\r\n * <vaadin-form-item>\r\n *   <label slot=\"label\">Label aside</label>\r\n *   <input>\r\n * </vaadin-form-item>\r\n * ```\r\n *\r\n * The label is optional and can be omitted:\r\n *\r\n * ```html\r\n * <vaadin-form-item>\r\n *   <input type=\"checkbox\"> Subscribe to our Newsletter\r\n * </vaadin-form-item>\r\n * ```\r\n *\r\n * By default, the `label` slot content is displayed aside of the input content.\r\n * When `label-position=\"top\"` is set, the `label` slot content is displayed on top:\r\n *\r\n * ```html\r\n * <vaadin-form-item label-position=\"top\">\r\n *   <label slot=\"label\">Label on top</label>\r\n *   <input>\r\n * </vaadin-form-item>\r\n * ```\r\n *\r\n * **Note:** Normally, `<vaadin-form-item>` is used as a child of\r\n * a `<vaadin-form-layout>` element. Setting `label-position` is unnecessary,\r\n * because the `label-position` attribute is triggered automatically by the parent\r\n * `<vaadin-form-layout>`, depending on its width and responsive behavior.\r\n *\r\n * **Deprecation note:** The `label-position` attribute is deprecated since 24.7 and\r\n * will be removed in Vaadin 25, when a new approach for setting the label position\r\n * will be introduced.\r\n *\r\n * ### Input Width\r\n *\r\n * By default, `<vaadin-form-item>` does not manipulate the width of the slotted\r\n * input element. Optionally you can stretch the child input element to fill\r\n * the available width for the input content by adding the `full-width` class:\r\n *\r\n * ```html\r\n * <vaadin-form-item>\r\n *   <label slot=\"label\">Label</label>\r\n *   <input class=\"full-width\">\r\n * </vaadin-form-item>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The `label-position` host attribute can be used to target the label on top state:\r\n *\r\n * ```\r\n * :host([label-position=\"top\"]) {\r\n *   padding-top: 0.5rem;\r\n * }\r\n * ```\r\n *\r\n * **Deprecation note:** The `label-position` attribute is deprecated since 24.7 and\r\n * will be removed in Vaadin 25, when a new approach to styling the form-item\r\n * based on the label position will be introduced.\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ---|---\r\n * label | The label slot container\r\n *\r\n * ### Custom CSS Properties Reference\r\n *\r\n * The following custom CSS properties are available on the `<vaadin-form-item>`\r\n * element:\r\n *\r\n * Custom CSS property | Description | Default\r\n * ---|---|---\r\n * `--vaadin-form-item-label-width` | (DEPRECATED: Use `--vaadin-form-layout-label-width` on `<vaadin-form-layout>` instead) Width of the label column when the labels are aside | `8em`\r\n * `--vaadin-form-item-label-spacing` | (DEPRECATED: Use `--vaadin-form-layout-label-spacing` on `<vaadin-form-layout>` instead) Spacing between the label column and the input column when the labels are aside | `1em`\r\n * `--vaadin-form-item-row-spacing` | (DEPRECATED: Use `--vaadin-form-layout-row-spacing` on `<vaadin-form-layout>` instead) Height of the spacing between the form item elements | `1em`\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes FormItemMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass FormItem extends FormItemMixin(ThemableMixin(PolymerElement)) {\r\n  static get is() {\r\n    return 'vaadin-form-item';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <div id=\"label\" part=\"label\" on-click=\"__onLabelClick\">\r\n        <slot name=\"label\" id=\"labelSlot\" on-slotchange=\"__onLabelSlotChange\"></slot>\r\n        <span part=\"required-indicator\" aria-hidden=\"true\"></span>\r\n      </div>\r\n      <div id=\"spacing\"></div>\r\n      <div id=\"content\">\r\n        <slot id=\"contentSlot\" on-slotchange=\"__onContentSlotChange\"></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(FormItem);\r\n\r\nexport { FormItem };\r\n"],
  "mappings": "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",
  "names": []
}
