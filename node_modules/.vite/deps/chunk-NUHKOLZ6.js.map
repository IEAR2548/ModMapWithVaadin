{
  "version": 3,
  "sources": ["../../@vaadin/avatar/theme/lumo/vaadin-avatar-styles.js", "../../@vaadin/avatar/src/vaadin-avatar-icons.js", "../../@vaadin/avatar/src/vaadin-avatar-mixin.js", "../../@vaadin/avatar/src/vaadin-avatar-styles.js", "../../@vaadin/avatar/src/vaadin-avatar.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/vaadin-lumo-styles/user-colors.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst globalStyle = document.createElement('style');\r\nglobalStyle.textContent = 'html { --vaadin-avatar-size: var(--lumo-size-m); }';\r\ndocument.head.appendChild(globalStyle);\r\n\r\nregisterStyles(\r\n  'vaadin-avatar',\r\n  css`\r\n    :host {\r\n      color: var(--lumo-secondary-text-color);\r\n      background-color: var(--lumo-contrast-10pct);\r\n      border-radius: 50%;\r\n      outline: none;\r\n      cursor: default;\r\n      user-select: none;\r\n      -webkit-tap-highlight-color: transparent;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    :host([has-color-index]) {\r\n      color: var(--lumo-base-color);\r\n    }\r\n\r\n    :host([focus-ring]) {\r\n      border-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n    }\r\n\r\n    [part='icon'],\r\n    [part='abbr'] {\r\n      fill: currentColor;\r\n    }\r\n\r\n    [part='abbr'] {\r\n      font-family: var(--lumo-font-family);\r\n      font-size: 2.4375em;\r\n      font-weight: 500;\r\n    }\r\n\r\n    :host([theme~='xlarge']) [part='abbr'] {\r\n      font-size: 2.5em;\r\n    }\r\n\r\n    :host([theme~='large']) [part='abbr'] {\r\n      font-size: 2.375em;\r\n    }\r\n\r\n    :host([theme~='small']) [part='abbr'] {\r\n      font-size: 2.75em;\r\n    }\r\n\r\n    :host([theme~='xsmall']) [part='abbr'] {\r\n      font-size: 3em;\r\n    }\r\n\r\n    :host([theme~='xlarge']) {\r\n      --vaadin-avatar-size: var(--lumo-size-xl);\r\n    }\r\n\r\n    :host([theme~='large']) {\r\n      --vaadin-avatar-size: var(--lumo-size-l);\r\n    }\r\n\r\n    :host([theme~='small']) {\r\n      --vaadin-avatar-size: var(--lumo-size-s);\r\n    }\r\n\r\n    :host([theme~='xsmall']) {\r\n      --vaadin-avatar-size: var(--lumo-size-xs);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-avatar' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nconst template = document.createElement('template');\r\n\r\ntemplate.innerHTML = `\r\n  <style>\r\n    @font-face {\r\n      font-family: 'vaadin-avatar-icons';\r\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQAAAsAAAAABnwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQwAAAFZAIUmEY21hcAAAAYgAAABLAAABcOspwa1nbHlmAAAB1AAAAEUAAABMYO4o1WhlYWQAAAIcAAAALgAAADYYaAmGaGhlYQAAAkwAAAAdAAAAJAZsA1VobXR4AAACbAAAAAgAAAAIA+gAAGxvY2EAAAJ0AAAABgAAAAYAJgAAbWF4cAAAAnwAAAAeAAAAIAEOACFuYW1lAAACnAAAAUIAAAKavFDYrHBvc3QAAAPgAAAAHQAAAC52hGZ4eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGT8wjiBgZWBgamKaQ8DA0MPhGZ8wGDIyAQUZWBlZsAKAtJcUxgcXjG+YmQO+p/FEMUcxDANKMwIkgMADiUMJQB4nGNgYGBlYGBgBmIdIGZhYGAMYWBkAAE/oCgjWJyZgQsszsKgBFbDAhJ/xfj/P4wE8lnAJAMjG8Mo4AGTMlAeOKwgmIERADU0CX0AeJxjYGIAAmYJpkgGHgYRBgZGJT1GEztGIzlGET5GKEuU8YuSpZKSpQuI+LfLv21emz9jHJQPJP7dsUywsEiwBACG8g9CAAAAeJxjYGRgYADicIOnh+P5bb4ycDO/AIow3JZ4rIJMM0swRQIpDgYmEA8AKwgJOwAAeJxjYGRgYA76nwUkXzAAAbMEAyMDKmACAE2GAskAAAAAAAAAA+gAAAAAAAAAJgAAeJxjYGRgYGBiEAViBjCLgYELCBkY/oP5DAAKuwEwAAB4nI2Qu07DMBSG//SGaCWEhMSAGDx1QU0vYyemdmDrUDEhuamTpkriyHEj9RF4B56Bh2Bg5mmY+8d4Qh3qo9jf+c45thQAt/hGgGYFuHN7s1q4YvbHbdKD5w555LmLAZ499+hfPPfxhDfPA/p33hB0rmmG+PDcwg2+PLfpfzx3yL+eu7gPHj33MAxmnvtYB6+eB/SftZTbtBjJWlppRmmki2qlkkMmzZnKGbVWpkp1Iabh5Ex1qQplpFVbsTmKqk5m1sYiNjoXC11YlWValEbvVWTDnbXlfDyOvQ8jnaOGZGyRouCfky63/AyzFBE0fYUVFBIckLnKZTOXda15s+GZulxgihCTC2eXnC3cfFNV7BfY4Mi9eT3BjNYiZh6zRyMnLdxs050xNE3panuaiD7Ezk2VmGPMiP/1h+71/ATcWYAhAAB4nGNgYoAALgbsgImRiZGZgaW0OLWIgQEACl4B2QAAAA==) format('woff');\r\n      font-weight: normal;\r\n      font-style: normal;\r\n    }\r\n  </style>\r\n`;\r\n\r\ndocument.head.appendChild(template.content);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\r\nimport { I18nMixin } from '@vaadin/component-base/src/i18n-mixin.js';\r\n\r\nconst DEFAULT_I18N = {\r\n  anonymous: 'anonymous',\r\n};\r\n\r\n/**\r\n * A mixin providing common avatar functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes FocusMixin\r\n */\r\nexport const AvatarMixin = (superClass) =>\r\n  class AvatarMixinClass extends I18nMixin(DEFAULT_I18N, FocusMixin(superClass)) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * The path to the image\r\n         */\r\n        img: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n          observer: '__imgChanged',\r\n        },\r\n\r\n        /**\r\n         * A shortened form of name that is displayed\r\n         * in the avatar when `img` is not provided.\r\n         */\r\n        abbr: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * Full name of the user\r\n         * used for the tooltip of the avatar.\r\n         */\r\n        name: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * Color index used for avatar background.\r\n         * @attr {number} color-index\r\n         */\r\n        colorIndex: {\r\n          type: Number,\r\n          observer: '__colorIndexChanged',\r\n        },\r\n\r\n        /**\r\n         * When true, the avatar has tooltip shown on hover and focus.\r\n         * The tooltip text is based on the `name` and `abbr` properties.\r\n         * When neither is provided, `i18n.anonymous` is used instead.\r\n         * @attr {boolean} with-tooltip\r\n         */\r\n        withTooltip: {\r\n          type: Boolean,\r\n          value: false,\r\n          observer: '__withTooltipChanged',\r\n        },\r\n\r\n        /** @protected */\r\n        __imgVisible: Boolean,\r\n\r\n        /** @protected */\r\n        __iconVisible: Boolean,\r\n\r\n        /** @protected */\r\n        __abbrVisible: Boolean,\r\n\r\n        /** @private */\r\n        __tooltipNode: Object,\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '__imgOrAbbrOrNameChanged(img, abbr, name)',\r\n        '__i18nChanged(__effectiveI18n)',\r\n        '__tooltipChanged(__tooltipNode, name, abbr)',\r\n      ];\r\n    }\r\n\r\n    /**\r\n     * The object used to localize this component. To change the default\r\n     * localization, replace this with an object that provides all properties, or\r\n     * just the individual properties you want to change.\r\n     *\r\n     * The object has the following JSON structure and default values:\r\n     * ```\r\n     * {\r\n     *   // Translation of the anonymous user avatar tooltip.\r\n     *   anonymous: 'anonymous'\r\n     * }\r\n     * ```\r\n     * @return {!AvatarI18n}\r\n     */\r\n    get i18n() {\r\n      return super.i18n;\r\n    }\r\n\r\n    set i18n(value) {\r\n      super.i18n = value;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.__updateVisibility();\r\n\r\n      // By default, if the user hasn't provided a custom role,\r\n      // the role attribute is set to \"img\".\r\n      if (!this.hasAttribute('role')) {\r\n        this.setAttribute('role', 'img');\r\n      }\r\n\r\n      if (!this.hasAttribute('tabindex')) {\r\n        this.setAttribute('tabindex', '0');\r\n      }\r\n\r\n      // Should set `anonymous` if name / abbr is not provided\r\n      if (!this.name && !this.abbr) {\r\n        this.__setTooltip();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __colorIndexChanged(index) {\r\n      if (index != null) {\r\n        const prop = `--vaadin-user-color-${index}`;\r\n\r\n        // Check if custom CSS property is defined\r\n        const isValid = Boolean(getComputedStyle(document.documentElement).getPropertyValue(prop));\r\n\r\n        if (isValid) {\r\n          this.setAttribute('has-color-index', '');\r\n          this.style.setProperty('--vaadin-avatar-user-color', `var(${prop})`);\r\n        } else {\r\n          this.removeAttribute('has-color-index');\r\n          console.warn(`The CSS property --vaadin-user-color-${index} is not defined`);\r\n        }\r\n      } else {\r\n        this.removeAttribute('has-color-index');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __imgChanged() {\r\n      this.__imgFailedToLoad = false;\r\n    }\r\n\r\n    /** @private */\r\n    __imgOrAbbrOrNameChanged(_img, abbr, name) {\r\n      this.__updateVisibility();\r\n\r\n      if (abbr && abbr !== this.__generatedAbbr) {\r\n        return;\r\n      }\r\n\r\n      if (name) {\r\n        this.abbr = this.__generatedAbbr = name\r\n          .split(' ')\r\n          .map((word) => word.charAt(0))\r\n          .join('');\r\n      } else {\r\n        this.abbr = undefined;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __tooltipChanged(tooltipNode, name, abbr) {\r\n      if (tooltipNode) {\r\n        if (abbr && abbr !== this.__generatedAbbr) {\r\n          this.__setTooltip(name ? `${name} (${abbr})` : abbr);\r\n        } else {\r\n          this.__setTooltip(name);\r\n        }\r\n      }\r\n\r\n      if (abbr) {\r\n        // By default, generate aria-label attribute containing the abbr value.\r\n        // When no tooltip is set, prefix the aria-label with the name value.\r\n        this.setAttribute('aria-label', !tooltipNode && name ? `${name} (${abbr})` : abbr);\r\n      } else {\r\n        this.removeAttribute('aria-label');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __withTooltipChanged(withTooltip, oldWithTooltip) {\r\n      if (withTooltip) {\r\n        // Create and attach tooltip\r\n        const tooltipNode = document.createElement('vaadin-tooltip');\r\n        tooltipNode.setAttribute('slot', 'tooltip');\r\n        this.appendChild(tooltipNode);\r\n        this.__tooltipNode = tooltipNode;\r\n      } else if (oldWithTooltip) {\r\n        // Cleanup and detach tooltip\r\n        this.__tooltipNode.target = null;\r\n        this.__tooltipNode.remove();\r\n        this.__tooltipNode = null;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __i18nChanged(effectiveI18n) {\r\n      if (effectiveI18n && effectiveI18n.anonymous) {\r\n        if (this.__oldAnonymous && this.__tooltipNode && this.__tooltipNode.text === this.__oldAnonymous) {\r\n          this.__setTooltip();\r\n        }\r\n\r\n        this.__oldAnonymous = effectiveI18n.anonymous;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateVisibility() {\r\n      this.__imgVisible = !!this.img && !this.__imgFailedToLoad;\r\n      this.__abbrVisible = !this.__imgVisible && !!this.abbr;\r\n      this.__iconVisible = !this.__imgVisible && !this.abbr;\r\n    }\r\n\r\n    /** @private */\r\n    __setTooltip(tooltip) {\r\n      const tooltipNode = this.__tooltipNode;\r\n      if (tooltipNode) {\r\n        tooltipNode.text = tooltip || this.__effectiveI18n.anonymous;\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    __onImageLoadError() {\r\n      if (this.img) {\r\n        console.warn(`<vaadin-avatar> The specified image could not be loaded: ${this.img}`);\r\n        this.__imgFailedToLoad = true;\r\n        this.__updateVisibility();\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const avatarStyles = css`\r\n  :host {\r\n    display: inline-block;\r\n    flex: none;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    height: var(--vaadin-avatar-size, 64px);\r\n    width: var(--vaadin-avatar-size, 64px);\r\n    border: var(--vaadin-avatar-outline-width) solid transparent;\r\n    margin: calc(var(--vaadin-avatar-outline-width) * -1);\r\n    background-clip: content-box;\r\n    --vaadin-avatar-outline-width: var(--vaadin-focus-ring-width, 2px);\r\n  }\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  [part='icon'] {\r\n    font-size: 5.6em;\r\n  }\r\n\r\n  [part='abbr'] {\r\n    font-size: 2.2em;\r\n  }\r\n\r\n  [part='icon'] > text {\r\n    font-family: 'vaadin-avatar-icons';\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  svg[hidden] {\r\n    display: none !important;\r\n  }\r\n\r\n  :host([has-color-index]) {\r\n    position: relative;\r\n    background-color: var(--vaadin-avatar-user-color);\r\n  }\r\n\r\n  :host([has-color-index])::before {\r\n    position: absolute;\r\n    content: '';\r\n    inset: 0;\r\n    border-radius: inherit;\r\n    box-shadow: inset 0 0 0 2px var(--vaadin-avatar-user-color);\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-avatar-icons.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { AvatarMixin } from './vaadin-avatar-mixin.js';\r\nimport { avatarStyles } from './vaadin-avatar-styles.js';\r\n\r\nregisterStyles('vaadin-avatar', avatarStyles, { moduleId: 'vaadin-avatar-styles' });\r\n\r\n/**\r\n * `<vaadin-avatar>` is a Web Component providing avatar displaying functionality.\r\n *\r\n * ```html\r\n * <vaadin-avatar img=\"avatars/avatar-1.jpg\"></vaadin-avatar>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are exposed for styling:\r\n *\r\n * Part name | Description\r\n * --------- | ---------------\r\n * `abbr`    | The abbreviation element\r\n * `icon`    | The icon element\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute         | Description\r\n * ------------------|-------------\r\n * `focus-ring`      | Set when the avatar is focused using the keyboard.\r\n * `focused`         | Set when the avatar is focused.\r\n * `has-color-index` | Set when the avatar has `colorIndex` and the corresponding custom CSS property exists.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes AvatarMixin\r\n * @mixes ControllerMixin\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass Avatar extends AvatarMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <img\r\n        hidden$=\"[[!__imgVisible]]\"\r\n        src$=\"[[img]]\"\r\n        aria-hidden=\"true\"\r\n        on-error=\"__onImageLoadError\"\r\n        draggable=\"false\"\r\n      />\r\n      <svg\r\n        part=\"icon\"\r\n        hidden$=\"[[!__iconVisible]]\"\r\n        id=\"avatar-icon\"\r\n        viewBox=\"-50 -50 100 100\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <text dy=\".35em\" text-anchor=\"middle\">&#xea01;</text>\r\n      </svg>\r\n      <svg\r\n        part=\"abbr\"\r\n        hidden$=\"[[!__abbrVisible]]\"\r\n        id=\"avatar-abbr\"\r\n        viewBox=\"-50 -50 100 100\"\r\n        preserveAspectRatio=\"xMidYMid meet\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <text dy=\".35em\" text-anchor=\"middle\">[[abbr]]</text>\r\n      </svg>\r\n\r\n      <slot name=\"tooltip\"></slot>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-avatar';\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    this._tooltipController = new TooltipController(this);\r\n    this.addController(this._tooltipController);\r\n  }\r\n}\r\n\r\ndefineCustomElement(Avatar);\r\n\r\nexport { Avatar };\r\n"],
  "mappings": "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",
  "names": []
}
