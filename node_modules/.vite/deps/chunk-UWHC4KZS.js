import {
  SlotController
} from "./chunk-FIRGGFKS.js";
import {
  Debouncer
} from "./chunk-RQAC3AN6.js";
import {
  ControllerMixin
} from "./chunk-QZAHM4JN.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-KEWLZU7R.js";
import {
  defineCustomElement
} from "./chunk-AQ7DMXX6.js";
import {
  timeOut
} from "./chunk-MTSXO4VS.js";
import {
  PolymerElement
} from "./chunk-YBEXGSZO.js";
import {
  html
} from "./chunk-QO5P4LIH.js";
import {
  css
} from "./chunk-WFI4KZJ4.js";

// node_modules/@vaadin/grid/src/vaadin-grid-filter-element-mixin.js
registerStyles(
  "vaadin-grid-filter",
  css`
    :host {
      display: inline-flex;
      max-width: 100%;
    }

    ::slotted(*) {
      width: 100%;
      box-sizing: border-box;
    }
  `,
  { moduleId: "vaadin-grid-filter-styles" }
);
var GridFilterElementMixin = (superClass) => class extends ControllerMixin(superClass) {
  static get properties() {
    return {
      /**
       * JS Path of the property in the item used for filtering the data.
       */
      path: {
        type: String,
        sync: true
      },
      /**
       * Current filter value.
       */
      value: {
        type: String,
        notify: true,
        sync: true
      },
      /** @private */
      _textField: {
        type: Object,
        sync: true
      }
    };
  }
  static get observers() {
    return ["_filterChanged(path, value, _textField)"];
  }
  /** @protected */
  ready() {
    super.ready();
    this._filterController = new SlotController(this, "", "vaadin-text-field", {
      initializer: (field) => {
        field.addEventListener("input", (e) => {
          this.value = e.target.value;
        });
        this._textField = field;
      }
    });
    this.addController(this._filterController);
  }
  /** @private */
  _filterChanged(path, value, textField) {
    if (path === void 0 || value === void 0 || !textField) {
      return;
    }
    textField.value = value;
    this._debouncerFilterChanged = Debouncer.debounce(this._debouncerFilterChanged, timeOut.after(200), () => {
      this.dispatchEvent(new CustomEvent("filter-changed", { bubbles: true }));
    });
  }
  focus() {
    if (this._textField) {
      this._textField.focus();
    }
  }
};

// node_modules/@vaadin/grid/src/vaadin-grid-filter.js
var GridFilter = class extends GridFilterElementMixin(ThemableMixin(PolymerElement)) {
  static get template() {
    return html`<slot></slot>`;
  }
  static get is() {
    return "vaadin-grid-filter";
  }
};
defineCustomElement(GridFilter);

export {
  GridFilter
};
/*! Bundled license information:

@vaadin/grid/src/vaadin-grid-filter-element-mixin.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/grid/src/vaadin-grid-filter.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)
*/
//# sourceMappingURL=chunk-UWHC4KZS.js.map
