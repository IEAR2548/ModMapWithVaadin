{
  "version": 3,
  "sources": ["../../@vaadin/horizontal-layout/theme/lumo/vaadin-horizontal-layout-styles.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/define.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/element-mixin.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/async.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/debounce.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/dir-mixin.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/dom-utils.js", "../../@vaadin/horizontal-layout/node_modules/@vaadin/component-base/src/slot-observer.js", "../../@vaadin/horizontal-layout/src/vaadin-horizontal-layout-mixin.js", "../../@vaadin/horizontal-layout/src/vaadin-horizontal-layout-styles.js", "../../@vaadin/horizontal-layout/src/vaadin-horizontal-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst horizontalLayout = css`\n  :host([theme~='margin']) {\n    margin: var(--lumo-space-m);\n  }\n\n  :host([theme~='padding']) {\n    padding: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-xs']) {\n    gap: var(--lumo-space-xs);\n  }\n\n  :host([theme~='spacing-s']) {\n    gap: var(--lumo-space-s);\n  }\n\n  :host([theme~='spacing']) {\n    gap: var(--lumo-space-m);\n  }\n\n  :host([theme~='spacing-l']) {\n    gap: var(--lumo-space-l);\n  }\n\n  :host([theme~='spacing-xl']) {\n    gap: var(--lumo-space-xl);\n  }\n\n  :host([theme~='wrap']) {\n    flex-wrap: wrap;\n  }\n`;\n\nregisterStyles('vaadin-horizontal-layout', horizontalLayout, { moduleId: 'lumo-horizontal-layout' });\n", "/**\n * @license\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nwindow.Vaadin ||= {};\nwindow.Vaadin.featureFlags ||= {};\n\nfunction dashToCamelCase(dash) {\n  return dash.replace(/-[a-z]/gu, (m) => m[1].toUpperCase());\n}\n\nconst experimentalMap = {};\n\nexport function defineCustomElement(CustomElement, version = '24.7.5') {\n  Object.defineProperty(CustomElement, 'version', {\n    get() {\n      return version;\n    },\n  });\n\n  if (CustomElement.experimental) {\n    const featureFlagKey =\n      typeof CustomElement.experimental === 'string'\n        ? CustomElement.experimental\n        : `${dashToCamelCase(CustomElement.is.split('-').slice(1).join('-'))}Component`;\n\n    if (!window.Vaadin.featureFlags[featureFlagKey] && !experimentalMap[featureFlagKey]) {\n      // Add setter to define experimental component when it's set to true\n      experimentalMap[featureFlagKey] = new Set();\n      experimentalMap[featureFlagKey].add(CustomElement);\n\n      Object.defineProperty(window.Vaadin.featureFlags, featureFlagKey, {\n        get() {\n          return experimentalMap[featureFlagKey].size === 0;\n        },\n        set(value) {\n          if (!!value && experimentalMap[featureFlagKey].size > 0) {\n            experimentalMap[featureFlagKey].forEach((elementClass) => {\n              customElements.define(elementClass.is, elementClass);\n            });\n            experimentalMap[featureFlagKey].clear();\n          }\n        },\n      });\n\n      return;\n    } else if (experimentalMap[featureFlagKey]) {\n      // Allow to register multiple components with single flag\n      experimentalMap[featureFlagKey].add(CustomElement);\n      return;\n    }\n  }\n\n  const defined = customElements.get(CustomElement.is);\n  if (!defined) {\n    customElements.define(CustomElement.is, CustomElement);\n  } else {\n    const definedVersion = defined.version;\n    if (definedVersion && CustomElement.version && definedVersion === CustomElement.version) {\n      // Just loading the same thing again\n      console.warn(`The component ${CustomElement.is} has been loaded twice`);\n    } else {\n      console.error(\n        `Tried to define ${CustomElement.is} version ${CustomElement.version} when version ${defined.version} is already in use. Something will probably break.`,\n      );\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { setCancelSyntheticClickEvents } from '@polymer/polymer/lib/utils/settings.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nimport { idlePeriod } from './async.js';\nimport { Debouncer, enqueueDebouncer } from './debounce.js';\nimport { DirMixin } from './dir-mixin.js';\n\n// This setting affects the legacy Polymer gestures which get activated\n// once you import any iron component e.g iron-icon.\n// It has to be explicitly disabled to prevent click issues in iOS + VoiceOver\n// for buttons that are based on `[role=button]` e.g vaadin-button.\nsetCancelSyntheticClickEvents(false);\n\nif (!window.Vaadin) {\n  window.Vaadin = {};\n}\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nif (!window.Vaadin.registrations) {\n  window.Vaadin.registrations = [];\n}\n\nif (!window.Vaadin.developmentModeCallback) {\n  window.Vaadin.developmentModeCallback = {};\n}\n\nwindow.Vaadin.developmentModeCallback['vaadin-usage-statistics'] = function () {\n  usageStatistics();\n};\n\nlet statsJob;\n\nconst registered = new Set();\n\n/**\n * @polymerMixin\n * @mixes DirMixin\n */\nexport const ElementMixin = (superClass) =>\n  class VaadinElementMixin extends DirMixin(superClass) {\n    /** @protected */\n    static finalize() {\n      super.finalize();\n\n      const { is } = this;\n\n      // Registers a class prototype for telemetry purposes.\n      if (is && !registered.has(is)) {\n        window.Vaadin.registrations.push(this);\n        registered.add(is);\n\n        if (window.Vaadin.developmentModeCallback) {\n          statsJob = Debouncer.debounce(statsJob, idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          });\n          enqueueDebouncer(statsJob);\n        }\n      }\n    }\n\n    constructor() {\n      super();\n\n      if (document.doctype === null) {\n        console.warn(\n          'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.',\n        );\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nconst microtaskCallbacks = [];\nlet microtaskScheduled = false;\n\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    const cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) {\n        return window.setTimeout(fn, delay);\n      },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      },\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  },\n};\nexport { timeOut };\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  },\n};\nexport { animationFrame };\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    if (window.cancelIdleCallback) {\n      window.cancelIdleCallback(handle);\n    } else {\n      window.clearTimeout(handle);\n    }\n  },\n};\nexport { idlePeriod };\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      queueMicrotask(() => microtaskFlush());\n    }\n    microtaskCallbacks.push(callback);\n    const result = microtaskCurrHandle;\n    microtaskCurrHandle += 1;\n    return result;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error(`invalid async handle: ${handle}`);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  },\n};\nexport { microTask };\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nconst debouncerQueue = new Set();\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nexport class Debouncer {\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@vaadin/component-base/src/async.js';\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(/** @type {number} */ (this._timer));\n      this._timer = null;\n    }\n  }\n\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n}\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nexport function enqueueDebouncer(debouncer) {\n  debouncerQueue.add(debouncer);\n}\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nexport function flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach((debouncer) => {\n    try {\n      debouncer.flush();\n    } catch (e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n}\n\nexport const flush = () => {\n  let debouncers;\n  do {\n    debouncers = flushDebouncers();\n  } while (debouncers);\n};\n", "/**\n * @license\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\n\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else if (elementDir != null) {\n    element.removeAttribute('dir');\n  }\n}\n\nfunction getDocumentDir() {\n  return document.documentElement.getAttribute('dir');\n}\n\nfunction directionUpdater() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach((element) => {\n    alignDirs(element, documentDir);\n  });\n}\n\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, { attributes: true, attributeFilter: ['dir'] });\n\n/**\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\n *\n * @polymerMixin\n */\nexport const DirMixin = (superClass) =>\n  class VaadinDirMixin extends superClass {\n    static get properties() {\n      return {\n        /**\n         * @protected\n         */\n        dir: {\n          type: String,\n          value: '',\n          reflectToAttribute: true,\n          converter: {\n            fromAttribute: (attr) => {\n              return !attr ? '' : attr;\n            },\n            toAttribute: (prop) => {\n              return prop === '' ? null : prop;\n            },\n          },\n        },\n      };\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get __isRTL() {\n      return this.getAttribute('dir') === 'rtl';\n    }\n\n    /** @protected */\n    connectedCallback() {\n      super.connectedCallback();\n\n      if (!this.hasAttribute('dir') || this.__restoreSubscription) {\n        this.__subscribe();\n        alignDirs(this, getDocumentDir(), null);\n      }\n    }\n\n    /** @protected */\n    attributeChangedCallback(name, oldValue, newValue) {\n      super.attributeChangedCallback(name, oldValue, newValue);\n      if (name !== 'dir') {\n        return;\n      }\n\n      const documentDir = getDocumentDir();\n\n      // New value equals to the document direction and the element is not subscribed to the changes\n      const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\n      // Value was emptied and the element is not subscribed to the changes\n      const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n      // New value is different and the old equals to document direction and the element is not subscribed to the changes\n      const newDiffValue = newValue !== documentDir && oldValue === documentDir;\n\n      if (newValueEqlDocDir || newValueEmptied) {\n        this.__subscribe();\n        alignDirs(this, documentDir, newValue);\n      } else if (newDiffValue) {\n        this.__unsubscribe();\n      }\n    }\n\n    /** @protected */\n    disconnectedCallback() {\n      super.disconnectedCallback();\n      this.__restoreSubscription = directionSubscribers.includes(this);\n      this.__unsubscribe();\n    }\n\n    /** @protected */\n    _valueToNodeAttribute(node, value, attribute) {\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n      // If the property contains an empty string then it should not create an empty attribute\n      if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\n        return;\n      }\n      super._valueToNodeAttribute(node, value, attribute);\n    }\n\n    /** @protected */\n    _attributeToProperty(attribute, value, type) {\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n      // If the attribute is removed, then the dir property should contain an empty string instead of null\n      if (attribute === 'dir' && !value) {\n        this.dir = '';\n      } else {\n        super._attributeToProperty(attribute, value, type);\n      }\n    }\n\n    /** @private */\n    __subscribe() {\n      if (!directionSubscribers.includes(this)) {\n        directionSubscribers.push(this);\n      }\n    }\n\n    /** @private */\n    __unsubscribe() {\n      if (directionSubscribers.includes(this)) {\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nexport function getAncestorRootNodes(node) {\n  const result = [];\n\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n\n    node = node.parentNode;\n  }\n\n  return result;\n}\n\n/**\n * Returns the list of flattened elements for the given `node`.\n * This list consists of a node's children and, for any children that are\n * `<slot>` elements, the expanded flattened list of `assignedElements`.\n *\n * @param {Node} node\n * @return {Element[]}\n */\nexport function getFlattenedElements(node) {\n  const result = [];\n  let elements;\n  if (node.localName === 'slot') {\n    elements = node.assignedElements();\n  } else {\n    result.push(node);\n    elements = [...node.children];\n  }\n  elements.forEach((elem) => result.push(...getFlattenedElements(elem)));\n  return result;\n}\n\n/**\n * Traverses the given node and its parents, including those that are across\n * the shadow root boundaries, until it finds a node that matches the selector.\n *\n * @param {string} selector The CSS selector to match against\n * @param {Node} node The starting node for the traversal\n * @return {Node | null} The closest matching element, or null if no match is found\n */\nexport function getClosestElement(selector, node) {\n  if (!node) {\n    return null;\n  }\n\n  return node.closest(selector) || getClosestElement(selector, node.getRootNode().host);\n}\n\n/**\n * Takes a string with values separated by space and returns a set the values\n *\n * @param {string} value\n * @return {Set<string>}\n */\nexport function deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n\n  return new Set(value.split(' '));\n}\n\n/**\n * Takes a set of string values and returns a string with values separated by space\n *\n * @param {Set<string>} values\n * @return {string}\n */\nexport function serializeAttributeValue(values) {\n  return values ? [...values].join(' ') : '';\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nexport function removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Returns true if the given node is an empty text node, false otherwise.\n *\n * @param {Node} node\n * @return {boolean}\n */\nexport function isEmptyTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\n}\n", "/**\n * @license\n * Copyright (c) 2023 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A helper for observing slot changes.\n */\nexport class SlotObserver {\n  constructor(slot, callback) {\n    /** @type HTMLSlotElement */\n    this.slot = slot;\n\n    /** @type Function */\n    this.callback = callback;\n\n    /** @type {Node[]} */\n    this._storedNodes = [];\n\n    this._connected = false;\n    this._scheduled = false;\n\n    this._boundSchedule = () => {\n      this._schedule();\n    };\n\n    this.connect();\n    this._schedule();\n  }\n\n  /**\n   * Activates an observer. This method is automatically called when\n   * a `SlotObserver` is created. It should only be called to  re-activate\n   * an observer that has been deactivated via the `disconnect` method.\n   */\n  connect() {\n    this.slot.addEventListener('slotchange', this._boundSchedule);\n    this._connected = true;\n  }\n\n  /**\n   * Deactivates the observer. After calling this method the observer callback\n   * will not be called when changes to slotted nodes occur. The `connect` method\n   * may be subsequently called to reactivate the observer.\n   */\n  disconnect() {\n    this.slot.removeEventListener('slotchange', this._boundSchedule);\n    this._connected = false;\n  }\n\n  /** @private */\n  _schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n\n      queueMicrotask(() => {\n        this.flush();\n      });\n    }\n  }\n\n  /**\n   * Run the observer callback synchronously.\n   */\n  flush() {\n    if (!this._connected) {\n      return;\n    }\n\n    this._scheduled = false;\n\n    this._processNodes();\n  }\n\n  /** @private */\n  _processNodes() {\n    const currentNodes = this.slot.assignedNodes({ flatten: true });\n\n    let addedNodes = [];\n    const removedNodes = [];\n    const movedNodes = [];\n\n    if (currentNodes.length) {\n      addedNodes = currentNodes.filter((node) => !this._storedNodes.includes(node));\n    }\n\n    if (this._storedNodes.length) {\n      this._storedNodes.forEach((node, index) => {\n        const idx = currentNodes.indexOf(node);\n        if (idx === -1) {\n          removedNodes.push(node);\n        } else if (idx !== index) {\n          movedNodes.push(node);\n        }\n      });\n    }\n\n    if (addedNodes.length || removedNodes.length || movedNodes.length) {\n      this.callback({ addedNodes, currentNodes, movedNodes, removedNodes });\n    }\n\n    this._storedNodes = currentNodes;\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isEmptyTextNode } from '@vaadin/component-base/src/dom-utils.js';\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\n\n/**\n * @polymerMixin\n */\nexport const HorizontalLayoutMixin = (superClass) =>\n  class extends superClass {\n    /** @protected */\n    ready() {\n      super.ready();\n\n      const startSlot = this.shadowRoot.querySelector('slot:not([name])');\n      this.__startSlotObserver = new SlotObserver(startSlot, ({ currentNodes, removedNodes }) => {\n        if (removedNodes.length) {\n          this.__clearAttribute(removedNodes, 'last-start-child');\n        }\n\n        const children = currentNodes.filter((node) => node.nodeType === Node.ELEMENT_NODE);\n        this.__updateAttributes(children, 'start', false, true);\n\n        const nodes = currentNodes.filter((node) => !isEmptyTextNode(node));\n        this.toggleAttribute('has-start', nodes.length > 0);\n      });\n\n      const endSlot = this.shadowRoot.querySelector('[name=\"end\"]');\n      this.__endSlotObserver = new SlotObserver(endSlot, ({ currentNodes, removedNodes }) => {\n        if (removedNodes.length) {\n          this.__clearAttribute(removedNodes, 'first-end-child');\n        }\n\n        this.__updateAttributes(currentNodes, 'end', true, false);\n\n        this.toggleAttribute('has-end', currentNodes.length > 0);\n      });\n\n      const middleSlot = this.shadowRoot.querySelector('[name=\"middle\"]');\n      this.__middleSlotObserver = new SlotObserver(middleSlot, ({ currentNodes, removedNodes }) => {\n        if (removedNodes.length) {\n          this.__clearAttribute(removedNodes, 'first-middle-child');\n          this.__clearAttribute(removedNodes, 'last-middle-child');\n        }\n\n        this.__updateAttributes(currentNodes, 'middle', true, true);\n\n        this.toggleAttribute('has-middle', currentNodes.length > 0);\n      });\n    }\n\n    /** @private */\n    __clearAttribute(nodes, attr) {\n      const el = nodes.find((node) => node.nodeType === Node.ELEMENT_NODE && node.hasAttribute(attr));\n      if (el) {\n        el.removeAttribute(attr);\n      }\n    }\n\n    /** @private */\n    __updateAttributes(nodes, slot, setFirst, setLast) {\n      nodes.forEach((child, idx) => {\n        if (setFirst) {\n          const attr = `first-${slot}-child`;\n          if (idx === 0) {\n            child.setAttribute(attr, '');\n          } else if (child.hasAttribute(attr)) {\n            child.removeAttribute(attr);\n          }\n        }\n\n        if (setLast) {\n          const attr = `last-${slot}-child`;\n          if (idx === nodes.length - 1) {\n            child.setAttribute(attr, '');\n          } else if (child.hasAttribute(attr)) {\n            child.removeAttribute(attr);\n          }\n        }\n      });\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const baseStyles = css`\n  :host {\n    display: flex;\n    box-sizing: border-box;\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  /* Theme variations */\n  :host([theme~='margin']) {\n    margin: 1em;\n  }\n\n  :host([theme~='padding']) {\n    padding: 1em;\n  }\n\n  :host([theme~='spacing']) {\n    gap: 1em;\n  }\n\n  :host([has-end]:not([has-middle])) ::slotted([last-start-child]) {\n    margin-inline-end: auto;\n  }\n\n  ::slotted([first-middle-child]) {\n    margin-inline-start: auto;\n  }\n\n  ::slotted([last-middle-child]) {\n    margin-inline-end: auto;\n  }\n\n  :host([has-start]:not([has-middle])) ::slotted([first-end-child]) {\n    margin-inline-start: auto;\n  }\n`;\n\n// Layout improvements are part of a feature for Flow users where children that have been configured to use full size\n// using `HasSize.setSizeFull()` and others, get additional styles so that they effectively take the remaining space in\n// the layout, rather than explicitly use 100% width/height. The respective data attributes are set by Flow's `HasSize`\n// class.\nconst enableLayoutImprovements = window.Vaadin.featureFlags.layoutComponentImprovements;\nconst layoutImprovementStyles = css`\n  ::slotted([data-width-full]) {\n    flex: 1;\n  }\n\n  ::slotted(vaadin-horizontal-layout[data-width-full]),\n  ::slotted(vaadin-vertical-layout[data-width-full]) {\n    min-width: 0;\n  }\n`;\n\nexport const horizontalLayoutStyles = enableLayoutImprovements ? [baseStyles, layoutImprovementStyles] : [baseStyles];\n", "/**\n * @license\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { HorizontalLayoutMixin } from './vaadin-horizontal-layout-mixin.js';\nimport { horizontalLayoutStyles } from './vaadin-horizontal-layout-styles.js';\n\nregisterStyles('vaadin-horizontal-layout', horizontalLayoutStyles, { moduleId: 'vaadin-horizontal-layout-styles' });\n\n/**\n * `<vaadin-horizontal-layout>` provides a simple way to horizontally align your HTML elements.\n *\n * ```\n * <vaadin-horizontal-layout>\n *   <div>Item 1</div>\n *   <div>Item 2</div>\n * </vaadin-horizontal-layout>\n * ```\n *\n * ### Built-in Theme Variations\n *\n * `<vaadin-horizontal-layout>` supports the following theme variations:\n *\n * Theme variation | Description\n * ---|---\n * `theme=\"margin\"` | Applies the default amount of CSS margin for the host element (specified by the theme)\n * `theme=\"padding\"` | Applies the default amount of CSS padding for the host element (specified by the theme)\n * `theme=\"spacing\"` | Applies the default amount of CSS margin between items (specified by the theme)\n * `theme=\"wrap\"` | Items wrap to the next row when they exceed the layout width\n *\n * ### Component's slots\n *\n * The following slots are available to be set:\n *\n * Slot name          | Description\n * -------------------|---------------\n * no name            | Default slot\n * `middle`           | Slot for the content placed in the middle\n * `end`              | Slot for the content placed at the end\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes HorizontalLayoutMixin\n */\nclass HorizontalLayout extends HorizontalLayoutMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <slot></slot>\n      <slot name=\"middle\"></slot>\n      <slot name=\"end\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-horizontal-layout';\n  }\n}\n\ndefineCustomElement(HorizontalLayout);\n\nexport { HorizontalLayout };\n"],
  "mappings": "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",
  "names": []
}
