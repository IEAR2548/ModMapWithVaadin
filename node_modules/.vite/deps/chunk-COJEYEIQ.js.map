{
  "version": 3,
  "sources": ["../../@vaadin/dialog/src/vaadin-dialog-overlay-mixin.js", "../../@vaadin/dialog/src/vaadin-dialog-overlay.js", "../../@vaadin/dialog/src/vaadin-dialog-utils.js", "../../@vaadin/dialog/src/vaadin-dialog-draggable-mixin.js", "../../@vaadin/dialog/src/vaadin-dialog-renderer-mixin.js", "../../@vaadin/dialog/src/vaadin-dialog-resizable-mixin.js", "../../@vaadin/dialog/src/vaadin-dialog.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes OverlayMixin\r\n */\r\nexport const DialogOverlayMixin = (superClass) =>\r\n  class DialogOverlayMixin extends OverlayMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * String used for rendering a dialog title.\r\n         */\r\n        headerTitle: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the dialog header.\r\n         */\r\n        headerRenderer: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the dialog footer.\r\n         */\r\n        footerRenderer: {\r\n          type: Object,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '_headerFooterRendererChange(headerRenderer, footerRenderer, opened)',\r\n        '_headerTitleChanged(headerTitle, opened)',\r\n      ];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      // Update overflow attribute on resize\r\n      this.__resizeObserver = new ResizeObserver(() => {\r\n        this.__updateOverflow();\r\n      });\r\n      this.__resizeObserver.observe(this.$.resizerContainer);\r\n\r\n      // Update overflow attribute on scroll\r\n      this.$.content.addEventListener('scroll', () => {\r\n        this.__updateOverflow();\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __createContainer(slot) {\r\n      const container = document.createElement('div');\r\n      container.setAttribute('slot', slot);\r\n      return container;\r\n    }\r\n\r\n    /** @private */\r\n    __clearContainer(container) {\r\n      container.innerHTML = '';\r\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\r\n      // When clearing the rendered content, this part needs to be manually disposed of.\r\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\r\n      delete container._$litPart$;\r\n    }\r\n\r\n    /** @private */\r\n    __initContainer(container, slot) {\r\n      if (container) {\r\n        // Reset existing container in case if a new renderer is set.\r\n        this.__clearContainer(container);\r\n      } else {\r\n        // Create the container, but wait to append it until requestContentUpdate is called.\r\n        container = this.__createContainer(slot);\r\n      }\r\n      return container;\r\n    }\r\n\r\n    /** @private */\r\n    _headerFooterRendererChange(headerRenderer, footerRenderer, opened) {\r\n      const headerRendererChanged = this.__oldHeaderRenderer !== headerRenderer;\r\n      this.__oldHeaderRenderer = headerRenderer;\r\n\r\n      const footerRendererChanged = this.__oldFooterRenderer !== footerRenderer;\r\n      this.__oldFooterRenderer = footerRenderer;\r\n\r\n      const openedChanged = this._oldOpenedFooterHeader !== opened;\r\n      this._oldOpenedFooterHeader = opened;\r\n\r\n      // Set attributes here to update styles before detecting content overflow\r\n      this.toggleAttribute('has-header', !!headerRenderer);\r\n      this.toggleAttribute('has-footer', !!footerRenderer);\r\n\r\n      if (headerRendererChanged) {\r\n        if (headerRenderer) {\r\n          this.headerContainer = this.__initContainer(this.headerContainer, 'header-content');\r\n        } else if (this.headerContainer) {\r\n          this.headerContainer.remove();\r\n          this.headerContainer = null;\r\n          this.__updateOverflow();\r\n        }\r\n      }\r\n\r\n      if (footerRendererChanged) {\r\n        if (footerRenderer) {\r\n          this.footerContainer = this.__initContainer(this.footerContainer, 'footer');\r\n        } else if (this.footerContainer) {\r\n          this.footerContainer.remove();\r\n          this.footerContainer = null;\r\n          this.__updateOverflow();\r\n        }\r\n      }\r\n\r\n      if (\r\n        (headerRenderer && (headerRendererChanged || openedChanged)) ||\r\n        (footerRenderer && (footerRendererChanged || openedChanged))\r\n      ) {\r\n        if (opened) {\r\n          this.requestContentUpdate();\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _headerTitleChanged(headerTitle, opened) {\r\n      this.toggleAttribute('has-title', !!headerTitle);\r\n\r\n      if (opened && (headerTitle || this._oldHeaderTitle)) {\r\n        this.requestContentUpdate();\r\n      }\r\n      this._oldHeaderTitle = headerTitle;\r\n    }\r\n\r\n    /** @private */\r\n    _headerTitleRenderer() {\r\n      if (this.headerTitle) {\r\n        if (!this.headerTitleElement) {\r\n          this.headerTitleElement = document.createElement('h2');\r\n          this.headerTitleElement.setAttribute('slot', 'title');\r\n          this.headerTitleElement.classList.add('draggable');\r\n        }\r\n        this.appendChild(this.headerTitleElement);\r\n        this.headerTitleElement.textContent = this.headerTitle;\r\n      } else if (this.headerTitleElement) {\r\n        this.headerTitleElement.remove();\r\n        this.headerTitleElement = null;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    requestContentUpdate() {\r\n      super.requestContentUpdate();\r\n\r\n      if (this.headerContainer) {\r\n        // If a new renderer has been set, make sure to reattach the container\r\n        if (!this.headerContainer.parentElement) {\r\n          this.appendChild(this.headerContainer);\r\n        }\r\n\r\n        if (this.headerRenderer) {\r\n          // Only call header renderer after the container has been initialized\r\n          this.headerRenderer.call(this.owner, this.headerContainer, this.owner);\r\n        }\r\n      }\r\n\r\n      if (this.footerContainer) {\r\n        // If a new renderer has been set, make sure to reattach the container\r\n        if (!this.footerContainer.parentElement) {\r\n          this.appendChild(this.footerContainer);\r\n        }\r\n\r\n        if (this.footerRenderer) {\r\n          // Only call header renderer after the container has been initialized\r\n          this.footerRenderer.call(this.owner, this.footerContainer, this.owner);\r\n        }\r\n      }\r\n\r\n      this._headerTitleRenderer();\r\n\r\n      this.__updateOverflow();\r\n    }\r\n\r\n    /**\r\n     * Updates the coordinates of the overlay.\r\n     * @param {!DialogOverlayBoundsParam} bounds\r\n     * @param {boolean} absolute\r\n     */\r\n    setBounds(bounds, absolute = true) {\r\n      const overlay = this.$.overlay;\r\n      const parsedBounds = { ...bounds };\r\n\r\n      if (absolute && overlay.style.position !== 'absolute') {\r\n        overlay.style.position = 'absolute';\r\n      }\r\n\r\n      Object.keys(parsedBounds).forEach((arg) => {\r\n        if (!isNaN(parsedBounds[arg])) {\r\n          parsedBounds[arg] = `${parsedBounds[arg]}px`;\r\n        }\r\n      });\r\n\r\n      Object.assign(overlay.style, parsedBounds);\r\n    }\r\n\r\n    /**\r\n     * Retrieves the coordinates of the overlay.\r\n     * @return {!DialogOverlayBounds}\r\n     */\r\n    getBounds() {\r\n      const overlayBounds = this.$.overlay.getBoundingClientRect();\r\n      const containerBounds = this.getBoundingClientRect();\r\n      const top = overlayBounds.top - containerBounds.top;\r\n      const left = overlayBounds.left - containerBounds.left;\r\n      const width = overlayBounds.width;\r\n      const height = overlayBounds.height;\r\n      return { top, left, width, height };\r\n    }\r\n\r\n    /** @private */\r\n    __updateOverflow() {\r\n      let overflow = '';\r\n\r\n      // Only set \"overflow\" attribute if the dialog has a header, title or footer.\r\n      // Check for state attributes as extending components might not use renderers.\r\n      if (this.hasAttribute('has-header') || this.hasAttribute('has-footer') || this.headerTitle) {\r\n        const content = this.$.content;\r\n\r\n        if (content.scrollTop > 0) {\r\n          overflow += ' top';\r\n        }\r\n\r\n        if (content.scrollTop < content.scrollHeight - content.clientHeight) {\r\n          overflow += ' bottom';\r\n        }\r\n      }\r\n\r\n      const value = overflow.trim();\r\n      if (value.length > 0 && this.getAttribute('overflow') !== value) {\r\n        this.setAttribute('overflow', value);\r\n      } else if (value.length === 0 && this.hasAttribute('overflow')) {\r\n        this.removeAttribute('overflow');\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { DialogOverlayMixin } from './vaadin-dialog-overlay-mixin.js';\r\nimport { dialogOverlay, resizableOverlay } from './vaadin-dialog-styles.js';\r\n\r\nregisterStyles('vaadin-dialog-overlay', [overlayStyles, dialogOverlay, resizableOverlay], {\r\n  moduleId: 'vaadin-dialog-overlay-styles',\r\n});\r\n\r\n/**\r\n * An element used internally by `<vaadin-dialog>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes DialogOverlayMixin\r\n * @mixes DirMixin\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nexport class DialogOverlay extends DialogOverlayMixin(DirMixin(ThemableMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-dialog-overlay';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\r\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\r\n        <section id=\"resizerContainer\" class=\"resizer-container\">\r\n          <header part=\"header\">\r\n            <div part=\"title\"><slot name=\"title\"></slot></div>\r\n            <div part=\"header-content\"><slot name=\"header-content\"></slot></div>\r\n          </header>\r\n          <div part=\"content\" id=\"content\"><slot></slot></div>\r\n          <footer part=\"footer\"><slot name=\"footer\"></slot></footer>\r\n        </section>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(DialogOverlay);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * Checks if the argument is a touch event and if so, returns a first touch.\r\n * Otherwise, if the mouse event was passed, returns it as is.\r\n * @param {!MouseEvent | !TouchEvent} e\r\n * @return {!MouseEvent | !Touch}\r\n * @protected\r\n */\r\nexport function getMouseOrFirstTouchEvent(e) {\r\n  return e.touches ? e.touches[0] : e;\r\n}\r\n\r\n/**\r\n * Checks whether a mouse or touch event is in window.\r\n * @param {!MouseEvent | !TouchEvent} e\r\n * @return {boolean}\r\n * @protected\r\n */\r\nexport function eventInWindow(e) {\r\n  return e.clientX >= 0 && e.clientX <= window.innerWidth && e.clientY >= 0 && e.clientY <= window.innerHeight;\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\r\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const DialogDraggableMixin = (superClass) =>\r\n  class VaadinDialogDraggableMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Set to true to enable repositioning the dialog by clicking and dragging.\r\n         *\r\n         * By default, only the overlay area can be used to drag the element. But,\r\n         * a child element can be marked as a draggable area by adding a\r\n         * \"`draggable`\" class to it, this will by default make all of its children draggable also.\r\n         * If you want a child element to be draggable\r\n         * but still have its children non-draggable (by default), mark it with\r\n         * \"`draggable-leaf-only`\" class name.\r\n         *\r\n         * @type {boolean}\r\n         */\r\n        draggable: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /** @private */\r\n        _touchDevice: {\r\n          type: Boolean,\r\n          value: isTouch,\r\n        },\r\n\r\n        /* TODO: Expose as a public property (check naming) */\r\n        __dragHandleClassName: {\r\n          type: String,\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this._originalBounds = {};\r\n      this._originalMouseCoords = {};\r\n      this._startDrag = this._startDrag.bind(this);\r\n      this._drag = this._drag.bind(this);\r\n      this._stopDrag = this._stopDrag.bind(this);\r\n\r\n      this.$.overlay.$.overlay.addEventListener('mousedown', this._startDrag);\r\n      this.$.overlay.$.overlay.addEventListener('touchstart', this._startDrag);\r\n    }\r\n\r\n    /** @private */\r\n    _startDrag(e) {\r\n      // Don't initiate when there's more than 1 touch (pinch zoom)\r\n      if (e.type === 'touchstart' && e.touches.length > 1) {\r\n        return;\r\n      }\r\n\r\n      if (this.draggable && (e.button === 0 || e.touches)) {\r\n        const resizerContainer = this.$.overlay.$.resizerContainer;\r\n        const isResizerContainer = e.target === resizerContainer;\r\n        const isResizerContainerScrollbar =\r\n          e.offsetX > resizerContainer.clientWidth || e.offsetY > resizerContainer.clientHeight;\r\n        const isContentPart = e.target === this.$.overlay.$.content;\r\n\r\n        const isDraggable = e.composedPath().some((node, index) => {\r\n          if (!node.classList) {\r\n            return false;\r\n          }\r\n\r\n          const isDraggableNode = node.classList.contains(this.__dragHandleClassName || 'draggable');\r\n          const isDraggableLeafOnly = node.classList.contains('draggable-leaf-only');\r\n          const isLeafNode = index === 0;\r\n          return (isDraggableLeafOnly && isLeafNode) || (isDraggableNode && (!isDraggableLeafOnly || isLeafNode));\r\n        });\r\n\r\n        if ((isResizerContainer && !isResizerContainerScrollbar) || isContentPart || isDraggable) {\r\n          if (!isDraggable) {\r\n            e.preventDefault();\r\n          }\r\n          this._originalBounds = this.$.overlay.getBounds();\r\n          const event = getMouseOrFirstTouchEvent(e);\r\n          this._originalMouseCoords = { top: event.pageY, left: event.pageX };\r\n          window.addEventListener('mouseup', this._stopDrag);\r\n          window.addEventListener('touchend', this._stopDrag);\r\n          window.addEventListener('mousemove', this._drag);\r\n          window.addEventListener('touchmove', this._drag);\r\n          if (this.$.overlay.$.overlay.style.position !== 'absolute') {\r\n            const { top, left } = this._originalBounds;\r\n            this.$.overlay.setBounds({ top, left });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _drag(e) {\r\n      const event = getMouseOrFirstTouchEvent(e);\r\n      if (eventInWindow(event)) {\r\n        const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\r\n        const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\r\n        this.top = top;\r\n        this.left = left;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _stopDrag() {\r\n      this.dispatchEvent(\r\n        new CustomEvent('dragged', { bubbles: true, composed: true, detail: { top: this.top, left: this.left } }),\r\n      );\r\n      window.removeEventListener('mouseup', this._stopDrag);\r\n      window.removeEventListener('touchend', this._stopDrag);\r\n      window.removeEventListener('mousemove', this._drag);\r\n      window.removeEventListener('touchmove', this._drag);\r\n    }\r\n\r\n    /**\r\n     * Fired when the dialog drag is finished.\r\n     *\r\n     * @event dragged\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const DialogRendererMixin = (superClass) =>\r\n  class DialogRendererMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Custom function for rendering the content of the dialog.\r\n         * Receives two arguments:\r\n         *\r\n         * - `root` The root container DOM element. Append your content to it.\r\n         * - `dialog` The reference to the `<vaadin-dialog>` element.\r\n         * @type {DialogRenderer | undefined}\r\n         */\r\n        renderer: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * String used for rendering a dialog title.\r\n         *\r\n         * If both `headerTitle` and `headerRenderer` are defined, the title\r\n         * and the elements created by the renderer will be placed next to\r\n         * each other, with the title coming first.\r\n         *\r\n         * When `headerTitle` is set, the attribute `has-title` is added to the overlay element.\r\n         * @attr {string} header-title\r\n         */\r\n        headerTitle: String,\r\n\r\n        /**\r\n         * Custom function for rendering the dialog header.\r\n         * Receives two arguments:\r\n         *\r\n         * - `root` The root container DOM element. Append your content to it.\r\n         * - `dialog` The reference to the `<vaadin-dialog>` element.\r\n         *\r\n         * If both `headerTitle` and `headerRenderer` are defined, the title\r\n         * and the elements created by the renderer will be placed next to\r\n         * each other, with the title coming first.\r\n         *\r\n         * When `headerRenderer` is set, the attribute `has-header` is added to the overlay element.\r\n         * @type {DialogRenderer | undefined}\r\n         */\r\n        headerRenderer: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the dialog footer.\r\n         * Receives two arguments:\r\n         *\r\n         * - `root` The root container DOM element. Append your content to it.\r\n         * - `dialog` The reference to the `<vaadin-dialog>` element.\r\n         *\r\n         * When `footerRenderer` is set, the attribute `has-footer` is added to the overlay element.\r\n         * @type {DialogRenderer | undefined}\r\n         */\r\n        footerRenderer: {\r\n          type: Object,\r\n        },\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Requests an update for the content of the dialog.\r\n     * While performing the update, it invokes the renderer passed in the `renderer` property,\r\n     * as well as `headerRender` and `footerRenderer` properties, if these are defined.\r\n     *\r\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n     */\r\n    requestContentUpdate() {\r\n      if (this._overlayElement) {\r\n        this._overlayElement.requestContentUpdate();\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { eventInWindow, getMouseOrFirstTouchEvent } from './vaadin-dialog-utils.js';\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const DialogResizableMixin = (superClass) =>\r\n  class VaadinDialogResizableMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Set to true to enable resizing the dialog by dragging the corners and edges.\r\n         * @type {boolean}\r\n         */\r\n        resizable: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this._originalBounds = {};\r\n      this._originalMouseCoords = {};\r\n      this._resizeListeners = { start: {}, resize: {}, stop: {} };\r\n      this._addResizeListeners();\r\n    }\r\n\r\n    /** @private */\r\n    _addResizeListeners() {\r\n      // Note: edge controls added before corners\r\n      ['n', 'e', 's', 'w', 'nw', 'ne', 'se', 'sw'].forEach((direction) => {\r\n        const resizer = document.createElement('div');\r\n        this._resizeListeners.start[direction] = (e) => this._startResize(e, direction);\r\n        this._resizeListeners.resize[direction] = (e) => this._resize(e, direction);\r\n        this._resizeListeners.stop[direction] = () => this._stopResize(direction);\r\n        if (direction.length === 1) {\r\n          resizer.classList.add('edge');\r\n        }\r\n        resizer.classList.add('resizer');\r\n        resizer.classList.add(direction);\r\n        resizer.addEventListener('mousedown', this._resizeListeners.start[direction]);\r\n        resizer.addEventListener('touchstart', this._resizeListeners.start[direction]);\r\n        this.$.overlay.$.resizerContainer.appendChild(resizer);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {!MouseEvent | !TouchEvent} e\r\n     * @param {!DialogResizableDirection} direction\r\n     * @protected\r\n     */\r\n    _startResize(e, direction) {\r\n      // Don't initiate when there's more than 1 touch (pinch zoom)\r\n      if (e.type === 'touchstart' && e.touches.length > 1) {\r\n        return;\r\n      }\r\n\r\n      if (e.button === 0 || e.touches) {\r\n        e.preventDefault();\r\n\r\n        this._originalBounds = this.$.overlay.getBounds();\r\n        const event = getMouseOrFirstTouchEvent(e);\r\n        this._originalMouseCoords = { top: event.pageY, left: event.pageX };\r\n        window.addEventListener('mousemove', this._resizeListeners.resize[direction]);\r\n        window.addEventListener('touchmove', this._resizeListeners.resize[direction]);\r\n        window.addEventListener('mouseup', this._resizeListeners.stop[direction]);\r\n        window.addEventListener('touchend', this._resizeListeners.stop[direction]);\r\n        if (this.$.overlay.$.overlay.style.position !== 'absolute' || this.width || this.height) {\r\n          this.$.overlay.setBounds(this._originalBounds);\r\n        }\r\n\r\n        this.$.overlay.setAttribute('has-bounds-set', '');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!MouseEvent | !TouchEvent} e\r\n     * @param {!DialogResizableDirection} resizer\r\n     * @protected\r\n     */\r\n    _resize(e, resizer) {\r\n      const event = getMouseOrFirstTouchEvent(e);\r\n      if (eventInWindow(event)) {\r\n        const minimumSize = 40;\r\n        resizer.split('').forEach((direction) => {\r\n          switch (direction) {\r\n            case 'n': {\r\n              const height = this._originalBounds.height - (event.pageY - this._originalMouseCoords.top);\r\n              const top = this._originalBounds.top + (event.pageY - this._originalMouseCoords.top);\r\n              if (height > minimumSize) {\r\n                this.top = top;\r\n                this.height = height;\r\n              }\r\n              break;\r\n            }\r\n            case 'e': {\r\n              const width = this._originalBounds.width + (event.pageX - this._originalMouseCoords.left);\r\n              if (width > minimumSize) {\r\n                this.width = width;\r\n              }\r\n              break;\r\n            }\r\n            case 's': {\r\n              const height = this._originalBounds.height + (event.pageY - this._originalMouseCoords.top);\r\n              if (height > minimumSize) {\r\n                this.height = height;\r\n              }\r\n              break;\r\n            }\r\n            case 'w': {\r\n              const width = this._originalBounds.width - (event.pageX - this._originalMouseCoords.left);\r\n              const left = this._originalBounds.left + (event.pageX - this._originalMouseCoords.left);\r\n              if (width > minimumSize) {\r\n                this.left = left;\r\n                this.width = width;\r\n              }\r\n              break;\r\n            }\r\n            default:\r\n              break;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!DialogResizableDirection} direction\r\n     * @protected\r\n     */\r\n    _stopResize(direction) {\r\n      window.removeEventListener('mousemove', this._resizeListeners.resize[direction]);\r\n      window.removeEventListener('touchmove', this._resizeListeners.resize[direction]);\r\n      window.removeEventListener('mouseup', this._resizeListeners.stop[direction]);\r\n      window.removeEventListener('touchend', this._resizeListeners.stop[direction]);\r\n      this.dispatchEvent(new CustomEvent('resize', { detail: this._getResizeDimensions() }));\r\n    }\r\n\r\n    /**\r\n     * @return {!DialogResizeDimensions}\r\n     * @protected\r\n     */\r\n    _getResizeDimensions() {\r\n      const scrollPosition = this.$.overlay.$.resizerContainer.scrollTop;\r\n      const { width, height, top, left } = getComputedStyle(this.$.overlay.$.overlay);\r\n      const content = this.$.overlay.$.content;\r\n      content.setAttribute(\r\n        'style',\r\n        'position: absolute; top: 0; right: 0; bottom: 0; left: 0; box-sizing: content-box; height: auto;',\r\n      );\r\n      const { width: contentWidth, height: contentHeight } = getComputedStyle(content);\r\n      content.removeAttribute('style');\r\n      this.$.overlay.$.resizerContainer.scrollTop = scrollPosition;\r\n      return { width, height, contentWidth, contentHeight, top, left };\r\n    }\r\n\r\n    /**\r\n     * Fired when the dialog resize is finished.\r\n     *\r\n     * @event resize\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-dialog-overlay.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\r\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\r\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\r\nimport { DialogBaseMixin } from './vaadin-dialog-base-mixin.js';\r\nimport { DialogDraggableMixin } from './vaadin-dialog-draggable-mixin.js';\r\nimport { DialogRendererMixin } from './vaadin-dialog-renderer-mixin.js';\r\nimport { DialogResizableMixin } from './vaadin-dialog-resizable-mixin.js';\r\n\r\nexport { DialogOverlay } from './vaadin-dialog-overlay.js';\r\n\r\n/**\r\n * `<vaadin-dialog>` is a Web Component for creating customized modal dialogs.\r\n *\r\n * ### Rendering\r\n *\r\n * The content of the dialog can be populated by using the renderer callback function.\r\n *\r\n * The renderer function provides `root`, `dialog` arguments.\r\n * Generate DOM content, append it to the `root` element and control the state\r\n * of the host element by accessing `dialog`. Before generating new content,\r\n * users are able to check if there is already content in `root` for reusing it.\r\n *\r\n * ```html\r\n * <vaadin-dialog id=\"dialog\"></vaadin-dialog>\r\n * ```\r\n * ```js\r\n * const dialog = document.querySelector('#dialog');\r\n * dialog.renderer = function(root, dialog) {\r\n *   root.textContent = \"Sample dialog\";\r\n * };\r\n * ```\r\n *\r\n * Renderer is called on the opening of the dialog.\r\n * DOM generated during the renderer call can be reused\r\n * in the next renderer call and will be provided with the `root` argument.\r\n * On first call it will be empty.\r\n *\r\n * ### Styling\r\n *\r\n * `<vaadin-dialog>` uses `<vaadin-dialog-overlay>` internal\r\n * themable component as the actual visible dialog overlay.\r\n *\r\n * See [`<vaadin-overlay>`](#/elements/vaadin-overlay) documentation.\r\n * for `<vaadin-dialog-overlay>` parts.\r\n *\r\n * In addition to `<vaadin-overlay>` parts, the following parts are available for styling:\r\n *\r\n * Part name        | Description\r\n * -----------------|-------------------------------------------\r\n * `header`         | Element wrapping title and header content\r\n * `header-content` | Element wrapping the header content slot\r\n * `title`          | Element wrapping the title slot\r\n * `footer`         | Element wrapping the footer slot\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute        | Description\r\n * -----------------|--------------------------------------------\r\n * `has-title`      | Set when the element has a title\r\n * `has-header`     | Set when the element has header renderer\r\n * `has-footer`     | Set when the element has footer renderer\r\n * `overflow`       | Set to `top`, `bottom`, none or both\r\n *\r\n * Note: the `theme` attribute value set on `<vaadin-dialog>` is\r\n * propagated to the internal `<vaadin-dialog-overlay>` component.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} resize - Fired when the dialog resize is finished.\r\n * @fires {CustomEvent} dragged - Fired when the dialog drag is finished.\r\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\r\n * @fires {CustomEvent} closed - Fired when the dialog is closed.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemePropertyMixin\r\n * @mixes ElementMixin\r\n * @mixes DialogBaseMixin\r\n * @mixes DialogDraggableMixin\r\n * @mixes DialogRendererMixin\r\n * @mixes DialogResizableMixin\r\n * @mixes OverlayClassMixin\r\n */\r\nclass Dialog extends DialogDraggableMixin(\r\n  DialogResizableMixin(\r\n    DialogRendererMixin(DialogBaseMixin(OverlayClassMixin(ThemePropertyMixin(ElementMixin(PolymerElement))))),\r\n  ),\r\n) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: none !important;\r\n        }\r\n      </style>\r\n\r\n      <vaadin-dialog-overlay\r\n        id=\"overlay\"\r\n        role$=\"[[overlayRole]]\"\r\n        header-title=\"[[headerTitle]]\"\r\n        on-opened-changed=\"_onOverlayOpened\"\r\n        on-mousedown=\"_bringOverlayToFront\"\r\n        on-touchstart=\"_bringOverlayToFront\"\r\n        theme$=\"[[_theme]]\"\r\n        modeless=\"[[modeless]]\"\r\n        with-backdrop=\"[[!modeless]]\"\r\n        resizable$=\"[[resizable]]\"\r\n        restore-focus-on-close\r\n        focus-trap\r\n      ></vaadin-dialog-overlay>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-dialog';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * Set the `aria-label` attribute for assistive technologies like\r\n       * screen readers. An empty string value for this property (the\r\n       * default) means that the `aria-label` attribute is not present.\r\n       */\r\n      ariaLabel: {\r\n        type: String,\r\n        value: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  static get observers() {\r\n    return [\r\n      '_openedChanged(opened)',\r\n      '_ariaLabelChanged(ariaLabel, headerTitle)',\r\n      '_rendererChanged(renderer, headerRenderer, footerRenderer)',\r\n    ];\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    processTemplates(this);\r\n  }\r\n\r\n  /** @private */\r\n  _rendererChanged(renderer, headerRenderer, footerRenderer) {\r\n    this.$.overlay.setProperties({ owner: this, renderer, headerRenderer, footerRenderer });\r\n  }\r\n\r\n  /** @private */\r\n  _openedChanged(opened) {\r\n    this.$.overlay.opened = opened;\r\n  }\r\n\r\n  /** @private */\r\n  _ariaLabelChanged(ariaLabel, headerTitle) {\r\n    if (ariaLabel || headerTitle) {\r\n      this.$.overlay.setAttribute('aria-label', ariaLabel || headerTitle);\r\n    } else {\r\n      this.$.overlay.removeAttribute('aria-label');\r\n    }\r\n  }\r\n}\r\n\r\ndefineCustomElement(Dialog);\r\n\r\nexport { Dialog };\r\n"],
  "mappings": "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",
  "names": []
}
