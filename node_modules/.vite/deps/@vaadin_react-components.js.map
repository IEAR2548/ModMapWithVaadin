{
  "version": 3,
  "sources": ["../../@vaadin/react-components/src/AccordionHeading.ts", "../../@vaadin/react-components/src/generated/AccordionHeading.ts", "../../@lit/react/src/create-component.ts", "../../@vaadin/react-components/src/utils/createComponent.ts", "../../@vaadin/react-components/src/AccordionPanel.ts", "../../@vaadin/react-components/src/generated/AccordionPanel.ts", "../../@vaadin/react-components/src/Accordion.ts", "../../@vaadin/react-components/src/generated/Accordion.ts", "../../@vaadin/react-components/src/AppLayout.ts", "../../@vaadin/react-components/src/generated/AppLayout.ts", "../../@vaadin/react-components/src/DrawerToggle.ts", "../../@vaadin/react-components/src/generated/DrawerToggle.ts", "../../@vaadin/react-components/src/Avatar.ts", "../../@vaadin/react-components/src/generated/Avatar.ts", "../../@vaadin/react-components/src/AvatarGroup.ts", "../../@vaadin/react-components/src/generated/AvatarGroup.ts", "../../@vaadin/react-components/src/Button.ts", "../../@vaadin/react-components/src/generated/Button.ts", "../../@vaadin/card/theme/lumo/vaadin-card-styles.js", "../../@vaadin/card/src/vaadin-card.js", "../../@vaadin/react-components/src/Card.ts", "../../@vaadin/react-components/src/generated/Card.ts", "../../@vaadin/react-components/src/Checkbox.ts", "../../@vaadin/react-components/src/generated/Checkbox.ts", "../../@vaadin/react-components/src/CheckboxGroup.ts", "../../@vaadin/react-components/src/generated/CheckboxGroup.ts", "../../@vaadin/combo-box/src/vaadin-combo-box-light-mixin.js", "../../@vaadin/combo-box/src/vaadin-combo-box-light.js", "../../@vaadin/react-components/src/ComboBoxLight.tsx", "../../@vaadin/react-components/src/generated/ComboBoxLight.ts", "../../@vaadin/react-components/src/renderers/useRenderer.ts", "../../@vaadin/react-components/src/utils/flushMicrotask.ts", "../../@vaadin/react-components/src/renderers/useModelRenderer.ts", "../../@vaadin/react-components/src/ComboBox.tsx", "../../@vaadin/react-components/src/generated/ComboBox.ts", "../../@vaadin/react-components/src/ConfirmDialog.ts", "../../@vaadin/react-components/src/generated/ConfirmDialog.ts", "../../@vaadin/react-components/src/ContextMenu.tsx", "../../@vaadin/react-components/src/generated/ContextMenu.ts", "../../@vaadin/react-components/src/renderers/useContextRenderer.ts", "../../@vaadin/react-components/src/utils/mapItemsWithComponents.ts", "../../@vaadin/react-components/src/CustomField.ts", "../../@vaadin/react-components/src/generated/CustomField.ts", "../../@vaadin/date-picker/src/vaadin-date-picker-light.js", "../../@vaadin/react-components/src/DatePickerLight.ts", "../../@vaadin/react-components/src/generated/DatePickerLight.ts", "../../@vaadin/react-components/src/DatePicker.ts", "../../@vaadin/react-components/src/generated/DatePicker.ts", "../../@vaadin/react-components/src/DateTimePicker.tsx", "../../@vaadin/react-components/src/generated/DateTimePicker.ts", "../../@vaadin/react-components/src/utils/createComponentWithOrderedProps.ts", "../../@vaadin/react-components/src/DetailsSummary.ts", "../../@vaadin/react-components/src/generated/DetailsSummary.ts", "../../@vaadin/react-components/src/Details.ts", "../../@vaadin/react-components/src/generated/Details.ts", "../../@vaadin/react-components/src/Dialog.tsx", "../../@vaadin/react-components/src/generated/Dialog.ts", "../../@vaadin/react-components/src/renderers/useSimpleRenderer.ts", "../../@vaadin/react-components/src/renderers/useSimpleOrChildrenRenderer.ts", "../../@vaadin/react-components/src/EmailField.ts", "../../@vaadin/react-components/src/generated/EmailField.ts", "../../@vaadin/react-components/src/FormItem.ts", "../../@vaadin/react-components/src/generated/FormItem.ts", "../../@vaadin/react-components/src/FormLayout.ts", "../../@vaadin/react-components/src/generated/FormLayout.ts", "../../@vaadin/react-components/src/GridColumnGroup.tsx", "../../@vaadin/react-components/src/generated/GridColumnGroup.ts", "../../@vaadin/react-components/src/GridColumn.tsx", "../../@vaadin/react-components/src/generated/GridColumn.ts", "../../@vaadin/react-components/src/GridFilter.ts", "../../@vaadin/react-components/src/generated/GridFilter.ts", "../../@vaadin/grid/src/vaadin-grid-filter-column-mixin.js", "../../@vaadin/grid/src/vaadin-grid-filter-column.js", "../../@vaadin/react-components/src/GridFilterColumn.tsx", "../../@vaadin/react-components/src/generated/GridFilterColumn.ts", "../../@vaadin/grid/src/vaadin-grid-selection-column-mixin.js", "../../@vaadin/grid/src/vaadin-grid-selection-column.js", "../../@vaadin/react-components/src/GridSelectionColumn.tsx", "../../@vaadin/react-components/src/generated/GridSelectionColumn.ts", "../../@vaadin/react-components/src/GridSorter.ts", "../../@vaadin/react-components/src/generated/GridSorter.ts", "../../@vaadin/grid/src/vaadin-grid-sort-column-mixin.js", "../../@vaadin/grid/src/vaadin-grid-sort-column.js", "../../@vaadin/react-components/src/GridSortColumn.tsx", "../../@vaadin/react-components/src/generated/GridSortColumn.ts", "../../@vaadin/react-components/src/GridTreeToggle.ts", "../../@vaadin/react-components/src/generated/GridTreeToggle.ts", "../../@vaadin/react-components/src/GridTreeColumn.tsx", "../../@vaadin/react-components/src/generated/GridTreeColumn.ts", "../../@vaadin/react-components/src/Grid.tsx", "../../@vaadin/react-components/src/generated/Grid.ts", "../../@vaadin/react-components/src/utils/useMergedRefs.ts", "../../@vaadin/react-components/src/HorizontalLayout.ts", "../../@vaadin/react-components/src/generated/HorizontalLayout.ts", "../../@vaadin/react-components/src/Iconset.ts", "../../@vaadin/react-components/src/generated/Iconset.ts", "../../@vaadin/react-components/src/Icon.ts", "../../@vaadin/react-components/src/generated/Icon.ts", "../../@vaadin/react-components/src/IntegerField.ts", "../../@vaadin/react-components/src/generated/IntegerField.ts", "../../@vaadin/react-components/src/Item.ts", "../../@vaadin/react-components/src/generated/Item.ts", "../../@vaadin/react-components/src/ListBox.ts", "../../@vaadin/react-components/src/generated/ListBox.ts", "../../@vaadin/react-components/src/LoginForm.ts", "../../@vaadin/react-components/src/generated/LoginForm.ts", "../../@vaadin/react-components/src/LoginOverlay.ts", "../../@vaadin/react-components/src/generated/LoginOverlay.ts", "../../@vaadin/react-components/src/MenuBar.tsx", "../../@vaadin/react-components/src/generated/MenuBar.ts", "../../@vaadin/react-components/src/MessageInput.ts", "../../@vaadin/react-components/src/generated/MessageInput.ts", "../../@vaadin/react-components/src/Message.ts", "../../@vaadin/react-components/src/generated/Message.ts", "../../@vaadin/react-components/src/MessageList.ts", "../../@vaadin/react-components/src/generated/MessageList.ts", "../../@vaadin/react-components/src/MultiSelectComboBox.tsx", "../../@vaadin/react-components/src/generated/MultiSelectComboBox.ts", "../../@vaadin/react-components/src/Notification.tsx", "../../@vaadin/react-components/src/generated/Notification.ts", "../../@vaadin/react-components/src/NumberField.ts", "../../@vaadin/react-components/src/generated/NumberField.ts", "../../@vaadin/react-components/src/PasswordField.ts", "../../@vaadin/react-components/src/generated/PasswordField.ts", "../../@vaadin/react-components/src/Popover.tsx", "../../@vaadin/react-components/src/generated/Popover.ts", "../../@vaadin/react-components/src/ProgressBar.ts", "../../@vaadin/react-components/src/generated/ProgressBar.ts", "../../@vaadin/react-components/src/RadioButton.ts", "../../@vaadin/react-components/src/generated/RadioButton.ts", "../../@vaadin/react-components/src/RadioGroup.ts", "../../@vaadin/react-components/src/generated/RadioGroup.ts", "../../@vaadin/react-components/src/Scroller.ts", "../../@vaadin/react-components/src/generated/Scroller.ts", "../../@vaadin/react-components/src/Select.tsx", "../../@vaadin/react-components/src/generated/Select.ts", "../../@vaadin/react-components/src/SideNavItem.ts", "../../@vaadin/react-components/src/generated/SideNavItem.ts", "../../@vaadin/react-components/src/SideNav.ts", "../../@vaadin/react-components/src/generated/SideNav.ts", "../../@vaadin/react-components/src/SplitLayout.ts", "../../@vaadin/react-components/src/generated/SplitLayout.ts", "../../@vaadin/tabs/vaadin-tab.js", "../../@vaadin/react-components/src/Tab.ts", "../../@vaadin/react-components/src/generated/Tab.ts", "../../@vaadin/tabs/vaadin-tabs.js", "../../@vaadin/react-components/src/Tabs.ts", "../../@vaadin/react-components/src/generated/Tabs.ts", "../../@vaadin/react-components/src/TabSheet.tsx", "../../@vaadin/react-components/src/Tab.ts", "../../@vaadin/react-components/src/generated/Tab.ts", "../../@vaadin/react-components/src/generated/TabSheet.ts", "../../@vaadin/react-components/src/Tabs.ts", "../../@vaadin/react-components/src/generated/Tabs.ts", "../../@vaadin/react-components/src/TextArea.ts", "../../@vaadin/react-components/src/generated/TextArea.ts", "../../@vaadin/react-components/src/TextField.ts", "../../@vaadin/react-components/src/generated/TextField.ts", "../../@vaadin/react-components/src/TimePicker.tsx", "../../@vaadin/react-components/src/generated/TimePicker.ts", "../../@vaadin/react-components/src/Tooltip.ts", "../../@vaadin/react-components/src/generated/Tooltip.ts", "../../@vaadin/react-components/src/Upload.ts", "../../@vaadin/react-components/src/generated/Upload.ts", "../../@vaadin/react-components/src/VerticalLayout.ts", "../../@vaadin/react-components/src/generated/VerticalLayout.ts", "../../@vaadin/react-components/src/VirtualList.tsx", "../../@vaadin/react-components/src/generated/VirtualList.ts"],
  "sourcesContent": ["export * from \"@vaadin/accordion/vaadin-accordion-heading.js\";\nexport * from './generated/AccordionHeading.js';\n", "import type {} from \"@lit/react\";\nimport { AccordionHeading as AccordionHeadingElement, } from \"@vaadin/accordion/vaadin-accordion-heading.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AccordionHeadingElement, };\nexport type AccordionHeadingEventMap = Readonly<{}>;\nconst events = {} as AccordionHeadingEventMap;\nexport type AccordionHeadingProps = WebComponentProps<AccordionHeadingElement, AccordionHeadingEventMap>;\nexport const AccordionHeading = createComponent({\n    elementClass: AccordionHeadingElement, events, react: React, tagName: \"vaadin-accordion-heading\"\n});\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport type React from 'react';\n\nconst NODE_MODE = false;\nconst DEV_MODE = true;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype DistributiveOmit<T, K extends string | number | symbol> = T extends any\n  ? K extends keyof T\n    ? Omit<T, K>\n    : T\n  : T;\ntype PropsWithoutRef<T> = DistributiveOmit<T, 'ref'>;\n\n/**\n * Creates a type to be used for the props of a web component used directly in\n * React JSX.\n *\n * Example:\n *\n * ```ts\n * declare module \"react\" {\n *   namespace JSX {\n *     interface IntrinsicElements {\n *       'x-foo': WebComponentProps<XFoo>;\n *     }\n *   }\n * }\n * ```\n */\nexport type WebComponentProps<I extends HTMLElement> = React.DetailedHTMLProps<\n  React.HTMLAttributes<I>,\n  I\n> &\n  ElementProps<I>;\n\n/**\n * Type of the React component wrapping the web component. This is the return\n * type of `createComponent`.\n */\nexport type ReactWebComponent<\n  I extends HTMLElement,\n  E extends EventNames = {},\n> = React.ForwardRefExoticComponent<\n  // TODO(augustjk): Remove and use `React.PropsWithoutRef` when\n  // https://github.com/preactjs/preact/issues/4124 is fixed.\n  PropsWithoutRef<ComponentProps<I, E>> & React.RefAttributes<I>\n>;\n\n// Props derived from custom element class. Currently has limitations of making\n// all properties optional and also surfaces life cycle methods in autocomplete.\n// TODO(augustjk) Consider omitting keyof LitElement to remove \"internal\"\n// lifecycle methods or allow user to explicitly provide props.\ntype ElementProps<I> = Partial<Omit<I, keyof HTMLElement>>;\n\n// Acceptable props to the React component.\ntype ComponentProps<I, E extends EventNames = {}> = Omit<\n  React.HTMLAttributes<I>,\n  // Prefer type of provided event handler props or those on element over\n  // built-in HTMLAttributes\n  keyof E | keyof ElementProps<I>\n> &\n  EventListeners<E> &\n  ElementProps<I>;\n\n/**\n * Type used to cast an event name with an event type when providing the\n * `events` option to `createComponent` for better typing of the event handler\n * prop.\n *\n * Example:\n *\n * ```ts\n * const FooComponent = createComponent({\n *   ...\n *   events: {\n *     onfoo: 'foo' as EventName<FooEvent>,\n *   }\n * });\n * ```\n *\n * `onfoo` prop will have the type `(e: FooEvent) => void`.\n */\nexport type EventName<T extends Event = Event> = string & {\n  __eventType: T;\n};\n\n// A key value map matching React prop names to event names.\ntype EventNames = Record<string, EventName | string>;\n\n// A map of expected event listener types based on EventNames.\ntype EventListeners<R extends EventNames> = {\n  [K in keyof R]?: R[K] extends EventName\n    ? (e: R[K]['__eventType']) => void\n    : (e: Event) => void;\n};\n\nexport interface Options<I extends HTMLElement, E extends EventNames = {}> {\n  react: typeof React;\n  tagName: string;\n  elementClass: Constructor<I>;\n  events?: E;\n  displayName?: string;\n}\n\ntype Constructor<T> = {new (): T};\n\nconst reservedReactProperties = new Set([\n  'children',\n  'localName',\n  'ref',\n  'style',\n  'className',\n]);\n\nconst listenedEvents = new WeakMap<Element, Map<string, EventListenerObject>>();\n\n/**\n * Adds an event listener for the specified event to the given node. In the\n * React setup, there should only ever be one event listener. Thus, for\n * efficiency only one listener is added and the handler for that listener is\n * updated to point to the given listener function.\n */\nconst addOrUpdateEventListener = (\n  node: Element,\n  event: string,\n  listener: (event?: Event) => void\n) => {\n  let events = listenedEvents.get(node);\n  if (events === undefined) {\n    listenedEvents.set(node, (events = new Map()));\n  }\n  let handler = events.get(event);\n  if (listener !== undefined) {\n    // If necessary, add listener and track handler\n    if (handler === undefined) {\n      events.set(event, (handler = {handleEvent: listener}));\n      node.addEventListener(event, handler);\n      // Otherwise just update the listener with new value\n    } else {\n      handler.handleEvent = listener;\n    }\n    // Remove listener if one exists and value is undefined\n  } else if (handler !== undefined) {\n    events.delete(event);\n    node.removeEventListener(event, handler);\n  }\n};\n\n/**\n * Sets properties and events on custom elements. These properties and events\n * have been pre-filtered so we know they should apply to the custom element.\n */\nconst setProperty = <E extends Element>(\n  node: E,\n  name: string,\n  value: unknown,\n  old: unknown,\n  events?: EventNames\n) => {\n  const event = events?.[name];\n  // Dirty check event value.\n  if (event !== undefined) {\n    if (value !== old) {\n      addOrUpdateEventListener(node, event, value as (e?: Event) => void);\n    }\n    return;\n  }\n  // But don't dirty check properties; elements are assumed to do this.\n  node[name as keyof E] = value as E[keyof E];\n\n  // This block is to replicate React's behavior for attributes of native\n  // elements where `undefined` or `null` values result in attributes being\n  // removed.\n  // https://github.com/facebook/react/blob/899cb95f52cc83ab5ca1eb1e268c909d3f0961e7/packages/react-dom-bindings/src/client/DOMPropertyOperations.js#L107-L141\n  //\n  // It's only needed here for native HTMLElement properties that reflect\n  // attributes of the same name but don't have that behavior like \"id\" or\n  // \"draggable\".\n  if (\n    (value === undefined || value === null) &&\n    name in HTMLElement.prototype\n  ) {\n    node.removeAttribute(name);\n  }\n};\n\n/**\n * Creates a React component for a custom element. Properties are distinguished\n * from attributes automatically, and events can be configured so they are added\n * to the custom element as event listeners.\n *\n * @param options An options bag containing the parameters needed to generate a\n * wrapped web component.\n *\n * @param options.react The React module, typically imported from the `react`\n * npm package.\n * @param options.tagName The custom element tag name registered via\n * `customElements.define`.\n * @param options.elementClass The custom element class registered via\n * `customElements.define`.\n * @param options.events An object listing events to which the component can\n * listen. The object keys are the event property names passed in via React\n * props and the object values are the names of the corresponding events\n * generated by the custom element. For example, given `{onactivate:\n * 'activate'}` an event function may be passed via the component's `onactivate`\n * prop and will be called when the custom element fires its `activate` event.\n * @param options.displayName A React component display name, used in debugging\n * messages. Default value is inferred from the name of custom element class\n * registered via `customElements.define`.\n */\nexport const createComponent = <\n  I extends HTMLElement,\n  E extends EventNames = {},\n>({\n  react: React,\n  tagName,\n  elementClass,\n  events,\n  displayName,\n}: Options<I, E>): ReactWebComponent<I, E> => {\n  const eventProps = new Set(Object.keys(events ?? {}));\n\n  if (DEV_MODE && !NODE_MODE) {\n    for (const p of reservedReactProperties) {\n      if (p in elementClass.prototype && !(p in HTMLElement.prototype)) {\n        // Note, this effectively warns only for `ref` since the other\n        // reserved props are on HTMLElement.prototype. To address this\n        // would require crawling down the prototype, which doesn't feel worth\n        // it since implementing these properties on an element is extremely\n        // rare.\n        console.warn(\n          `${tagName} contains property ${p} which is a React reserved ` +\n            `property. It will be used by React and not set on the element.`\n        );\n      }\n    }\n  }\n\n  type Props = ComponentProps<I, E>;\n\n  const ReactComponent = React.forwardRef<I, Props>((props, ref) => {\n    const prevElemPropsRef = React.useRef(new Map());\n    const elementRef = React.useRef<I | null>(null);\n\n    // Props to be passed to React.createElement\n    const reactProps: Record<string, unknown> = {};\n    // Props to be set on element with setProperty\n    const elementProps: Record<string, unknown> = {};\n\n    for (const [k, v] of Object.entries(props)) {\n      if (reservedReactProperties.has(k)) {\n        // React does *not* handle `className` for custom elements so\n        // coerce it to `class` so it's handled correctly.\n        reactProps[k === 'className' ? 'class' : k] = v;\n        continue;\n      }\n\n      if (eventProps.has(k) || k in elementClass.prototype) {\n        elementProps[k] = v;\n        continue;\n      }\n\n      reactProps[k] = v;\n    }\n\n    // useLayoutEffect produces warnings during server rendering.\n    if (!NODE_MODE) {\n      // This one has no dependency array so it'll run on every re-render.\n      React.useLayoutEffect(() => {\n        if (elementRef.current === null) {\n          return;\n        }\n        const newElemProps = new Map();\n        for (const key in elementProps) {\n          setProperty(\n            elementRef.current,\n            key,\n            props[key],\n            prevElemPropsRef.current.get(key),\n            events\n          );\n          prevElemPropsRef.current.delete(key);\n          newElemProps.set(key, props[key]);\n        }\n        // \"Unset\" any props from previous render that no longer exist.\n        // Setting to `undefined` seems like the correct thing to \"unset\"\n        // but currently React will set it as `null`.\n        // See https://github.com/facebook/react/issues/28203\n        for (const [key, value] of prevElemPropsRef.current) {\n          setProperty(elementRef.current, key, undefined, value, events);\n        }\n        prevElemPropsRef.current = newElemProps;\n      });\n\n      // Empty dependency array so this will only run once after first render.\n      React.useLayoutEffect(() => {\n        elementRef.current?.removeAttribute('defer-hydration');\n      }, []);\n    }\n\n    if (NODE_MODE) {\n      // If component is to be server rendered with `@lit/ssr-react`, pass\n      // element properties in a special bag to be set by the server-side\n      // element renderer.\n      if (\n        (React.createElement.name === 'litPatchedCreateElement' ||\n          globalThis.litSsrReactEnabled) &&\n        Object.keys(elementProps).length\n      ) {\n        // This property needs to remain unminified.\n        reactProps['_$litProps$'] = elementProps;\n      }\n    } else {\n      // Suppress hydration warning for server-rendered attributes.\n      // This property needs to remain unminified.\n      reactProps['suppressHydrationWarning'] = true;\n    }\n\n    return React.createElement(tagName, {\n      ...reactProps,\n      ref: React.useCallback(\n        (node: I) => {\n          elementRef.current = node;\n          if (typeof ref === 'function') {\n            ref(node);\n          } else if (ref !== null) {\n            ref.current = node;\n          }\n        },\n        [ref]\n      ),\n    });\n  });\n\n  ReactComponent.displayName = displayName ?? elementClass.name;\n\n  return ReactComponent;\n};\n", "import { createComponent as _createComponent, type EventName } from '@lit/react';\nimport type { ThemePropertyMixinClass } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\nimport type React from 'react';\nimport type { RefAttributes } from 'react';\n\ndeclare const __VERSION__: string;\n\ndeclare global {\n  interface VaadinRegistration {\n    is: string;\n    version: string;\n  }\n\n  interface Vaadin {\n    registrations?: VaadinRegistration[];\n  }\n\n  interface Window {\n    // @ts-expect-error: Different declaration from one of the dependencies.\n    Vaadin?: Vaadin;\n  }\n}\n\nwindow.Vaadin ??= {};\nwindow.Vaadin.registrations ??= [];\nwindow.Vaadin.registrations.push({\n  is: '@vaadin/react-components',\n  version: /* updated-by-script */ '24.7.3',\n});\n\n// TODO: Remove when types from @lit-labs/react are exported\nexport type EventNames = Record<string, EventName | string>;\ntype Constructor<T> = { new (): T; name: string };\ntype PolymerConstructor<T> = Constructor<T> & { _properties: Record<string, unknown> };\ntype Options<I extends HTMLElement, E extends EventNames = {}> = Readonly<{\n  displayName?: string;\n  elementClass: Constructor<I> | PolymerConstructor<I>;\n  events?: E;\n  react: typeof window.React;\n  tagName: string;\n}>;\n\n// A map of expected event listener types based on EventNames.\ntype EventListeners<R extends EventNames> = {\n  [K in keyof R]?: R[K] extends EventName ? (e: R[K]['__eventType']) => void : (e: Event) => void;\n};\n\n// Props derived from custom element class. Currently has limitations of making\n// all properties optional and also surfaces life cycle methods in autocomplete.\n// TODO: LoginOverlay has \"autofocus\" property, so we add it back manually.\ntype ElementProps<I> = Partial<Omit<I, keyof HTMLElement>> & { autofocus?: boolean };\n\n// Acceptable props to the React component.\ntype ComponentProps<I, E extends EventNames = {}> = Omit<\n  React.HTMLAttributes<I>,\n  // Prefer type of provided event handler props or those on element over\n  // built-in HTMLAttributes\n  keyof E | keyof ElementProps<I>\n> &\n  EventListeners<E> &\n  ElementProps<I>;\n\nexport type ThemedWebComponentProps<\n  I extends ThemePropertyMixinClass & HTMLElement,\n  E extends EventNames = {},\n> = ComponentProps<I, E> & {\n  /**\n   * Attribute that can be used by the component to apply built-in style variants,\n   * or to propagate its value to the sub-components in Shadow DOM.\n   *\n   * @see ThemePropertyMixinClass#_theme\n   */\n  theme?: string;\n};\n\ntype AllWebComponentProps<I extends HTMLElement, E extends EventNames = {}> = I extends ThemePropertyMixinClass\n  ? ThemedWebComponentProps<I, E>\n  : ComponentProps<I, E>;\n\nexport type WebComponentProps<I extends HTMLElement, E extends EventNames = {}> = Partial<AllWebComponentProps<I, E>>;\n\n// We need a separate declaration here; otherwise, the TypeScript fails into the\n// endless loop trying to resolve the typings.\nexport function createComponent<I extends HTMLElement, E extends EventNames = {}>(\n  options: Options<I, E>,\n): (props: WebComponentProps<I, E> & RefAttributes<I>) => React.ReactElement | null;\n\nexport function createComponent<I extends HTMLElement, E extends EventNames = {}>(options: Options<I, E>): any {\n  const { elementClass } = options;\n\n  return _createComponent(\n    '_properties' in elementClass\n      ? {\n          ...options,\n          // TODO: improve or remove the Polymer workaround\n          // 'createComponent' relies on key presence on the custom element class,\n          // but Polymer defines properties on the prototype when the first element\n          // is created. Workaround: pass a mock object with properties in\n          // the prototype.\n          elementClass: {\n            // @ts-expect-error: it is a specific workaround for Polymer classes.\n            name: elementClass.name,\n            prototype: { ...elementClass._properties, hidden: Boolean },\n          },\n        }\n      : options,\n  );\n}\n", "export * from \"@vaadin/accordion/vaadin-accordion-panel.js\";\nexport * from './generated/AccordionPanel.js';\n", "import type { EventName } from \"@lit/react\";\nimport { AccordionPanel as AccordionPanelElement, type AccordionPanelEventMap as _AccordionPanelEventMap, } from \"@vaadin/accordion/vaadin-accordion-panel.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AccordionPanelElement, };\nexport type AccordionPanelEventMap = Readonly<{\n    onOpenedChanged: EventName<_AccordionPanelEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onOpenedChanged: \"opened-changed\" } as AccordionPanelEventMap;\nexport type AccordionPanelProps = WebComponentProps<AccordionPanelElement, AccordionPanelEventMap>;\nexport const AccordionPanel = createComponent({\n    elementClass: AccordionPanelElement, events, react: React, tagName: \"vaadin-accordion-panel\"\n});\n", "export * from \"@vaadin/accordion/vaadin-accordion.js\";\nexport * from './generated/Accordion.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Accordion as AccordionElement, type AccordionEventMap as _AccordionEventMap, } from \"@vaadin/accordion/vaadin-accordion.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AccordionElement, };\nexport type AccordionEventMap = Readonly<{\n    onOpenedChanged: EventName<_AccordionEventMap[\"opened-changed\"]>;\n    onItemsChanged: EventName<_AccordionEventMap[\"items-changed\"]>;\n}>;\nconst events = { onOpenedChanged: \"opened-changed\", onItemsChanged: \"items-changed\" } as AccordionEventMap;\nexport type AccordionProps = WebComponentProps<AccordionElement, AccordionEventMap>;\nexport const Accordion = createComponent({\n    elementClass: AccordionElement, events, react: React, tagName: \"vaadin-accordion\"\n});\n", "export * from \"@vaadin/app-layout/vaadin-app-layout.js\";\nexport * from './generated/AppLayout.js';\n", "import type { EventName } from \"@lit/react\";\nimport { AppLayout as AppLayoutElement, type AppLayoutEventMap as _AppLayoutEventMap, } from \"@vaadin/app-layout/vaadin-app-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AppLayoutElement, };\nexport type AppLayoutEventMap = Readonly<{\n    onPrimarySectionChanged: EventName<_AppLayoutEventMap[\"primary-section-changed\"]>;\n    onDrawerOpenedChanged: EventName<_AppLayoutEventMap[\"drawer-opened-changed\"]>;\n    onOverlayChanged: EventName<_AppLayoutEventMap[\"overlay-changed\"]>;\n}>;\nconst events = { onPrimarySectionChanged: \"primary-section-changed\", onDrawerOpenedChanged: \"drawer-opened-changed\", onOverlayChanged: \"overlay-changed\" } as AppLayoutEventMap;\nexport type AppLayoutProps = WebComponentProps<AppLayoutElement, AppLayoutEventMap>;\nexport const AppLayout = createComponent({\n    elementClass: AppLayoutElement, events, react: React, tagName: \"vaadin-app-layout\"\n});\n", "export * from \"@vaadin/app-layout/vaadin-drawer-toggle.js\";\nexport * from './generated/DrawerToggle.js';\n", "import type {} from \"@lit/react\";\nimport { DrawerToggle as DrawerToggleElement, } from \"@vaadin/app-layout/vaadin-drawer-toggle.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DrawerToggleElement, };\nexport type DrawerToggleEventMap = Readonly<{}>;\nconst events = {} as DrawerToggleEventMap;\nexport type DrawerToggleProps = WebComponentProps<DrawerToggleElement, DrawerToggleEventMap>;\nexport const DrawerToggle = createComponent({\n    elementClass: DrawerToggleElement, events, react: React, tagName: \"vaadin-drawer-toggle\"\n});\n", "export * from \"@vaadin/avatar/vaadin-avatar.js\";\nexport * from './generated/Avatar.js';\n", "import type {} from \"@lit/react\";\nimport { Avatar as AvatarElement, } from \"@vaadin/avatar/vaadin-avatar.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AvatarElement, };\nexport type AvatarEventMap = Readonly<{}>;\nconst events = {} as AvatarEventMap;\nexport type AvatarProps = WebComponentProps<AvatarElement, AvatarEventMap>;\nexport const Avatar = createComponent({\n    elementClass: AvatarElement, events, react: React, tagName: \"vaadin-avatar\"\n});\n", "export * from \"@vaadin/avatar-group/vaadin-avatar-group.js\";\nexport * from './generated/AvatarGroup.js';\n", "import type {} from \"@lit/react\";\nimport { AvatarGroup as AvatarGroupElement, } from \"@vaadin/avatar-group/vaadin-avatar-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AvatarGroupElement, };\nexport type AvatarGroupEventMap = Readonly<{}>;\nconst events = {} as AvatarGroupEventMap;\nexport type AvatarGroupProps = WebComponentProps<AvatarGroupElement, AvatarGroupEventMap>;\nexport const AvatarGroup = createComponent({\n    elementClass: AvatarGroupElement, events, react: React, tagName: \"vaadin-avatar-group\"\n});\n", "export * from \"@vaadin/button/vaadin-button.js\";\nexport * from './generated/Button.js';\n", "import type {} from \"@lit/react\";\nimport { Button as ButtonElement, } from \"@vaadin/button/vaadin-button.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ButtonElement, };\nexport type ButtonEventMap = Readonly<{}>;\nconst events = {} as ButtonEventMap;\nexport type ButtonProps = WebComponentProps<ButtonElement, ButtonEventMap>;\nexport const Button = createComponent({\n    elementClass: ButtonElement, events, react: React, tagName: \"vaadin-button\"\n});\n", "import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { addGlobalThemeStyles, css, registerStyles } from '@vaadin/vaadin-themable-mixin/register-styles.js';\r\n\r\nconst cardProps = css`\r\n  html {\r\n    --vaadin-card-background: var(--lumo-shade-5pct);\r\n    --vaadin-card-border-radius: var(--lumo-border-radius-l);\r\n    --vaadin-card-border-width: 0;\r\n    --vaadin-card-border-color: var(--lumo-contrast-20pct);\r\n    --vaadin-card-padding: var(--lumo-space-m);\r\n    --vaadin-card-gap: var(--lumo-space-m);\r\n  }\r\n`;\r\n\r\naddGlobalThemeStyles('card-props', cardProps);\r\n\r\nconst card = css`\r\n  :host {\r\n    background: var(--vaadin-card-background);\r\n    border-radius: var(--vaadin-card-border-radius);\r\n    box-shadow: var(--vaadin-card-box-shadow);\r\n    position: relative;\r\n  }\r\n\r\n  /* Could be an inset outline on the host as well, but rounded outlines only work since Safari 16.4 */\r\n  :host::before {\r\n    content: '';\r\n    position: absolute;\r\n    inset: 0;\r\n    pointer-events: none;\r\n    border-radius: inherit;\r\n    border: var(--vaadin-card-border, var(--vaadin-card-border-width) solid var(--vaadin-card-border-color));\r\n  }\r\n\r\n  :host([theme~='outlined']) {\r\n    --vaadin-card-border-width: 1px;\r\n    --vaadin-card-background: transparent;\r\n  }\r\n\r\n  :host([theme~='elevated']) {\r\n    --vaadin-card-background: var(--lumo-tint-10pct);\r\n    --vaadin-card-box-shadow: var(--lumo-box-shadow-xs);\r\n    /* TODO I would like to update --lumo-box-shadow-xs to this (30pct instead of 50pct): */\r\n    --lumo-box-shadow-xs: 0 1px 4px -1px var(--lumo-shade-30pct);\r\n  }\r\n\r\n  :host([theme~='elevated'][theme~='outlined']) {\r\n    box-shadow:\r\n      inset 0 -1px 0 0 var(--lumo-shade-10pct),\r\n      var(--vaadin-card-box-shadow);\r\n  }\r\n\r\n  :host(:where([theme~='stretch-media'])) ::slotted([slot='media']:is(img, video, svg, vaadin-icon)) {\r\n    border-radius: var(--lumo-border-radius-m);\r\n  }\r\n\r\n  ::slotted([slot='title']) {\r\n    font-size: var(--lumo-font-size-l);\r\n    line-height: var(--lumo-line-height-xs);\r\n    font-weight: 600;\r\n    color: var(--lumo-header-text-color);\r\n  }\r\n\r\n  ::slotted([slot='subtitle']) {\r\n    font-size: var(--lumo-font-size-m);\r\n    line-height: var(--lumo-line-height-xs);\r\n    color: var(--lumo-secondary-text-color);\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-card', card, { moduleId: 'lumo-card' });\r\n\r\nexport { card };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2024 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css, html, LitElement } from 'lit';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';\r\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\n/**\r\n * `<vaadin-card>` is a versatile container for grouping related content and actions.\r\n * It presents information in a structured and visually appealing manner, with\r\n * customization options to fit various design requirements. The default ARIA role is `region`.\r\n *\r\n * ```html\r\n * <vaadin-card role=\"region\" theme=\"outlined cover-media\">\r\n *   <img slot=\"media\" width=\"200\" src=\"...\" alt=\"\">\r\n *   <div slot=\"title\">Lapland</div>\r\n *   <div slot=\"subtitle\">The Exotic North</div>\r\n *   <div>Lapland is the northern-most region of Finland and an active outdoor destination.</div>\r\n *   <vaadin-button slot=\"footer\">Book Vacation</vaadin-button>\r\n * </vaadin-card>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------|-------------\r\n * `media`   | The container for the media element (e.g., image, video, icon). Shown above of before the card content.\r\n * `header`  | The container for title and subtitle - or for custom header content - and header prefix and suffix elements.\r\n * `content` | The container for the card content (usually text content).\r\n * `footer`  | The container for footer elements. This part is always at the bottom of the card.\r\n *\r\n * The following custom properties are available for styling:\r\n *\r\n * Custom property | Description | Default\r\n * ----------------|-------------|-------------\r\n * `--vaadin-card-padding` | The space between the card edge and its content. Needs to a unified value for all edges, i.e., a single length value. | `1em`\r\n * `--vaadin-card-gap`     | The space between content elements within the card. | `1em`\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass Card extends ElementMixin(ThemableMixin(PolylitMixin(LitElement))) {\r\n  static get is() {\r\n    return 'vaadin-card';\r\n  }\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        box-sizing: border-box;\r\n        padding: var(--_padding);\r\n        gap: var(--_gap);\r\n        --_padding: var(--vaadin-card-padding, 1em);\r\n        --_gap: var(--vaadin-card-gap, 1em);\r\n        --_media: 0;\r\n        --_title: 0;\r\n        --_subtitle: 0;\r\n        --_header: max(var(--_header-prefix), var(--_title), var(--_subtitle), var(--_header-suffix));\r\n        --_header-prefix: 0;\r\n        --_header-suffix: 0;\r\n        --_content: 0;\r\n        --_footer: 0;\r\n      }\r\n\r\n      :host([hidden]) {\r\n        display: none !important;\r\n      }\r\n\r\n      :host(:not([theme~='horizontal'])) {\r\n        justify-content: space-between;\r\n      }\r\n\r\n      :host([_m]) {\r\n        --_media: 1;\r\n      }\r\n\r\n      :host([_t]) {\r\n        --_title: 1;\r\n      }\r\n\r\n      :host([_st]) {\r\n        --_subtitle: 1;\r\n      }\r\n\r\n      :host([_h]) {\r\n        --_header: 1;\r\n        --_title: 0;\r\n        --_subtitle: 0;\r\n      }\r\n\r\n      :host([_hp]) {\r\n        --_header-prefix: 1;\r\n      }\r\n\r\n      :host([_hs]) {\r\n        --_header-suffix: 1;\r\n      }\r\n\r\n      :host([_c]) {\r\n        --_content: 1;\r\n      }\r\n\r\n      :host([_f]) {\r\n        --_footer: 1;\r\n      }\r\n\r\n      [part='media'],\r\n      [part='header'],\r\n      [part='content'],\r\n      [part='footer'] {\r\n        display: none;\r\n      }\r\n\r\n      :host([_m]) [part='media'],\r\n      :host([_c]) [part='content'] {\r\n        display: block;\r\n      }\r\n\r\n      :host([_f]) [part='footer'] {\r\n        display: flex;\r\n        gap: var(--_gap);\r\n      }\r\n\r\n      :host(:is([_h], [_t], [_st], [_hp], [_hs])) [part='header'] {\r\n        display: grid;\r\n        align-items: center;\r\n        gap: var(--_gap);\r\n        row-gap: 0;\r\n      }\r\n\r\n      [part='header'] {\r\n        margin-bottom: auto;\r\n      }\r\n\r\n      :host([_hs]) [part='header'] {\r\n        grid-template-columns: 1fr auto;\r\n      }\r\n\r\n      :host([_hp]) [part='header'] {\r\n        grid-template-columns: repeat(var(--_header-prefix), auto) 1fr;\r\n      }\r\n\r\n      slot {\r\n        border-radius: inherit;\r\n      }\r\n\r\n      ::slotted([slot='header-prefix']) {\r\n        grid-column: 1;\r\n        grid-row: 1 / span calc(var(--_title) + var(--_subtitle));\r\n      }\r\n\r\n      ::slotted([slot='header']),\r\n      ::slotted([slot='title']) {\r\n        grid-column: calc(1 + var(--_header-prefix));\r\n        grid-row: 1;\r\n      }\r\n\r\n      ::slotted([slot='subtitle']) {\r\n        grid-column: calc(1 + var(--_header-prefix));\r\n        grid-row: calc(1 + var(--_title));\r\n      }\r\n\r\n      ::slotted([slot='header-suffix']) {\r\n        grid-column: calc(2 + var(--_header-prefix));\r\n        grid-row: 1 / span calc(var(--_title) + var(--_subtitle));\r\n      }\r\n\r\n      /* Horizontal */\r\n      :host([theme~='horizontal']) {\r\n        display: grid;\r\n        grid-template-columns: repeat(var(--_media), minmax(auto, max-content)) 1fr;\r\n        align-items: start;\r\n      }\r\n\r\n      :host([theme~='horizontal'][_f]) {\r\n        grid-template-rows: 1fr auto;\r\n      }\r\n\r\n      :host([theme~='horizontal'][_c]) {\r\n        grid-template-rows: repeat(var(--_header), auto) 1fr;\r\n      }\r\n\r\n      [part='media'] {\r\n        grid-column: 1;\r\n        grid-row: 1 / span calc(var(--_header) + var(--_content) + var(--_footer));\r\n        align-self: stretch;\r\n        border-radius: inherit;\r\n      }\r\n\r\n      [part='header'] {\r\n        grid-column: calc(1 + var(--_media));\r\n        grid-row: 1;\r\n      }\r\n\r\n      [part='content'] {\r\n        grid-column: calc(1 + var(--_media));\r\n        grid-row: calc(1 + var(--_header));\r\n        flex: auto;\r\n        min-height: 0;\r\n      }\r\n\r\n      [part='footer'] {\r\n        grid-column: calc(1 + var(--_media));\r\n        grid-row: calc(1 + var(--_header) + var(--_content));\r\n        border-radius: inherit;\r\n      }\r\n\r\n      :host([theme~='horizontal']) [part='footer'] {\r\n        align-self: end;\r\n      }\r\n\r\n      :host(:not([theme~='horizontal'])) ::slotted([slot='media']:is(img, video, svg)) {\r\n        max-width: 100%;\r\n      }\r\n\r\n      ::slotted([slot='media']) {\r\n        vertical-align: middle;\r\n      }\r\n\r\n      :host(:is([theme~='cover-media'], [theme~='stretch-media']))\r\n        ::slotted([slot='media']:is(img, video, svg, vaadin-icon)) {\r\n        width: 100%;\r\n        height: auto;\r\n        aspect-ratio: var(--vaadin-card-media-aspect-ratio, 16/9);\r\n        object-fit: cover;\r\n        /* Fixes an issue where an icon overflows the card boundaries on Firefox: https://github.com/vaadin/web-components/issues/8641 */\r\n        overflow: hidden;\r\n      }\r\n\r\n      :host([theme~='horizontal']:is([theme~='cover-media'], [theme~='stretch-media'])) {\r\n        grid-template-columns: repeat(var(--_media), minmax(auto, 0.5fr)) 1fr;\r\n      }\r\n\r\n      :host([theme~='horizontal']:is([theme~='cover-media'], [theme~='stretch-media']))\r\n        ::slotted([slot='media']:is(img, video, svg, vaadin-icon)) {\r\n        height: 100%;\r\n        aspect-ratio: auto;\r\n      }\r\n\r\n      :host([theme~='cover-media']) ::slotted([slot='media']:is(img, video, svg, vaadin-icon)) {\r\n        margin-top: calc(var(--_padding) * -1);\r\n        margin-inline: calc(var(--_padding) * -1);\r\n        width: calc(100% + var(--_padding) * 2);\r\n        max-width: none;\r\n        border-radius: inherit;\r\n        border-end-end-radius: 0;\r\n        border-end-start-radius: 0;\r\n      }\r\n\r\n      :host([theme~='horizontal'][theme~='cover-media']) ::slotted([slot='media']:is(img, video, svg, vaadin-icon)) {\r\n        margin-inline-end: 0;\r\n        width: calc(100% + var(--_padding));\r\n        height: calc(100% + var(--_padding) * 2);\r\n        border-radius: inherit;\r\n        border-start-end-radius: 0;\r\n        border-end-end-radius: 0;\r\n      }\r\n\r\n      /* Scroller in content */\r\n      [part='content'] ::slotted(vaadin-scroller) {\r\n        margin-inline: calc(var(--_padding) * -1);\r\n        padding-inline: var(--_padding);\r\n      }\r\n\r\n      [part='content'] ::slotted(vaadin-scroller)::before,\r\n      [part='content'] ::slotted(vaadin-scroller)::after {\r\n        margin-inline: calc(var(--_padding) * -1);\r\n      }\r\n    `;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * The title of the card. When set, any custom slotted title is removed and this string-based title is used instead. If this title is used, an `aria-labelledby` attribute that points to the generated title element is set.\r\n       *\r\n       * @attr {string} card-title\r\n       */\r\n      cardTitle: {\r\n        type: String,\r\n        observer: '__cardTitleChanged',\r\n      },\r\n\r\n      /**\r\n       * Sets the heading level (`aria-level`) for the string-based title. If not set, the level defaults to 2. Setting values outside the range [1, 6] can cause accessibility issues.\r\n       *\r\n       * @attr {number} title-heading-level\r\n       */\r\n      titleHeadingLevel: {\r\n        type: Number,\r\n        reflectToAttribute: true,\r\n        observer: '__titleHeadingLevelChanged',\r\n      },\r\n    };\r\n  }\r\n\r\n  static get experimental() {\r\n    return true;\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    // By default, if the user hasn't provided a custom role,\r\n    // the role attribute is set to \"region\".\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'region');\r\n    }\r\n  }\r\n\r\n  /** @protected */\r\n  render() {\r\n    return html`\r\n      <div part=\"media\">\r\n        <slot name=\"media\"></slot>\r\n      </div>\r\n      <div part=\"header\">\r\n        <slot name=\"header-prefix\"></slot>\r\n        <slot name=\"header\">\r\n          <slot name=\"title\"></slot>\r\n          <slot name=\"subtitle\"></slot>\r\n        </slot>\r\n        <slot name=\"header-suffix\"></slot>\r\n      </div>\r\n      <div part=\"content\">\r\n        <slot></slot>\r\n      </div>\r\n      <div part=\"footer\">\r\n        <slot name=\"footer\"></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /** @private */\r\n  _onSlotChange() {\r\n    this.toggleAttribute('_m', this.querySelector(':scope > [slot=\"media\"]'));\r\n    this.toggleAttribute('_h', this.querySelector(':scope > [slot=\"header\"]'));\r\n    this.toggleAttribute(\r\n      '_t',\r\n      this.querySelector(':scope > [slot=\"title\"]') && !this.querySelector(':scope > [slot=\"header\"]'),\r\n    );\r\n    this.toggleAttribute(\r\n      '_st',\r\n      this.querySelector(':scope > [slot=\"subtitle\"]') && !this.querySelector(':scope > [slot=\"header\"]'),\r\n    );\r\n    this.toggleAttribute('_hp', this.querySelector(':scope > [slot=\"header-prefix\"]'));\r\n    this.toggleAttribute('_hs', this.querySelector(':scope > [slot=\"header-suffix\"]'));\r\n    this.toggleAttribute('_c', this.querySelector(':scope > :not([slot])'));\r\n    this.toggleAttribute('_f', this.querySelector(':scope > [slot=\"footer\"]'));\r\n    if (this.__getCustomTitleElement()) {\r\n      this.__clearStringTitle();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __clearStringTitle() {\r\n    const stringTitleElement = this.__getStringTitleElement();\r\n    if (stringTitleElement) {\r\n      this.removeChild(stringTitleElement);\r\n    }\r\n    const ariaLabelledby = this.getAttribute('aria-labelledby');\r\n    if (ariaLabelledby && ariaLabelledby.startsWith('card-title-')) {\r\n      this.removeAttribute('aria-labelledby');\r\n    }\r\n    if (this.cardTitle) {\r\n      this.cardTitle = '';\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __getCustomTitleElement() {\r\n    return Array.from(this.querySelectorAll('[slot=\"title\"]')).find((el) => {\r\n      return !el.hasAttribute('card-string-title');\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  __cardTitleChanged(title) {\r\n    if (!title) {\r\n      this.__clearStringTitle();\r\n      return;\r\n    }\r\n    const customTitleElement = this.__getCustomTitleElement();\r\n    if (customTitleElement) {\r\n      this.removeChild(customTitleElement);\r\n    }\r\n    let stringTitleElement = this.__getStringTitleElement();\r\n    if (!stringTitleElement) {\r\n      stringTitleElement = this.__createStringTitleElement();\r\n      this.appendChild(stringTitleElement);\r\n      this.setAttribute('aria-labelledby', stringTitleElement.id);\r\n    }\r\n    stringTitleElement.textContent = title;\r\n  }\r\n\r\n  /** @private */\r\n  __createStringTitleElement() {\r\n    const stringTitleElement = document.createElement('div');\r\n    stringTitleElement.setAttribute('slot', 'title');\r\n    stringTitleElement.setAttribute('role', 'heading');\r\n    this.__setTitleHeadingLevel(stringTitleElement, this.titleHeadingLevel);\r\n    stringTitleElement.setAttribute('card-string-title', '');\r\n    stringTitleElement.id = `card-title-${generateUniqueId()}`;\r\n    return stringTitleElement;\r\n  }\r\n\r\n  /** @private */\r\n  __titleHeadingLevelChanged(titleHeadingLevel) {\r\n    const stringTitleElement = this.__getStringTitleElement();\r\n    if (stringTitleElement) {\r\n      this.__setTitleHeadingLevel(stringTitleElement, titleHeadingLevel);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __setTitleHeadingLevel(stringTitleElement, titleHeadingLevel) {\r\n    stringTitleElement.setAttribute('aria-level', titleHeadingLevel || 2);\r\n  }\r\n\r\n  /** @private */\r\n  __getStringTitleElement() {\r\n    return this.querySelector('[slot=\"title\"][card-string-title]');\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  createRenderRoot() {\r\n    const root = super.createRenderRoot();\r\n    root.addEventListener('slotchange', () => this._onSlotChange());\r\n    return root;\r\n  }\r\n}\r\n\r\ndefineCustomElement(Card);\r\n\r\nexport { Card };\r\n", "export * from \"@vaadin/card/vaadin-card.js\";\nexport * from './generated/Card.js';\n", "import type {} from \"@lit/react\";\nimport { Card as CardElement, } from \"@vaadin/card/vaadin-card.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { CardElement, };\nexport type CardEventMap = Readonly<{}>;\nconst events = {} as CardEventMap;\nexport type CardProps = WebComponentProps<CardElement, CardEventMap>;\nexport const Card = createComponent({\n    elementClass: CardElement, events, react: React, tagName: \"vaadin-card\"\n});\n", "export * from \"@vaadin/checkbox/vaadin-checkbox.js\";\nexport * from './generated/Checkbox.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Checkbox as CheckboxElement, type CheckboxEventMap as _CheckboxEventMap, } from \"@vaadin/checkbox/vaadin-checkbox.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { CheckboxElement, };\nexport type CheckboxEventMap = Readonly<{\n    onValidated: EventName<_CheckboxEventMap[\"validated\"]>;\n    onChange: EventName<_CheckboxEventMap[\"change\"]>;\n    onCheckedChanged: EventName<_CheckboxEventMap[\"checked-changed\"]>;\n    onInvalidChanged: EventName<_CheckboxEventMap[\"invalid-changed\"]>;\n    onIndeterminateChanged: EventName<_CheckboxEventMap[\"indeterminate-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onCheckedChanged: \"checked-changed\", onInvalidChanged: \"invalid-changed\", onIndeterminateChanged: \"indeterminate-changed\" } as CheckboxEventMap;\nexport type CheckboxProps = WebComponentProps<CheckboxElement, CheckboxEventMap>;\nexport const Checkbox = createComponent({\n    elementClass: CheckboxElement, events, react: React, tagName: \"vaadin-checkbox\"\n});\n", "export * from \"@vaadin/checkbox-group/vaadin-checkbox-group.js\";\nexport * from './generated/CheckboxGroup.js';\n", "import type { EventName } from \"@lit/react\";\nimport { CheckboxGroup as CheckboxGroupElement, type CheckboxGroupEventMap as _CheckboxGroupEventMap, } from \"@vaadin/checkbox-group/vaadin-checkbox-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { CheckboxGroupElement, };\nexport type CheckboxGroupEventMap = Readonly<{\n    onValidated: EventName<_CheckboxGroupEventMap[\"validated\"]>;\n    onInvalidChanged: EventName<_CheckboxGroupEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_CheckboxGroupEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as CheckboxGroupEventMap;\nexport type CheckboxGroupProps = WebComponentProps<CheckboxGroupElement, CheckboxGroupEventMap>;\nexport const CheckboxGroup = createComponent({\n    elementClass: CheckboxGroupElement, events, react: React, tagName: \"vaadin-checkbox-group\"\n});\n", "/**\r\n * @license\r\n * Copyright (c) 2015 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { dashToCamelCase } from '@polymer/polymer/lib/utils/case-map.js';\r\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\r\nimport { ValidateMixin } from '@vaadin/field-base/src/validate-mixin.js';\r\nimport { ComboBoxDataProviderMixin } from './vaadin-combo-box-data-provider-mixin.js';\r\nimport { ComboBoxMixin } from './vaadin-combo-box-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ComboBoxDataProviderMixin\r\n * @mixes ComboBoxMixin\r\n * @mixes ValidateMixin\r\n */\r\nexport const ComboBoxLightMixin = (superClass) =>\r\n  class ComboBoxLightMixinClass extends ComboBoxDataProviderMixin(ComboBoxMixin(ValidateMixin(superClass))) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Name of the two-way data-bindable property representing the\r\n         * value of the custom input field.\r\n         * @attr {string} attr-for-value\r\n         * @type {string}\r\n         */\r\n        attrForValue: {\r\n          type: String,\r\n          value: 'value',\r\n        },\r\n      };\r\n    }\r\n\r\n    /**\r\n     * Used by `InputControlMixin` as a reference to the clear button element.\r\n     * @protected\r\n     * @return {!HTMLElement}\r\n     */\r\n    get clearElement() {\r\n      return this.querySelector('.clear-button');\r\n    }\r\n\r\n    /**\r\n     * Override this getter from `InputMixin` to allow using\r\n     * an arbitrary property name instead of `value`\r\n     * for accessing the input element's value.\r\n     *\r\n     * @protected\r\n     * @override\r\n     * @return {string}\r\n     */\r\n    get _inputElementValueProperty() {\r\n      return dashToCamelCase(this.attrForValue);\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @override\r\n     * @return {HTMLInputElement | undefined}\r\n     */\r\n    get _nativeInput() {\r\n      const input = this.inputElement;\r\n\r\n      if (input) {\r\n        // Support `<input class=\"input\">`\r\n        if (input instanceof HTMLInputElement) {\r\n          return input;\r\n        }\r\n\r\n        // Support `<input>` in light DOM (e.g. `vaadin-text-field`)\r\n        const slottedInput = input.querySelector('input');\r\n        if (slottedInput) {\r\n          return slottedInput;\r\n        }\r\n\r\n        if (input.shadowRoot) {\r\n          // Support `<input>` in Shadow DOM (e.g. `mwc-textfield`)\r\n          const shadowInput = input.shadowRoot.querySelector('input');\r\n          if (shadowInput) {\r\n            return shadowInput;\r\n          }\r\n        }\r\n      }\r\n\r\n      return undefined;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._toggleElement = this.querySelector('.toggle-button');\r\n\r\n      // Wait until the slotted input DOM is ready\r\n      afterNextRender(this, () => {\r\n        this._setInputElement(this.querySelector('vaadin-text-field,.input'));\r\n        this._revertInputValue();\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @override\r\n     */\r\n    _isClearButton(event) {\r\n      return (\r\n        super._isClearButton(event) ||\r\n        (event.type === 'input' && !event.isTrusted) || // Fake input event dispatched by clear button\r\n        event.composedPath()[0].getAttribute('part') === 'clear-button'\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @override\r\n     */\r\n    _shouldRemoveFocus(event) {\r\n      const isBlurringControlButtons = event.target === this._toggleElement || event.target === this.clearElement;\r\n      const isFocusingInputElement = event.relatedTarget && event.relatedTarget === this._nativeInput;\r\n\r\n      // prevent closing the overlay when moving focus from clear or toggle buttons to the internal input\r\n      if (isBlurringControlButtons && isFocusingInputElement) {\r\n        return false;\r\n      }\r\n\r\n      return super._shouldRemoveFocus(event);\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2015 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-combo-box-item.js';\r\nimport './vaadin-combo-box-overlay.js';\r\nimport './vaadin-combo-box-scroller.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { ComboBoxLightMixin } from './vaadin-combo-box-light-mixin.js';\r\n\r\n/**\r\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\r\n * only the dropdown functionality and leaving the input field definition to the user.\r\n *\r\n * The element has the same API as `<vaadin-combo-box>`.\r\n *\r\n * To create a custom input field, you need to add a child element which has a two-way\r\n * data-bindable property representing the input value. The property name is expected\r\n * to be `value` by default. For example, you can use `<vaadin-text-field>` element:\r\n *\r\n * ```html\r\n * <vaadin-combo-box-light>\r\n *   <vaadin-text-field></vaadin-text-field>\r\n * </vaadin-combo-box-light>\r\n * ```\r\n *\r\n * If you are using custom input field that has other property for value,\r\n * set `class=\"input\"` to enable corresponding logic, and use `attr-for-value`\r\n * attribute to specify which property to use:\r\n *\r\n * ```html\r\n * <vaadin-combo-box-light attr-for-value=\"input-value\">\r\n *   <custom-input class=\"input\"></custom-input>\r\n * </vaadin-combo-box-light>\r\n * ```\r\n *\r\n * You can also pass custom toggle and clear buttons with corresponding classes:\r\n *\r\n * ```html\r\n * <vaadin-combo-box-light>\r\n *   <custom-input class=\"input\" attr-for-value=\"input-value\">\r\n *     <button slot=\"suffix\" class=\"clear-button\">Clear</button>\r\n *     <button slot=\"suffix\" class=\"toggle-button\">Toggle</button>\r\n *   </custom-input>\r\n * </vaadin-combo-box-light>\r\n * ```\r\n *\r\n * @fires {Event} change - Fired when the user commits a value change.\r\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\r\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\r\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\r\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\r\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\r\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\r\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ComboBoxLightMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass ComboBoxLight extends ComboBoxLightMixin(ThemableMixin(PolymerElement)) {\r\n  static get is() {\r\n    return 'vaadin-combo-box-light';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host([opened]) {\r\n          pointer-events: auto;\r\n        }\r\n      </style>\r\n\r\n      <slot></slot>\r\n\r\n      <vaadin-combo-box-overlay\r\n        id=\"overlay\"\r\n        opened=\"[[_overlayOpened]]\"\r\n        loading$=\"[[loading]]\"\r\n        theme$=\"[[_theme]]\"\r\n        position-target=\"[[inputElement]]\"\r\n        no-vertical-overlap\r\n      ></vaadin-combo-box-overlay>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(ComboBoxLight);\r\n\r\nexport { ComboBoxLight };\r\n", "export * from \"@vaadin/combo-box/vaadin-combo-box-light.js\";\nimport type { ComboBoxDefaultItem } from '@vaadin/combo-box';\nimport { type ComponentType, forwardRef, type ReactElement, type RefAttributes, type ForwardedRef } from 'react';\nimport {\n  ComboBoxLight as _ComboBoxLight,\n  type ComboBoxLightElement,\n  type ComboBoxLightProps as _ComboBoxLightProps,\n} from './generated/ComboBoxLight.js';\nimport type { ComboBoxReactRendererProps } from './renderers/combobox.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/ComboBoxLight.js';\n\nexport type ComboBoxLightProps<TItem> = Partial<Omit<_ComboBoxLightProps<TItem>, 'renderer'>> &\n  Readonly<{\n    renderer?: ComponentType<ComboBoxReactRendererProps<TItem>> | null;\n  }>;\n\nfunction ComboBoxLight<TItem = ComboBoxDefaultItem>(\n  props: ComboBoxLightProps<TItem>,\n  ref: ForwardedRef<ComboBoxLightElement<TItem>>,\n): ReactElement | null {\n  const [portals, renderer] = useModelRenderer(props.renderer);\n\n  return (\n    <_ComboBoxLight<TItem> {...props} ref={ref} renderer={renderer}>\n      {props.children}\n      {portals}\n    </_ComboBoxLight>\n  );\n}\n\nconst ForwardedComboBoxLight = forwardRef(ComboBoxLight) as <TItem = ComboBoxDefaultItem>(\n  props: ComboBoxLightProps<TItem> & RefAttributes<ComboBoxLightElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedComboBoxLight as ComboBoxLight };\n", "import type { EventName } from \"@lit/react\";\nimport { ComboBoxLight as ComboBoxLightElement, type ComboBoxLightEventMap as _ComboBoxLightEventMap, } from \"@vaadin/combo-box/vaadin-combo-box-light.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ComboBoxLightElement, };\nexport type ComboBoxLightEventMap<T1> = Readonly<{\n    onValidated: EventName<_ComboBoxLightEventMap<T1>[\"validated\"]>;\n    onChange: EventName<_ComboBoxLightEventMap<T1>[\"change\"]>;\n    onCustomValueSet: EventName<_ComboBoxLightEventMap<T1>[\"custom-value-set\"]>;\n    onSelectedItemChanged: EventName<_ComboBoxLightEventMap<T1>[\"selected-item-changed\"]>;\n    onValueChanged: EventName<_ComboBoxLightEventMap<T1>[\"value-changed\"]>;\n    onInvalidChanged: EventName<_ComboBoxLightEventMap<T1>[\"invalid-changed\"]>;\n    onOpenedChanged: EventName<_ComboBoxLightEventMap<T1>[\"opened-changed\"]>;\n    onFilterChanged: EventName<_ComboBoxLightEventMap<T1>[\"filter-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onCustomValueSet: \"custom-value-set\", onSelectedItemChanged: \"selected-item-changed\", onValueChanged: \"value-changed\", onInvalidChanged: \"invalid-changed\", onOpenedChanged: \"opened-changed\", onFilterChanged: \"filter-changed\" } as ComboBoxLightEventMap<any>;\nexport type ComboBoxLightProps<T1> = WebComponentProps<ComboBoxLightElement<T1>, ComboBoxLightEventMap<T1>>;\nexport const ComboBoxLight = createComponent({\n    elementClass: ComboBoxLightElement, events, react: React, tagName: \"vaadin-combo-box-light\"\n}) as <T1>(props: ComboBoxLightProps<T1> & React.RefAttributes<ComboBoxLightElement<T1>>) => React.ReactElement | null;\n", "import {\n  type ComponentType,\n  createElement,\n  type PropsWithChildren,\n  type ReactElement,\n  type ReactNode,\n  useCallback,\n  useReducer,\n} from 'react';\nimport { createPortal, flushSync } from 'react-dom';\nimport type { Slice, WebComponentRenderer } from './renderer.js';\nimport { flushMicrotask } from '../utils/flushMicrotask.js';\n\nexport type UseRendererResult<W extends WebComponentRenderer> = readonly [\n  portals?: ReadonlyArray<ReactElement | null>,\n  renderer?: W,\n];\n\nconst initialState = new Map();\n\nfunction rendererReducer<W extends WebComponentRenderer>(\n  state: Map<HTMLElement, Slice<Parameters<W>, 1>>,\n  [root, ...args]: Parameters<W>,\n): Map<HTMLElement, Slice<Parameters<W>, 1>> {\n  return new Map(state).set(root, args as Slice<Parameters<W>, 1>);\n}\n\nexport type RendererConfig<W extends WebComponentRenderer> = {\n  renderMode?: 'default' | 'sync' | 'microtask';\n  shouldRenderPortal?(root: HTMLElement, ...args: Slice<Parameters<W>, 1>): boolean;\n};\n\nexport function useRenderer<P extends {}, W extends WebComponentRenderer>(\n  node: ReactNode,\n  convert?: (props: Slice<Parameters<W>, 1>) => PropsWithChildren<P>,\n  config?: RendererConfig<W>,\n): UseRendererResult<W>;\nexport function useRenderer<P extends {}, W extends WebComponentRenderer>(\n  reactRenderer: ComponentType<P> | null | undefined,\n  convert: (props: Slice<Parameters<W>, 1>) => PropsWithChildren<P>,\n  config?: RendererConfig<W>,\n): UseRendererResult<W>;\nexport function useRenderer<P extends {}, W extends WebComponentRenderer>(\n  reactRendererOrNode: ReactNode | ComponentType<P> | null | undefined,\n  convert?: (props: Slice<Parameters<W>, 1>) => PropsWithChildren<P>,\n  config?: RendererConfig<W>,\n): UseRendererResult<W> {\n  const [map, update] = useReducer<typeof rendererReducer<W>>(rendererReducer, initialState);\n  const renderer = useCallback(\n    ((...args: Parameters<W>) => {\n      if (config?.renderMode === 'microtask') {\n        flushMicrotask(() => update(args));\n      } else if (config?.renderMode === 'sync') {\n        flushSync(() => update(args));\n      } else {\n        update(args);\n      }\n    }) as W,\n    [],\n  );\n\n  return reactRendererOrNode\n    ? [\n        Array.from(map.entries())\n          .filter(([root, args]) => {\n            return config?.shouldRenderPortal?.(root, ...args) ?? true;\n          })\n          .map(([root, args]) =>\n            createPortal(\n              convert\n                ? createElement<P>(reactRendererOrNode as ComponentType<P>, convert(args))\n                : (reactRendererOrNode as ReactNode),\n              root,\n            ),\n          ),\n        renderer,\n      ]\n    : [];\n}\n", "import { flushSync } from 'react-dom';\n\nconst callbackQueue: Function[] = [];\n\nexport function flushMicrotask(callback: Function) {\n  callbackQueue.push(callback);\n\n  if (callbackQueue.length === 1) {\n    queueMicrotask(() => {\n      flushSync(() => {\n        callbackQueue.splice(0).forEach((callback) => callback());\n      });\n    });\n  }\n}\n", "import type { ComponentType } from 'react';\nimport type { Slice } from './renderer.js';\nimport { useRenderer, type RendererConfig, type UseRendererResult } from './useRenderer.js';\n\nexport type Model<I> = Readonly<{\n  item: I;\n}>;\n\nexport type ReactModelRendererProps<I, M extends Model<I>, O extends HTMLElement> = Readonly<{\n  item: I;\n  model: M;\n  original: O;\n}>;\n\nexport type WebComponentModelRenderer<I, M extends Model<I>, O extends HTMLElement> = (\n  root: HTMLElement,\n  original: O,\n  model: M,\n) => void;\n\nexport function convertModelRendererArgs<I, M extends Model<I>, O extends HTMLElement>([original, model]: Slice<\n  Parameters<WebComponentModelRenderer<I, M, O>>,\n  1\n>): ReactModelRendererProps<I, M, O> {\n  return { item: model.item, model, original };\n}\n\nexport function useModelRenderer<I, M extends Model<I>, O extends HTMLElement>(\n  reactRenderer?: ComponentType<ReactModelRendererProps<I, M, O>> | null,\n  config?: RendererConfig<WebComponentModelRenderer<I, M, O>>,\n): UseRendererResult<WebComponentModelRenderer<I, M, O>> {\n  return useRenderer(reactRenderer, convertModelRendererArgs, config);\n}\n", "export * from \"@vaadin/combo-box/vaadin-combo-box.js\";\nimport type { ComboBoxDefaultItem } from '@vaadin/combo-box';\nimport { type ComponentType, forwardRef, type ReactElement, type RefAttributes, type ForwardedRef } from 'react';\nimport {\n  ComboBox as _ComboBox,\n  type ComboBoxElement,\n  type ComboBoxProps as _ComboBoxProps,\n} from './generated/ComboBox.js';\nimport type { ComboBoxReactRendererProps } from './renderers/combobox.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/ComboBox.js';\n\nexport type ComboBoxProps<TItem> = Partial<Omit<_ComboBoxProps<TItem>, 'renderer'>> &\n  Readonly<{\n    renderer?: ComponentType<ComboBoxReactRendererProps<TItem>> | null;\n  }>;\n\nfunction ComboBox<TItem = ComboBoxDefaultItem>(\n  props: ComboBoxProps<TItem>,\n  ref: ForwardedRef<ComboBoxElement<TItem>>,\n): ReactElement | null {\n  const [portals, renderer] = useModelRenderer(props.renderer);\n\n  return (\n    <_ComboBox<TItem> {...props} ref={ref} renderer={renderer}>\n      {props.children}\n      {portals}\n    </_ComboBox>\n  );\n}\n\nconst ForwardedComboBox = forwardRef(ComboBox) as <TItem = ComboBoxDefaultItem>(\n  props: ComboBoxProps<TItem> & RefAttributes<ComboBoxElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedComboBox as ComboBox };\n", "import type { EventName } from \"@lit/react\";\nimport { ComboBox as ComboBoxElement, type ComboBoxEventMap as _ComboBoxEventMap, } from \"@vaadin/combo-box/vaadin-combo-box.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ComboBoxElement, };\nexport type ComboBoxEventMap<T1> = Readonly<{\n    onValidated: EventName<_ComboBoxEventMap<T1>[\"validated\"]>;\n    onChange: EventName<_ComboBoxEventMap<T1>[\"change\"]>;\n    onInput: EventName<_ComboBoxEventMap<T1>[\"input\"]>;\n    onCustomValueSet: EventName<_ComboBoxEventMap<T1>[\"custom-value-set\"]>;\n    onSelectedItemChanged: EventName<_ComboBoxEventMap<T1>[\"selected-item-changed\"]>;\n    onValueChanged: EventName<_ComboBoxEventMap<T1>[\"value-changed\"]>;\n    onInvalidChanged: EventName<_ComboBoxEventMap<T1>[\"invalid-changed\"]>;\n    onOpenedChanged: EventName<_ComboBoxEventMap<T1>[\"opened-changed\"]>;\n    onFilterChanged: EventName<_ComboBoxEventMap<T1>[\"filter-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onCustomValueSet: \"custom-value-set\", onSelectedItemChanged: \"selected-item-changed\", onValueChanged: \"value-changed\", onInvalidChanged: \"invalid-changed\", onOpenedChanged: \"opened-changed\", onFilterChanged: \"filter-changed\" } as ComboBoxEventMap<any>;\nexport type ComboBoxProps<T1> = WebComponentProps<ComboBoxElement<T1>, ComboBoxEventMap<T1>>;\nexport const ComboBox = createComponent({\n    elementClass: ComboBoxElement, events, react: React, tagName: \"vaadin-combo-box\"\n}) as <T1>(props: ComboBoxProps<T1> & React.RefAttributes<ComboBoxElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/confirm-dialog/vaadin-confirm-dialog.js\";\nimport type { HTMLAttributes, ReactElement, RefAttributes } from 'react';\nimport {\n  ConfirmDialogElement,\n  ConfirmDialog as _ConfirmDialog,\n  type ConfirmDialogProps as _ConfirmDialogProps,\n} from './generated/ConfirmDialog.js';\n\nexport * from './generated/ConfirmDialog.js';\n\ntype OmittedConfirmDialogHTMLAttributes = Omit<\n  HTMLAttributes<ConfirmDialogElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'children' | 'aria-label'\n>;\n\nexport type ConfirmDialogProps = Partial<Omit<_ConfirmDialogProps, keyof OmittedConfirmDialogHTMLAttributes>>;\n\nexport const ConfirmDialog = _ConfirmDialog as (\n  props: ConfirmDialogProps & RefAttributes<ConfirmDialogElement>,\n) => ReactElement | null;\n", "import type { EventName } from \"@lit/react\";\nimport { ConfirmDialog as ConfirmDialogElement, type ConfirmDialogEventMap as _ConfirmDialogEventMap, } from \"@vaadin/confirm-dialog/vaadin-confirm-dialog.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ConfirmDialogElement, };\nexport type ConfirmDialogEventMap = Readonly<{\n    onClosed: EventName<_ConfirmDialogEventMap[\"closed\"]>;\n    onCancel: EventName<_ConfirmDialogEventMap[\"cancel\"]>;\n    onConfirm: EventName<_ConfirmDialogEventMap[\"confirm\"]>;\n    onReject: EventName<_ConfirmDialogEventMap[\"reject\"]>;\n    onOpenedChanged: EventName<_ConfirmDialogEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onClosed: \"closed\", onCancel: \"cancel\", onConfirm: \"confirm\", onReject: \"reject\", onOpenedChanged: \"opened-changed\" } as ConfirmDialogEventMap;\nexport type ConfirmDialogProps = WebComponentProps<ConfirmDialogElement, ConfirmDialogEventMap>;\nexport const ConfirmDialog = createComponent({\n    elementClass: ConfirmDialogElement, events, react: React, tagName: \"vaadin-confirm-dialog\"\n});\n", "export * from \"@vaadin/context-menu/vaadin-context-menu.js\";\nimport { type ComponentType, type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport {\n  ContextMenu as _ContextMenu,\n  type ContextMenuRendererContext,\n  type ContextMenuElement,\n  type ContextMenuProps as _ContextMenuProps,\n  type ContextMenuItem as _ContextMenuItem,\n} from './generated/ContextMenu.js';\nimport { type ReactContextRendererProps, useContextRenderer } from './renderers/useContextRenderer.js';\nimport { getOriginalItem, mapItemsWithComponents } from './utils/mapItemsWithComponents.js';\n\nexport * from './generated/ContextMenu.js';\n\nexport type ContextMenuReactRendererProps = ReactContextRendererProps<ContextMenuRendererContext, ContextMenuElement>;\n\nexport type ContextMenuItem<TItemData extends object = object> = Omit<\n  _ContextMenuItem<TItemData>,\n  'component' | 'children'\n> & {\n  component?: ReactElement | string;\n\n  children?: Array<ContextMenuItem<TItemData>>;\n};\n\nexport type ContextMenuItemSelectedEvent<TItem extends ContextMenuItem = ContextMenuItem> = CustomEvent<{\n  value: ContextMenuItem<TItem>;\n}>;\n\n// The 'opened' property is omitted because it is readonly in the web component.\n// So you cannot set it up manually, only read from the component.\n// For changing the property, use specific methods of the component.\nexport type ContextMenuProps<TItem extends ContextMenuItem = ContextMenuItem> = Partial<\n  Omit<_ContextMenuProps, 'opened' | 'renderer' | 'items' | 'onItemSelected'>\n> &\n  Readonly<{\n    renderer?: ComponentType<ContextMenuReactRendererProps> | null;\n\n    items?: Array<TItem>;\n\n    onItemSelected?: (event: ContextMenuItemSelectedEvent<TItem>) => void;\n  }>;\n\nfunction ContextMenu<TItem extends ContextMenuItem = ContextMenuItem>(\n  props: ContextMenuProps<TItem>,\n  ref: ForwardedRef<ContextMenuElement>,\n): ReactElement | null {\n  const [portals, renderer] = useContextRenderer(props.renderer);\n  const [itemPortals, webComponentItems] = mapItemsWithComponents(props.items, 'vaadin-context-menu-item');\n\n  const onItemSelected = props.onItemSelected;\n  const mappedOnItemSelected = onItemSelected\n    ? (event: CustomEvent<{ value: _ContextMenuItem }>) => {\n        // Replace the mapped web component item with the original item\n        Object.assign(event.detail, {\n          value: getOriginalItem(event.detail.value),\n        });\n\n        onItemSelected(event as ContextMenuItemSelectedEvent<TItem>);\n      }\n    : undefined;\n  return (\n    <_ContextMenu\n      {...props}\n      ref={ref}\n      renderer={renderer}\n      items={webComponentItems}\n      onItemSelected={mappedOnItemSelected}\n    >\n      {props.children}\n      {portals}\n      {itemPortals}\n    </_ContextMenu>\n  );\n}\n\nconst ForwardedContextMenu = forwardRef(ContextMenu) as <TItem extends ContextMenuItem = ContextMenuItem>(\n  props: ContextMenuProps<TItem> & RefAttributes<ContextMenuElement>,\n) => ReactElement | null;\n\nexport { ForwardedContextMenu as ContextMenu };\n", "import type { EventName } from \"@lit/react\";\nimport { ContextMenu as ContextMenuElement, type ContextMenuEventMap as _ContextMenuEventMap, } from \"@vaadin/context-menu/vaadin-context-menu.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ContextMenuElement, };\nexport type ContextMenuEventMap = Readonly<{\n    onItemSelected: EventName<_ContextMenuEventMap[\"item-selected\"]>;\n    onOpenedChanged: EventName<_ContextMenuEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onItemSelected: \"item-selected\", onOpenedChanged: \"opened-changed\" } as ContextMenuEventMap;\nexport type ContextMenuProps = WebComponentProps<ContextMenuElement, ContextMenuEventMap>;\nexport const ContextMenu = createComponent({\n    elementClass: ContextMenuElement, events, react: React, tagName: \"vaadin-context-menu\"\n});\n", "import type { ComponentType } from 'react';\nimport type { Slice } from './renderer.js';\nimport { useRenderer, type UseRendererResult } from './useRenderer.js';\n\nexport type ReactContextRendererProps<C, O extends HTMLElement> = Readonly<{\n  context: C;\n  original: O;\n}>;\n\nexport type WebComponentContextRenderer<C, O extends HTMLElement> = (\n  root: HTMLElement,\n  original: O,\n  context: C,\n) => void;\n\nexport function convertContextRendererArgs<C, O extends HTMLElement>([original, context]: Slice<\n  Parameters<WebComponentContextRenderer<C, O>>,\n  1\n>): ReactContextRendererProps<C, O> {\n  return { context, original };\n}\n\nexport function useContextRenderer<C, O extends HTMLElement>(\n  reactRenderer?: ComponentType<ReactContextRendererProps<C, O>> | null,\n): UseRendererResult<WebComponentContextRenderer<C, O>> {\n  return useRenderer(reactRenderer, convertContextRendererArgs);\n}\n", "import { type ReactElement, type ReactPortal } from 'react';\nimport { createPortal } from 'react-dom';\n\ntype ItemWithReactElementComponent<T> = T & {\n  component?: ReactElement | string;\n  children?: Array<ItemWithReactElementComponent<T>>;\n};\n\ntype ItemWithHTMLElementComponent<T> = T & {\n  component?: HTMLElement | string;\n  children?: Array<ItemWithHTMLElementComponent<T>>;\n  __item?: ItemWithReactElementComponent<unknown>;\n};\n\n/**\n * This function transforms a hierarchical list of items, where each item may contain a React component,\n * into a list of items where each React component is replaced with an HTMLElement.\n *\n * The React components are not simply removed, but are instead rendered into portals.\n * The HTMLElements created for the portals have the given tag name.\n */\nexport function mapItemsWithComponents<T>(\n  items?: Array<ItemWithReactElementComponent<T>>,\n  wrapperTagName = 'div',\n): [Array<ReactPortal>, Array<ItemWithHTMLElementComponent<Omit<T, 'children' | 'component'>>> | undefined] {\n  const itemPortals: ReactPortal[] = [];\n\n  const webComponentItems = items?.map((item) => {\n    const { component, children, ...rest } = item;\n\n    // Recursively map children\n    const [childPortals, webComponentChildren] = mapItemsWithComponents(children, wrapperTagName);\n    itemPortals.push(...childPortals);\n\n    if (component && typeof component !== 'string') {\n      // Component is a React element, create a portal for it\n      const root = document.createElement(wrapperTagName);\n      itemPortals.push(createPortal(component, root));\n\n      return {\n        ...rest,\n        component: root,\n        children: webComponentChildren,\n        __item: item,\n      };\n    } else {\n      return {\n        // Component is a string, or undefined, add it as such\n        ...rest,\n        component,\n        children: webComponentChildren,\n        __item: item,\n      };\n    }\n  });\n\n  return [itemPortals, webComponentItems];\n}\n\n/**\n * Returns the original item related to the given mapped item.\n */\nexport function getOriginalItem<T>(mappedItem: ItemWithHTMLElementComponent<T>) {\n  return mappedItem.__item;\n}\n", "export * from \"@vaadin/custom-field/vaadin-custom-field.js\";\nexport * from './generated/CustomField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { CustomField as CustomFieldElement, type CustomFieldEventMap as _CustomFieldEventMap, } from \"@vaadin/custom-field/vaadin-custom-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { CustomFieldElement, };\nexport type CustomFieldEventMap = Readonly<{\n    onValidated: EventName<_CustomFieldEventMap[\"validated\"]>;\n    onChange: EventName<_CustomFieldEventMap[\"change\"]>;\n    onInvalidChanged: EventName<_CustomFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_CustomFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as CustomFieldEventMap;\nexport type CustomFieldProps = WebComponentProps<CustomFieldElement, CustomFieldEventMap>;\nexport const CustomField = createComponent({\n    elementClass: CustomFieldElement, events, react: React, tagName: \"vaadin-custom-field\"\n});\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-date-picker-overlay-content.js';\r\nimport './vaadin-date-picker-overlay.js';\r\nimport { dashToCamelCase } from '@polymer/polymer/lib/utils/case-map.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ValidateMixin } from '@vaadin/field-base/src/validate-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { DatePickerMixin } from './vaadin-date-picker-mixin.js';\r\n\r\n/**\r\n * `<vaadin-date-picker-light>` is a customizable version of the `<vaadin-date-picker>` providing\r\n * only the scrollable month calendar view and leaving the input field definition to the user.\r\n *\r\n * To create a custom input field, you need to add a child element which has a two-way\r\n * data-bindable property representing the input value. The property name is expected\r\n * to be `bindValue` by default. See the example below for a simplest possible example\r\n * using an `<input>` element.\r\n *\r\n * ```html\r\n * <vaadin-date-picker-light attr-for-value=\"value\">\r\n *   <input class=\"input\">\r\n * </vaadin-date-picker-light>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * In addition to `<vaadin-date-picker-light>` itself, the following\r\n * internal components are themable:\r\n *\r\n * - `<vaadin-date-picker-overlay>`\r\n * - `<vaadin-date-picker-overlay-content>`\r\n * - `<vaadin-month-calendar>`\r\n *\r\n * Note: the `theme` attribute value set on `<vaadin-date-picker-light>`\r\n * is propagated to the internal themable components listed above.\r\n *\r\n * @fires {Event} change - Fired when the user commits a value change.\r\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\r\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\r\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @mixes DatePickerMixin\r\n */\r\nclass DatePickerLight extends ThemableMixin(DatePickerMixin(ValidateMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: inline-block;\r\n        }\r\n\r\n        :host([opened]) {\r\n          pointer-events: auto;\r\n        }\r\n      </style>\r\n      <slot></slot>\r\n\r\n      <vaadin-date-picker-overlay\r\n        id=\"overlay\"\r\n        fullscreen$=\"[[_fullscreen]]\"\r\n        opened=\"{{opened}}\"\r\n        on-vaadin-overlay-escape-press=\"_onOverlayEscapePress\"\r\n        on-vaadin-overlay-open=\"_onOverlayOpened\"\r\n        on-vaadin-overlay-closing=\"_onOverlayClosed\"\r\n        restore-focus-on-close\r\n        restore-focus-node=\"[[inputElement]]\"\r\n        theme$=\"[[_theme]]\"\r\n      ></vaadin-date-picker-overlay>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-date-picker-light';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * Name of the two-way data-bindable property representing the\r\n       * value of the custom input field.\r\n       * @attr {string} attr-for-value\r\n       * @type {string}\r\n       */\r\n      attrForValue: {\r\n        type: String,\r\n        value: 'value',\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * This method from InputMixin is overridden to make\r\n   * the input element value property customizable.\r\n   *\r\n   * @protected\r\n   * @override\r\n   * @return {string}\r\n   */\r\n  get _inputElementValueProperty() {\r\n    return dashToCamelCase(this.attrForValue);\r\n  }\r\n\r\n  /** @protected */\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const cssSelector = 'vaadin-text-field,.input';\r\n    this._setInputElement(this.querySelector(cssSelector));\r\n    this._setFocusElement(this.inputElement);\r\n  }\r\n\r\n  // Workaround https://github.com/vaadin/web-components/issues/2855\r\n  /** @protected */\r\n  _openedChanged(opened) {\r\n    super._openedChanged(opened);\r\n\r\n    this.$.overlay.positionTarget = this.inputElement;\r\n    this.$.overlay.noVerticalOverlap = true;\r\n  }\r\n}\r\n\r\ndefineCustomElement(DatePickerLight);\r\n\r\nexport { DatePickerLight };\r\n", "export * from \"@vaadin/date-picker/vaadin-date-picker-light.js\";\nexport * from './generated/DatePickerLight.js';\n", "import type { EventName } from \"@lit/react\";\nimport { DatePickerLight as DatePickerLightElement, type DatePickerLightEventMap as _DatePickerLightEventMap, } from \"@vaadin/date-picker/vaadin-date-picker-light.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DatePickerLightElement, };\nexport type DatePickerLightEventMap = Readonly<{\n    onValidated: EventName<_DatePickerLightEventMap[\"validated\"]>;\n    onChange: EventName<_DatePickerLightEventMap[\"change\"]>;\n    onOpenedChanged: EventName<_DatePickerLightEventMap[\"opened-changed\"]>;\n    onValueChanged: EventName<_DatePickerLightEventMap[\"value-changed\"]>;\n    onInvalidChanged: EventName<_DatePickerLightEventMap[\"invalid-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onOpenedChanged: \"opened-changed\", onValueChanged: \"value-changed\", onInvalidChanged: \"invalid-changed\" } as DatePickerLightEventMap;\nexport type DatePickerLightProps = WebComponentProps<DatePickerLightElement, DatePickerLightEventMap>;\nexport const DatePickerLight = createComponent({\n    elementClass: DatePickerLightElement, events, react: React, tagName: \"vaadin-date-picker-light\"\n});\n", "export * from \"@vaadin/date-picker/vaadin-date-picker.js\";\nexport * from './generated/DatePicker.js';\n", "import type { EventName } from \"@lit/react\";\nimport { DatePicker as DatePickerElement, type DatePickerEventMap as _DatePickerEventMap, } from \"@vaadin/date-picker/vaadin-date-picker.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DatePickerElement, };\nexport type DatePickerEventMap = Readonly<{\n    onValidated: EventName<_DatePickerEventMap[\"validated\"]>;\n    onChange: EventName<_DatePickerEventMap[\"change\"]>;\n    onInput: EventName<_DatePickerEventMap[\"input\"]>;\n    onOpenedChanged: EventName<_DatePickerEventMap[\"opened-changed\"]>;\n    onValueChanged: EventName<_DatePickerEventMap[\"value-changed\"]>;\n    onInvalidChanged: EventName<_DatePickerEventMap[\"invalid-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onOpenedChanged: \"opened-changed\", onValueChanged: \"value-changed\", onInvalidChanged: \"invalid-changed\" } as DatePickerEventMap;\nexport type DatePickerProps = WebComponentProps<DatePickerElement, DatePickerEventMap>;\nexport const DatePicker = createComponent({\n    elementClass: DatePickerElement, events, react: React, tagName: \"vaadin-date-picker\"\n});\n", "export * from \"@vaadin/date-time-picker/vaadin-date-time-picker.js\";\nimport { forwardRef } from 'react';\nimport {\n  DateTimePicker as _DateTimePicker,\n  type DateTimePickerElement,\n  type DateTimePickerProps,\n} from './generated/DateTimePicker.js';\nimport createComponentWithOrderedProps from './utils/createComponentWithOrderedProps.js';\n\nexport * from './generated/DateTimePicker.js';\n\nexport const DateTimePicker = forwardRef(\n  createComponentWithOrderedProps<DateTimePickerProps, DateTimePickerElement>(_DateTimePicker, 'value'),\n);\n", "import type { EventName } from \"@lit/react\";\nimport { DateTimePicker as DateTimePickerElement, type DateTimePickerEventMap as _DateTimePickerEventMap, } from \"@vaadin/date-time-picker/vaadin-date-time-picker.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DateTimePickerElement, };\nexport type DateTimePickerEventMap = Readonly<{\n    onValidated: EventName<_DateTimePickerEventMap[\"validated\"]>;\n    onChange: EventName<_DateTimePickerEventMap[\"change\"]>;\n    onInvalidChanged: EventName<_DateTimePickerEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_DateTimePickerEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as DateTimePickerEventMap;\nexport type DateTimePickerProps = WebComponentProps<DateTimePickerElement, DateTimePickerEventMap>;\nexport const DateTimePicker = createComponent({\n    elementClass: DateTimePickerElement, events, react: React, tagName: \"vaadin-date-time-picker\"\n});\n", "import { createElement, type ForwardedRef, type RefAttributes, type FC } from 'react';\n\nexport default function createComponentWithOrderedProps<P extends {}, E extends HTMLElement>(\n  component: FC<P>,\n  ...names: ReadonlyArray<keyof P>\n) {\n  return (props: P, ref: ForwardedRef<E>) => {\n    const orderedProps: Partial<P> & RefAttributes<E> = {};\n\n    for (const name of Object.keys(props) as Array<keyof P>) {\n      if (!names.includes(name)) {\n        orderedProps[name] = props[name];\n      }\n    }\n\n    for (const name of names) {\n      if (props.hasOwnProperty(name)) {\n        orderedProps[name] = props[name];\n      }\n    }\n\n    orderedProps.ref = ref;\n\n    return createElement(component, orderedProps as Required<P & RefAttributes<E>>);\n  };\n}\n", "export * from \"@vaadin/details/vaadin-details-summary.js\";\nexport * from './generated/DetailsSummary.js';\n", "import type {} from \"@lit/react\";\nimport { DetailsSummary as DetailsSummaryElement, } from \"@vaadin/details/vaadin-details-summary.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DetailsSummaryElement, };\nexport type DetailsSummaryEventMap = Readonly<{}>;\nconst events = {} as DetailsSummaryEventMap;\nexport type DetailsSummaryProps = WebComponentProps<DetailsSummaryElement, DetailsSummaryEventMap>;\nexport const DetailsSummary = createComponent({\n    elementClass: DetailsSummaryElement, events, react: React, tagName: \"vaadin-details-summary\"\n});\n", "export * from \"@vaadin/details/vaadin-details.js\";\nexport * from './generated/Details.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Details as DetailsElement, type DetailsEventMap as _DetailsEventMap, } from \"@vaadin/details/vaadin-details.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DetailsElement, };\nexport type DetailsEventMap = Readonly<{\n    onOpenedChanged: EventName<_DetailsEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onOpenedChanged: \"opened-changed\" } as DetailsEventMap;\nexport type DetailsProps = WebComponentProps<DetailsElement, DetailsEventMap>;\nexport const Details = createComponent({\n    elementClass: DetailsElement, events, react: React, tagName: \"vaadin-details\"\n});\n", "export * from \"@vaadin/dialog/vaadin-dialog.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  type HTMLAttributes,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n} from 'react';\nimport { Dialog as _Dialog, type DialogElement, type DialogProps as _DialogProps } from './generated/Dialog.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/Dialog.js';\n\nexport type DialogReactRendererProps = ReactSimpleRendererProps<DialogElement>;\n\ntype OmittedDialogHTMLAttributes = Omit<\n  HTMLAttributes<DialogElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'aria-label' | 'draggable'\n>;\n\nexport type DialogProps = Partial<\n  Omit<_DialogProps, 'children' | 'footerRenderer' | 'headerRenderer' | 'renderer' | keyof OmittedDialogHTMLAttributes>\n> &\n  Readonly<{\n    children?: ReactNode | ComponentType<DialogReactRendererProps>;\n    footer?: ReactNode;\n    footerRenderer?: ComponentType<DialogReactRendererProps> | null;\n    header?: ReactNode;\n    headerRenderer?: ComponentType<DialogReactRendererProps> | null;\n    renderer?: ComponentType<DialogReactRendererProps> | null;\n  }>;\n\nfunction Dialog(\n  { children, footer, header, ...props }: DialogProps,\n  ref: ForwardedRef<DialogElement>,\n): ReactElement | null {\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer);\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header);\n  const [portals, renderer] = useSimpleOrChildrenRenderer(props.renderer, children);\n\n  return (\n    <_Dialog {...props} ref={ref} footerRenderer={footerRenderer} headerRenderer={headerRenderer} renderer={renderer}>\n      {headerPortals}\n      {footerPortals}\n      {portals}\n    </_Dialog>\n  );\n}\n\nconst ForwardedDialog = forwardRef(Dialog);\n\nexport { ForwardedDialog as Dialog };\n", "import type { EventName } from \"@lit/react\";\nimport { Dialog as DialogElement, type DialogEventMap as _DialogEventMap, } from \"@vaadin/dialog/vaadin-dialog.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DialogElement, };\nexport type DialogEventMap = Readonly<{\n    onClosed: EventName<_DialogEventMap[\"closed\"]>;\n    onDragged: EventName<_DialogEventMap[\"dragged\"]>;\n    onResize: EventName<_DialogEventMap[\"resize\"]>;\n    onOpenedChanged: EventName<_DialogEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onClosed: \"closed\", onDragged: \"dragged\", onResize: \"resize\", onOpenedChanged: \"opened-changed\" } as DialogEventMap;\nexport type DialogProps = WebComponentProps<DialogElement, DialogEventMap>;\nexport const Dialog = createComponent({\n    elementClass: DialogElement, events, react: React, tagName: \"vaadin-dialog\"\n});\n", "import type { ComponentType, PropsWithChildren } from 'react';\nimport type { Slice } from './renderer.js';\nimport { useRenderer, type RendererConfig, type UseRendererResult } from './useRenderer.js';\n\nexport type ReactSimpleRendererProps<O extends HTMLElement> = Readonly<{\n  original: O;\n}>;\nexport type WebComponentSimpleRenderer<O extends HTMLElement> = (root: HTMLElement, original: O) => void;\n\nfunction convertSimpleRendererArgs<O extends HTMLElement>([original]: Slice<\n  Parameters<WebComponentSimpleRenderer<O>>,\n  1\n>): PropsWithChildren<ReactSimpleRendererProps<O>> {\n  return { original };\n}\n\nexport function useSimpleRenderer<O extends HTMLElement>(\n  reactRenderer?: ComponentType<ReactSimpleRendererProps<O>> | null,\n  config?: RendererConfig<WebComponentSimpleRenderer<O>>,\n): UseRendererResult<WebComponentSimpleRenderer<O>> {\n  return useRenderer(reactRenderer, convertSimpleRendererArgs, config);\n}\n", "import type { ComponentType, ReactNode } from 'react';\nimport { useRenderer } from './useRenderer.js';\nimport type { RendererConfig, UseRendererResult } from './useRenderer.js';\nimport {\n  type ReactSimpleRendererProps,\n  useSimpleRenderer,\n  type WebComponentSimpleRenderer,\n} from './useSimpleRenderer.js';\n\nexport function useSimpleOrChildrenRenderer<O extends HTMLElement>(\n  fnRenderer?: ComponentType<ReactSimpleRendererProps<O>> | null,\n  children?: ReactNode | ComponentType<ReactSimpleRendererProps<O>>,\n  config?: RendererConfig<WebComponentSimpleRenderer<O>>,\n): UseRendererResult<WebComponentSimpleRenderer<O>> {\n  let _children: ReactNode | undefined;\n  let _fnRenderer: ComponentType<ReactSimpleRendererProps<O>> | null | undefined;\n  let shouldUseSimpleRendererResult = false;\n\n  if (typeof children === 'function') {\n    _children = undefined;\n    _fnRenderer = children;\n    shouldUseSimpleRendererResult = true;\n  } else {\n    _children = children;\n    _fnRenderer = fnRenderer;\n    shouldUseSimpleRendererResult = !!_fnRenderer;\n  }\n\n  const useChildrenRendererResult = useRenderer(_children, undefined, config);\n  const useSimpleRendererResult = useSimpleRenderer(_fnRenderer, config);\n\n  return shouldUseSimpleRendererResult ? useSimpleRendererResult : useChildrenRendererResult;\n}\n", "export * from \"@vaadin/email-field/vaadin-email-field.js\";\nexport * from './generated/EmailField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { EmailField as EmailFieldElement, type EmailFieldEventMap as _EmailFieldEventMap, } from \"@vaadin/email-field/vaadin-email-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { EmailFieldElement, };\nexport type EmailFieldEventMap = Readonly<{\n    onValidated: EventName<_EmailFieldEventMap[\"validated\"]>;\n    onChange: EventName<_EmailFieldEventMap[\"change\"]>;\n    onInput: EventName<_EmailFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_EmailFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_EmailFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as EmailFieldEventMap;\nexport type EmailFieldProps = WebComponentProps<EmailFieldElement, EmailFieldEventMap>;\nexport const EmailField = createComponent({\n    elementClass: EmailFieldElement, events, react: React, tagName: \"vaadin-email-field\"\n});\n", "export * from \"@vaadin/form-layout/vaadin-form-item.js\";\nexport * from './generated/FormItem.js';\n", "import type {} from \"@lit/react\";\nimport { FormItem as FormItemElement, } from \"@vaadin/form-layout/vaadin-form-item.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { FormItemElement, };\nexport type FormItemEventMap = Readonly<{}>;\nconst events = {} as FormItemEventMap;\nexport type FormItemProps = WebComponentProps<FormItemElement, FormItemEventMap>;\nexport const FormItem = createComponent({\n    elementClass: FormItemElement, events, react: React, tagName: \"vaadin-form-item\"\n});\n", "export * from \"@vaadin/form-layout/vaadin-form-layout.js\";\nexport * from './generated/FormLayout.js';\n", "import type {} from \"@lit/react\";\nimport { FormLayout as FormLayoutElement, } from \"@vaadin/form-layout/vaadin-form-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { FormLayoutElement, };\nexport type FormLayoutEventMap = Readonly<{}>;\nconst events = {} as FormLayoutEventMap;\nexport type FormLayoutProps = WebComponentProps<FormLayoutElement, FormLayoutEventMap>;\nexport const FormLayout = createComponent({\n    elementClass: FormLayoutElement, events, react: React, tagName: \"vaadin-form-layout\"\n});\n", "export * from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport {\n  forwardRef,\n  type ComponentType,\n  type ForwardedRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport {\n  GridColumnGroup as _GridColumnGroup,\n  type GridColumnGroupElement,\n  type GridColumnGroupProps as _GridColumnGroupProps,\n} from './generated/GridColumnGroup.js';\nimport { type ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridColumnGroup.js';\n\nexport type GridColumnGroupProps = Partial<\n  Omit<\n    _GridColumnGroupProps,\n    'footerRenderer' | 'header' | 'headerRenderer' | keyof OmittedGridColumnHTMLAttributes<any>\n  >\n> &\n  Readonly<{\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n  }>;\n\nfunction GridColumnGroup(\n  { children, footer, header, ...props }: GridColumnGroupProps,\n  ref: ForwardedRef<GridColumnGroupElement>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderMode: 'microtask',\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridColumnGroup {...props} footerRenderer={footerRenderer} headerRenderer={headerRenderer} ref={ref}>\n      {headerPortals}\n      {footerPortals}\n      {children}\n    </_GridColumnGroup>\n  );\n}\n\nconst ForwardedGridColumnGroup = forwardRef(GridColumnGroup) as (\n  props: GridColumnGroupProps & RefAttributes<GridColumnGroupElement>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumnGroup as GridColumnGroup };\n", "import type {} from \"@lit/react\";\nimport { GridColumnGroup as GridColumnGroupElement, } from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnGroupElement, };\nexport type GridColumnGroupEventMap = Readonly<{}>;\nconst events = {} as GridColumnGroupEventMap;\nexport type GridColumnGroupProps = WebComponentProps<GridColumnGroupElement, GridColumnGroupEventMap>;\nexport const GridColumnGroup = createComponent({\n    elementClass: GridColumnGroupElement, events, react: React, tagName: \"vaadin-grid-column-group\"\n});\n", "export * from \"@vaadin/grid/vaadin-grid-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridColumn as _GridColumn,\n  type GridColumnElement,\n  type GridColumnProps as _GridColumnProps,\n} from './generated/GridColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\n\nexport * from './generated/GridColumn.js';\n\n// Properties from HTMLAttributes that are omitted from all GridColumn types\nexport type OmittedGridColumnHTMLAttributes<TItem> = Omit<\n  React.HTMLAttributes<GridColumnElement<TItem>>,\n  'hidden' | 'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'children' | 'title'\n>;\n\nexport type GridColumnProps<TItem> = Partial<\n  Omit<\n    _GridColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'header'\n    | 'headerRenderer'\n    | 'renderer'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridColumn<TItem = GridDefaultItem>(\n  { children, footer, header, ...props }: GridColumnProps<TItem>,\n  ref: ForwardedRef<GridColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderMode: 'microtask',\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? children, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridColumn>\n  );\n}\n\nconst ForwardedGridColumn = forwardRef(GridColumn) as <TItem = GridDefaultItem>(\n  props: GridColumnProps<TItem> & RefAttributes<GridColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumn as GridColumn };\n", "import type {} from \"@lit/react\";\nimport { GridColumn as GridColumnElement, } from \"@vaadin/grid/vaadin-grid-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnElement, };\nexport type GridColumnEventMap = Readonly<{}>;\nconst events = {} as GridColumnEventMap;\nexport type GridColumnProps<T1> = WebComponentProps<GridColumnElement<T1>, GridColumnEventMap>;\nexport const GridColumn = createComponent({\n    elementClass: GridColumnElement, events, react: React, tagName: \"vaadin-grid-column\"\n}) as <T1>(props: GridColumnProps<T1> & React.RefAttributes<GridColumnElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/grid/vaadin-grid-filter.js\";\nexport * from './generated/GridFilter.js';\n", "import type { EventName } from \"@lit/react\";\nimport { GridFilter as GridFilterElement, type GridFilterEventMap as _GridFilterEventMap, } from \"@vaadin/grid/vaadin-grid-filter.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridFilterElement, };\nexport type GridFilterEventMap = Readonly<{\n    onValueChanged: EventName<_GridFilterEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValueChanged: \"value-changed\" } as GridFilterEventMap;\nexport type GridFilterProps = WebComponentProps<GridFilterElement, GridFilterEventMap>;\nexport const GridFilter = createComponent({\n    elementClass: GridFilterElement, events, react: React, tagName: \"vaadin-grid-filter\"\n});\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const GridFilterColumnMixin = (superClass) =>\r\n  class extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * JS Path of the property in the item used for filtering the data.\r\n         */\r\n        path: {\r\n          type: String,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Text to display as the label of the column filter text-field.\r\n         */\r\n        header: {\r\n          type: String,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_onHeaderRendererOrBindingChanged(_headerRenderer, _headerCell, path, header)'];\r\n    }\r\n\r\n    /**\r\n     * Renders the grid filter with the custom text field to the header cell.\r\n     *\r\n     * @override\r\n     */\r\n    _defaultHeaderRenderer(root, _column) {\r\n      let filter = root.firstElementChild;\r\n      let textField = filter ? filter.firstElementChild : undefined;\r\n\r\n      if (!filter) {\r\n        filter = document.createElement('vaadin-grid-filter');\r\n        textField = document.createElement('vaadin-text-field');\r\n        textField.setAttribute('theme', 'small');\r\n        textField.setAttribute('style', 'max-width: 100%;');\r\n        textField.setAttribute('focus-target', '');\r\n        filter.appendChild(textField);\r\n        root.appendChild(filter);\r\n      }\r\n\r\n      filter.path = this.path;\r\n\r\n      textField.label = this.__getHeader(this.header, this.path);\r\n    }\r\n\r\n    /**\r\n     * The filter column doesn't allow to use a custom header renderer\r\n     * to override the header cell content.\r\n     * It always renders the grid filter to the header cell.\r\n     *\r\n     * @override\r\n     */\r\n    _computeHeaderRenderer() {\r\n      return this._defaultHeaderRenderer;\r\n    }\r\n\r\n    /** @private */\r\n    __getHeader(header, path) {\r\n      if (header) {\r\n        return header;\r\n      }\r\n\r\n      if (path) {\r\n        return this._generateHeader(path);\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-grid-filter.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { GridColumn } from './vaadin-grid-column.js';\r\nimport { GridFilterColumnMixin } from './vaadin-grid-filter-column-mixin.js';\r\n\r\n/**\r\n * `<vaadin-grid-filter-column>` is a helper element for the `<vaadin-grid>`\r\n * that provides default header renderer and functionality for filtering.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <vaadin-grid items=\"[[items]]\">\r\n *  <vaadin-grid-filter-column path=\"name.first\"></vaadin-grid-filter-column>\r\n *\r\n *  <vaadin-grid-column>\r\n *    ...\r\n * ```\r\n *\r\n * @customElement\r\n * @extends GridColumn\r\n * @mixes GridFilterColumnMixin\r\n */\r\nclass GridFilterColumn extends GridFilterColumnMixin(GridColumn) {\r\n  static get is() {\r\n    return 'vaadin-grid-filter-column';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridFilterColumn);\r\n\r\nexport { GridFilterColumn };\r\n", "export * from \"@vaadin/grid/vaadin-grid-filter-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridFilterColumn as _GridFilterColumn,\n  type GridFilterColumnElement,\n  type GridFilterColumnProps as _GridFilterColumnProps,\n} from './generated/GridFilterColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridFilterColumn.js';\n\n/*\n * According to https://github.com/vaadin/web-components/issues/1485, the\n * `headerRenderer` is not allowed for `vaadin-grid-filter-column`.\n */\nexport type GridFilterColumnProps<TItem> = Partial<\n  Omit<\n    _GridFilterColumnProps<TItem>,\n    'children' | 'footerRenderer' | 'headerRenderer' | 'renderer' | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridFilterColumn<TItem = GridDefaultItem>(\n  { footer, ...props }: GridFilterColumnProps<TItem>,\n  ref: ForwardedRef<GridFilterColumnElement<TItem>>,\n): ReactElement | null {\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridFilterColumn<TItem> {...props} footerRenderer={footerRenderer} ref={ref} renderer={bodyRenderer}>\n      {footerPortals}\n      {bodyPortals}\n    </_GridFilterColumn>\n  );\n}\n\nconst ForwardedGridFilterColumn = forwardRef(GridFilterColumn) as <TItem = GridDefaultItem>(\n  props: GridFilterColumnProps<TItem> & RefAttributes<GridFilterColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridFilterColumn as GridFilterColumn };\n", "import type {} from \"@lit/react\";\nimport { GridFilterColumn as GridFilterColumnElement, } from \"@vaadin/grid/vaadin-grid-filter-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridFilterColumnElement, };\nexport type GridFilterColumnEventMap = Readonly<{}>;\nconst events = {} as GridFilterColumnEventMap;\nexport type GridFilterColumnProps<T1> = WebComponentProps<GridFilterColumnElement<T1>, GridFilterColumnEventMap>;\nexport const GridFilterColumn = createComponent({\n    elementClass: GridFilterColumnElement, events, react: React, tagName: \"vaadin-grid-filter-column\"\n}) as <T1>(props: GridFilterColumnProps<T1> & React.RefAttributes<GridFilterColumnElement<T1>>) => React.ReactElement | null;\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { GridSelectionColumnBaseMixin } from './vaadin-grid-selection-column-base-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes GridSelectionColumnBaseMixin\r\n */\r\nexport const GridSelectionColumnMixin = (superClass) =>\r\n  class extends GridSelectionColumnBaseMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * The previous state of activeItem. When activeItem turns to `null`,\r\n         * previousActiveItem will have an Object with just unselected activeItem\r\n         * @private\r\n         */\r\n        __previousActiveItem: Object,\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__onSelectAllChanged(selectAll)'];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.__boundUpdateSelectAllVisibility = this.__updateSelectAllVisibility.bind(this);\r\n      this.__boundOnSelectedItemsChanged = this.__onSelectedItemsChanged.bind(this);\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      this._grid.removeEventListener('data-provider-changed', this.__boundUpdateSelectAllVisibility);\r\n      this._grid.removeEventListener('is-item-selectable-changed', this.__boundUpdateSelectAllVisibility);\r\n      this._grid.removeEventListener('filter-changed', this.__boundOnSelectedItemsChanged);\r\n      this._grid.removeEventListener('selected-items-changed', this.__boundOnSelectedItemsChanged);\r\n\r\n      super.disconnectedCallback();\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      if (this._grid) {\r\n        this._grid.addEventListener('data-provider-changed', this.__boundUpdateSelectAllVisibility);\r\n        this._grid.addEventListener('is-item-selectable-changed', this.__boundUpdateSelectAllVisibility);\r\n        this._grid.addEventListener('filter-changed', this.__boundOnSelectedItemsChanged);\r\n        this._grid.addEventListener('selected-items-changed', this.__boundOnSelectedItemsChanged);\r\n        this.__updateSelectAllVisibility();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onSelectAllChanged(selectAll) {\r\n      if (selectAll === undefined || !this._grid) {\r\n        return;\r\n      }\r\n\r\n      if (!this.__selectAllInitialized) {\r\n        // The initial value for selectAll property was applied, avoid clearing pre-selected items\r\n        this.__selectAllInitialized = true;\r\n        return;\r\n      }\r\n\r\n      if (this._selectAllChangeLock) {\r\n        return;\r\n      }\r\n\r\n      if (selectAll && this.__hasArrayDataProvider()) {\r\n        this.__withFilteredItemsArray((items) => {\r\n          this._grid.selectedItems = items;\r\n        });\r\n      } else {\r\n        this._grid.selectedItems = [];\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Override a method from `GridSelectionColumnBaseMixin` to handle the user\r\n     * selecting all items.\r\n     *\r\n     * @protected\r\n     * @override\r\n     */\r\n    _selectAll() {\r\n      this.selectAll = true;\r\n    }\r\n\r\n    /**\r\n     * Override a method from `GridSelectionColumnBaseMixin` to handle the user\r\n     * deselecting all items.\r\n     *\r\n     * @protected\r\n     * @override\r\n     */\r\n    _deselectAll() {\r\n      this.selectAll = false;\r\n    }\r\n\r\n    /**\r\n     * Override a method from `GridSelectionColumnBaseMixin` to handle the user\r\n     * selecting an item.\r\n     *\r\n     * @param {Object} item the item to select\r\n     * @protected\r\n     * @override\r\n     */\r\n    _selectItem(item) {\r\n      if (this._grid.__isItemSelectable(item)) {\r\n        this._grid.selectItem(item);\r\n        this._grid.dispatchEvent(\r\n          new CustomEvent('item-toggle', {\r\n            detail: {\r\n              item,\r\n              selected: true,\r\n              shiftKey: this._shiftKeyDown,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Override a method from `GridSelectionColumnBaseMixin` to handle the user\r\n     * deselecting an item.\r\n     *\r\n     * @param {Object} item the item to deselect\r\n     * @protected\r\n     * @override\r\n     */\r\n    _deselectItem(item) {\r\n      if (this._grid.__isItemSelectable(item)) {\r\n        this._grid.deselectItem(item);\r\n        this._grid.dispatchEvent(\r\n          new CustomEvent('item-toggle', {\r\n            detail: {\r\n              item,\r\n              selected: false,\r\n              shiftKey: this._shiftKeyDown,\r\n            },\r\n          }),\r\n        );\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __hasArrayDataProvider() {\r\n      return Array.isArray(this._grid.items) && !!this._grid.dataProvider;\r\n    }\r\n\r\n    /** @private */\r\n    __onSelectedItemsChanged() {\r\n      this._selectAllChangeLock = true;\r\n      if (this.__hasArrayDataProvider()) {\r\n        this.__withFilteredItemsArray((items) => {\r\n          if (!this._grid.selectedItems.length) {\r\n            this.selectAll = false;\r\n            this._indeterminate = false;\r\n          } else if (items.every((item) => this._grid._isSelected(item))) {\r\n            this.selectAll = true;\r\n            this._indeterminate = false;\r\n          } else {\r\n            this.selectAll = false;\r\n            this._indeterminate = true;\r\n          }\r\n        });\r\n      }\r\n      this._selectAllChangeLock = false;\r\n    }\r\n\r\n    /** @private */\r\n    __updateSelectAllVisibility() {\r\n      // Hide select all checkbox when we can not easily determine the select all checkbox state:\r\n      // - When using a custom data provider\r\n      // - When using conditional selection, where users may not select all items\r\n      this._selectAllHidden = !Array.isArray(this._grid.items) || !!this._grid.isItemSelectable;\r\n    }\r\n\r\n    /**\r\n     * Assuming the grid uses an items array data provider, fetches all the filtered items\r\n     * from the data provider and invokes the callback with the resulting array.\r\n     *\r\n     * @private\r\n     */\r\n    __withFilteredItemsArray(callback) {\r\n      const params = {\r\n        page: 0,\r\n        pageSize: Infinity,\r\n        sortOrders: [],\r\n        filters: this._grid._mapFilters(),\r\n      };\r\n      this._grid.dataProvider(params, (items) => callback(items));\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/checkbox/src/vaadin-checkbox.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { GridColumn } from './vaadin-grid-column.js';\r\nimport { GridSelectionColumnMixin } from './vaadin-grid-selection-column-mixin.js';\r\n\r\n/**\r\n * `<vaadin-grid-selection-column>` is a helper element for the `<vaadin-grid>`\r\n * that provides default renderers and functionality for item selection.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <vaadin-grid items=\"[[items]]\">\r\n *  <vaadin-grid-selection-column frozen auto-select></vaadin-grid-selection-column>\r\n *\r\n *  <vaadin-grid-column>\r\n *    ...\r\n * ```\r\n *\r\n * By default the selection column displays `<vaadin-checkbox>` elements in the\r\n * column cells. The checkboxes in the body rows toggle selection of the corresponding row items.\r\n *\r\n * When the grid data is provided as an array of [`items`](#/elements/vaadin-grid#property-items),\r\n * the column header gets an additional checkbox that can be used for toggling\r\n * selection for all the items at once.\r\n *\r\n * __The default content can also be overridden__\r\n *\r\n * @customElement\r\n * @fires {CustomEvent} select-all-changed - Fired when the `selectAll` property changes.\r\n * @extends GridColumn\r\n * @mixes GridSelectionColumnMixin\r\n */\r\nclass GridSelectionColumn extends GridSelectionColumnMixin(GridColumn) {\r\n  static get is() {\r\n    return 'vaadin-grid-selection-column';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridSelectionColumn);\r\n\r\nexport { GridSelectionColumn };\r\n", "export * from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridSelectionColumn as _GridSelectionColumn,\n  type GridSelectionColumnElement,\n  type GridSelectionColumnProps as _GridSelectionColumnProps,\n} from './generated/GridSelectionColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridSelectionColumn.js';\n\nexport type GridSelectionColumnProps<TItem> = Partial<\n  Omit<\n    _GridSelectionColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'headerRenderer'\n    | 'renderer'\n    | 'header'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridSelectionColumn<TItem = GridDefaultItem>(\n  { footer, header, ...props }: GridSelectionColumnProps<TItem>,\n  ref: ForwardedRef<GridSelectionColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderMode: 'microtask',\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridSelectionColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridSelectionColumn>\n  );\n}\n\nconst ForwardedGridSelectionColumn = forwardRef(GridSelectionColumn) as <TItem = GridDefaultItem>(\n  props: GridSelectionColumnProps<TItem> & RefAttributes<GridSelectionColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridSelectionColumn as GridSelectionColumn };\n", "import type { EventName } from \"@lit/react\";\nimport { GridSelectionColumn as GridSelectionColumnElement, type GridSelectionColumnEventMap as _GridSelectionColumnEventMap, } from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridSelectionColumnElement, };\nexport type GridSelectionColumnEventMap = Readonly<{\n    onSelectAllChanged: EventName<_GridSelectionColumnEventMap[\"select-all-changed\"]>;\n}>;\nconst events = { onSelectAllChanged: \"select-all-changed\" } as GridSelectionColumnEventMap;\nexport type GridSelectionColumnProps<T1> = WebComponentProps<GridSelectionColumnElement<T1>, GridSelectionColumnEventMap>;\nexport const GridSelectionColumn = createComponent({\n    elementClass: GridSelectionColumnElement, events, react: React, tagName: \"vaadin-grid-selection-column\"\n}) as <T1>(props: GridSelectionColumnProps<T1> & React.RefAttributes<GridSelectionColumnElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/grid/vaadin-grid-sorter.js\";\nexport * from './generated/GridSorter.js';\n", "import type { EventName } from \"@lit/react\";\nimport { GridSorter as GridSorterElement, type GridSorterEventMap as _GridSorterEventMap, } from \"@vaadin/grid/vaadin-grid-sorter.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridSorterElement, };\nexport type GridSorterEventMap = Readonly<{\n    onDirectionChanged: EventName<_GridSorterEventMap[\"direction-changed\"]>;\n}>;\nconst events = { onDirectionChanged: \"direction-changed\" } as GridSorterEventMap;\nexport type GridSorterProps = WebComponentProps<GridSorterElement, GridSorterEventMap>;\nexport const GridSorter = createComponent({\n    elementClass: GridSorterElement, events, react: React, tagName: \"vaadin-grid-sorter\"\n});\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const GridSortColumnMixin = (superClass) =>\r\n  class extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * JS Path of the property in the item used for sorting the data.\r\n         */\r\n        path: {\r\n          type: String,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * How to sort the data.\r\n         * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in\r\n         * descending direction, or `null` for not sorting the data.\r\n         * @type {GridSorterDirection | undefined}\r\n         */\r\n        direction: {\r\n          type: String,\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_onHeaderRendererOrBindingChanged(_headerRenderer, _headerCell, path, header, direction)'];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.__boundOnDirectionChanged = this.__onDirectionChanged.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Renders the grid sorter to the header cell.\r\n     *\r\n     * @override\r\n     */\r\n    _defaultHeaderRenderer(root, _column) {\r\n      let sorter = root.firstElementChild;\r\n      if (!sorter) {\r\n        sorter = document.createElement('vaadin-grid-sorter');\r\n        sorter.addEventListener('direction-changed', this.__boundOnDirectionChanged);\r\n        root.appendChild(sorter);\r\n      }\r\n\r\n      sorter.path = this.path;\r\n      sorter.__rendererDirection = this.direction;\r\n      sorter.direction = this.direction;\r\n      sorter.textContent = this.__getHeader(this.header, this.path);\r\n    }\r\n\r\n    /**\r\n     * The sort column doesn't allow to use a custom header renderer\r\n     * to override the header cell content.\r\n     * It always renders the grid sorter to the header cell.\r\n     *\r\n     * @override\r\n     */\r\n    _computeHeaderRenderer() {\r\n      return this._defaultHeaderRenderer;\r\n    }\r\n\r\n    /**\r\n     * Updates the sorting direction once the grid sorter's direction is changed.\r\n     * The listener handles only user-fired events.\r\n     *\r\n     * @private\r\n     */\r\n    __onDirectionChanged(e) {\r\n      // Skip if the direction is changed by the renderer.\r\n      if (e.detail.value === e.target.__rendererDirection) {\r\n        return;\r\n      }\r\n\r\n      this.direction = e.detail.value;\r\n    }\r\n\r\n    /** @private */\r\n    __getHeader(header, path) {\r\n      if (header) {\r\n        return header;\r\n      }\r\n\r\n      if (path) {\r\n        return this._generateHeader(path);\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-grid-sorter.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { GridColumn } from './vaadin-grid-column.js';\r\nimport { GridSortColumnMixin } from './vaadin-grid-sort-column-mixin.js';\r\n\r\n/**\r\n * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`\r\n * that provides default header renderer and functionality for sorting.\r\n *\r\n * #### Example:\r\n * ```html\r\n * <vaadin-grid items=\"[[items]]\">\r\n *  <vaadin-grid-sort-column path=\"name.first\" direction=\"asc\"></vaadin-grid-sort-column>\r\n *\r\n *  <vaadin-grid-column>\r\n *    ...\r\n * ```\r\n *\r\n * @fires {CustomEvent} direction-changed - Fired when the `direction` property changes.\r\n *\r\n * @customElement\r\n * @extends GridColumn\r\n * @mixes GridSortColumnMixin\r\n */\r\nclass GridSortColumn extends GridSortColumnMixin(GridColumn) {\r\n  static get is() {\r\n    return 'vaadin-grid-sort-column';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridSortColumn);\r\n\r\nexport { GridSortColumn };\r\n", "export * from \"@vaadin/grid/vaadin-grid-sort-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridSortColumn as _GridSortColumn,\n  type GridSortColumnElement,\n  type GridSortColumnProps as _GridSortColumnProps,\n} from './generated/GridSortColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridSortColumn.js';\n\n/*\n * The `headerRenderer` is not allowed for `vaadin-grid-sort-column`.\n */\nexport type GridSortColumnProps<TItem> = Partial<\n  Omit<\n    _GridSortColumnProps<TItem>,\n    'children' | 'footerRenderer' | 'headerRenderer' | 'renderer' | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridSortColumn<TItem = GridDefaultItem>(\n  { footer, ...props }: GridSortColumnProps<TItem>,\n  ref: ForwardedRef<GridSortColumnElement<TItem>>,\n): ReactElement | null {\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridSortColumn<TItem> {...props} footerRenderer={footerRenderer} ref={ref} renderer={bodyRenderer}>\n      {footerPortals}\n      {bodyPortals}\n    </_GridSortColumn>\n  );\n}\n\nconst ForwardedGridSortColumn = forwardRef(GridSortColumn) as <TItem = GridDefaultItem>(\n  props: GridSortColumnProps<TItem> & RefAttributes<GridSortColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridSortColumn as GridSortColumn };\n", "import type { EventName } from \"@lit/react\";\nimport { GridSortColumn as GridSortColumnElement, type GridSortColumnEventMap as _GridSortColumnEventMap, } from \"@vaadin/grid/vaadin-grid-sort-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridSortColumnElement, };\nexport type GridSortColumnEventMap = Readonly<{\n    onDirectionChanged: EventName<_GridSortColumnEventMap[\"direction-changed\"]>;\n}>;\nconst events = { onDirectionChanged: \"direction-changed\" } as GridSortColumnEventMap;\nexport type GridSortColumnProps<T1> = WebComponentProps<GridSortColumnElement<T1>, GridSortColumnEventMap>;\nexport const GridSortColumn = createComponent({\n    elementClass: GridSortColumnElement, events, react: React, tagName: \"vaadin-grid-sort-column\"\n}) as <T1>(props: GridSortColumnProps<T1> & React.RefAttributes<GridSortColumnElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/grid/vaadin-grid-tree-toggle.js\";\nexport * from './generated/GridTreeToggle.js';\n", "import type { EventName } from \"@lit/react\";\nimport { GridTreeToggle as GridTreeToggleElement, type GridTreeToggleEventMap as _GridTreeToggleEventMap, } from \"@vaadin/grid/vaadin-grid-tree-toggle.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridTreeToggleElement, };\nexport type GridTreeToggleEventMap = Readonly<{\n    onExpandedChanged: EventName<_GridTreeToggleEventMap[\"expanded-changed\"]>;\n}>;\nconst events = { onExpandedChanged: \"expanded-changed\" } as GridTreeToggleEventMap;\nexport type GridTreeToggleProps = WebComponentProps<GridTreeToggleElement, GridTreeToggleEventMap>;\nexport const GridTreeToggle = createComponent({\n    elementClass: GridTreeToggleElement, events, react: React, tagName: \"vaadin-grid-tree-toggle\"\n});\n", "export * from \"@vaadin/grid/vaadin-grid-tree-column.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridTreeColumnElement,\n  GridTreeColumn as _GridTreeColumn,\n  type GridTreeColumnProps as _GridTreeColumnProps,\n} from './generated/GridTreeColumn.js';\nimport type { GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { OmittedGridColumnHTMLAttributes } from './GridColumn.js';\n\nexport * from './generated/GridTreeColumn.js';\n\nexport type GridTreeColumnProps<TItem> = Partial<\n  Omit<\n    _GridTreeColumnProps<TItem>,\n    | 'children'\n    | 'footerRenderer'\n    | 'header'\n    | 'headerRenderer'\n    | 'renderer'\n    | keyof OmittedGridColumnHTMLAttributes<TItem>\n  >\n> &\n  Readonly<{\n    footer?: ReactNode;\n    /**\n     * @deprecated Use `footer` instead.\n     */\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    header?: ReactNode;\n    /**\n     * @deprecated Use `header` instead.\n     */\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridTreeColumn<TItem = GridDefaultItem>(\n  { footer, header, ...props }: GridTreeColumnProps<TItem>,\n  ref: ForwardedRef<GridTreeColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleOrChildrenRenderer(props.headerRenderer, header, {\n    renderMode: 'microtask',\n  });\n  const [footerPortals, footerRenderer] = useSimpleOrChildrenRenderer(props.footerRenderer, footer, {\n    renderMode: 'microtask',\n  });\n\n  return (\n    <_GridTreeColumn<TItem> {...props} headerRenderer={headerRenderer} footerRenderer={footerRenderer} ref={ref}>\n      {headerPortals}\n      {footerPortals}\n    </_GridTreeColumn>\n  );\n}\n\nconst ForwardedGridTreeColumn = forwardRef(GridTreeColumn) as <TItem = GridDefaultItem>(\n  props: GridTreeColumnProps<TItem> & RefAttributes<GridTreeColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridTreeColumn as GridTreeColumn };\n", "import type {} from \"@lit/react\";\nimport { GridTreeColumn as GridTreeColumnElement, } from \"@vaadin/grid/vaadin-grid-tree-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridTreeColumnElement, };\nexport type GridTreeColumnEventMap = Readonly<{}>;\nconst events = {} as GridTreeColumnEventMap;\nexport type GridTreeColumnProps<T1> = WebComponentProps<GridTreeColumnElement<T1>, GridTreeColumnEventMap>;\nexport const GridTreeColumn = createComponent({\n    elementClass: GridTreeColumnElement, events, react: React, tagName: \"vaadin-grid-tree-column\"\n}) as <T1>(props: GridTreeColumnProps<T1> & React.RefAttributes<GridTreeColumnElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/grid/vaadin-grid.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ReactElement,\n  type RefAttributes,\n  useLayoutEffect,\n  useRef,\n} from 'react';\nimport {\n  Grid as _Grid,\n  type GridDefaultItem,\n  type GridElement,\n  type GridProps as _GridProps,\n} from './generated/Grid.js';\nimport type { GridRowDetailsReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport useMergedRefs from './utils/useMergedRefs.js';\n\nexport * from './generated/Grid.js';\n\nexport type GridProps<TItem> = Partial<Omit<_GridProps<TItem>, 'rowDetailsRenderer'>> &\n  Readonly<{\n    rowDetailsRenderer?: ComponentType<GridRowDetailsReactRendererProps<TItem>> | null;\n  }>;\n\nfunction Grid<TItem = GridDefaultItem>(\n  props: GridProps<TItem>,\n  ref: ForwardedRef<GridElement<TItem>>,\n): ReactElement | null {\n  const [portals, rowDetailsRenderer] = useModelRenderer(props.rowDetailsRenderer, {\n    renderMode: 'microtask',\n  });\n\n  const innerRef = useRef<GridElement>(null);\n  const finalRef = useMergedRefs(innerRef, ref);\n\n  useLayoutEffect(() => {\n    innerRef.current!.recalculateColumnWidths = function (...args) {\n      // Wait for column content to finish rendering before recalculating widths.\n      queueMicrotask(() => {\n        Object.getPrototypeOf(this).recalculateColumnWidths.call(this, ...args);\n      });\n    };\n  }, []);\n\n  return (\n    <_Grid<TItem> {...props} ref={finalRef} rowDetailsRenderer={rowDetailsRenderer}>\n      {props.children}\n      {portals}\n    </_Grid>\n  );\n}\n\nconst ForwardedGrid = forwardRef(Grid) as <TItem = GridDefaultItem>(\n  props: GridProps<TItem> & RefAttributes<GridElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGrid as Grid };\n", "import type { EventName } from \"@lit/react\";\nimport { Grid as GridElement, type GridEventMap as _GridEventMap, } from \"@vaadin/grid/vaadin-grid.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridElement, };\nexport type GridEventMap<T1> = Readonly<{\n    onActiveItemChanged: EventName<_GridEventMap<T1>[\"active-item-changed\"]>;\n    onCellActivate: EventName<_GridEventMap<T1>[\"cell-activate\"]>;\n    onColumnResize: EventName<_GridEventMap<T1>[\"column-resize\"]>;\n    onExpandedItemsChanged: EventName<_GridEventMap<T1>[\"expanded-items-changed\"]>;\n    onLoadingChanged: EventName<_GridEventMap<T1>[\"loading-changed\"]>;\n    onItemToggle: EventName<_GridEventMap<T1>[\"item-toggle\"]>;\n    onSelectedItemsChanged: EventName<_GridEventMap<T1>[\"selected-items-changed\"]>;\n    onCellFocus: EventName<_GridEventMap<T1>[\"cell-focus\"]>;\n    onColumnReorder: EventName<_GridEventMap<T1>[\"column-reorder\"]>;\n    onGridDragend: EventName<_GridEventMap<T1>[\"grid-dragend\"]>;\n    onGridDragstart: EventName<_GridEventMap<T1>[\"grid-dragstart\"]>;\n    onGridDrop: EventName<_GridEventMap<T1>[\"grid-drop\"]>;\n    onSizeChanged: EventName<CustomEvent<unknown>>;\n    onDataProviderChanged: EventName<CustomEvent<unknown>>;\n}>;\nconst events = { onActiveItemChanged: \"active-item-changed\", onCellActivate: \"cell-activate\", onColumnResize: \"column-resize\", onExpandedItemsChanged: \"expanded-items-changed\", onLoadingChanged: \"loading-changed\", onItemToggle: \"item-toggle\", onSelectedItemsChanged: \"selected-items-changed\", onCellFocus: \"cell-focus\", onColumnReorder: \"column-reorder\", onGridDragend: \"grid-dragend\", onGridDragstart: \"grid-dragstart\", onGridDrop: \"grid-drop\", onSizeChanged: \"size-changed\", onDataProviderChanged: \"data-provider-changed\" } as GridEventMap<any>;\nexport type GridProps<T1> = WebComponentProps<GridElement<T1>, GridEventMap<T1>>;\nexport const Grid = createComponent({\n    elementClass: GridElement, events, react: React, tagName: \"vaadin-grid\"\n}) as <T1>(props: GridProps<T1> & React.RefAttributes<GridElement<T1>>) => React.ReactElement | null;\n", "import { type ForwardedRef, type RefCallback, useCallback } from 'react';\n\nexport default function useMergedRefs<T extends HTMLElement>(...refs: ReadonlyArray<ForwardedRef<T>>): RefCallback<T> {\n  return useCallback((element: T) => {\n    refs.forEach((ref) => {\n      if (typeof ref === 'function') {\n        ref(element);\n      } else if (!!ref) {\n        ref.current = element;\n      }\n    });\n  }, refs);\n}\n", "export * from \"@vaadin/horizontal-layout/vaadin-horizontal-layout.js\";\nexport * from './generated/HorizontalLayout.js';\n", "import type {} from \"@lit/react\";\nimport { HorizontalLayout as HorizontalLayoutElement, } from \"@vaadin/horizontal-layout/vaadin-horizontal-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { HorizontalLayoutElement, };\nexport type HorizontalLayoutEventMap = Readonly<{}>;\nconst events = {} as HorizontalLayoutEventMap;\nexport type HorizontalLayoutProps = WebComponentProps<HorizontalLayoutElement, HorizontalLayoutEventMap>;\nexport const HorizontalLayout = createComponent({\n    elementClass: HorizontalLayoutElement, events, react: React, tagName: \"vaadin-horizontal-layout\"\n});\n", "export * from \"@vaadin/icon/vaadin-iconset.js\";\nexport * from './generated/Iconset.js';\n", "import type {} from \"@lit/react\";\nimport { Iconset as IconsetElement, } from \"@vaadin/icon/vaadin-iconset.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { IconsetElement, };\nexport type IconsetEventMap = Readonly<{}>;\nconst events = {} as IconsetEventMap;\nexport type IconsetProps = WebComponentProps<IconsetElement, IconsetEventMap>;\nexport const Iconset = createComponent({\n    elementClass: IconsetElement, events, react: React, tagName: \"vaadin-iconset\"\n});\n", "export * from \"@vaadin/icon/vaadin-icon.js\";\nexport * from './generated/Icon.js';\n", "import type {} from \"@lit/react\";\nimport { Icon as IconElement, } from \"@vaadin/icon/vaadin-icon.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { IconElement, };\nexport type IconEventMap = Readonly<{}>;\nconst events = {} as IconEventMap;\nexport type IconProps = WebComponentProps<IconElement, IconEventMap>;\nexport const Icon = createComponent({\n    elementClass: IconElement, events, react: React, tagName: \"vaadin-icon\"\n});\n", "export * from \"@vaadin/integer-field/vaadin-integer-field.js\";\nexport * from './generated/IntegerField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { IntegerField as IntegerFieldElement, type IntegerFieldEventMap as _IntegerFieldEventMap, } from \"@vaadin/integer-field/vaadin-integer-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { IntegerFieldElement, };\nexport type IntegerFieldEventMap = Readonly<{\n    onValidated: EventName<_IntegerFieldEventMap[\"validated\"]>;\n    onChange: EventName<_IntegerFieldEventMap[\"change\"]>;\n    onInput: EventName<_IntegerFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_IntegerFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_IntegerFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as IntegerFieldEventMap;\nexport type IntegerFieldProps = WebComponentProps<IntegerFieldElement, IntegerFieldEventMap>;\nexport const IntegerField = createComponent({\n    elementClass: IntegerFieldElement, events, react: React, tagName: \"vaadin-integer-field\"\n});\n", "export * from \"@vaadin/item/vaadin-item.js\";\nexport * from './generated/Item.js';\n", "import type {} from \"@lit/react\";\nimport { Item as ItemElement, } from \"@vaadin/item/vaadin-item.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ItemElement, };\nexport type ItemEventMap = Readonly<{}>;\nconst events = {} as ItemEventMap;\nexport type ItemProps = WebComponentProps<ItemElement, ItemEventMap>;\nexport const Item = createComponent({\n    elementClass: ItemElement, events, react: React, tagName: \"vaadin-item\"\n});\n", "export * from \"@vaadin/list-box/vaadin-list-box.js\";\nexport * from './generated/ListBox.js';\n", "import type { EventName } from \"@lit/react\";\nimport { ListBox as ListBoxElement, type ListBoxEventMap as _ListBoxEventMap, } from \"@vaadin/list-box/vaadin-list-box.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ListBoxElement, };\nexport type ListBoxEventMap = Readonly<{\n    onSelectedChanged: EventName<_ListBoxEventMap[\"selected-changed\"]>;\n    onSelectedValuesChanged: EventName<_ListBoxEventMap[\"selected-values-changed\"]>;\n    onItemsChanged: EventName<_ListBoxEventMap[\"items-changed\"]>;\n}>;\nconst events = { onSelectedChanged: \"selected-changed\", onSelectedValuesChanged: \"selected-values-changed\", onItemsChanged: \"items-changed\" } as ListBoxEventMap;\nexport type ListBoxProps = WebComponentProps<ListBoxElement, ListBoxEventMap>;\nexport const ListBox = createComponent({\n    elementClass: ListBoxElement, events, react: React, tagName: \"vaadin-list-box\"\n});\n", "export * from \"@vaadin/login/vaadin-login-form.js\";\nexport * from './generated/LoginForm.js';\n", "import type { EventName } from \"@lit/react\";\nimport { LoginForm as LoginFormElement, type LoginFormEventMap as _LoginFormEventMap, } from \"@vaadin/login/vaadin-login-form.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { LoginFormElement, };\nexport type LoginFormEventMap = Readonly<{\n    onForgotPassword: EventName<_LoginFormEventMap[\"forgot-password\"]>;\n    onLogin: EventName<_LoginFormEventMap[\"login\"]>;\n    onDisabledChanged: EventName<_LoginFormEventMap[\"disabled-changed\"]>;\n    onErrorChanged: EventName<_LoginFormEventMap[\"error-changed\"]>;\n}>;\nconst events = { onForgotPassword: \"forgot-password\", onLogin: \"login\", onDisabledChanged: \"disabled-changed\", onErrorChanged: \"error-changed\" } as LoginFormEventMap;\nexport type LoginFormProps = WebComponentProps<LoginFormElement, LoginFormEventMap>;\nexport const LoginForm = createComponent({\n    elementClass: LoginFormElement, events, react: React, tagName: \"vaadin-login-form\"\n});\n", "export * from \"@vaadin/login/vaadin-login-overlay.js\";\nimport type { HTMLAttributes, ReactElement, RefAttributes } from 'react';\nimport {\n  LoginOverlayElement,\n  LoginOverlay as _LoginOverlay,\n  type LoginOverlayProps as _LoginOverlayProps,\n} from './generated/LoginOverlay.js';\n\nexport * from './generated/LoginOverlay.js';\n\ntype OmittedLoginOverlayHTMLAttributes = Omit<\n  HTMLAttributes<LoginOverlayElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot' | 'children' | 'title'\n>;\n\nexport type LoginOverlayProps = Partial<Omit<_LoginOverlayProps, keyof OmittedLoginOverlayHTMLAttributes>>;\n\nexport const LoginOverlay = _LoginOverlay as (\n  props: LoginOverlayProps & RefAttributes<LoginOverlayElement>,\n) => ReactElement | null;\n", "import type { EventName } from \"@lit/react\";\nimport { LoginOverlay as LoginOverlayElement, type LoginOverlayEventMap as _LoginOverlayEventMap, } from \"@vaadin/login/vaadin-login-overlay.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { LoginOverlayElement, };\nexport type LoginOverlayEventMap = Readonly<{\n    onForgotPassword: EventName<_LoginOverlayEventMap[\"forgot-password\"]>;\n    onLogin: EventName<_LoginOverlayEventMap[\"login\"]>;\n    onDisabledChanged: EventName<_LoginOverlayEventMap[\"disabled-changed\"]>;\n    onErrorChanged: EventName<_LoginOverlayEventMap[\"error-changed\"]>;\n    onDescriptionChanged: EventName<_LoginOverlayEventMap[\"description-changed\"]>;\n}>;\nconst events = { onForgotPassword: \"forgot-password\", onLogin: \"login\", onDisabledChanged: \"disabled-changed\", onErrorChanged: \"error-changed\", onDescriptionChanged: \"description-changed\" } as LoginOverlayEventMap;\nexport type LoginOverlayProps = WebComponentProps<LoginOverlayElement, LoginOverlayEventMap>;\nexport const LoginOverlay = createComponent({\n    elementClass: LoginOverlayElement, events, react: React, tagName: \"vaadin-login-overlay\"\n});\n", "export * from \"@vaadin/menu-bar/vaadin-menu-bar.js\";\nimport { type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport {\n  MenuBar as _MenuBar,\n  type MenuBarElement,\n  type MenuBarProps as _MenuBarProps,\n  type MenuBarItem as _MenuBarItem,\n  type SubMenuItem as _SubMenuItem,\n} from './generated/MenuBar.js';\nimport { getOriginalItem, mapItemsWithComponents } from './utils/mapItemsWithComponents.js';\n\nexport * from './generated/MenuBar.js';\n\nexport type SubMenuItem<TItemData extends object = object> = Omit<_SubMenuItem<TItemData>, 'component' | 'children'> & {\n  component?: ReactElement | string;\n\n  children?: Array<SubMenuItem<TItemData>>;\n};\n\nexport type MenuBarItem<TItemData extends object = object> = Omit<_MenuBarItem<TItemData>, 'component' | 'children'> & {\n  component?: ReactElement | string;\n\n  children?: Array<SubMenuItem<TItemData>>;\n};\n\nexport type MenuBarItemSelectedEvent<TItem extends MenuBarItem = MenuBarItem> = CustomEvent<{ value: MenuBarItem<TItem> }>;\n\nexport type MenuBarProps<TItem extends MenuBarItem = MenuBarItem> = Partial<Omit<_MenuBarProps, 'items' | 'onItemSelected'>> &\n  Readonly<{\n    items?: Array<TItem>;\n\n    onItemSelected?: (event: MenuBarItemSelectedEvent<TItem>) => void;\n  }>;\n\nfunction MenuBar<TItem extends MenuBarItem = MenuBarItem>(props: MenuBarProps<TItem>, ref: ForwardedRef<MenuBarElement>): ReactElement | null {\n  const [itemPortals, webComponentItems] = mapItemsWithComponents(props.items, 'vaadin-menu-bar-item');\n\n  const onItemSelected = props.onItemSelected;\n  const mappedOnItemSelected = onItemSelected\n    ? (event: CustomEvent<{ value: _MenuBarItem }>) => {\n        // Replace the mapped web component item with the original item\n        Object.assign(event.detail, {\n          value: getOriginalItem(event.detail.value),\n        });\n\n        onItemSelected(event as MenuBarItemSelectedEvent<TItem>);\n      }\n    : undefined;\n\n  return (\n    <_MenuBar {...props} ref={ref} items={webComponentItems} onItemSelected={mappedOnItemSelected}>\n      {props.children}\n      {itemPortals}\n    </_MenuBar>\n  );\n}\n\nconst ForwardedMenuBar = forwardRef(MenuBar) as <TItem extends MenuBarItem = MenuBarItem>(\n  props: MenuBarProps<TItem> & RefAttributes<MenuBarElement>,\n) => ReactElement | null;\n\nexport { ForwardedMenuBar as MenuBar };\n", "import type { EventName } from \"@lit/react\";\nimport { MenuBar as MenuBarElement, type MenuBarEventMap as _MenuBarEventMap, } from \"@vaadin/menu-bar/vaadin-menu-bar.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MenuBarElement, };\nexport type MenuBarEventMap = Readonly<{\n    onItemSelected: EventName<_MenuBarEventMap[\"item-selected\"]>;\n}>;\nconst events = { onItemSelected: \"item-selected\" } as MenuBarEventMap;\nexport type MenuBarProps = WebComponentProps<MenuBarElement, MenuBarEventMap>;\nexport const MenuBar = createComponent({\n    elementClass: MenuBarElement, events, react: React, tagName: \"vaadin-menu-bar\"\n});\n", "export * from \"@vaadin/message-input/vaadin-message-input.js\";\nexport * from './generated/MessageInput.js';\n", "import type { EventName } from \"@lit/react\";\nimport { MessageInput as MessageInputElement, type MessageInputEventMap as _MessageInputEventMap, } from \"@vaadin/message-input/vaadin-message-input.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MessageInputElement, };\nexport type MessageInputEventMap = Readonly<{\n    onSubmit: EventName<_MessageInputEventMap[\"submit\"]>;\n}>;\nconst events = { onSubmit: \"submit\" } as MessageInputEventMap;\nexport type MessageInputProps = WebComponentProps<MessageInputElement, MessageInputEventMap>;\nexport const MessageInput = createComponent({\n    elementClass: MessageInputElement, events, react: React, tagName: \"vaadin-message-input\"\n});\n", "export * from \"@vaadin/message-list/vaadin-message.js\";\nexport * from './generated/Message.js';\n", "import type {} from \"@lit/react\";\nimport { Message as MessageElement, } from \"@vaadin/message-list/vaadin-message.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MessageElement, };\nexport type MessageEventMap = Readonly<{}>;\nconst events = {} as MessageEventMap;\nexport type MessageProps = WebComponentProps<MessageElement, MessageEventMap>;\nexport const Message = createComponent({\n    elementClass: MessageElement, events, react: React, tagName: \"vaadin-message\"\n});\n", "export * from \"@vaadin/message-list/vaadin-message-list.js\";\nexport * from './generated/MessageList.js';\n", "import type {} from \"@lit/react\";\nimport { MessageList as MessageListElement, } from \"@vaadin/message-list/vaadin-message-list.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MessageListElement, };\nexport type MessageListEventMap = Readonly<{}>;\nconst events = {} as MessageListEventMap;\nexport type MessageListProps = WebComponentProps<MessageListElement, MessageListEventMap>;\nexport const MessageList = createComponent({\n    elementClass: MessageListElement, events, react: React, tagName: \"vaadin-message-list\"\n});\n", "export * from \"@vaadin/multi-select-combo-box/vaadin-multi-select-combo-box.js\";\nimport type { ComboBoxDefaultItem } from '@vaadin/combo-box';\nimport { type ComponentType, forwardRef, type ReactElement, type RefAttributes, type ForwardedRef } from 'react';\nimport {\n  MultiSelectComboBox as _MultiSelectComboBox,\n  type MultiSelectComboBoxElement,\n  type MultiSelectComboBoxProps as _MultiSelectComboBoxProps,\n} from './generated/MultiSelectComboBox.js';\nimport type { MultiSelectComboBoxReactRendererProps } from './renderers/multiSelectCombobox.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/MultiSelectComboBox.js';\n\nexport type MultiSelectComboBoxProps<TItem> = Partial<Omit<_MultiSelectComboBoxProps<TItem>, 'renderer'>> &\n  Readonly<{\n    renderer?: ComponentType<MultiSelectComboBoxReactRendererProps<TItem>> | null;\n  }>;\n\nfunction MultiSelectComboBox<TItem = ComboBoxDefaultItem>(\n  props: MultiSelectComboBoxProps<TItem>,\n  ref: ForwardedRef<MultiSelectComboBoxElement<TItem>>,\n): ReactElement | null {\n  const [portals, renderer] = useModelRenderer(props.renderer);\n\n  return (\n    <_MultiSelectComboBox<TItem> {...props} ref={ref} renderer={renderer}>\n      {props.children}\n      {portals}\n    </_MultiSelectComboBox>\n  );\n}\n\nconst ForwardedMultiSelectComboBox = forwardRef(MultiSelectComboBox) as <TItem = ComboBoxDefaultItem>(\n  props: MultiSelectComboBoxProps<TItem> & RefAttributes<MultiSelectComboBoxElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedMultiSelectComboBox as MultiSelectComboBox };\n", "import type { EventName } from \"@lit/react\";\nimport { MultiSelectComboBox as MultiSelectComboBoxElement, type MultiSelectComboBoxEventMap as _MultiSelectComboBoxEventMap, } from \"@vaadin/multi-select-combo-box/vaadin-multi-select-combo-box.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MultiSelectComboBoxElement, };\nexport type MultiSelectComboBoxEventMap<T1> = Readonly<{\n    onValidated: EventName<_MultiSelectComboBoxEventMap<T1>[\"validated\"]>;\n    onChange: EventName<_MultiSelectComboBoxEventMap<T1>[\"change\"]>;\n    onInput: EventName<_MultiSelectComboBoxEventMap<T1>[\"input\"]>;\n    onCustomValueSet: EventName<_MultiSelectComboBoxEventMap<T1>[\"custom-value-set\"]>;\n    onInvalidChanged: EventName<_MultiSelectComboBoxEventMap<T1>[\"invalid-changed\"]>;\n    onSelectedItemsChanged: EventName<_MultiSelectComboBoxEventMap<T1>[\"selected-items-changed\"]>;\n    onOpenedChanged: EventName<_MultiSelectComboBoxEventMap<T1>[\"opened-changed\"]>;\n    onFilterChanged: EventName<_MultiSelectComboBoxEventMap<T1>[\"filter-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onCustomValueSet: \"custom-value-set\", onInvalidChanged: \"invalid-changed\", onSelectedItemsChanged: \"selected-items-changed\", onOpenedChanged: \"opened-changed\", onFilterChanged: \"filter-changed\" } as MultiSelectComboBoxEventMap<any>;\nexport type MultiSelectComboBoxProps<T1> = WebComponentProps<MultiSelectComboBoxElement<T1>, MultiSelectComboBoxEventMap<T1>>;\nexport const MultiSelectComboBox = createComponent({\n    elementClass: MultiSelectComboBoxElement, events, react: React, tagName: \"vaadin-multi-select-combo-box\"\n}) as <T1>(props: MultiSelectComboBoxProps<T1> & React.RefAttributes<MultiSelectComboBoxElement<T1>>) => React.ReactElement | null;\n", "export * from \"@vaadin/notification/vaadin-notification.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ForwardRefExoticComponent,\n  type HTMLAttributes,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport {\n  Notification as _Notification,\n  NotificationElement,\n  type NotificationProps as _NotificationProps,\n  type ShowOptions,\n} from './generated/Notification.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/Notification.js';\n\nexport type NotificationReactRendererProps = ReactSimpleRendererProps<NotificationElement>;\n\ntype OmittedNotificationHTMLAttributes = Omit<\n  HTMLAttributes<NotificationElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot'\n>;\n\nexport type NotificationProps = Partial<\n  Omit<_NotificationProps, 'children' | 'renderer' | keyof OmittedNotificationHTMLAttributes>\n> &\n  Readonly<{\n    children?: ReactNode | ComponentType<NotificationReactRendererProps>;\n    renderer?: ComponentType<NotificationReactRendererProps>;\n  }>;\n\nfunction Notification(\n  { children, ...props }: NotificationProps,\n  ref: ForwardedRef<NotificationElement>,\n): ReactElement | null {\n  const [portals, renderer] = useSimpleOrChildrenRenderer(props.renderer, children);\n\n  return (\n    <_Notification {...props} ref={ref} renderer={renderer}>\n      {portals}\n    </_Notification>\n  );\n}\n\nexport type NotificationFunction = ForwardRefExoticComponent<NotificationProps & RefAttributes<NotificationElement>> & {\n  show(contents: string, options?: ShowOptions): NotificationElement;\n};\n\nconst ForwardedNotification = forwardRef(Notification) as NotificationFunction;\nForwardedNotification.show = NotificationElement.show;\n\nexport { ForwardedNotification as Notification };\n", "import type { EventName } from \"@lit/react\";\nimport { Notification as NotificationElement, type NotificationEventMap as _NotificationEventMap, } from \"@vaadin/notification/vaadin-notification.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { NotificationElement, };\nexport type NotificationEventMap = Readonly<{\n    onClosed: EventName<_NotificationEventMap[\"closed\"]>;\n    onOpenedChanged: EventName<_NotificationEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onClosed: \"closed\", onOpenedChanged: \"opened-changed\" } as NotificationEventMap;\nexport type NotificationProps = WebComponentProps<NotificationElement, NotificationEventMap>;\nexport const Notification = createComponent({\n    elementClass: NotificationElement, events, react: React, tagName: \"vaadin-notification\"\n});\n", "export * from \"@vaadin/number-field/vaadin-number-field.js\";\nexport * from './generated/NumberField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { NumberField as NumberFieldElement, type NumberFieldEventMap as _NumberFieldEventMap, } from \"@vaadin/number-field/vaadin-number-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { NumberFieldElement, };\nexport type NumberFieldEventMap = Readonly<{\n    onValidated: EventName<_NumberFieldEventMap[\"validated\"]>;\n    onChange: EventName<_NumberFieldEventMap[\"change\"]>;\n    onInput: EventName<_NumberFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_NumberFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_NumberFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as NumberFieldEventMap;\nexport type NumberFieldProps = WebComponentProps<NumberFieldElement, NumberFieldEventMap>;\nexport const NumberField = createComponent({\n    elementClass: NumberFieldElement, events, react: React, tagName: \"vaadin-number-field\"\n});\n", "export * from \"@vaadin/password-field/vaadin-password-field.js\";\nexport * from './generated/PasswordField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { PasswordField as PasswordFieldElement, type PasswordFieldEventMap as _PasswordFieldEventMap, } from \"@vaadin/password-field/vaadin-password-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { PasswordFieldElement, };\nexport type PasswordFieldEventMap = Readonly<{\n    onValidated: EventName<_PasswordFieldEventMap[\"validated\"]>;\n    onChange: EventName<_PasswordFieldEventMap[\"change\"]>;\n    onInput: EventName<_PasswordFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_PasswordFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_PasswordFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as PasswordFieldEventMap;\nexport type PasswordFieldProps = WebComponentProps<PasswordFieldElement, PasswordFieldEventMap>;\nexport const PasswordField = createComponent({\n    elementClass: PasswordFieldElement, events, react: React, tagName: \"vaadin-password-field\"\n});\n", "export * from \"@vaadin/popover/vaadin-popover.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  type HTMLAttributes,\n  forwardRef,\n  type ReactElement,\n  type ReactNode,\n} from 'react';\nimport { Popover as _Popover, type PopoverElement, type PopoverProps as _PopoverProps } from './generated/Popover.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/Popover.js';\n\nexport type PopoverReactRendererProps = ReactSimpleRendererProps<PopoverElement>;\n\ntype OmittedPopoverHTMLAttributes = Omit<\n  HTMLAttributes<PopoverElement>,\n  'id' | 'className' | 'dangerouslySetInnerHTML' | 'slot'\n>;\n\nexport type PopoverProps = Partial<Omit<_PopoverProps, 'children' | 'renderer' | keyof OmittedPopoverHTMLAttributes>> &\n  Readonly<{\n    children?: ReactNode | ComponentType<PopoverReactRendererProps>;\n    renderer?: ComponentType<PopoverReactRendererProps> | null;\n  }>;\n\nfunction Popover({ children, ...props }: PopoverProps, ref: ForwardedRef<PopoverElement>): ReactElement | null {\n  const [portals, renderer] = useSimpleOrChildrenRenderer(props.renderer, children);\n\n  return (\n    <_Popover {...props} ref={ref} renderer={renderer}>\n      {portals}\n    </_Popover>\n  );\n}\n\nconst ForwardedPopover = forwardRef(Popover);\n\nexport { ForwardedPopover as Popover };\n", "import type { EventName } from \"@lit/react\";\nimport { Popover as PopoverElement, type PopoverEventMap as _PopoverEventMap, } from \"@vaadin/popover/vaadin-popover.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { PopoverElement, };\nexport type PopoverEventMap = Readonly<{\n    onClosed: EventName<_PopoverEventMap[\"closed\"]>;\n    onOpenedChanged: EventName<_PopoverEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onClosed: \"closed\", onOpenedChanged: \"opened-changed\" } as PopoverEventMap;\nexport type PopoverProps = WebComponentProps<PopoverElement, PopoverEventMap>;\nexport const Popover = createComponent({\n    elementClass: PopoverElement, events, react: React, tagName: \"vaadin-popover\"\n});\n", "export * from \"@vaadin/progress-bar/vaadin-progress-bar.js\";\nexport * from './generated/ProgressBar.js';\n", "import type {} from \"@lit/react\";\nimport { ProgressBar as ProgressBarElement, } from \"@vaadin/progress-bar/vaadin-progress-bar.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ProgressBarElement, };\nexport type ProgressBarEventMap = Readonly<{}>;\nconst events = {} as ProgressBarEventMap;\nexport type ProgressBarProps = WebComponentProps<ProgressBarElement, ProgressBarEventMap>;\nexport const ProgressBar = createComponent({\n    elementClass: ProgressBarElement, events, react: React, tagName: \"vaadin-progress-bar\"\n});\n", "export * from \"@vaadin/radio-group/vaadin-radio-button.js\";\nexport * from './generated/RadioButton.js';\n", "import type { EventName } from \"@lit/react\";\nimport { RadioButton as RadioButtonElement, type RadioButtonEventMap as _RadioButtonEventMap, } from \"@vaadin/radio-group/vaadin-radio-button.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { RadioButtonElement, };\nexport type RadioButtonEventMap = Readonly<{\n    onCheckedChanged: EventName<_RadioButtonEventMap[\"checked-changed\"]>;\n}>;\nconst events = { onCheckedChanged: \"checked-changed\" } as RadioButtonEventMap;\nexport type RadioButtonProps = WebComponentProps<RadioButtonElement, RadioButtonEventMap>;\nexport const RadioButton = createComponent({\n    elementClass: RadioButtonElement, events, react: React, tagName: \"vaadin-radio-button\"\n});\n", "export * from \"@vaadin/radio-group/vaadin-radio-group.js\";\nexport * from './generated/RadioGroup.js';\n", "import type { EventName } from \"@lit/react\";\nimport { RadioGroup as RadioGroupElement, type RadioGroupEventMap as _RadioGroupEventMap, } from \"@vaadin/radio-group/vaadin-radio-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { RadioGroupElement, };\nexport type RadioGroupEventMap = Readonly<{\n    onValidated: EventName<_RadioGroupEventMap[\"validated\"]>;\n    onInvalidChanged: EventName<_RadioGroupEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_RadioGroupEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as RadioGroupEventMap;\nexport type RadioGroupProps = WebComponentProps<RadioGroupElement, RadioGroupEventMap>;\nexport const RadioGroup = createComponent({\n    elementClass: RadioGroupElement, events, react: React, tagName: \"vaadin-radio-group\"\n});\n", "export * from \"@vaadin/scroller/vaadin-scroller.js\";\nexport * from './generated/Scroller.js';\n", "import type {} from \"@lit/react\";\nimport { Scroller as ScrollerElement, } from \"@vaadin/scroller/vaadin-scroller.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { ScrollerElement, };\nexport type ScrollerEventMap = Readonly<{}>;\nconst events = {} as ScrollerEventMap;\nexport type ScrollerProps = WebComponentProps<ScrollerElement, ScrollerEventMap>;\nexport const Scroller = createComponent({\n    elementClass: ScrollerElement, events, react: React, tagName: \"vaadin-scroller\"\n});\n", "export * from \"@vaadin/select/vaadin-select.js\";\nimport {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  isValidElement,\n  type ReactElement,\n  type ReactNode,\n  useEffect,\n  useRef,\n} from 'react';\nimport { Select as _Select, type SelectElement, type SelectProps as _SelectProps } from './generated/Select.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\nimport useMergedRefs from './utils/useMergedRefs.js';\n\nexport * from './generated/Select.js';\n\nexport type SelectReactRendererProps = ReactSimpleRendererProps<SelectElement>;\n\ntype SelectRenderer = ComponentType<SelectReactRendererProps>;\n\nexport type SelectProps = Partial<Omit<_SelectProps, 'children' | 'renderer'>> &\n  Readonly<{\n    children?: ReactNode | SelectRenderer | Array<ReactNode | SelectRenderer>;\n    renderer?: SelectRenderer | null;\n  }>;\n\nfunction Select(props: SelectProps, ref: ForwardedRef<SelectElement>): ReactElement | null {\n  // React.Children.toArray() doesn't allow functions, so we convert manually.\n  const children = Array.isArray(props.children) ? props.children : [props.children];\n\n  // Components with slot attribute should stay in light DOM.\n  const slottedChildren = children.filter((child): child is ReactNode => {\n    return isValidElement(child) && child.props.slot;\n  });\n\n  // Component without slot attribute should go to the overlay.\n  const overlayChildren = children.filter((child): child is ReactNode => {\n    return isValidElement(child) && !slottedChildren.includes(child);\n  });\n\n  const renderFn = children.find((child) => typeof child === 'function');\n\n  const innerRef = useRef<SelectElement>(null);\n  const [portals, renderer] = useSimpleOrChildrenRenderer(\n    props.renderer,\n    renderFn || (overlayChildren.length ? overlayChildren : undefined),\n  );\n  const finalRef = useMergedRefs(innerRef, ref);\n\n  useEffect(() => {\n    if (props.renderer || props.children) {\n      innerRef.current?.requestContentUpdate();\n    }\n  }, [innerRef.current, props.renderer, props.children]);\n\n  return (\n    <_Select {...props} ref={finalRef} renderer={renderer}>\n      {slottedChildren}\n      {portals}\n    </_Select>\n  );\n}\n\nconst ForwardedSelect = forwardRef(Select);\n\nexport { ForwardedSelect as Select };\n", "import type { EventName } from \"@lit/react\";\nimport { Select as SelectElement, type SelectEventMap as _SelectEventMap, } from \"@vaadin/select/vaadin-select.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { SelectElement, };\nexport type SelectEventMap = Readonly<{\n    onValidated: EventName<_SelectEventMap[\"validated\"]>;\n    onChange: EventName<_SelectEventMap[\"change\"]>;\n    onInvalidChanged: EventName<_SelectEventMap[\"invalid-changed\"]>;\n    onOpenedChanged: EventName<_SelectEventMap[\"opened-changed\"]>;\n    onValueChanged: EventName<_SelectEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInvalidChanged: \"invalid-changed\", onOpenedChanged: \"opened-changed\", onValueChanged: \"value-changed\" } as SelectEventMap;\nexport type SelectProps = WebComponentProps<SelectElement, SelectEventMap>;\nexport const Select = createComponent({\n    elementClass: SelectElement, events, react: React, tagName: \"vaadin-select\"\n});\n", "export * from \"@vaadin/side-nav/vaadin-side-nav-item.js\";\nexport * from './generated/SideNavItem.js';\n", "import type { EventName } from \"@lit/react\";\nimport { SideNavItem as SideNavItemElement, type SideNavItemEventMap as _SideNavItemEventMap, } from \"@vaadin/side-nav/vaadin-side-nav-item.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { SideNavItemElement, };\nexport type SideNavItemEventMap = Readonly<{\n    onExpandedChanged: EventName<_SideNavItemEventMap[\"expanded-changed\"]>;\n}>;\nconst events = { onExpandedChanged: \"expanded-changed\" } as SideNavItemEventMap;\nexport type SideNavItemProps = WebComponentProps<SideNavItemElement, SideNavItemEventMap>;\nexport const SideNavItem = createComponent({\n    elementClass: SideNavItemElement, events, react: React, tagName: \"vaadin-side-nav-item\"\n});\n", "export * from \"@vaadin/side-nav/vaadin-side-nav.js\";\nexport * from './generated/SideNav.js';\n", "import type { EventName } from \"@lit/react\";\nimport { SideNav as SideNavElement, type SideNavEventMap as _SideNavEventMap, } from \"@vaadin/side-nav/vaadin-side-nav.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { SideNavElement, };\nexport type SideNavEventMap = Readonly<{\n    onCollapsedChanged: EventName<_SideNavEventMap[\"collapsed-changed\"]>;\n}>;\nconst events = { onCollapsedChanged: \"collapsed-changed\" } as SideNavEventMap;\nexport type SideNavProps = WebComponentProps<SideNavElement, SideNavEventMap>;\nexport const SideNav = createComponent({\n    elementClass: SideNavElement, events, react: React, tagName: \"vaadin-side-nav\"\n});\n", "export * from \"@vaadin/split-layout/vaadin-split-layout.js\";\nexport * from './generated/SplitLayout.js';\n", "import type { EventName } from \"@lit/react\";\nimport { SplitLayout as SplitLayoutElement, type SplitLayoutEventMap as _SplitLayoutEventMap, } from \"@vaadin/split-layout/vaadin-split-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { SplitLayoutElement, };\nexport type SplitLayoutEventMap = Readonly<{\n    onSplitterDragend: EventName<_SplitLayoutEventMap[\"splitter-dragend\"]>;\n}>;\nconst events = { onSplitterDragend: \"splitter-dragend\" } as SplitLayoutEventMap;\nexport type SplitLayoutProps = WebComponentProps<SplitLayoutElement, SplitLayoutEventMap>;\nexport const SplitLayout = createComponent({\n    elementClass: SplitLayoutElement, events, react: React, tagName: \"vaadin-split-layout\"\n});\n", "import './theme/lumo/vaadin-tab.js';\r\nexport * from './src/vaadin-tab.js';\r\n", "export * from \"@vaadin/tabs/vaadin-tab.js\";\nexport * from './generated/Tab.js';\n", "import type {} from \"@lit/react\";\nimport { Tab as TabElement, } from \"@vaadin/tabs/vaadin-tab.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TabElement, };\nexport type TabEventMap = Readonly<{}>;\nconst events = {} as TabEventMap;\nexport type TabProps = WebComponentProps<TabElement, TabEventMap>;\nexport const Tab = createComponent({\n    elementClass: TabElement, events, react: React, tagName: \"vaadin-tab\"\n});\n", "import './theme/lumo/vaadin-tabs.js';\r\nexport * from './src/vaadin-tabs.js';\r\n", "export * from \"@vaadin/tabs/vaadin-tabs.js\";\nexport * from './generated/Tabs.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Tabs as TabsElement, type TabsEventMap as _TabsEventMap, } from \"@vaadin/tabs/vaadin-tabs.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TabsElement, };\nexport type TabsEventMap = Readonly<{\n    onSelectedChanged: EventName<_TabsEventMap[\"selected-changed\"]>;\n    onItemsChanged: EventName<_TabsEventMap[\"items-changed\"]>;\n}>;\nconst events = { onSelectedChanged: \"selected-changed\", onItemsChanged: \"items-changed\" } as TabsEventMap;\nexport type TabsProps = WebComponentProps<TabsElement, TabsEventMap>;\nexport const Tabs = createComponent({\n    elementClass: TabsElement, events, react: React, tagName: \"vaadin-tabs\"\n});\n", "export * from \"@vaadin/tabsheet/vaadin-tabsheet.js\";\nimport React, { forwardRef, type ForwardedRef, type ReactNode } from 'react';\nimport { Tab, type TabProps } from './Tab.js';\nimport {\n  TabSheet as _TabSheet,\n  type TabSheetElement,\n  type TabSheetProps as _TabSheetProps,\n} from './generated/TabSheet.js';\nimport { Tabs } from './Tabs.js';\n\nexport * from './generated/TabSheet.js';\n\ntype TabSheetTabProps = Omit<TabProps, 'selected' | 'value'> & {\n  /**\n   * The label of the tab.\n   */\n  label?: ReactNode;\n};\n\ntype TabSheetTab = React.ReactElement<TabSheetTabProps>;\n\n/**\n * `TabSheetTab` is a helper component designed for creating tabs within a `<TabSheet/>`.\n * Use this component as a direct child of the `<TabSheet/>` component.\n * It accepts a `label` property, which can be either a string or a React node.\n * The children of the component will be rendered as the content of the tab.\n *\n * ### Usage\n *\n * ```tsx\n * <TabSheet>\n *   <TabSheetTab label=\"Dashboard\">\n *     <div>This is the Dashboard tab content</div>\n *   </TabSheetTab>\n *\n *   <TabSheetTab label={<i>Payment</i>}>\n *     <div>This is the Payment tab content</div>\n *   </TabSheetTab>\n * </TabSheet>\n * ```\n */\nexport const TabSheetTab = (_props: TabSheetTabProps) => null;\n\nlet uniqueId = 0;\nconst generatedTabIds = new WeakMap<TabSheetTab, string>();\nfunction getTabId(tab: TabSheetTab) {\n  if (tab.props.id) {\n    // Support custom id for a tabsheet tab\n    return tab.props.id;\n  }\n\n  if (!generatedTabIds.has(tab)) {\n    // Generate a temporary id for the tab while it's being rendered\n    generatedTabIds.set(tab, 'tabsheet-tab-' + uniqueId++);\n  }\n  return generatedTabIds.get(tab);\n}\n\nexport type TabSheetProps = Partial<Omit<_TabSheetProps, 'items'>>;\n\nfunction TabSheet(props: TabSheetProps, ref: ForwardedRef<TabSheetElement>) {\n  const { children, ...tabSheetRest } = props;\n\n  // The direct TabSheetTab children of the TabSheet\n  const tabs = React.Children.toArray(children).filter((child): child is TabSheetTab => {\n    return React.isValidElement(child) && child.type === TabSheetTab;\n  });\n\n  // All the other children of the TabSheet\n  const remainingChildren = React.Children.toArray(children).filter((child) => {\n    return React.isValidElement(child) && child.type !== TabSheetTab;\n  });\n\n  return (\n    <_TabSheet {...tabSheetRest} ref={ref}>\n      {tabs.length > 0 ? (\n        <Tabs slot=\"tabs\">\n          {tabs.map((child) => {\n            const { children, label, ...tabRest } = child.props;\n            return (\n              <Tab {...tabRest} id={getTabId(child)} key={getTabId(child)}>\n                {child.props.label}\n              </Tab>\n            );\n          })}\n        </Tabs>\n      ) : null}\n\n      {tabs.map((child) => (\n        <div {...{ tab: getTabId(child) }} key={getTabId(child)}>\n          {child.props.children}\n        </div>\n      ))}\n\n      {remainingChildren}\n    </_TabSheet>\n  );\n}\n\nconst ForwardedTabSheet = forwardRef(TabSheet);\n\nexport { ForwardedTabSheet as TabSheet };\n\n/**\n * A helper function that allows declaring the tab identifier on the children\n * of the `<TabSheet/>` component\n *\n * ### Usage\n *\n * ```tsx\n * <TabSheet>\n *   <Tabs slot=\"tabs\">\n *     <Tab id=\"about\">About</Tab>\n *     <Tab id=\"contuct\">Contact us</Tab>\n *   </Tabs>\n *   <div {...tab('about')}>This tab is all about,..</div>\n *   <div {...tab('contact')}>Our website: ...</div>\n * </TabSheet>\n * ```\n *\n * @param tab The identifier of the correspoding tab.\n *\n * @returns object with HTML attribute values recognized on tab sheet children.\n * @deprecated Use `<TabSheetTab/>` instead.\n */\nexport function tab(tab: string): Record<string, string> {\n  console.warn('Using the `tab` helper function is deprecated. Use <TabSheetTab/> instead.');\n  return { tab } as Record<string, string>;\n}\n", "export * from \"@vaadin/tabs/vaadin-tab.js\";\nexport * from './generated/Tab.js';\n", "import type {} from \"@lit/react\";\nimport { Tab as TabElement, } from \"@vaadin/tabs/vaadin-tab.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TabElement, };\nexport type TabEventMap = Readonly<{}>;\nconst events = {} as TabEventMap;\nexport type TabProps = WebComponentProps<TabElement, TabEventMap>;\nexport const Tab = createComponent({\n    elementClass: TabElement, events, react: React, tagName: \"vaadin-tab\"\n});\n", "import type { EventName } from \"@lit/react\";\nimport { TabSheet as TabSheetElement, type TabSheetEventMap as _TabSheetEventMap, } from \"@vaadin/tabsheet/vaadin-tabsheet.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TabSheetElement, };\nexport type TabSheetEventMap = Readonly<{\n    onItemsChanged: EventName<_TabSheetEventMap[\"items-changed\"]>;\n    onSelectedChanged: EventName<_TabSheetEventMap[\"selected-changed\"]>;\n}>;\nconst events = { onItemsChanged: \"items-changed\", onSelectedChanged: \"selected-changed\" } as TabSheetEventMap;\nexport type TabSheetProps = WebComponentProps<TabSheetElement, TabSheetEventMap>;\nexport const TabSheet = createComponent({\n    elementClass: TabSheetElement, events, react: React, tagName: \"vaadin-tabsheet\"\n});\n", "export * from \"@vaadin/tabs/vaadin-tabs.js\";\nexport * from './generated/Tabs.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Tabs as TabsElement, type TabsEventMap as _TabsEventMap, } from \"@vaadin/tabs/vaadin-tabs.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TabsElement, };\nexport type TabsEventMap = Readonly<{\n    onSelectedChanged: EventName<_TabsEventMap[\"selected-changed\"]>;\n    onItemsChanged: EventName<_TabsEventMap[\"items-changed\"]>;\n}>;\nconst events = { onSelectedChanged: \"selected-changed\", onItemsChanged: \"items-changed\" } as TabsEventMap;\nexport type TabsProps = WebComponentProps<TabsElement, TabsEventMap>;\nexport const Tabs = createComponent({\n    elementClass: TabsElement, events, react: React, tagName: \"vaadin-tabs\"\n});\n", "export * from \"@vaadin/text-area/vaadin-text-area.js\";\nexport * from './generated/TextArea.js';\n", "import type { EventName } from \"@lit/react\";\nimport { TextArea as TextAreaElement, type TextAreaEventMap as _TextAreaEventMap, } from \"@vaadin/text-area/vaadin-text-area.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TextAreaElement, };\nexport type TextAreaEventMap = Readonly<{\n    onValidated: EventName<_TextAreaEventMap[\"validated\"]>;\n    onChange: EventName<_TextAreaEventMap[\"change\"]>;\n    onInput: EventName<_TextAreaEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_TextAreaEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_TextAreaEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as TextAreaEventMap;\nexport type TextAreaProps = WebComponentProps<TextAreaElement, TextAreaEventMap>;\nexport const TextArea = createComponent({\n    elementClass: TextAreaElement, events, react: React, tagName: \"vaadin-text-area\"\n});\n", "export * from \"@vaadin/text-field/vaadin-text-field.js\";\nexport * from './generated/TextField.js';\n", "import type { EventName } from \"@lit/react\";\nimport { TextField as TextFieldElement, type TextFieldEventMap as _TextFieldEventMap, } from \"@vaadin/text-field/vaadin-text-field.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TextFieldElement, };\nexport type TextFieldEventMap = Readonly<{\n    onValidated: EventName<_TextFieldEventMap[\"validated\"]>;\n    onChange: EventName<_TextFieldEventMap[\"change\"]>;\n    onInput: EventName<_TextFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_TextFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_TextFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as TextFieldEventMap;\nexport type TextFieldProps = WebComponentProps<TextFieldElement, TextFieldEventMap>;\nexport const TextField = createComponent({\n    elementClass: TextFieldElement, events, react: React, tagName: \"vaadin-text-field\"\n});\n", "export * from \"@vaadin/time-picker/vaadin-time-picker.js\";\nimport { forwardRef } from 'react';\nimport { TimePicker as _TimePicker, type TimePickerElement, type TimePickerProps } from './generated/TimePicker.js';\nimport createComponentWithOrderedProps from './utils/createComponentWithOrderedProps.js';\n\nexport * from './generated/TimePicker.js';\n\nexport const TimePicker = forwardRef(\n  createComponentWithOrderedProps<TimePickerProps, TimePickerElement>(_TimePicker, 'value'),\n);\n", "import type { EventName } from \"@lit/react\";\nimport { TimePicker as TimePickerElement, type TimePickerEventMap as _TimePickerEventMap, } from \"@vaadin/time-picker/vaadin-time-picker.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TimePickerElement, };\nexport type TimePickerEventMap = Readonly<{\n    onValidated: EventName<_TimePickerEventMap[\"validated\"]>;\n    onChange: EventName<_TimePickerEventMap[\"change\"]>;\n    onInput: EventName<_TimePickerEventMap[\"input\"]>;\n    onInvalidChanged: EventName<_TimePickerEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<_TimePickerEventMap[\"value-changed\"]>;\n    onOpenedChanged: EventName<_TimePickerEventMap[\"opened-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\", onOpenedChanged: \"opened-changed\" } as TimePickerEventMap;\nexport type TimePickerProps = WebComponentProps<TimePickerElement, TimePickerEventMap>;\nexport const TimePicker = createComponent({\n    elementClass: TimePickerElement, events, react: React, tagName: \"vaadin-time-picker\"\n});\n", "export * from \"@vaadin/tooltip/vaadin-tooltip.js\";\nexport * from './generated/Tooltip.js';\n", "import type {} from \"@lit/react\";\nimport { Tooltip as TooltipElement, } from \"@vaadin/tooltip/vaadin-tooltip.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { TooltipElement, };\nexport type TooltipEventMap = Readonly<{}>;\nconst events = {} as TooltipEventMap;\nexport type TooltipProps = WebComponentProps<TooltipElement, TooltipEventMap>;\nexport const Tooltip = createComponent({\n    elementClass: TooltipElement, events, react: React, tagName: \"vaadin-tooltip\"\n});\n", "export * from \"@vaadin/upload/vaadin-upload.js\";\nexport * from './generated/Upload.js';\n", "import type { EventName } from \"@lit/react\";\nimport { Upload as UploadElement, type UploadEventMap as _UploadEventMap, } from \"@vaadin/upload/vaadin-upload.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { UploadElement, };\nexport type UploadEventMap = Readonly<{\n    onFileReject: EventName<_UploadEventMap[\"file-reject\"]>;\n    onUploadAbort: EventName<_UploadEventMap[\"upload-abort\"]>;\n    onUploadBefore: EventName<_UploadEventMap[\"upload-before\"]>;\n    onUploadError: EventName<_UploadEventMap[\"upload-error\"]>;\n    onUploadProgress: EventName<_UploadEventMap[\"upload-progress\"]>;\n    onUploadRequest: EventName<_UploadEventMap[\"upload-request\"]>;\n    onUploadResponse: EventName<_UploadEventMap[\"upload-response\"]>;\n    onUploadRetry: EventName<_UploadEventMap[\"upload-retry\"]>;\n    onUploadStart: EventName<_UploadEventMap[\"upload-start\"]>;\n    onUploadSuccess: EventName<_UploadEventMap[\"upload-success\"]>;\n    onFilesChanged: EventName<_UploadEventMap[\"files-changed\"]>;\n    onMaxFilesReachedChanged: EventName<_UploadEventMap[\"max-files-reached-changed\"]>;\n}>;\nconst events = { onFileReject: \"file-reject\", onUploadAbort: \"upload-abort\", onUploadBefore: \"upload-before\", onUploadError: \"upload-error\", onUploadProgress: \"upload-progress\", onUploadRequest: \"upload-request\", onUploadResponse: \"upload-response\", onUploadRetry: \"upload-retry\", onUploadStart: \"upload-start\", onUploadSuccess: \"upload-success\", onFilesChanged: \"files-changed\", onMaxFilesReachedChanged: \"max-files-reached-changed\" } as UploadEventMap;\nexport type UploadProps = WebComponentProps<UploadElement, UploadEventMap>;\nexport const Upload = createComponent({\n    elementClass: UploadElement, events, react: React, tagName: \"vaadin-upload\"\n});\n", "export * from \"@vaadin/vertical-layout/vaadin-vertical-layout.js\";\nexport * from './generated/VerticalLayout.js';\n", "import type {} from \"@lit/react\";\nimport { VerticalLayout as VerticalLayoutElement, } from \"@vaadin/vertical-layout/vaadin-vertical-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { VerticalLayoutElement, };\nexport type VerticalLayoutEventMap = Readonly<{}>;\nconst events = {} as VerticalLayoutEventMap;\nexport type VerticalLayoutProps = WebComponentProps<VerticalLayoutElement, VerticalLayoutEventMap>;\nexport const VerticalLayout = createComponent({\n    elementClass: VerticalLayoutElement, events, react: React, tagName: \"vaadin-vertical-layout\"\n});\n", "export * from \"@vaadin/virtual-list/vaadin-virtual-list.js\";\nimport { type ComponentType, type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport {\n  VirtualList as _VirtualList,\n  type VirtualListDefaultItem,\n  type VirtualListElement,\n  type VirtualListItemModel,\n  type VirtualListProps as _VirtualListProps,\n} from './generated/VirtualList.js';\nimport { type ReactModelRendererProps, useModelRenderer } from './renderers/useModelRenderer.js';\n\nexport * from './generated/VirtualList.js';\n\nexport type VirtualListReactRendererProps<TItem> = ReactModelRendererProps<\n  TItem,\n  VirtualListItemModel<TItem>,\n  VirtualListElement<TItem>\n>;\n\nexport type VirtualListProps<TItem> = Partial<Omit<_VirtualListProps<TItem>, 'children' | 'renderer'>> &\n  Readonly<{\n    children?: ComponentType<VirtualListReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<VirtualListReactRendererProps<TItem>> | null;\n  }>;\n\nfunction VirtualList<TItem = VirtualListDefaultItem>(\n  props: VirtualListProps<TItem>,\n  ref: ForwardedRef<VirtualListElement<TItem>>,\n): ReactElement | null {\n  const [portals, renderer] = useModelRenderer(props.renderer ?? props.children);\n\n  return (\n    <_VirtualList<TItem> {...props} ref={ref} renderer={renderer}>\n      {portals}\n    </_VirtualList>\n  );\n}\n\nconst ForwardedVirtualList = forwardRef(VirtualList) as <TItem = VirtualListDefaultItem>(\n  props: VirtualListProps<TItem> & RefAttributes<VirtualListElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedVirtualList as VirtualList };\n", "import type {} from \"@lit/react\";\nimport { VirtualList as VirtualListElement, } from \"@vaadin/virtual-list/vaadin-virtual-list.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { VirtualListElement, };\nexport type VirtualListEventMap = Readonly<{}>;\nconst events = {} as VirtualListEventMap;\nexport type VirtualListProps<T1> = WebComponentProps<VirtualListElement<T1>, VirtualListEventMap>;\nexport const VirtualList = createComponent({\n    elementClass: VirtualListElement, events, react: React, tagName: \"vaadin-virtual-list\"\n}) as <T1>(props: VirtualListProps<T1> & React.RefAttributes<VirtualListElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "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",
  "names": ["p", "k", "v", "_a", "createComponent", "options", "elementClass", "_createComponent", "events", "AccordionHeading", "createComponent", "AccordionHeadingElement", "React", "events", "AccordionPanel", "createComponent", "AccordionPanelElement", "React", "events", "Accordion", "createComponent", "AccordionElement", "React", "a", "events", "AppLayout", "createComponent", "AppLayoutElement", "React", "r", "events", "DrawerToggle", "createComponent", "DrawerToggleElement", "React", "a", "events", "Avatar", "createComponent", "AvatarElement", "React", "r", "events", "AvatarGroup", "createComponent", "AvatarGroupElement", "React", "o", "events", "Button", "createComponent", "ButtonElement", "React", "t", "events", "Card", "createComponent", "CardElement", "React", "n", "events", "Checkbox", "createComponent", "CheckboxElement", "React", "o", "events", "CheckboxGroup", "createComponent", "CheckboxGroupElement", "React", "html", "import_react", "r", "import_react", "import_react_dom", "callbackQueue", "flushMicrotask", "callback", "flushSync", "initialState", "rendererReducer", "state", "root", "args", "useRenderer", "reactRendererOrNode", "convert", "config", "map", "update", "useReducer", "renderer", "useCallback", "flushMicrotask", "flushSync", "_a", "createPortal", "createElement", "convertModelRendererArgs", "original", "model", "useModelRenderer", "reactRenderer", "config", "useRenderer", "events", "ComboBoxLight", "createComponent", "ComboBoxLightElement", "React", "props", "ref", "portals", "renderer", "useModelRenderer", "jsxs", "ForwardedComboBoxLight", "forwardRef", "import_react", "r", "import_jsx_runtime", "events", "ComboBox", "createComponent", "ComboBoxElement", "React", "props", "ref", "portals", "renderer", "useModelRenderer", "jsxs", "ForwardedComboBox", "forwardRef", "n", "events", "ConfirmDialog", "createComponent", "ConfirmDialogElement", "React", "import_react", "u", "convertContextRendererArgs", "original", "context", "useContextRenderer", "reactRenderer", "useRenderer", "import_react", "import_react_dom", "mapItemsWithComponents", "items", "wrapperTagName", "itemPortals", "webComponentItems", "item", "component", "children", "rest", "childPortals", "webComponentChildren", "root", "createPortal", "getOriginalItem", "mappedItem", "import_jsx_runtime", "events", "ContextMenu", "createComponent", "ContextMenuElement", "React", "props", "ref", "portals", "renderer", "useContextRenderer", "itemPortals", "webComponentItems", "mapItemsWithComponents", "onItemSelected", "jsxs", "event", "getOriginalItem", "ForwardedContextMenu", "forwardRef", "t", "events", "CustomField", "createComponent", "CustomFieldElement", "React", "html", "t", "events", "DatePickerLight", "createComponent", "DatePickerLightElement", "React", "a", "events", "DatePicker", "createComponent", "DatePickerElement", "React", "import_react", "a", "import_react", "createComponentWithOrderedProps", "component", "names", "props", "ref", "orderedProps", "name", "createElement", "events", "DateTimePicker", "createComponent", "DateTimePickerElement", "React", "forwardRef", "createComponentWithOrderedProps", "t", "events", "DetailsSummary", "createComponent", "DetailsSummaryElement", "React", "t", "events", "Details", "createComponent", "DetailsElement", "React", "import_react", "convertSimpleRendererArgs", "original", "useSimpleRenderer", "reactRenderer", "config", "useRenderer", "useSimpleOrChildrenRenderer", "fnRenderer", "children", "config", "_children", "_fnRenderer", "shouldUseSimpleRendererResult", "useChildrenRendererResult", "useRenderer", "useSimpleRendererResult", "useSimpleRenderer", "import_jsx_runtime", "events", "Dialog", "createComponent", "DialogElement", "React", "children", "footer", "header", "props", "ref", "footerPortals", "footerRenderer", "useSimpleOrChildrenRenderer", "headerPortals", "headerRenderer", "portals", "renderer", "jsxs", "ForwardedDialog", "forwardRef", "a", "events", "EmailField", "createComponent", "EmailFieldElement", "React", "t", "events", "FormItem", "createComponent", "FormItemElement", "React", "t", "events", "FormLayout", "createComponent", "FormLayoutElement", "React", "import_react", "a", "import_jsx_runtime", "events", "GridColumnGroup", "createComponent", "GridColumnGroupElement", "React", "children", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "useSimpleOrChildrenRenderer", "footerPortals", "footerRenderer", "jsxs", "ForwardedGridColumnGroup", "forwardRef", "import_react", "C", "import_jsx_runtime", "events", "GridColumn", "createComponent", "GridColumnElement", "React", "children", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "useSimpleOrChildrenRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "useModelRenderer", "jsxs", "ForwardedGridColumn", "forwardRef", "t", "events", "GridFilter", "createComponent", "GridFilterElement", "React", "import_react", "p", "import_jsx_runtime", "events", "GridFilterColumn", "createComponent", "GridFilterColumnElement", "React", "footer", "props", "ref", "footerPortals", "footerRenderer", "useSimpleOrChildrenRenderer", "bodyPortals", "bodyRenderer", "useModelRenderer", "jsxs", "ForwardedGridFilterColumn", "forwardRef", "import_react", "u", "import_jsx_runtime", "events", "GridSelectionColumn", "createComponent", "GridSelectionColumnElement", "React", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "useSimpleOrChildrenRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "useModelRenderer", "jsxs", "ForwardedGridSelectionColumn", "forwardRef", "r", "events", "GridSorter", "createComponent", "GridSorterElement", "React", "e", "import_react", "p", "import_jsx_runtime", "events", "GridSortColumn", "createComponent", "GridSortColumnElement", "React", "footer", "props", "ref", "footerPortals", "footerRenderer", "useSimpleOrChildrenRenderer", "bodyPortals", "bodyRenderer", "useModelRenderer", "jsxs", "ForwardedGridSortColumn", "forwardRef", "r", "events", "GridTreeToggle", "createComponent", "GridTreeToggleElement", "React", "import_react", "T", "import_jsx_runtime", "events", "GridTreeColumn", "createComponent", "GridTreeColumnElement", "React", "footer", "header", "props", "ref", "headerPortals", "headerRenderer", "useSimpleOrChildrenRenderer", "footerPortals", "footerRenderer", "jsxs", "ForwardedGridTreeColumn", "forwardRef", "import_react", "l", "import_react", "useMergedRefs", "refs", "useCallback", "element", "ref", "import_jsx_runtime", "events", "Grid", "createComponent", "GridElement", "React", "props", "ref", "portals", "rowDetailsRenderer", "useModelRenderer", "innerRef", "useRef", "finalRef", "useMergedRefs", "useLayoutEffect", "args", "jsxs", "ForwardedGrid", "forwardRef", "t", "events", "HorizontalLayout", "createComponent", "HorizontalLayoutElement", "React", "t", "events", "Iconset", "createComponent", "IconsetElement", "React", "e", "events", "Icon", "createComponent", "IconElement", "React", "n", "events", "IntegerField", "createComponent", "IntegerFieldElement", "React", "t", "events", "Item", "createComponent", "ItemElement", "React", "t", "events", "ListBox", "createComponent", "ListBoxElement", "React", "e", "events", "LoginForm", "createComponent", "LoginFormElement", "React", "n", "events", "LoginOverlay", "createComponent", "LoginOverlayElement", "React", "import_react", "p", "import_jsx_runtime", "events", "MenuBar", "createComponent", "MenuBarElement", "React", "props", "ref", "itemPortals", "webComponentItems", "mapItemsWithComponents", "onItemSelected", "jsxs", "event", "getOriginalItem", "ForwardedMenuBar", "forwardRef", "t", "events", "MessageInput", "createComponent", "MessageInputElement", "React", "t", "events", "Message", "createComponent", "MessageElement", "React", "t", "events", "MessageList", "createComponent", "MessageListElement", "React", "import_react", "a", "import_jsx_runtime", "events", "MultiSelectComboBox", "createComponent", "MultiSelectComboBoxElement", "React", "props", "ref", "portals", "renderer", "useModelRenderer", "jsxs", "ForwardedMultiSelectComboBox", "forwardRef", "import_react", "p", "import_jsx_runtime", "events", "Notification", "createComponent", "NotificationElement", "React", "children", "props", "ref", "portals", "renderer", "useSimpleOrChildrenRenderer", "jsx", "ForwardedNotification", "forwardRef", "n", "events", "NumberField", "createComponent", "NumberFieldElement", "React", "a", "events", "PasswordField", "createComponent", "PasswordFieldElement", "React", "import_react", "P", "import_jsx_runtime", "events", "Popover", "createComponent", "PopoverElement", "React", "children", "props", "ref", "portals", "renderer", "useSimpleOrChildrenRenderer", "jsx", "ForwardedPopover", "forwardRef", "e", "events", "ProgressBar", "createComponent", "ProgressBarElement", "React", "e", "events", "RadioButton", "createComponent", "RadioButtonElement", "React", "e", "events", "RadioGroup", "createComponent", "RadioGroupElement", "React", "r", "events", "Scroller", "createComponent", "ScrollerElement", "React", "import_react", "f", "import_jsx_runtime", "events", "Select", "createComponent", "SelectElement", "React", "props", "ref", "children", "slottedChildren", "child", "isValidElement", "overlayChildren", "renderFn", "innerRef", "useRef", "portals", "renderer", "useSimpleOrChildrenRenderer", "finalRef", "useMergedRefs", "useEffect", "_a", "jsxs", "ForwardedSelect", "forwardRef", "t", "events", "SideNavItem", "createComponent", "SideNavItemElement", "React", "a", "events", "SideNav", "createComponent", "SideNavElement", "React", "e", "events", "SplitLayout", "createComponent", "SplitLayoutElement", "React", "t", "events", "Tab", "createComponent", "TabElement", "React", "t", "events", "Tabs", "createComponent", "TabsElement", "React", "import_react", "u", "W", "import_jsx_runtime", "import_react", "Tab_exports", "__export", "Tab", "TabElement", "__reExport", "vaadin_tab_star", "events", "createComponent", "React", "TabSheet", "TabSheetElement", "Tabs_exports", "Tabs", "TabsElement", "vaadin_tabs_star", "TabSheetTab", "_props", "uniqueId", "generatedTabIds", "getTabId", "tab", "props", "ref", "children", "tabSheetRest", "tabs", "child", "remainingChildren", "jsxs", "jsx", "label", "tabRest", "createElement", "ForwardedTabSheet", "forwardRef", "a", "events", "TextArea", "createComponent", "TextAreaElement", "React", "t", "events", "TextField", "createComponent", "TextFieldElement", "React", "import_react", "i", "events", "TimePicker", "createComponent", "TimePickerElement", "React", "forwardRef", "createComponentWithOrderedProps", "t", "events", "Tooltip", "createComponent", "TooltipElement", "React", "o", "events", "Upload", "createComponent", "UploadElement", "React", "e", "events", "VerticalLayout", "createComponent", "VerticalLayoutElement", "React", "import_react", "o", "import_jsx_runtime", "events", "VirtualList", "createComponent", "VirtualListElement", "React", "props", "ref", "portals", "renderer", "useModelRenderer", "jsx", "ForwardedVirtualList", "forwardRef"]
}
