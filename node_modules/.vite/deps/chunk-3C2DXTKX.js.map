{
  "version": 3,
  "sources": ["../../@vaadin/input-container/src/vaadin-input-container-mixin.js", "../../@vaadin/input-container/src/vaadin-input-container-styles.js", "../../@vaadin/input-container/src/vaadin-input-container.js", "../../@vaadin/field-base/src/styles/field-shared-styles.js", "../../@vaadin/field-base/src/styles/input-field-container-styles.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const InputContainerMixin = (superClass) =>\r\n  class InputContainerMixinClass extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * If true, the user cannot interact with this element.\r\n         */\r\n        disabled: {\r\n          type: Boolean,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * Set to true to make this element read-only.\r\n         */\r\n        readonly: {\r\n          type: Boolean,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * Set to true when the element is invalid.\r\n         */\r\n        invalid: {\r\n          type: Boolean,\r\n          reflectToAttribute: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addEventListener('pointerdown', (event) => {\r\n        if (event.target === this) {\r\n          // Prevent direct clicks to the input container from blurring the input\r\n          event.preventDefault();\r\n        }\r\n      });\r\n\r\n      this.addEventListener('click', (event) => {\r\n        if (event.target === this) {\r\n          // The vaadin-input-container element was directly clicked,\r\n          // focus any focusable child element from the default slot\r\n          this.shadowRoot\r\n            .querySelector('slot:not([name])')\r\n            .assignedNodes({ flatten: true })\r\n            .forEach((node) => node.focus && node.focus());\r\n        }\r\n      });\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const inputContainerStyles = css`\r\n  :host {\r\n    display: flex;\r\n    align-items: center;\r\n    flex: 0 1 auto;\r\n    border-radius:\r\n            /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius */\r\n      var(--vaadin-input-field-top-start-radius, var(--__border-radius))\r\n      var(--vaadin-input-field-top-end-radius, var(--__border-radius))\r\n      var(--vaadin-input-field-bottom-end-radius, var(--__border-radius))\r\n      var(--vaadin-input-field-bottom-start-radius, var(--__border-radius));\r\n    --_border-radius: var(--vaadin-input-field-border-radius, 0);\r\n    --_input-border-width: var(--vaadin-input-field-border-width, 0px);\r\n    --_input-border-color: var(--vaadin-input-field-border-color, transparent);\r\n    /* stylelint-disable-next-line length-zero-no-unit */\r\n    box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\r\n  }\r\n\r\n  :host([dir='rtl']) {\r\n    border-radius:\r\n            /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\r\n      var(--vaadin-input-field-top-end-radius, var(--_border-radius))\r\n      var(--vaadin-input-field-top-start-radius, var(--_border-radius))\r\n      var(--vaadin-input-field-bottom-start-radius, var(--_border-radius))\r\n      var(--vaadin-input-field-bottom-end-radius, var(--_border-radius));\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  /* Reset the native input styles */\r\n  ::slotted(input) {\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    flex: auto;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    border-radius: 0;\r\n    min-width: 0;\r\n    font: inherit;\r\n    line-height: normal;\r\n    color: inherit;\r\n    background-color: transparent;\r\n    /* Disable default invalid style in Firefox */\r\n    box-shadow: none;\r\n  }\r\n\r\n  ::slotted(*) {\r\n    flex: none;\r\n  }\r\n\r\n  ::slotted(:is(input, textarea))::placeholder {\r\n    /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\r\n    /* because ::slotted(...)::placeholder does not work in Safari. */\r\n    font: inherit;\r\n    color: inherit;\r\n    /* Override default opacity in Firefox */\r\n    opacity: 1;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { InputContainerMixin } from './vaadin-input-container-mixin.js';\r\nimport { inputContainerStyles } from './vaadin-input-container-styles.js';\r\n\r\nregisterStyles('vaadin-input-container', inputContainerStyles, { moduleId: 'vaadin-input-container-styles' });\r\n\r\n/**\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @mixes DirMixin\r\n * @mixes InputContainerMixin\r\n */\r\nexport class InputContainer extends InputContainerMixin(ThemableMixin(DirMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-input-container';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <slot name=\"prefix\"></slot>\r\n      <slot></slot>\r\n      <slot name=\"suffix\"></slot>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(InputContainer);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const fieldShared = css`\r\n  :host {\r\n    display: inline-flex;\r\n    outline: none;\r\n  }\r\n\r\n  :host::before {\r\n    content: '\\\\2003';\r\n    width: 0;\r\n    display: inline-block;\r\n    /* Size and position this element on the same vertical position as the input-field element\r\n          to make vertical align for the host element work as expected */\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  :host(:not([has-label])) [part='label'] {\r\n    display: none;\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    :host(:not([readonly])) [part='input-field'] {\r\n      outline: 1px solid;\r\n      outline-offset: -1px;\r\n    }\r\n    :host([focused]) [part='input-field'] {\r\n      outline-width: 2px;\r\n    }\r\n    :host([disabled]) [part='input-field'] {\r\n      outline-color: GrayText;\r\n    }\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const inputFieldContainer = css`\r\n  [class$='container'] {\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-width: 100%;\r\n    max-width: 100%;\r\n    width: var(--vaadin-field-default-width, 12em);\r\n  }\r\n`;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AASO,IAAM,sBAAsB,CAAC,eAClC,MAAM,iCAAiC,WAAW;AAAA,EAChD,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA,MAIL,UAAU;AAAA,QACR,MAAM;AAAA,QACN,oBAAoB;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA,MAKA,UAAU;AAAA,QACR,MAAM;AAAA,QACN,oBAAoB;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA,MAKA,SAAS;AAAA,QACP,MAAM;AAAA,QACN,oBAAoB;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,iBAAiB,eAAe,CAAC,UAAU;AAC9C,UAAI,MAAM,WAAW,MAAM;AAEzB,cAAM,eAAe;AAAA,MACvB;AAAA,IACF,CAAC;AAED,SAAK,iBAAiB,SAAS,CAAC,UAAU;AACxC,UAAI,MAAM,WAAW,MAAM;AAGzB,aAAK,WACF,cAAc,kBAAkB,EAChC,cAAc,EAAE,SAAS,KAAK,CAAC,EAC/B,QAAQ,CAAC,SAAS,KAAK,SAAS,KAAK,MAAM,CAAC;AAAA,MACjD;AAAA,IACF,CAAC;AAAA,EACH;AACF;;;ACtDK,IAAM,uBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACKpC,eAAe,0BAA0B,sBAAsB,EAAE,UAAU,gCAAgC,CAAC;AASrG,IAAM,iBAAN,cAA6B,oBAAoB,cAAc,SAAS,cAAc,CAAC,CAAC,EAAE;AAAA,EAC/F,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,EAKT;AACF;AAEA,oBAAoB,cAAc;;;AC5B3B,IAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACApB,IAAM,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
