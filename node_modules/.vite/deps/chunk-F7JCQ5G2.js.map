{
  "version": 3,
  "sources": ["../../@vaadin/context-menu/theme/lumo/vaadin-context-menu-item-styles.js", "../../@vaadin/context-menu/theme/lumo/vaadin-context-menu-list-box-styles.js", "../../@vaadin/context-menu/theme/lumo/vaadin-context-menu-overlay-styles.js", "../../@vaadin/context-menu/src/vaadin-contextmenu-items-mixin.js", "../../@vaadin/context-menu/src/vaadin-context-menu-mixin.js", "../../@vaadin/context-menu/src/vaadin-menu-overlay-mixin.js", "../../@vaadin/context-menu/src/vaadin-menu-overlay-styles.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport { item } from '@vaadin/item/theme/lumo/vaadin-item-styles.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst contextMenuItem = css`\r\n  /* :hover needed to workaround https://github.com/vaadin/web-components/issues/3133 */\r\n  :host(:hover) {\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n  }\r\n\r\n  :host([role='menuitem'][menu-item-checked]) [part='checkmark']::before {\r\n    opacity: 1;\r\n  }\r\n\r\n  :host([aria-haspopup='true'])::after {\r\n    font-family: lumo-icons;\r\n    font-size: var(--lumo-icon-size-xs);\r\n    content: var(--lumo-icons-angle-right);\r\n    color: var(--lumo-tertiary-text-color);\r\n  }\r\n\r\n  :host(:not([dir='rtl'])[aria-haspopup='true'])::after {\r\n    margin-right: calc(var(--lumo-space-m) * -1);\r\n    padding-left: var(--lumo-space-m);\r\n  }\r\n\r\n  :host([expanded]) {\r\n    background-color: var(--lumo-primary-color-10pct);\r\n  }\r\n\r\n  /* RTL styles */\r\n  :host([dir='rtl'][aria-haspopup='true'])::after {\r\n    content: var(--lumo-icons-angle-left);\r\n    margin-left: calc(var(--lumo-space-m) * -1);\r\n    padding-right: var(--lumo-space-m);\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-context-menu-item', [item, contextMenuItem], { moduleId: 'lumo-context-menu-item' });\r\n\r\nexport { contextMenuItem };\r\n", "import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { listBox } from '@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst contextMenuListBox = css`\r\n  :host {\r\n    --_lumo-list-box-item-selected-icon-display: block;\r\n  }\r\n\r\n  /* Normal item */\r\n  [part='items'] ::slotted([role='menuitem']) {\r\n    -webkit-tap-highlight-color: var(--lumo-primary-color-10pct);\r\n    cursor: default;\r\n    outline: none;\r\n    border-radius: var(--lumo-border-radius-m);\r\n    padding-left: calc(var(--lumo-border-radius-m) / 4);\r\n    padding-right: calc(var(--lumo-space-l) + var(--lumo-border-radius-m) / 4);\r\n  }\r\n\r\n  /* Hovered item */\r\n  /* TODO a workaround until we have \"focus-follows-mouse\". After that, use the hover style for focus-ring as well */\r\n  [part='items'] ::slotted([role='menuitem']:hover:not([disabled])),\r\n  [part='items'] ::slotted([role='menuitem'][expanded]:not([disabled])) {\r\n    background-color: var(--lumo-primary-color-10pct);\r\n  }\r\n\r\n  /* RTL styles */\r\n  :host([dir='rtl']) [part='items'] ::slotted([role='menuitem']) {\r\n    padding-left: calc(var(--lumo-space-l) + var(--lumo-border-radius-m) / 4);\r\n    padding-right: calc(var(--lumo-border-radius-m) / 4);\r\n  }\r\n\r\n  /* Focused item */\r\n  @media (pointer: coarse) {\r\n    [part='items'] ::slotted([role='menuitem']:hover:not([expanded]):not([disabled])) {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-context-menu-list-box', [listBox, contextMenuListBox], {\r\n  moduleId: 'lumo-context-menu-list-box',\r\n});\r\n\r\nexport { contextMenuListBox };\r\n", "import '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { menuOverlay } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst contextMenuOverlay = css`\r\n  :host([phone]) {\r\n    /* stylelint-disable declaration-block-no-redundant-longhand-properties */\r\n    top: 0 !important;\r\n    right: 0 !important;\r\n    bottom: var(--vaadin-overlay-viewport-bottom) !important;\r\n    left: 0 !important;\r\n    /* stylelint-enable declaration-block-no-redundant-longhand-properties */\r\n    align-items: stretch;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  /* TODO These style overrides should not be needed.\r\n   We should instead offer a way to have non-selectable items inside the context menu. */\r\n\r\n  :host {\r\n    --_lumo-list-box-item-selected-icon-display: none;\r\n    --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius-m) / 4);\r\n  }\r\n\r\n  [part='overlay'] {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-context-menu-overlay', [menuOverlay, contextMenuOverlay], {\r\n  moduleId: 'lumo-context-menu-overlay',\r\n});\r\n\r\nexport { contextMenuOverlay };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const ItemsMixin = (superClass) =>\r\n  class ItemsMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * @typedef ContextMenuItem\r\n         * @type {object}\r\n         * @property {string} text - Text to be set as the menu item component's textContent\r\n         * @property {union: string | object} component - The component to represent the item.\r\n         * Either a tagName or an element instance. Defaults to \"vaadin-context-menu-item\".\r\n         * @property {boolean} disabled - If true, the item is disabled and cannot be selected\r\n         * @property {boolean} checked - If true, the item shows a checkmark next to it\r\n         * @property {boolean} keepOpen - If true, the menu will not be closed on item selection\r\n         * @property {string} className - A space-delimited list of CSS class names to be set on the menu item component.\r\n         * @property {union: string | string[]} theme - If set, sets the given theme(s) as an attribute to the menu item component, overriding any theme set on the context menu.\r\n         * @property {MenuItem[]} children - Array of child menu items\r\n         */\r\n\r\n        /**\r\n         * Defines a (hierarchical) menu structure for the component.\r\n         * If a menu item has a non-empty `children` set, a sub-menu with the child items is opened\r\n         * next to the parent menu on mouseover, tap or a right arrow keypress.\r\n         *\r\n         * The items API can't be used together with a renderer!\r\n         *\r\n         * #### Example\r\n         *\r\n         * ```javascript\r\n         * contextMenu.items = [\r\n         *   { text: 'Menu Item 1', theme: 'primary', className: 'first', children:\r\n         *     [\r\n         *       { text: 'Menu Item 1-1', checked: true, keepOpen: true },\r\n         *       { text: 'Menu Item 1-2' }\r\n         *     ]\r\n         *   },\r\n         *   { component: 'hr' },\r\n         *   { text: 'Menu Item 2', children:\r\n         *     [\r\n         *       { text: 'Menu Item 2-1' },\r\n         *       { text: 'Menu Item 2-2', disabled: true }\r\n         *     ]\r\n         *   },\r\n         *   { text: 'Menu Item 3', disabled: true, className: 'last' }\r\n         * ];\r\n         * ```\r\n         *\r\n         * @type {!Array<!ContextMenuItem> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      // Overlay's outside click listener doesn't work with modeless\r\n      // overlays (submenus) so we need additional logic for it\r\n      this.__itemsOutsideClickListener = (e) => {\r\n        if (this._shouldCloseOnOutsideClick(e)) {\r\n          this.dispatchEvent(new CustomEvent('items-outside-click'));\r\n        }\r\n      };\r\n      this.addEventListener('items-outside-click', () => {\r\n        this.items && this.close();\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Tag name prefix used by overlay, list-box and items.\r\n     * @protected\r\n     * @return {string}\r\n     */\r\n    get _tagNamePrefix() {\r\n      return 'vaadin-context-menu';\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      // Firefox leaks click to document on contextmenu even if prevented\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\r\n      document.documentElement.addEventListener('click', this.__itemsOutsideClickListener);\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      document.documentElement.removeEventListener('click', this.__itemsOutsideClickListener);\r\n    }\r\n\r\n    /**\r\n     * Whether to close the overlay on outside click or not.\r\n     * Override this method to customize the closing logic.\r\n     *\r\n     * @param {Event} event\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    _shouldCloseOnOutsideClick(event) {\r\n      return !event.composedPath().some((el) => el.localName === `${this._tagNamePrefix}-overlay`);\r\n    }\r\n\r\n    /** @protected */\r\n    __forwardFocus() {\r\n      const overlay = this._overlayElement;\r\n      const child = overlay.getFirstChild();\r\n      // If parent item is not focused, do not focus submenu\r\n      if (overlay.parentOverlay) {\r\n        const parent = overlay.parentOverlay.querySelector('[expanded]');\r\n        if (parent && parent.hasAttribute('focused') && child) {\r\n          child.focus();\r\n        } else {\r\n          overlay.$.overlay.focus();\r\n        }\r\n      } else if (child) {\r\n        child.focus();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __openSubMenu(subMenu, itemElement, overlayClass) {\r\n      subMenu.items = itemElement._item.children;\r\n      subMenu.listenOn = itemElement;\r\n      subMenu.overlayClass = overlayClass;\r\n\r\n      const parent = this._overlayElement;\r\n\r\n      const subMenuOverlay = subMenu._overlayElement;\r\n      subMenuOverlay.positionTarget = itemElement;\r\n      subMenuOverlay.noHorizontalOverlap = true;\r\n      // Store the reference parent overlay\r\n      subMenuOverlay._setParentOverlay(parent);\r\n\r\n      // Set theme attribute from parent element\r\n      if (parent.hasAttribute('theme')) {\r\n        subMenu.setAttribute('theme', parent.getAttribute('theme'));\r\n      } else {\r\n        subMenu.removeAttribute('theme');\r\n      }\r\n\r\n      const content = subMenuOverlay.$.content;\r\n      content.style.minWidth = '';\r\n\r\n      itemElement.dispatchEvent(\r\n        new CustomEvent('opensubmenu', {\r\n          detail: {\r\n            children: itemElement._item.children,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {!ContextMenuItem} item\r\n     * @return {HTMLElement}\r\n     * @private\r\n     */\r\n    __createComponent(item) {\r\n      let component;\r\n\r\n      if (item.component instanceof HTMLElement) {\r\n        component = item.component;\r\n      } else {\r\n        component = document.createElement(item.component || `${this._tagNamePrefix}-item`);\r\n      }\r\n\r\n      // Support menu-bar / context-menu item\r\n      if (component._hasVaadinItemMixin) {\r\n        component.setAttribute('role', 'menuitem');\r\n        component.tabIndex = -1;\r\n      }\r\n\r\n      if (component.localName === 'hr') {\r\n        component.setAttribute('role', 'separator');\r\n      } else {\r\n        // Accept not `menuitem` elements e.g. `<button>`\r\n        component.setAttribute('aria-haspopup', 'false');\r\n      }\r\n\r\n      this._setMenuItemTheme(component, item, this._theme);\r\n\r\n      component._item = item;\r\n\r\n      if (item.text) {\r\n        component.textContent = item.text;\r\n      }\r\n\r\n      if (item.className) {\r\n        component.setAttribute('class', item.className);\r\n      }\r\n\r\n      this.__toggleMenuComponentAttribute(component, 'menu-item-checked', item.checked);\r\n      this.__toggleMenuComponentAttribute(component, 'disabled', item.disabled);\r\n\r\n      if (item.children && item.children.length) {\r\n        this.__updateExpanded(component, false);\r\n        component.setAttribute('aria-haspopup', 'true');\r\n      }\r\n\r\n      return component;\r\n    }\r\n\r\n    /** @private */\r\n    __initListBox() {\r\n      const listBox = document.createElement(`${this._tagNamePrefix}-list-box`);\r\n\r\n      if (this._theme) {\r\n        listBox.setAttribute('theme', this._theme);\r\n      }\r\n\r\n      listBox.addEventListener('selected-changed', (event) => {\r\n        const { value } = event.detail;\r\n        if (typeof value === 'number') {\r\n          const item = listBox.items[value]._item;\r\n          // Reset selected before dispatching the event to prevent\r\n          // checkmark icon flashing when `keepOpen` is set to true.\r\n          listBox.selected = null;\r\n          if (!item.children) {\r\n            this.dispatchEvent(new CustomEvent('item-selected', { detail: { value: item } }));\r\n          }\r\n        }\r\n      });\r\n\r\n      return listBox;\r\n    }\r\n\r\n    /** @private */\r\n    __initOverlay() {\r\n      const overlay = this._overlayElement;\r\n\r\n      overlay.$.backdrop.addEventListener('click', () => {\r\n        this.close();\r\n      });\r\n\r\n      // Open a submenu on click event when a touch device is used.\r\n      // On desktop, a submenu opens on hover.\r\n      overlay.addEventListener(isTouch ? 'click' : 'mouseover', (event) => {\r\n        this.__showSubMenu(event);\r\n      });\r\n\r\n      overlay.addEventListener('keydown', (event) => {\r\n        const { key } = event;\r\n        const isRTL = this.__isRTL;\r\n\r\n        const isArrowRight = key === 'ArrowRight';\r\n        const isArrowLeft = key === 'ArrowLeft';\r\n\r\n        if ((!isRTL && isArrowRight) || (isRTL && isArrowLeft) || key === 'Enter' || key === ' ') {\r\n          // Open a sub-menu\r\n          this.__showSubMenu(event);\r\n        } else if ((!isRTL && isArrowLeft) || (isRTL && isArrowRight) || key === 'Escape') {\r\n          if (key === 'Escape') {\r\n            event.stopPropagation();\r\n          }\r\n          // Close the menu\r\n          this.close();\r\n          this.listenOn.focus();\r\n        } else if (key === 'Tab') {\r\n          // Close all menus\r\n          this.dispatchEvent(new CustomEvent('close-all-menus'));\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __initSubMenu() {\r\n      const subMenu = document.createElement(this.constructor.is);\r\n\r\n      subMenu._modeless = true;\r\n      subMenu.openOn = 'opensubmenu';\r\n\r\n      // Sub-menu doesn't have a target to wrap,\r\n      // so there is no need to keep it visible.\r\n      subMenu.setAttribute('hidden', '');\r\n\r\n      // Close sub-menu when the parent menu closes.\r\n      this.addEventListener('opened-changed', (event) => {\r\n        if (!event.detail.value) {\r\n          this._subMenu.close();\r\n        }\r\n      });\r\n\r\n      // Forward event to the parent menu element.\r\n      subMenu.addEventListener('close-all-menus', () => {\r\n        this.dispatchEvent(new CustomEvent('close-all-menus'));\r\n      });\r\n\r\n      // Forward event to the parent menu element.\r\n      subMenu.addEventListener('item-selected', (event) => {\r\n        const { detail } = event;\r\n        this.dispatchEvent(new CustomEvent('item-selected', { detail }));\r\n      });\r\n\r\n      // Listen to the forwarded event from sub-menu.\r\n      this.addEventListener('close-all-menus', () => {\r\n        // Call `close()` on the overlay to close synchronously,\r\n        // as we can't have `sync: true` on `opened` property.\r\n        this._overlayElement.close();\r\n      });\r\n\r\n      // Listen to the forwarded event from sub-menu.\r\n      this.addEventListener('item-selected', (e) => {\r\n        const menu = e.target;\r\n        const selectedItem = e.detail.value;\r\n        const index = menu.items.indexOf(selectedItem);\r\n        if (!!selectedItem.keepOpen && index > -1) {\r\n          menu._overlayElement.requestContentUpdate();\r\n\r\n          // Initialize items synchronously\r\n          menu._listBox._observer.flush();\r\n\r\n          const newItem = menu._listBox.children[index];\r\n          newItem.focus();\r\n        } else if (!selectedItem.keepOpen) {\r\n          this.close();\r\n        }\r\n      });\r\n\r\n      // Mark parent item as collapsed when closing.\r\n      subMenu.addEventListener('opened-changed', (event) => {\r\n        if (!event.detail.value) {\r\n          const expandedItem = this._listBox.querySelector('[expanded]');\r\n          if (expandedItem) {\r\n            this.__updateExpanded(expandedItem, false);\r\n          }\r\n        }\r\n      });\r\n\r\n      return subMenu;\r\n    }\r\n\r\n    /** @private */\r\n    __showSubMenu(event, item = event.composedPath().find((node) => node.localName === `${this._tagNamePrefix}-item`)) {\r\n      // Delay enabling the mouseover listener to avoid it from triggering on parent menu open\r\n      if (!this.__openListenerActive) {\r\n        return;\r\n      }\r\n\r\n      // Don't open sub-menus while the menu is still opening\r\n      if (this._overlayElement.hasAttribute('opening')) {\r\n        requestAnimationFrame(() => {\r\n          this.__showSubMenu(event, item);\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      const subMenu = this._subMenu;\r\n\r\n      if (item) {\r\n        const { children } = item._item;\r\n\r\n        // Check if the sub-menu was focused before closing it.\r\n        const child = subMenu._overlayElement.getFirstChild();\r\n        const isSubmenuFocused = child && child.focused;\r\n\r\n        if (subMenu.items !== children) {\r\n          subMenu.close();\r\n        }\r\n        if (!this.opened) {\r\n          return;\r\n        }\r\n\r\n        if (children && children.length) {\r\n          this.__updateExpanded(item, true);\r\n\r\n          // Forward parent overlay class\r\n          const { overlayClass } = this;\r\n          this.__openSubMenu(subMenu, item, overlayClass);\r\n        } else if (isSubmenuFocused) {\r\n          // If the sub-menu item was focused, focus its parent item.\r\n          subMenu.listenOn.focus();\r\n        } else if (!this._listBox.focused) {\r\n          // Otherwise, focus the overlay part to handle arrow keys.\r\n          this._overlayElement.$.overlay.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLElement} root\r\n     * @param {!ContextMenu} menu\r\n     * @param {!ContextMenuRendererContext} context\r\n     * @protected\r\n     */\r\n    __itemsRenderer(root, menu, { detail }) {\r\n      this.__initMenu(root, menu);\r\n\r\n      const subMenu = root.querySelector(this.constructor.is);\r\n      subMenu.closeOn = menu.closeOn;\r\n\r\n      const listBox = root.querySelector(`${this._tagNamePrefix}-list-box`);\r\n      listBox.innerHTML = '';\r\n\r\n      [...(detail.children || menu.items)].forEach((item) => {\r\n        const component = this.__createComponent(item);\r\n        listBox.appendChild(component);\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    _setMenuItemTheme(component, item, hostTheme) {\r\n      // Use existing component theme when it is provided\r\n      let theme = component.getAttribute('theme') || hostTheme;\r\n\r\n      // Item theme takes precedence over host theme / component theme\r\n      // even if it's empty, as long as it's not undefined or null\r\n      if (item.theme != null) {\r\n        theme = Array.isArray(item.theme) ? item.theme.join(' ') : item.theme;\r\n      }\r\n\r\n      this.__updateTheme(component, theme);\r\n    }\r\n\r\n    /** @private */\r\n    __toggleMenuComponentAttribute(component, attribute, on) {\r\n      if (on) {\r\n        component.setAttribute(attribute, '');\r\n        component[`__has-${attribute}`] = true;\r\n      } else if (component[`__has-${attribute}`]) {\r\n        component.removeAttribute(attribute);\r\n        component[`__has-${attribute}`] = false;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __initMenu(root, _menu) {\r\n      // NOTE: in this method, `menu` and `this` reference the same element,\r\n      // so we can use either of those. Original implementation used `menu`.\r\n      if (!root.firstElementChild) {\r\n        this.__initOverlay();\r\n\r\n        const listBox = this.__initListBox();\r\n        this._listBox = listBox;\r\n        root.appendChild(listBox);\r\n\r\n        const subMenu = this.__initSubMenu();\r\n        this._subMenu = subMenu;\r\n        root.appendChild(subMenu);\r\n\r\n        requestAnimationFrame(() => {\r\n          this.__openListenerActive = true;\r\n        });\r\n      } else {\r\n        this.__updateTheme(this._listBox, this._theme);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateExpanded(component, expanded) {\r\n      component.setAttribute('aria-expanded', expanded.toString());\r\n      component.toggleAttribute('expanded', expanded);\r\n    }\r\n\r\n    /** @private */\r\n    __updateTheme(component, theme) {\r\n      if (theme) {\r\n        component.setAttribute('theme', theme);\r\n      } else {\r\n        component.removeAttribute('theme');\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isElementFocusable } from '@vaadin/a11y-base/src/focus-utils.js';\r\nimport { isAndroid, isIOS } from '@vaadin/component-base/src/browser-utils.js';\r\nimport { addListener, deepTargetFind, gestures, removeListener } from '@vaadin/component-base/src/gestures.js';\r\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\r\nimport { ItemsMixin } from './vaadin-contextmenu-items-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ItemsMixin\r\n */\r\nexport const ContextMenuMixin = (superClass) =>\r\n  class ContextMenuMixinClass extends ItemsMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * CSS selector that can be used to target any child element\r\n         * of the context menu to listen for `openOn` events.\r\n         */\r\n        selector: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * True if the overlay is currently displayed.\r\n         * @type {boolean}\r\n         */\r\n        opened: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true,\r\n          readOnly: true,\r\n        },\r\n\r\n        /**\r\n         * Event name to listen for opening the context menu.\r\n         * @attr {string} open-on\r\n         * @type {string}\r\n         */\r\n        openOn: {\r\n          type: String,\r\n          value: 'vaadin-contextmenu',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * The target element that's listened to for context menu opening events.\r\n         * By default the vaadin-context-menu listens to the target's `vaadin-contextmenu`\r\n         * events.\r\n         * @type {!HTMLElement}\r\n         * @default self\r\n         */\r\n        listenOn: {\r\n          type: Object,\r\n          sync: true,\r\n          value() {\r\n            return this;\r\n          },\r\n        },\r\n\r\n        /**\r\n         * Event name to listen for closing the context menu.\r\n         * @attr {string} close-on\r\n         * @type {string}\r\n         */\r\n        closeOn: {\r\n          type: String,\r\n          value: 'click',\r\n          observer: '_closeOnChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the content of the menu overlay.\r\n         * Receives three arguments:\r\n         *\r\n         * - `root` The root container DOM element. Append your content to it.\r\n         * - `contextMenu` The reference to the `<vaadin-context-menu>` element.\r\n         * - `context` The object with the menu context, contains:\r\n         *   - `context.target`  the target of the menu opening event,\r\n         *   - `context.detail` the menu opening event detail.\r\n         * @type {ContextMenuRenderer | undefined}\r\n         */\r\n        renderer: {\r\n          type: Function,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * When true, the menu overlay is modeless.\r\n         * @protected\r\n         */\r\n        _modeless: {\r\n          type: Boolean,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _context: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _phone: {\r\n          type: Boolean,\r\n        },\r\n\r\n        _fullscreen: {\r\n          type: Boolean,\r\n        },\r\n\r\n        _fullscreenMediaQuery: {\r\n          type: String,\r\n          value: '(max-width: 450px), (max-height: 450px)',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '_openedChanged(opened)',\r\n        '_targetOrOpenOnChanged(listenOn, openOn)',\r\n        '_rendererChanged(renderer, items)',\r\n        '_fullscreenChanged(_fullscreen)',\r\n        '_overlayContextChanged(_overlayElement, _context)',\r\n        '_overlayModelessChanged(_overlayElement, _modeless)',\r\n        '_overlayPhoneChanged(_overlayElement, _phone)',\r\n        '_overlayThemeChanged(_overlayElement, _theme)',\r\n      ];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this._createOverlay();\r\n\r\n      this._boundOpen = this.open.bind(this);\r\n      this._boundClose = this.close.bind(this);\r\n      this._boundPreventDefault = this._preventDefault.bind(this);\r\n      this._boundOnGlobalContextMenu = this._onGlobalContextMenu.bind(this);\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      this.__boundOnScroll = this.__onScroll.bind(this);\r\n      window.addEventListener('scroll', this.__boundOnScroll, true);\r\n\r\n      // Restore opened state if overlay was opened when disconnecting\r\n      if (this.__restoreOpened) {\r\n        this._setOpened(true);\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      window.removeEventListener('scroll', this.__boundOnScroll, true);\r\n\r\n      // Close overlay and memorize opened state\r\n      this.__restoreOpened = this.opened;\r\n      this.close();\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addController(\r\n        new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\r\n          this._fullscreen = matches;\r\n        }),\r\n      );\r\n    }\r\n\r\n    /** @private */\r\n    _createOverlay() {\r\n      // Create an overlay in the constructor to use in observers before `ready()`\r\n      const overlay = document.createElement(`${this._tagNamePrefix}-overlay`);\r\n      overlay.owner = this;\r\n\r\n      overlay.addEventListener('opened-changed', (e) => {\r\n        this._onOverlayOpened(e);\r\n      });\r\n\r\n      overlay.addEventListener('vaadin-overlay-open', (e) => {\r\n        this._onVaadinOverlayOpen(e);\r\n      });\r\n\r\n      this._overlayElement = overlay;\r\n    }\r\n\r\n    /**\r\n     * Runs before overlay is fully rendered\r\n     * @private\r\n     */\r\n    _onOverlayOpened(e) {\r\n      const opened = e.detail.value;\r\n      this._setOpened(opened);\r\n      if (opened) {\r\n        this.__alignOverlayPosition();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Runs after overlay is fully rendered\r\n     * @private\r\n     */\r\n    _onVaadinOverlayOpen() {\r\n      this.__alignOverlayPosition();\r\n      this._overlayElement.style.opacity = '';\r\n      this.__forwardFocus();\r\n    }\r\n\r\n    /** @private */\r\n    _overlayContextChanged(overlay, context) {\r\n      if (overlay) {\r\n        overlay.model = context;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _overlayModelessChanged(overlay, modeless) {\r\n      if (overlay) {\r\n        overlay.modeless = modeless;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _overlayPhoneChanged(overlay, phone) {\r\n      if (overlay) {\r\n        overlay.toggleAttribute('phone', phone);\r\n        overlay.withBackdrop = phone;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _overlayThemeChanged(overlay, theme) {\r\n      if (overlay) {\r\n        if (theme) {\r\n          overlay.setAttribute('theme', theme);\r\n        } else {\r\n          overlay.removeAttribute('theme');\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _targetOrOpenOnChanged(listenOn, openOn) {\r\n      if (this._oldListenOn && this._oldOpenOn) {\r\n        this._unlisten(this._oldListenOn, this._oldOpenOn, this._boundOpen);\r\n\r\n        this._oldListenOn.style.webkitTouchCallout = '';\r\n        this._oldListenOn.style.webkitUserSelect = '';\r\n        this._oldListenOn.style.userSelect = '';\r\n\r\n        this._oldListenOn = null;\r\n        this._oldOpenOn = null;\r\n      }\r\n\r\n      if (listenOn && openOn) {\r\n        this._listen(listenOn, openOn, this._boundOpen);\r\n\r\n        this._oldListenOn = listenOn;\r\n        this._oldOpenOn = openOn;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _fullscreenChanged(fullScreen) {\r\n      this._phone = fullScreen;\r\n    }\r\n\r\n    /** @private */\r\n    __setListenOnUserSelect(opened) {\r\n      const value = opened ? 'none' : '';\r\n      // Note: these styles don't seem to work in Firefox on iOS.\r\n      this.listenOn.style.webkitTouchCallout = value;\r\n      this.listenOn.style.webkitUserSelect = value; // Chrome, Safari, Firefox\r\n      this.listenOn.style.userSelect = value;\r\n\r\n      // Note: because user-selection is disabled on the overlay\r\n      // before opening the menu the text could be already selected\r\n      // so we need to clear that selection\r\n      if (opened) {\r\n        document.getSelection().removeAllRanges();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _closeOnChanged(closeOn, oldCloseOn) {\r\n      // Outside click event from overlay\r\n      const evtOverlay = 'vaadin-overlay-outside-click';\r\n\r\n      const overlay = this._overlayElement;\r\n\r\n      if (oldCloseOn) {\r\n        this._unlisten(overlay, oldCloseOn, this._boundClose);\r\n      }\r\n      if (closeOn) {\r\n        this._listen(overlay, closeOn, this._boundClose);\r\n        overlay.removeEventListener(evtOverlay, this._boundPreventDefault);\r\n      } else {\r\n        overlay.addEventListener(evtOverlay, this._boundPreventDefault);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _preventDefault(e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    /** @private */\r\n    _openedChanged(opened) {\r\n      if (opened) {\r\n        document.documentElement.addEventListener('contextmenu', this._boundOnGlobalContextMenu, true);\r\n      } else {\r\n        document.documentElement.removeEventListener('contextmenu', this._boundOnGlobalContextMenu, true);\r\n      }\r\n\r\n      this.__setListenOnUserSelect(opened);\r\n\r\n      // Has to be set after instance has been created\r\n      this._overlayElement.opened = opened;\r\n    }\r\n\r\n    /**\r\n     * Requests an update for the content of the menu overlay.\r\n     * While performing the update, it invokes the renderer passed in the `renderer` property.\r\n     *\r\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n     */\r\n    requestContentUpdate() {\r\n      if (!this._overlayElement || !this.renderer) {\r\n        return;\r\n      }\r\n\r\n      this._overlayElement.requestContentUpdate();\r\n    }\r\n\r\n    /** @private */\r\n    _rendererChanged(renderer, items) {\r\n      if (items) {\r\n        if (renderer) {\r\n          throw new Error('The items API cannot be used together with a renderer');\r\n        }\r\n\r\n        if (this.closeOn === 'click') {\r\n          this.closeOn = '';\r\n        }\r\n\r\n        renderer = this.__itemsRenderer;\r\n      }\r\n\r\n      this._overlayElement.renderer = renderer;\r\n    }\r\n\r\n    /**\r\n     * Closes the overlay.\r\n     */\r\n    close() {\r\n      this._setOpened(false);\r\n    }\r\n\r\n    /** @private */\r\n    _contextTarget(e) {\r\n      if (this.selector) {\r\n        const targets = this.listenOn.querySelectorAll(this.selector);\r\n\r\n        return Array.prototype.filter.call(targets, (el) => {\r\n          return e.composedPath().indexOf(el) > -1;\r\n        })[0];\r\n      }\r\n      return e.target;\r\n    }\r\n\r\n    /**\r\n     * Opens the overlay.\r\n     * @param {!Event | undefined} e used as the context for the menu. Overlay coordinates are taken from this event.\r\n     */\r\n    open(e) {\r\n      if (e && !this.opened) {\r\n        this._context = {\r\n          detail: e.detail,\r\n          target: this._contextTarget(e),\r\n        };\r\n\r\n        if (this._context.target) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n\r\n          // Used in alignment which is delayed until overlay is rendered\r\n          this.__x = this._getEventCoordinate(e, 'x');\r\n          this.__pageXOffset = window.pageXOffset;\r\n\r\n          this.__y = this._getEventCoordinate(e, 'y');\r\n          this.__pageYOffset = window.pageYOffset;\r\n\r\n          this._overlayElement.style.opacity = '0';\r\n          this._setOpened(true);\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onScroll() {\r\n      if (!this.opened) {\r\n        return;\r\n      }\r\n\r\n      const yDiff = window.pageYOffset - this.__pageYOffset;\r\n      const xDiff = window.pageXOffset - this.__pageXOffset;\r\n\r\n      this.__adjustPosition('left', -xDiff);\r\n      this.__adjustPosition('right', xDiff);\r\n\r\n      this.__adjustPosition('top', -yDiff);\r\n      this.__adjustPosition('bottom', yDiff);\r\n\r\n      this.__pageYOffset += yDiff;\r\n      this.__pageXOffset += xDiff;\r\n    }\r\n\r\n    /** @private */\r\n    __adjustPosition(coord, diff) {\r\n      const overlay = this._overlayElement;\r\n      const style = overlay.style;\r\n\r\n      style[coord] = `${(parseInt(style[coord]) || 0) + diff}px`;\r\n    }\r\n\r\n    /** @private */\r\n    __alignOverlayPosition() {\r\n      const overlay = this._overlayElement;\r\n\r\n      if (overlay.positionTarget) {\r\n        // The overlay is positioned relative to another node, for example, a\r\n        // menu item in a nested submenu structure where this overlay lists\r\n        // the items for another submenu.\r\n        // It means that the overlay positioning is controlled by\r\n        // vaadin-overlay-position-mixin so no manual alignment is needed.\r\n        return;\r\n      }\r\n\r\n      const style = overlay.style;\r\n\r\n      // Reset all properties before measuring\r\n      ['top', 'right', 'bottom', 'left'].forEach((prop) => style.removeProperty(prop));\r\n      ['right-aligned', 'end-aligned', 'bottom-aligned'].forEach((attr) => overlay.removeAttribute(attr));\r\n\r\n      // Maximum x and y values are imposed by content size and overlay limits.\r\n      const { xMax, xMin, yMax } = overlay.getBoundaries();\r\n      // Reuse saved x and y event values, in order to this method be used async\r\n      // in the `vaadin-overlay-change` which guarantees that overlay is ready.\r\n      // The valus represent an anchor position on the page where the contextmenu\r\n      // event took place.\r\n      const x = this.__x;\r\n      const y = this.__y;\r\n\r\n      // Select one overlay corner and move to the event x/y position.\r\n      // Then set styling attrs for flex-aligning the content appropriately.\r\n      const wdthVport = document.documentElement.clientWidth;\r\n      const hghtVport = document.documentElement.clientHeight;\r\n\r\n      if (!this.__isRTL) {\r\n        if (x < wdthVport / 2 || x < xMax) {\r\n          // Menu is displayed in the right side of the anchor\r\n          style.left = `${x}px`;\r\n        } else {\r\n          // Menu is displayed in the left side of the anchor\r\n          style.right = `${Math.max(0, wdthVport - x)}px`;\r\n          this._setEndAligned(overlay);\r\n        }\r\n      } else if (x > wdthVport / 2 || x > xMin) {\r\n        // Menu is displayed in the right side of the anchor\r\n        style.right = `${Math.max(0, wdthVport - x)}px`;\r\n      } else {\r\n        // Menu is displayed in the left side of the anchor\r\n        style.left = `${x}px`;\r\n        this._setEndAligned(overlay);\r\n      }\r\n\r\n      if (y < hghtVport / 2 || y < yMax) {\r\n        style.top = `${y}px`;\r\n      } else {\r\n        style.bottom = `${Math.max(0, hghtVport - y)}px`;\r\n        overlay.setAttribute('bottom-aligned', '');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _setEndAligned(element) {\r\n      element.setAttribute('end-aligned', '');\r\n      if (!this.__isRTL) {\r\n        element.setAttribute('right-aligned', '');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _getEventCoordinate(event, coord) {\r\n      if (event.detail instanceof Object) {\r\n        if (event.detail[coord]) {\r\n          // Polymer gesture events, get coordinate from detail\r\n          return event.detail[coord];\r\n        } else if (event.detail.sourceEvent) {\r\n          // Unwrap detailed event\r\n          return this._getEventCoordinate(event.detail.sourceEvent, coord);\r\n        }\r\n      } else {\r\n        const prop = `client${coord.toUpperCase()}`;\r\n        const position = event.changedTouches ? event.changedTouches[0][prop] : event[prop];\r\n\r\n        if (position === 0) {\r\n          // Native keyboard event\r\n          const rect = event.target.getBoundingClientRect();\r\n          return coord === 'x' ? rect.left : rect.top + rect.height;\r\n        }\r\n        // Native mouse or touch event\r\n        return position;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _listen(node, evType, handler) {\r\n      if (gestures[evType]) {\r\n        addListener(node, evType, handler);\r\n      } else {\r\n        node.addEventListener(evType, handler);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _unlisten(node, evType, handler) {\r\n      if (gestures[evType]) {\r\n        removeListener(node, evType, handler);\r\n      } else {\r\n        node.removeEventListener(evType, handler);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __createMouseEvent(name, clientX, clientY) {\r\n      return new MouseEvent(name, {\r\n        bubbles: true,\r\n        composed: true,\r\n        cancelable: true,\r\n        clientX,\r\n        clientY,\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __focusClosestFocusable(target) {\r\n      let currentElement = target;\r\n      while (currentElement) {\r\n        if (currentElement instanceof HTMLElement && isElementFocusable(currentElement)) {\r\n          currentElement.focus();\r\n          return;\r\n        }\r\n        currentElement = currentElement.parentNode || currentElement.host;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Executes a synthetic contextmenu event on the target under the coordinates.\r\n     * @private\r\n     */\r\n    __contextMenuAt(x, y) {\r\n      // Get the deepest element under the coordinates\r\n      const target = deepTargetFind(x, y);\r\n      if (target) {\r\n        // Need to run asynchronously to avoid timing issues with the Lit-based context menu\r\n        queueMicrotask(() => {\r\n          // Dispatch mousedown and mouseup to the target (grid cell focus depends on it)\r\n          target.dispatchEvent(this.__createMouseEvent('mousedown', x, y));\r\n          target.dispatchEvent(this.__createMouseEvent('mouseup', x, y));\r\n          // Manually try to focus the closest focusable of the target\r\n          this.__focusClosestFocusable(target);\r\n          // Dispatch a contextmenu event to the target\r\n          target.dispatchEvent(this.__createMouseEvent('contextmenu', x, y));\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onGlobalContextMenu(e) {\r\n      if (!e.shiftKey) {\r\n        const isTouchDevice = isAndroid || isIOS;\r\n        if (!isTouchDevice) {\r\n          e.stopPropagation();\r\n          // Prevent having the previously focused node auto-focus after closing the overlay\r\n          this._overlayElement.__focusRestorationController.focusNode = null;\r\n          // Dispatch another contextmenu at the same coordinates after the overlay is closed\r\n          this._overlayElement.addEventListener(\r\n            'vaadin-overlay-closed',\r\n            () => this.__contextMenuAt(e.clientX, e.clientY),\r\n            {\r\n              once: true,\r\n            },\r\n          );\r\n        }\r\n\r\n        e.preventDefault();\r\n        this.close();\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { getClosestElement } from '@vaadin/component-base/src/dom-utils.js';\r\nimport { OverlayFocusMixin } from '@vaadin/overlay/src/vaadin-overlay-focus-mixin.js';\r\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const MenuOverlayMixin = (superClass) =>\r\n  class MenuOverlayMixin extends OverlayFocusMixin(PositionMixin(superClass)) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * @protected\r\n         */\r\n        parentOverlay: {\r\n          type: Object,\r\n          readOnly: true,\r\n        },\r\n\r\n        /**\r\n         * @protected\r\n         */\r\n        _theme: {\r\n          type: String,\r\n          readOnly: true,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_themeChanged(_theme)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.restoreFocusOnClose = true;\r\n\r\n      this.addEventListener('keydown', (e) => {\r\n        if (!e.defaultPrevented && e.composedPath()[0] === this.$.overlay && [38, 40].indexOf(e.keyCode) > -1) {\r\n          const child = this.getFirstChild();\r\n          if (child && Array.isArray(child.items) && child.items.length) {\r\n            e.preventDefault();\r\n            if (e.keyCode === 38) {\r\n              child.items[child.items.length - 1].focus();\r\n            } else {\r\n              child.focus();\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Returns the first element in the overlay content.\r\n     *\r\n     * @returns {HTMLElement}\r\n     */\r\n    getFirstChild() {\r\n      return this.querySelector(':not(style):not(slot)');\r\n    }\r\n\r\n    /** @private */\r\n    _themeChanged() {\r\n      this.close();\r\n    }\r\n\r\n    /**\r\n     * Returns the adjusted boundaries of the overlay.\r\n     *\r\n     * @returns {object}\r\n     */\r\n    getBoundaries() {\r\n      // Measure actual overlay and content sizes\r\n      const overlayRect = this.getBoundingClientRect();\r\n      const contentRect = this.$.overlay.getBoundingClientRect();\r\n\r\n      // Maximum x and y values are imposed by content size and overlay limits.\r\n      let yMax = overlayRect.bottom - contentRect.height;\r\n\r\n      // Adjust constraints to ensure bottom-aligned applies to sub-menu.\r\n      const parent = this.parentOverlay;\r\n      if (parent && parent.hasAttribute('bottom-aligned')) {\r\n        const parentStyle = getComputedStyle(parent);\r\n        yMax = yMax - parseFloat(parentStyle.bottom) - parseFloat(parentStyle.height);\r\n      }\r\n\r\n      return {\r\n        xMax: overlayRect.right - contentRect.width,\r\n        xMin: overlayRect.left + contentRect.width,\r\n        yMax,\r\n      };\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @override\r\n     */\r\n    _updatePosition() {\r\n      super._updatePosition();\r\n\r\n      if (this.positionTarget && this.parentOverlay) {\r\n        // This overlay is positioned by a parent menu item,\r\n        // adjust the position by the overlay content paddings\r\n        const content = this.$.content;\r\n        const style = getComputedStyle(content);\r\n\r\n        // Horizontal adjustment\r\n        const isLeftAligned = !!this.style.left;\r\n        if (isLeftAligned) {\r\n          this.style.left = `${parseFloat(this.style.left) + parseFloat(style.paddingLeft)}px`;\r\n        } else {\r\n          this.style.right = `${parseFloat(this.style.right) + parseFloat(style.paddingRight)}px`;\r\n        }\r\n\r\n        // Vertical adjustment\r\n        const isBottomAligned = !!this.style.bottom;\r\n        if (isBottomAligned) {\r\n          this.style.bottom = `${parseFloat(this.style.bottom) - parseFloat(style.paddingBottom)}px`;\r\n        } else {\r\n          this.style.top = `${parseFloat(this.style.top) - parseFloat(style.paddingTop)}px`;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Override method inherited from `OverlayFocusMixin` to disable\r\n     * focus restoration on sub-menu overlay close. Focus should\r\n     * be only restored when the root menu closes.\r\n     *\r\n     * @protected\r\n     * @override\r\n     * @return {boolean}\r\n     */\r\n    _shouldRestoreFocus() {\r\n      if (this.parentOverlay) {\r\n        // Do not restore focus on sub-menu close.\r\n        return false;\r\n      }\r\n\r\n      return super._shouldRestoreFocus();\r\n    }\r\n\r\n    /**\r\n     * Override method inherited from `OverlayFocusMixin` to return\r\n     * true if the overlay contains the given node, including\r\n     * those within descendant menu overlays.\r\n     *\r\n     * @protected\r\n     * @override\r\n     * @param {Node} node\r\n     * @return {boolean}\r\n     */\r\n    _deepContains(node) {\r\n      // Find the closest menu overlay for the given node.\r\n      let overlay = getClosestElement(this.localName, node);\r\n      while (overlay) {\r\n        if (overlay === this) {\r\n          // The node is inside a descendant menu overlay.\r\n          return true;\r\n        }\r\n\r\n        // Traverse the overlay hierarchy to check parent overlays.\r\n        overlay = overlay.parentOverlay;\r\n      }\r\n\r\n      return false;\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const styles = css`\r\n  :host {\r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  :host([right-aligned]),\r\n  :host([end-aligned]) {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  :host([bottom-aligned]) {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  [part='overlay'] {\r\n    background-color: #fff;\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    [part='overlay'] {\r\n      outline: 3px solid !important;\r\n    }\r\n  }\r\n`;\r\n"],
  "mappings": "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",
  "names": ["item", "listBox"]
}
