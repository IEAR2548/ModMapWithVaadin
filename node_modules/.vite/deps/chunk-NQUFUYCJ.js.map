{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/dir-utils.js", "../../@vaadin/a11y-base/src/list-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * Get the scrollLeft value of the element relative to the direction\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} direction current direction of the element\r\n * @return {number} the scrollLeft value.\r\n */\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n  const { scrollLeft } = element;\r\n  if (direction !== 'rtl') {\r\n    return scrollLeft;\r\n  }\r\n\r\n  return element.scrollWidth - element.clientWidth + scrollLeft;\r\n}\r\n\r\n/**\r\n * Set the scrollLeft value of the element relative to the direction\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} direction current direction of the element\r\n * @param {number} scrollLeft the scrollLeft value to be set\r\n */\r\nexport function setNormalizedScrollLeft(element, direction, scrollLeft) {\r\n  if (direction !== 'rtl') {\r\n    element.scrollLeft = scrollLeft;\r\n  } else {\r\n    element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { timeOut } from '@vaadin/component-base/src/async.js';\r\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\r\nimport { getNormalizedScrollLeft, setNormalizedScrollLeft } from '@vaadin/component-base/src/dir-utils.js';\r\nimport { getFlattenedElements } from '@vaadin/component-base/src/dom-utils.js';\r\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\r\nimport { isElementHidden } from './focus-utils.js';\r\nimport { KeyboardDirectionMixin } from './keyboard-direction-mixin.js';\r\n\r\n/**\r\n * A mixin for list elements, facilitating navigation and selection of items.\r\n *\r\n * @polymerMixin\r\n * @mixes KeyboardDirectionMixin\r\n */\r\nexport const ListMixin = (superClass) =>\r\n  class ListMixinClass extends KeyboardDirectionMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * If true, the user cannot interact with this element.\r\n         * When the element is disabled, the selected item is\r\n         * not updated when `selected` property is changed.\r\n         */\r\n        disabled: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * The index of the item selected in the items array.\r\n         * Note: Not updated when used in `multiple` selection mode.\r\n         */\r\n        selected: {\r\n          type: Number,\r\n          reflectToAttribute: true,\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Define how items are disposed in the dom.\r\n         * Possible values are: `horizontal|vertical`.\r\n         * It also changes navigation keys from left/right to up/down.\r\n         * @type {!ListOrientation}\r\n         */\r\n        orientation: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n          value: '',\r\n        },\r\n\r\n        /**\r\n         * The list of items from which a selection can be made.\r\n         * It is populated from the elements passed to the light DOM,\r\n         * and updated dynamically when adding or removing items.\r\n         *\r\n         * The item elements must implement `Vaadin.ItemMixin`.\r\n         *\r\n         * Note: unlike `<vaadin-combo-box>`, this property is read-only,\r\n         * so if you want to provide items by iterating array of data,\r\n         * you have to use `dom-repeat` and place it to the light DOM.\r\n         * @type {!Array<!Element> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          readOnly: true,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * The search buffer for the keyboard selection feature.\r\n         * @private\r\n         */\r\n        _searchBuf: {\r\n          type: String,\r\n          value: '',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_enhanceItems(items, orientation, selected, disabled)'];\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _isRTL() {\r\n      return !this._vertical && this.getAttribute('dir') === 'rtl';\r\n    }\r\n\r\n    /**\r\n     * @return {!HTMLElement}\r\n     * @protected\r\n     */\r\n    get _scrollerElement() {\r\n      // Returning scroller element of the component\r\n      console.warn(`Please implement the '_scrollerElement' property in <${this.localName}>`);\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _vertical() {\r\n      return this.orientation !== 'horizontal';\r\n    }\r\n\r\n    focus() {\r\n      // In initialization (e.g vaadin-select) observer might not been run yet.\r\n      if (this._observer) {\r\n        this._observer.flush();\r\n      }\r\n\r\n      const items = Array.isArray(this.items) ? this.items : [];\r\n      const idx = this._getAvailableIndex(items, 0, null, (item) => item.tabIndex === 0 && !isElementHidden(item));\r\n      if (idx >= 0) {\r\n        this._focus(idx);\r\n      } else {\r\n        // Call `KeyboardDirectionMixin` logic to focus first non-disabled item.\r\n        super.focus();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addEventListener('click', (e) => this._onClick(e));\r\n\r\n      const slot = this.shadowRoot.querySelector('slot:not([name])');\r\n      this._observer = new SlotObserver(slot, () => {\r\n        this._setItems(this._filterItems(getFlattenedElements(this)));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Override method inherited from `KeyboardDirectionMixin`\r\n     * to use the stored list of item elements.\r\n     *\r\n     * @return {Element[]}\r\n     * @protected\r\n     * @override\r\n     */\r\n    _getItems() {\r\n      return this.items;\r\n    }\r\n\r\n    /** @private */\r\n    _enhanceItems(items, orientation, selected, disabled) {\r\n      if (!disabled) {\r\n        if (items) {\r\n          this.setAttribute('aria-orientation', orientation || 'vertical');\r\n          items.forEach((item) => {\r\n            if (orientation) {\r\n              item.setAttribute('orientation', orientation);\r\n            } else {\r\n              item.removeAttribute('orientation');\r\n            }\r\n          });\r\n\r\n          // When selected is set to -1, focus the first available item.\r\n          this._setFocusable(selected < 0 || !selected ? 0 : selected);\r\n\r\n          const itemToSelect = items[selected];\r\n          items.forEach((item) => {\r\n            item.selected = item === itemToSelect;\r\n          });\r\n          if (itemToSelect && !itemToSelect.disabled) {\r\n            this._scrollToItem(selected);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!Array<!Element>} array\r\n     * @return {!Array<!Element>}\r\n     * @protected\r\n     */\r\n    _filterItems(array) {\r\n      return array.filter((e) => e._hasVaadinItemMixin);\r\n    }\r\n\r\n    /**\r\n     * @param {!MouseEvent} event\r\n     * @protected\r\n     */\r\n    _onClick(event) {\r\n      if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      const item = this._filterItems(event.composedPath())[0];\r\n      let idx;\r\n      if (item && !item.disabled && (idx = this.items.indexOf(item)) >= 0) {\r\n        this.selected = idx;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {number} currentIdx\r\n     * @param {string} key\r\n     * @return {number}\r\n     * @protected\r\n     */\r\n    _searchKey(currentIdx, key) {\r\n      this._searchReset = Debouncer.debounce(this._searchReset, timeOut.after(500), () => {\r\n        this._searchBuf = '';\r\n      });\r\n      this._searchBuf += key.toLowerCase();\r\n\r\n      if (!this.items.some((item) => this.__isMatchingKey(item))) {\r\n        this._searchBuf = key.toLowerCase();\r\n      }\r\n\r\n      const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\r\n      return this._getAvailableIndex(\r\n        this.items,\r\n        idx,\r\n        1,\r\n        (item) => this.__isMatchingKey(item) && getComputedStyle(item).display !== 'none',\r\n      );\r\n    }\r\n\r\n    /** @private */\r\n    __isMatchingKey(item) {\r\n      return item.textContent\r\n        .replace(/[^\\p{L}\\p{Nd}]/gu, '')\r\n        .toLowerCase()\r\n        .startsWith(this._searchBuf);\r\n    }\r\n\r\n    /**\r\n     * Override an event listener from `KeyboardMixin`\r\n     * to search items by key.\r\n     *\r\n     * @param {!KeyboardEvent} event\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onKeyDown(event) {\r\n      if (event.metaKey || event.ctrlKey) {\r\n        return;\r\n      }\r\n\r\n      const key = event.key;\r\n\r\n      const currentIdx = this.items.indexOf(this.focused);\r\n      if (/[\\p{L}\\p{Nd}]/u.test(key) && key.length === 1) {\r\n        const idx = this._searchKey(currentIdx, key);\r\n        if (idx >= 0) {\r\n          this._focus(idx);\r\n        }\r\n        return;\r\n      }\r\n\r\n      super._onKeyDown(event);\r\n    }\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _setFocusable(idx) {\r\n      idx = this._getAvailableIndex(this.items, idx, 1);\r\n      const item = this.items[idx];\r\n      this.items.forEach((e) => {\r\n        e.tabIndex = e === item ? 0 : -1;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _focus(idx) {\r\n      this.items.forEach((e, index) => {\r\n        e.focused = index === idx;\r\n      });\r\n      this._setFocusable(idx);\r\n      this._scrollToItem(idx);\r\n      super._focus(idx);\r\n    }\r\n\r\n    /**\r\n     * Scroll the container to have the next item by the edge of the viewport.\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _scrollToItem(idx) {\r\n      const item = this.items[idx];\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      const props = this._vertical ? ['top', 'bottom'] : this._isRTL ? ['right', 'left'] : ['left', 'right'];\r\n\r\n      const scrollerRect = this._scrollerElement.getBoundingClientRect();\r\n      const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\r\n      const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\r\n\r\n      let scrollDistance = 0;\r\n      if (\r\n        (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]]) ||\r\n        (this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]])\r\n      ) {\r\n        scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\r\n      } else if (\r\n        (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]]) ||\r\n        (this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]])\r\n      ) {\r\n        scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\r\n      }\r\n\r\n      this._scroll(scrollDistance);\r\n    }\r\n\r\n    /**\r\n     * @param {number} pixels\r\n     * @protected\r\n     */\r\n    _scroll(pixels) {\r\n      if (this._vertical) {\r\n        this._scrollerElement.scrollTop += pixels;\r\n      } else {\r\n        const dir = this.getAttribute('dir') || 'ltr';\r\n        const scrollLeft = getNormalizedScrollLeft(this._scrollerElement, dir) + pixels;\r\n        setNormalizedScrollLeft(this._scrollerElement, dir, scrollLeft);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fired when the selection is changed.\r\n     * Not fired when used in `multiple` selection mode.\r\n     *\r\n     * @event selected-changed\r\n     * @param {Object} detail\r\n     * @param {Object} detail.value the index of the item selected in the items array.\r\n     */\r\n  };\r\n"],
  "mappings": "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",
  "names": []
}
