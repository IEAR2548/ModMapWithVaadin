{
  "version": 3,
  "sources": ["../../@vaadin/side-nav/theme/lumo/vaadin-side-nav-styles.js", "../../@vaadin/side-nav/src/vaadin-side-nav.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const sideNavStyles = css`\r\n  :host {\r\n    font-family: var(--lumo-font-family);\r\n    font-size: var(--lumo-font-size-m);\r\n    font-weight: 500;\r\n    line-height: var(--lumo-line-height-xs);\r\n    color: var(--lumo-body-text-color);\r\n    -webkit-tap-highlight-color: transparent;\r\n    --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n    --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n  }\r\n\r\n  [part='label'] {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    outline: none;\r\n    box-sizing: border-box;\r\n    border-radius: var(--lumo-border-radius-m);\r\n    font-family: var(--lumo-font-family);\r\n    font-size: var(--lumo-font-size-s);\r\n    font-weight: 500;\r\n    line-height: var(--lumo-line-height-xs);\r\n  }\r\n\r\n  [part='label'] ::slotted([slot='label']) {\r\n    color: var(--lumo-secondary-text-color);\r\n    margin: var(--lumo-space-s);\r\n  }\r\n\r\n  :host([focus-ring]) [part='label'] {\r\n    box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n  }\r\n\r\n  [part='toggle-button'] {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: var(--lumo-size-s);\r\n    height: var(--lumo-size-s);\r\n    margin-inline: auto var(--lumo-space-xs);\r\n    font-size: var(--lumo-icon-size-m);\r\n    line-height: 1;\r\n    color: var(--lumo-contrast-60pct);\r\n    font-family: 'lumo-icons';\r\n    cursor: var(--lumo-clickable-cursor);\r\n  }\r\n\r\n  [part='toggle-button']::before {\r\n    content: var(--lumo-icons-angle-right);\r\n    transition: transform 140ms;\r\n  }\r\n\r\n  :host(:not([collapsible])) [part='toggle-button'] {\r\n    display: none !important;\r\n  }\r\n\r\n  :host(:not([collapsed])) [part='toggle-button']::before {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  :host([collapsed][dir='rtl']) [part='toggle-button']::before {\r\n    transform: rotate(180deg);\r\n  }\r\n\r\n  @media (any-hover: hover) {\r\n    [part='label']:hover [part='toggle-button'] {\r\n      color: var(--lumo-body-text-color);\r\n    }\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-side-nav', sideNavStyles, { moduleId: 'lumo-side-nav' });\r\n", "/**\r\n * @license\r\n * Copyright (c) 2023 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, LitElement } from 'lit';\r\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';\r\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { sideNavBaseStyles } from './vaadin-side-nav-base-styles.js';\r\nimport { SideNavChildrenMixin } from './vaadin-side-nav-children-mixin.js';\r\n\r\n/**\r\n * `<vaadin-side-nav>` is a Web Component for navigation menus.\r\n *\r\n * ```html\r\n * <vaadin-side-nav>\r\n *   <vaadin-side-nav-item>Item 1</vaadin-side-nav-item>\r\n *   <vaadin-side-nav-item>Item 2</vaadin-side-nav-item>\r\n *   <vaadin-side-nav-item>Item 3</vaadin-side-nav-item>\r\n *   <vaadin-side-nav-item>Item 4</vaadin-side-nav-item>\r\n * </vaadin-side-nav>\r\n * ```\r\n *\r\n * ### Customization\r\n *\r\n * You can configure the component by using `slot` names.\r\n *\r\n * Slot name | Description\r\n * ----------|-------------\r\n * `label`   | The label (text) inside the side nav.\r\n *\r\n * #### Example\r\n *\r\n * ```html\r\n * <vaadin-side-nav>\r\n *   <span slot=\"label\">Main menu</span>\r\n *   <vaadin-side-nav-item>Item</vaadin-side-nav-item>\r\n * </vaadin-side-nav>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name       | Description\r\n * ----------------|----------------\r\n * `label`         | The label element\r\n * `children`      | The element that wraps child items\r\n * `toggle-button` | The toggle button\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute    | Description\r\n * -------------|-------------\r\n * `collapsed`  | Set when the element is collapsed.\r\n * `focus-ring` | Set when the label is focused using the keyboard.\r\n * `focused`    | Set when the label is focused.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} collapsed-changed - Fired when the `collapsed` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n * @mixes SideNavChildrenMixin\r\n */\r\nclass SideNav extends SideNavChildrenMixin(FocusMixin(ElementMixin(ThemableMixin(PolylitMixin(LitElement))))) {\r\n  static get is() {\r\n    return 'vaadin-side-nav';\r\n  }\r\n\r\n  static get shadowRootOptions() {\r\n    return { ...LitElement.shadowRootOptions, delegatesFocus: true };\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * Whether the side nav is collapsible. When enabled, the toggle icon is shown.\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      collapsible: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true,\r\n      },\r\n\r\n      /**\r\n       * Whether the side nav is collapsed. When collapsed, the items are hidden.\r\n       *\r\n       * @type {boolean}\r\n       */\r\n      collapsed: {\r\n        type: Boolean,\r\n        value: false,\r\n        notify: true,\r\n        reflectToAttribute: true,\r\n      },\r\n\r\n      /**\r\n       * Callback function for router integration.\r\n       *\r\n       * When a side nav item link is clicked, this function is called and the default click action is cancelled.\r\n       * This delegates the responsibility of navigation to the function's logic.\r\n       *\r\n       * The click event action is not cancelled in the following cases:\r\n       * - The click event has a modifier (e.g. `metaKey`, `shiftKey`)\r\n       * - The click event is on an external link\r\n       * - The click event is on a link with `target=\"_blank\"`\r\n       * - The function explicitly returns `false`\r\n       *\r\n       * The function receives an object with the properties of the clicked side-nav item:\r\n       * - `path`: The path of the navigation item.\r\n       * - `target`: The target of the navigation item.\r\n       * - `current`: A boolean indicating whether the navigation item is currently selected.\r\n       * - `expanded`: A boolean indicating whether the navigation item is expanded.\r\n       * - `pathAliases`: An array of path aliases for the navigation item.\r\n       * - `originalEvent`: The original DOM event that triggered the navigation.\r\n       *\r\n       * Also see the `location` property for updating the highlighted navigation item on route change.\r\n       *\r\n       * @type {function(Object): boolean | undefined}\r\n       */\r\n      onNavigate: {\r\n        attribute: false,\r\n      },\r\n\r\n      /**\r\n       * A change to this property triggers an update of the highlighted item in the side navigation. While it typically\r\n       * corresponds to the browser's URL, the specific value assigned to the property is irrelevant. The component has\r\n       * its own internal logic for determining which item is highlighted.\r\n       *\r\n       * The main use case for this property is when the side navigation is used with a client-side router. In this case,\r\n       * the component needs to be informed about route changes so it can update the highlighted item.\r\n       *\r\n       * @type {any}\r\n       */\r\n      location: {\r\n        observer: '__locationChanged',\r\n      },\r\n    };\r\n  }\r\n\r\n  static get styles() {\r\n    return sideNavBaseStyles;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this._labelId = `side-nav-label-${generateUniqueId()}`;\r\n    this.addEventListener('click', this.__onClick);\r\n  }\r\n\r\n  /**\r\n   * Name of the slot to be used for children.\r\n   * @protected\r\n   * @override\r\n   */\r\n  get _itemsSlotName() {\r\n    return '';\r\n  }\r\n\r\n  /** @protected */\r\n  get focusElement() {\r\n    return this.shadowRoot.querySelector('button');\r\n  }\r\n\r\n  /** @protected */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n\r\n    // By default, if the user hasn't provided a custom role,\r\n    // the role attribute is set to \"navigation\".\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'navigation');\r\n    }\r\n  }\r\n\r\n  /** @protected */\r\n  render() {\r\n    return html`\r\n      ${this.collapsible\r\n        ? html`\r\n            <button\r\n              part=\"label\"\r\n              @click=\"${this._onLabelClick}\"\r\n              aria-expanded=\"${!this.collapsed}\"\r\n              aria-controls=\"children\"\r\n            >\r\n              <slot name=\"label\" @slotchange=\"${this._onLabelSlotChange}\"></slot>\r\n              <span part=\"toggle-button\" aria-hidden=\"true\"></span>\r\n            </button>\r\n          `\r\n        : html`\r\n            <div part=\"label\">\r\n              <slot name=\"label\" @slotchange=\"${this._onLabelSlotChange}\"></slot>\r\n            </div>\r\n          `}\r\n      <ul\r\n        id=\"children\"\r\n        role=\"list\"\r\n        part=\"children\"\r\n        ?hidden=\"${this.collapsed}\"\r\n        aria-hidden=\"${this.collapsed ? 'true' : 'false'}\"\r\n      >\r\n        <slot></slot>\r\n      </ul>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event\r\n   * @return {boolean}\r\n   * @protected\r\n   * @override\r\n   */\r\n  _shouldSetFocus(event) {\r\n    return event.composedPath()[0] === this.focusElement;\r\n  }\r\n\r\n  /** @private */\r\n  _onLabelClick() {\r\n    if (this.collapsible) {\r\n      this.__toggleCollapsed();\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  _onLabelSlotChange() {\r\n    const label = this.querySelector('[slot=\"label\"]');\r\n    if (label) {\r\n      if (!label.id) {\r\n        label.id = this._labelId;\r\n      }\r\n      this.setAttribute('aria-labelledby', label.id);\r\n    } else {\r\n      this.removeAttribute('aria-labelledby');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __locationChanged() {\r\n    window.dispatchEvent(new CustomEvent('side-nav-location-changed'));\r\n  }\r\n\r\n  /** @private */\r\n  __toggleCollapsed() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n\r\n  /** @private */\r\n  __onClick(e) {\r\n    if (!this.onNavigate) {\r\n      return;\r\n    }\r\n\r\n    const hasModifier = e.metaKey || e.shiftKey;\r\n    if (hasModifier) {\r\n      // Allow default action for clicks with modifiers\r\n      return;\r\n    }\r\n\r\n    const composedPath = e.composedPath();\r\n    const item = composedPath.find((el) => el.localName && el.localName.includes('side-nav-item'));\r\n    const anchor = composedPath.find((el) => el instanceof HTMLAnchorElement);\r\n    if (!item || !item.shadowRoot.contains(anchor)) {\r\n      // Not a click on a side-nav-item anchor\r\n      return;\r\n    }\r\n\r\n    const isRelative = anchor.href && anchor.href.startsWith(location.origin);\r\n    if (!isRelative) {\r\n      // Allow default action for external links\r\n      return;\r\n    }\r\n\r\n    if (item.target === '_blank') {\r\n      // Allow default action for links with target=\"_blank\"\r\n      return;\r\n    }\r\n\r\n    if (item.routerIgnore) {\r\n      // Allow default action when client-side routing is ignored\r\n      return;\r\n    }\r\n\r\n    // Call the onNavigate callback\r\n    const result = this.onNavigate({\r\n      path: item.path,\r\n      target: item.target,\r\n      current: item.current,\r\n      expanded: item.expanded,\r\n      pathAliases: item.pathAliases,\r\n      originalEvent: e,\r\n    });\r\n\r\n    if (result !== false) {\r\n      // Cancel the default action if the callback didn't return false\r\n      e.preventDefault();\r\n    }\r\n  }\r\n}\r\n\r\ndefineCustomElement(SideNav);\r\n\r\nexport { SideNav };\r\n"],
  "mappings": "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",
  "names": []
}
