import {
  DashboardItemMixin,
  dashboardWidgetAndSection,
  getDefaultI18n,
  hasWidgetWrappers
} from "./chunk-WPHCJXZC.js";
import {
  PolylitMixin
} from "./chunk-2XOX65VI.js";
import "./chunk-U4OQEY5H.js";
import "./chunk-D4YSSUXC.js";
import "./chunk-UVDGD6M6.js";
import "./chunk-W2UZPIBV.js";
import "./chunk-2OEODMLR.js";
import "./chunk-6UYCWOWN.js";
import "./chunk-IMJTZNS3.js";
import "./chunk-TNTYFQYJ.js";
import "./chunk-KMJME6UN.js";
import "./chunk-HTUMVTZR.js";
import "./chunk-CU6AK3MF.js";
import "./chunk-JN3IROFX.js";
import "./chunk-FIRGGFKS.js";
import "./chunk-4SWSK3CD.js";
import "./chunk-HXO5X6HG.js";
import "./chunk-7TDF2HKG.js";
import "./chunk-CCS6CDM7.js";
import "./chunk-WOH7SGKZ.js";
import "./chunk-XINNUJWD.js";
import "./chunk-MY27H5BQ.js";
import {
  ElementMixin
} from "./chunk-QN4QZSZG.js";
import "./chunk-RQAC3AN6.js";
import "./chunk-E33ETZLW.js";
import "./chunk-CXDC5LNX.js";
import "./chunk-ARCEVOS6.js";
import "./chunk-JOZKWWH6.js";
import "./chunk-BJXKYFZQ.js";
import "./chunk-JJ5PH6RA.js";
import "./chunk-3DUAHG2W.js";
import {
  ThemableMixin,
  registerStyles
} from "./chunk-KEWLZU7R.js";
import "./chunk-QBLL3FQM.js";
import "./chunk-MTSXO4VS.js";
import {
  defineCustomElement
} from "./chunk-AQ7DMXX6.js";
import "./chunk-KYHIEJIL.js";
import "./chunk-NZOAG24Y.js";
import "./chunk-3URU5I64.js";
import {
  LitElement
} from "./chunk-2VJ6XAW7.js";
import {
  css
} from "./chunk-WFI4KZJ4.js";
import {
  html
} from "./chunk-4QYCOPDF.js";
import "./chunk-DWA4UIM3.js";

// node_modules/@vaadin/dashboard/theme/lumo/vaadin-dashboard-section-styles.js
var section = css`
  /* stylelint-disable rule-empty-line-before */

  :host {
    --_section-outline-offset: calc(min(var(--_vaadin-dashboard-gap), var(--_vaadin-dashboard-padding)) / 3);
    --_focus-ring-offset: calc((var(--_section-outline-offset) - var(--_focus-ring-width)));
    border-radius: var(--lumo-border-radius-l);
  }

  header {
    margin-bottom: calc(-1 * var(--_section-outline-offset));
    line-height: var(--lumo-line-height-s);
    padding-inline: var(--lumo-space-s);
    min-height: var(--lumo-size-l);
  }

  [part='title'] {
    font-size: var(--lumo-font-size-xl);
    font-weight: 600;
  }

  /* Section states */

  :host([editable]) {
    outline: 1px solid var(--lumo-contrast-10pct);
    outline-offset: calc(var(--_section-outline-offset) - 1px);
    background: var(--lumo-contrast-5pct);
    box-shadow: 0 0 0 var(--_section-outline-offset) var(--lumo-contrast-5pct);
  }
  :host([editable]) header {
    padding-inline: var(--lumo-space-xs);
  }

  :host([focused])::after {
    content: '';
    display: block;
    position: absolute;
    inset: 0;
    border-radius: var(--lumo-border-radius-l);
    z-index: 9;
    outline: var(--_focus-ring-width) solid var(--_focus-ring-color);
    outline-offset: var(--_focus-ring-offset);
  }

  :host([selected]) {
    background: var(--lumo-primary-color-10pct);
    box-shadow: 0 0 0 var(--_section-outline-offset) var(--lumo-primary-color-10pct);
  }
  :host([selected]:not([focused])) {
    outline-color: var(--lumo-primary-color-50pct);
  }

  :host([move-mode]) ::slotted(*) {
    --_vaadin-dashboard-widget-opacity: 0.3;
    --_vaadin-dashboard-widget-filter: blur(10px);
  }

  :host([dragging]) {
    background: var(--_vaadin-dashboard-drop-target-background-color);
    outline: var(--_vaadin-dashboard-drop-target-border);
    box-shadow: 0 0 0 var(--_section-outline-offset) var(--_vaadin-dashboard-drop-target-background-color);
  }

  /* Accessible move mode controls */

  [part~='move-backward-button'] {
    inset-inline-start: calc(-1 * var(--_section-outline-offset));
  }

  [part~='move-forward-button'] {
    inset-inline-end: calc(-1 * var(--_section-outline-offset));
    transform: translateY(-50%);
  }
`;
registerStyles("vaadin-dashboard-section", [dashboardWidgetAndSection, section], {
  moduleId: "lumo-dashboard-section"
});

// node_modules/@vaadin/dashboard/src/vaadin-dashboard-section.js
var DashboardSection = class extends DashboardItemMixin(ElementMixin(ThemableMixin(PolylitMixin(LitElement)))) {
  static get is() {
    return "vaadin-dashboard-section";
  }
  static get experimental() {
    return "dashboardComponent";
  }
  static get styles() {
    return [
      css`
        :host {
          display: grid;
          position: relative;
          grid-template-columns: subgrid;
          --_vaadin-dashboard-section-column: 1 / calc(var(--_vaadin-dashboard-effective-col-count) + 1);
          grid-column: var(--_vaadin-dashboard-section-column) !important;
          gap: var(--_vaadin-dashboard-gap, 1rem);
          /* Dashboard section header height */
          --_vaadin-dashboard-section-header-height: minmax(0, auto);
          grid-template-rows: var(--_vaadin-dashboard-section-header-height) repeat(
              auto-fill,
              var(--_vaadin-dashboard-row-height)
            );
          grid-auto-rows: var(--_vaadin-dashboard-row-height);
        }

        :host([hidden]) {
          display: none !important;
        }

        ::slotted(*) {
          --_vaadin-dashboard-title-level: 3;
          --_vaadin-dashboard-item-column: span
            min(
              var(--vaadin-dashboard-item-colspan, 1),
              var(--_vaadin-dashboard-effective-col-count, var(--_vaadin-dashboard-col-count))
            );

          grid-column: var(--_vaadin-dashboard-item-column);
          --_vaadin-dashboard-item-row: span var(--vaadin-dashboard-item-rowspan, 1);
          grid-row: var(--_vaadin-dashboard-item-row);
        }

        header {
          grid-column: var(--_vaadin-dashboard-section-column);
        }

        :host::before {
          z-index: 2 !important;
        }
      `,
      hasWidgetWrappers,
      super.styles
    ];
  }
  static get properties() {
    return {
      /**
       * The object used to localize this component.
       *
       * To change the default localization, replace the entire
       * `i18n` object with a custom one.
       *
       * The object has the following structure and default values:
       * ```
       * {
       *   selectSection: 'Select section for editing',
       *   remove: 'Remove',
       *   move: 'Move',
       *   moveApply: 'Apply',
       *   moveForward: 'Move Forward',
       *   moveBackward: 'Move Backward',
       * }
       * ```
       * @private
       */
      __i18n: {
        type: Object,
        value: () => {
          return getDefaultI18n();
        }
      },
      /**
       * The title of the section
       *
       * @attr {string} section-title
       * @type {string | null | undefined}
       */
      sectionTitle: {
        type: String,
        value: ""
      },
      /** @private */
      __childCount: {
        type: Number,
        value: 0
      }
    };
  }
  /** @protected */
  render() {
    return html`
      ${this.__renderMoveControls()}

      <div id="focustrap">
        ${this.__renderFocusButton("selectSection")}

        <header part="header">
          ${this.__renderDragHandle()}
          <h2 id="title" part="title">${this.sectionTitle}</h2>
          ${this.__renderRemoveButton()}
        </header>
      </div>

      <!-- Default slot is used by <vaadin-dashboard-layout> -->
      <slot></slot>
      <!-- Named slots are used by <vaadin-dashboard> -->
      ${[...Array(this.__childCount)].map((_, index) => html`<slot name="slot-${index}"></slot>`)}
    `;
  }
  /** @protected */
  ready() {
    super.ready();
    if (!this.hasAttribute("role")) {
      this.setAttribute("role", "section");
    }
  }
};
defineCustomElement(DashboardSection);
/*! Bundled license information:

@vaadin/dashboard/src/vaadin-dashboard-section.js:
  (**
   * @license
   * Copyright (c) 2000 - 2025 Vaadin Ltd.
   *
   * This program is available under Vaadin Commercial License and Service Terms.
   *
   *
   * See https://vaadin.com/commercial-license-and-service-terms for the full
   * license.
   *)
*/
//# sourceMappingURL=@vaadin_dashboard_theme_lumo_vaadin-dashboard-section__js.js.map
