{
  "version": 3,
  "sources": ["../../@vaadin/virtual-list/src/vaadin-virtual-list-mixin.js", "../../@vaadin/virtual-list/src/vaadin-virtual-list-styles.js", "../../@vaadin/virtual-list/src/vaadin-virtual-list.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isChrome, isSafari } from '@vaadin/component-base/src/browser-utils.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { OverflowController } from '@vaadin/component-base/src/overflow-controller.js';\r\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\r\nimport { Virtualizer } from '@vaadin/component-base/src/virtualizer.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ControllerMixin\r\n */\r\nexport const VirtualListMixin = (superClass) =>\r\n  class VirtualListMixinClass extends ControllerMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * An array containing items determining how many instances to render.\r\n         * @type {Array<!VirtualListItem> | undefined}\r\n         */\r\n        items: { type: Array, sync: true },\r\n\r\n        /**\r\n         * Custom function for rendering the content of every item.\r\n         * Receives three arguments:\r\n         *\r\n         * - `root` The render target element representing one item at a time.\r\n         * - `virtualList` The reference to the `<vaadin-virtual-list>` element.\r\n         * - `model` The object with the properties related with the rendered\r\n         *   item, contains:\r\n         *   - `model.index` The index of the rendered item.\r\n         *   - `model.item` The item.\r\n         * @type {VirtualListRenderer | undefined}\r\n         */\r\n        renderer: { type: Function, sync: true },\r\n\r\n        /**\r\n         * A function that generates accessible names for virtual list items.\r\n         * The function gets the item as an argument and the\r\n         * return value should be a string representing that item. The\r\n         * result gets applied to the corresponding virtual list child element\r\n         * as an `aria-label` attribute.\r\n         */\r\n        itemAccessibleNameGenerator: {\r\n          type: Function,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        __virtualizer: Object,\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__itemsOrRendererChanged(items, renderer, __virtualizer, itemAccessibleNameGenerator)'];\r\n    }\r\n\r\n    /**\r\n     * Gets the index of the first visible item in the viewport.\r\n     *\r\n     * @return {number}\r\n     */\r\n    get firstVisibleIndex() {\r\n      return this.__virtualizer.firstVisibleIndex;\r\n    }\r\n\r\n    /**\r\n     * Gets the index of the last visible item in the viewport.\r\n     *\r\n     * @return {number}\r\n     */\r\n    get lastVisibleIndex() {\r\n      return this.__virtualizer.lastVisibleIndex;\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n      this.__onDocumentDragStart = this.__onDocumentDragStart.bind(this);\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.__virtualizer = new Virtualizer({\r\n        createElements: this.__createElements,\r\n        updateElement: this.__updateElement.bind(this),\r\n        elementsContainer: this,\r\n        scrollTarget: this,\r\n        scrollContainer: this.shadowRoot.querySelector('#items'),\r\n        reorderElements: true,\r\n      });\r\n      this.__overflowController = new OverflowController(this);\r\n      this.addController(this.__overflowController);\r\n\r\n      processTemplates(this);\r\n      this.__updateAria();\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n      document.addEventListener('dragstart', this.__onDocumentDragStart, { capture: true });\r\n      this.__virtualizer.hostConnected();\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      document.removeEventListener('dragstart', this.__onDocumentDragStart, { capture: true });\r\n    }\r\n\r\n    /**\r\n     * Scroll to a specific index in the virtual list.\r\n     *\r\n     * @param {number} index Index to scroll to\r\n     */\r\n    scrollToIndex(index) {\r\n      this.__virtualizer.scrollToIndex(index);\r\n    }\r\n\r\n    /** @private */\r\n    __createElements(count) {\r\n      return [...Array(count)].map(() => document.createElement('div'));\r\n    }\r\n\r\n    /** @private */\r\n    __updateAria() {\r\n      this.role = 'list';\r\n    }\r\n\r\n    /** @private */\r\n    __updateElement(el, index) {\r\n      const item = this.items[index];\r\n      el.ariaSetSize = String(this.items.length);\r\n      el.ariaPosInSet = String(index + 1);\r\n      el.ariaLabel = this.itemAccessibleNameGenerator ? this.itemAccessibleNameGenerator(item) : null;\r\n      this.__updateElementRole(el);\r\n\r\n      if (el.__renderer !== this.renderer) {\r\n        el.__renderer = this.renderer;\r\n        this.__clearRenderTargetContent(el);\r\n      }\r\n\r\n      if (this.renderer) {\r\n        this.renderer(el, this, { item, index });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateElementRole(el) {\r\n      el.role = 'listitem';\r\n    }\r\n\r\n    /**\r\n     * Clears the content of a render target.\r\n     * @private\r\n     */\r\n    __clearRenderTargetContent(element) {\r\n      element.innerHTML = '';\r\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\r\n      // When clearing the rendered content, this part needs to be manually disposed of.\r\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\r\n      delete element._$litPart$;\r\n    }\r\n\r\n    /** @private */\r\n    __itemsOrRendererChanged(items, renderer, virtualizer) {\r\n      // If the renderer is removed but there are elements created by\r\n      // a previous renderer, we need to request an update from the virtualizer\r\n      // to get the already existing elements properly cleared.\r\n      const hasRenderedItems = this.childElementCount > 0;\r\n\r\n      if ((renderer || hasRenderedItems) && virtualizer) {\r\n        virtualizer.size = (items || []).length;\r\n        virtualizer.update();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Webkit-based browsers have issues with generating drag images\r\n     * for elements that have children with massive heights. Chromium\r\n     * browsers crash, while Safari experiences significant performance\r\n     * issues. To mitigate these issues, we hide the items container\r\n     * when drag starts to remove it from the drag image.\r\n     *\r\n     * Virtual lists with fewer rows also have issues on Chromium and Safari\r\n     * where the drag image is not properly clipped and may include\r\n     * content outside the virtual list. Temporary inline styles are applied\r\n     * to mitigate this issue.\r\n     *\r\n     * Related issues:\r\n     * - https://github.com/vaadin/web-components/issues/7985\r\n     * - https://issues.chromium.org/issues/383356871\r\n     * - https://github.com/vaadin/web-components/issues/8386\r\n     *\r\n     * @private\r\n     */\r\n    __onDocumentDragStart(e) {\r\n      if (e.target.contains(this)) {\r\n        // Record the original inline styles to restore them later\r\n        const elements = [e.target, this.$.items];\r\n        const originalInlineStyles = elements.map((element) => element.style.cssText);\r\n\r\n        // With a large number of rows, hide the items\r\n        if (this.scrollHeight > 20000) {\r\n          this.$.items.style.display = 'none';\r\n        }\r\n\r\n        // Workaround content outside the virtual list ending up in the drag image on Chromium\r\n        if (isChrome) {\r\n          e.target.style.willChange = 'transform';\r\n        }\r\n\r\n        // Workaround text content outside the virtual list ending up in the drag image on Safari\r\n        if (isSafari) {\r\n          this.$.items.style.maxHeight = '100%';\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n          elements.forEach((element, index) => {\r\n            element.style.cssText = originalInlineStyles[index];\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Requests an update for the content of the rows.\r\n     * While performing the update, it invokes the renderer passed in the `renderer` property for each visible row.\r\n     *\r\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n     */\r\n    requestContentUpdate() {\r\n      if (this.__virtualizer) {\r\n        this.__virtualizer.update();\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const virtualListStyles = css`\r\n  :host {\r\n    display: block;\r\n    height: 400px;\r\n    overflow: auto;\r\n    flex: auto;\r\n    align-self: stretch;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  :host(:not([grid])) #items > ::slotted(*) {\r\n    width: 100%;\r\n  }\r\n\r\n  #items {\r\n    position: relative;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { VirtualListMixin } from './vaadin-virtual-list-mixin.js';\r\nimport { virtualListStyles } from './vaadin-virtual-list-styles.js';\r\n\r\nregisterStyles('vaadin-virtual-list', virtualListStyles, { moduleId: 'vaadin-virtual-list-styles' });\r\n\r\n/**\r\n * `<vaadin-virtual-list>` is a Web Component for displaying a virtual/infinite list of items.\r\n *\r\n * ```html\r\n * <vaadin-virtual-list></vaadin-virtual-list>\r\n * ```\r\n *\r\n * ```js\r\n * const list = document.querySelector('vaadin-virtual-list');\r\n * list.items = items; // An array of data items\r\n * list.renderer = (root, list, {item, index}) => {\r\n *   root.textContent = `#${index}: ${item.name}`\r\n * }\r\n * ```\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute        | Description\r\n * -----------------|--------------------------------------------\r\n * `overflow`       | Set to `top`, `bottom`, both, or none.\r\n *\r\n * See [Virtual List](https://vaadin.com/docs/latest/components/virtual-list) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes VirtualListMixin\r\n */\r\nclass VirtualList extends ElementMixin(ThemableMixin(VirtualListMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <div id=\"items\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-virtual-list';\r\n  }\r\n}\r\n\r\ndefineCustomElement(VirtualList);\r\n\r\nexport { VirtualList };\r\n"],
  "mappings": "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",
  "names": []
}
