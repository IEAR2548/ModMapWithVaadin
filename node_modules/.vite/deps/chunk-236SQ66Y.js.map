{
  "version": 3,
  "sources": ["../../@vaadin/tabsheet/theme/lumo/vaadin-tabsheet-styles.js", "../../@vaadin/tabsheet/src/vaadin-tabsheet-scroller.js", "../../@vaadin/tabsheet/src/vaadin-tabsheet-mixin.js", "../../@vaadin/tabsheet/src/vaadin-tabsheet.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { loader } from '@vaadin/vaadin-lumo-styles/mixins/loader.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst tabsheet = css`\r\n  :host {\r\n    font-size: var(--lumo-font-size-m);\r\n    line-height: var(--lumo-line-height-m);\r\n    font-family: var(--lumo-font-family);\r\n  }\r\n\r\n  :host([theme~='bordered']) {\r\n    border: 1px solid var(--lumo-contrast-20pct);\r\n    border-radius: var(--lumo-border-radius-l);\r\n  }\r\n\r\n  [part='tabs-container'] {\r\n    box-shadow: inset 0 -1px 0 0 var(--lumo-contrast-10pct);\r\n    padding: var(--lumo-space-xs) var(--lumo-space-s);\r\n    gap: var(--lumo-space-s);\r\n  }\r\n\r\n  ::slotted([slot='tabs']) {\r\n    box-shadow: initial;\r\n    margin: calc(var(--lumo-space-xs) * -1) calc(var(--lumo-space-s) * -1);\r\n  }\r\n\r\n  [part='content'] {\r\n    padding: var(--lumo-space-s) var(--lumo-space-m);\r\n    border-bottom-left-radius: inherit;\r\n    border-bottom-right-radius: inherit;\r\n  }\r\n\r\n  :host([loading]) [part='content'] {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  :host([theme~='no-padding']) [part='content'] {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-tabsheet', [tabsheet, loader], { moduleId: 'lumo-tabsheet' });\r\n\r\nexport { tabsheet };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { Scroller } from '@vaadin/scroller/src/vaadin-scroller.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-tabsheet>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends Scroller\r\n * @private\r\n */\r\nclass TabsheetScroller extends Scroller {\r\n  static get is() {\r\n    return 'vaadin-tabsheet-scroller';\r\n  }\r\n}\r\n\r\ndefineCustomElement(TabsheetScroller);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { DelegateStateMixin } from '@vaadin/component-base/src/delegate-state-mixin.js';\r\nimport { OverflowController } from '@vaadin/component-base/src/overflow-controller.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\r\nimport { generateUniqueId } from '@vaadin/component-base/src/unique-id-utils.js';\r\n\r\n/**\r\n * @private\r\n * A controller which observes the <vaadin-tabs> slotted to the tabs slot.\r\n */\r\nclass TabsSlotController extends SlotController {\r\n  constructor(host) {\r\n    super(host, 'tabs');\r\n    this.__tabsItemsChangedListener = this.__tabsItemsChangedListener.bind(this);\r\n    this.__tabsSelectedChangedListener = this.__tabsSelectedChangedListener.bind(this);\r\n    this.__tabIdObserver = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        const tab = mutation.target;\r\n\r\n        host.__linkTabAndPanel(tab);\r\n\r\n        if (tab.selected) {\r\n          host.__togglePanels(tab);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /** @private */\r\n  __tabsItemsChangedListener() {\r\n    this.__tabIdObserver.disconnect();\r\n    const items = this.tabs.items || [];\r\n    items.forEach((tab) => {\r\n      this.__tabIdObserver.observe(tab, {\r\n        attributeFilter: ['id'],\r\n      });\r\n    });\r\n    this.host._setItems(items);\r\n  }\r\n\r\n  /** @private */\r\n  __tabsSelectedChangedListener() {\r\n    this.host.selected = this.tabs.selected;\r\n  }\r\n\r\n  initCustomNode(tabs) {\r\n    if (!(tabs instanceof customElements.get('vaadin-tabs'))) {\r\n      throw Error('The \"tabs\" slot of a <vaadin-tabsheet> must only contain a <vaadin-tabs> element!');\r\n    }\r\n    this.tabs = tabs;\r\n    tabs.addEventListener('items-changed', this.__tabsItemsChangedListener);\r\n    tabs.addEventListener('selected-changed', this.__tabsSelectedChangedListener);\r\n    this.host.__tabs = tabs;\r\n    this.host.stateTarget = tabs;\r\n    this.__tabsItemsChangedListener();\r\n  }\r\n\r\n  teardownNode(tabs) {\r\n    this.tabs = null;\r\n    tabs.removeEventListener('items-changed', this.__tabsItemsChangedListener);\r\n    tabs.removeEventListener('selected-changed', this.__tabsSelectedChangedListener);\r\n    this.host.__tabs = null;\r\n    this.host._setItems([]);\r\n    this.host.stateTarget = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes DelegateStateMixin\r\n */\r\nexport const TabSheetMixin = (superClass) =>\r\n  class extends DelegateStateMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * The list of `<vaadin-tab>`s from which a selection can be made.\r\n         * It is populated from the elements passed inside the slotted\r\n         * `<vaadin-tabs>`, and updated dynamically when adding or removing items.\r\n         *\r\n         * Note: unlike `<vaadin-combo-box>`, this property is read-only.\r\n         * @type {!Array<!Tab> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          readOnly: true,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * The index of the selected tab.\r\n         */\r\n        selected: {\r\n          value: 0,\r\n          type: Number,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * The slotted <vaadin-tabs> element.\r\n         */\r\n        __tabs: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * The panel elements.\r\n         */\r\n        __panels: {\r\n          type: Array,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__itemsOrPanelsChanged(items, __panels)', '__selectedTabItemChanged(selected, items, __panels)'];\r\n    }\r\n\r\n    /** @override */\r\n    static get delegateProps() {\r\n      return ['selected', '_theme'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this.__overflowController = new OverflowController(this, this.shadowRoot.querySelector('[part=\"content\"]'));\r\n      this.addController(this.__overflowController);\r\n      this._tabsSlotController = new TabsSlotController(this);\r\n      this.addController(this._tabsSlotController);\r\n\r\n      // Observe the panels slot for nodes. Set the assigned element nodes as the __panels array.\r\n      const panelSlot = this.shadowRoot.querySelector('#panel-slot');\r\n      this.__panelsObserver = new SlotObserver(panelSlot, ({ addedNodes, removedNodes }) => {\r\n        if (addedNodes.length) {\r\n          addedNodes.forEach((node) => {\r\n            // Preserve custom hidden attribute to not override it.\r\n            if (node.nodeType === Node.ELEMENT_NODE && node.hidden) {\r\n              node.__customHidden = true;\r\n            }\r\n          });\r\n        }\r\n        if (removedNodes.length) {\r\n          removedNodes.forEach((node) => {\r\n            // Clear hidden attribute when removing node from the default slot,\r\n            // e.g. when changing its slot to `prefix` or `suffix` dynamically.\r\n            if (node.nodeType === Node.ELEMENT_NODE && node.hidden) {\r\n              if (node.__customHidden) {\r\n                delete node.__customHidden;\r\n              } else {\r\n                node.hidden = false;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.__panels = Array.from(\r\n          panelSlot.assignedNodes({\r\n            flatten: true,\r\n          }),\r\n        ).filter((node) => node.nodeType === Node.ELEMENT_NODE);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Override method from `DelegateStateMixin` to set delegate `theme`\r\n     * using attribute instead of property (needed for the Lit version).\r\n     * @protected\r\n     * @override\r\n     */\r\n    _delegateProperty(name, value) {\r\n      if (!this.stateTarget) {\r\n        return;\r\n      }\r\n\r\n      if (name === '_theme') {\r\n        this._delegateAttribute('theme', value);\r\n        return;\r\n      }\r\n\r\n      super._delegateProperty(name, value);\r\n    }\r\n\r\n    /**\r\n     * An observer which applies the necessary roles and ARIA attributes\r\n     * to associate the tab elements with the panels.\r\n     * @private\r\n     */\r\n    __itemsOrPanelsChanged(items, panels) {\r\n      if (!items || !panels) {\r\n        return;\r\n      }\r\n      items.forEach((tabItem) => {\r\n        this.__linkTabAndPanel(tabItem, panels);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * An observer which toggles the visibility of the panels based on the selected tab.\r\n     * @private\r\n     */\r\n    __selectedTabItemChanged(selected, items, panels) {\r\n      if (!items || !panels || selected === undefined) {\r\n        return;\r\n      }\r\n      this.__togglePanels(items[selected], panels);\r\n    }\r\n\r\n    /** @private */\r\n    __togglePanels(selectedTab, panels = this.__panels) {\r\n      const selectedTabId = selectedTab ? selectedTab.id : '';\r\n      const selectedPanel = panels.find((panel) => panel.getAttribute('tab') === selectedTabId);\r\n      const content = this.shadowRoot.querySelector('[part=\"content\"]');\r\n\r\n      // Mark loading state if a selected panel is not found.\r\n      this.toggleAttribute('loading', !selectedPanel);\r\n      const hasOneVisiblePanel = panels.filter((panel) => !panel.hidden).length === 1;\r\n      if (selectedPanel) {\r\n        // A selected panel is found, remove the loading state fallback height.\r\n        content.style.minHeight = '';\r\n      } else if (hasOneVisiblePanel) {\r\n        // Make sure the empty content has a fallback height in loading state..\r\n        content.style.minHeight = `${content.offsetHeight}px`;\r\n      }\r\n\r\n      // Hide all panels and show only the selected panel.\r\n      panels.forEach((panel) => {\r\n        panel.hidden = panel !== selectedPanel;\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __linkTabAndPanel(tab, panels = this.__panels) {\r\n      const panel = panels.find((panel) => panel.getAttribute('tab') === tab.id);\r\n      if (panel) {\r\n        panel.role = 'tabpanel';\r\n        if (!panel.id) {\r\n          panel.id = `tabsheet-panel-${generateUniqueId()}`;\r\n        }\r\n        panel.setAttribute('aria-labelledby', tab.id);\r\n        tab.setAttribute('aria-controls', panel.id);\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/tabs/src/vaadin-tabs.js';\r\nimport './vaadin-tabsheet-scroller.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { TabSheetMixin } from './vaadin-tabsheet-mixin.js';\r\n\r\n/**\r\n * `<vaadin-tabsheet>` is a Web Component for organizing and grouping content\r\n * into scrollable panels. The panels can be switched between by using tabs.\r\n *\r\n * ```\r\n *  <vaadin-tabsheet>\r\n *    <div slot=\"prefix\">Prefix</div>\r\n *    <div slot=\"suffix\">Suffix</div>\r\n *\r\n *    <vaadin-tabs slot=\"tabs\">\r\n *      <vaadin-tab id=\"tab-1\">Tab 1</vaadin-tab>\r\n *      <vaadin-tab id=\"tab-2\">Tab 2</vaadin-tab>\r\n *      <vaadin-tab id=\"tab-3\">Tab 3</vaadin-tab>\r\n *    </vaadin-tabs>\r\n *\r\n *    <div tab=\"tab-1\">Panel 1</div>\r\n *    <div tab=\"tab-2\">Panel 2</div>\r\n *    <div tab=\"tab-3\">Panel 3</div>\r\n *  </vaadin-tabsheet>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are exposed for styling:\r\n *\r\n * Part name | Description\r\n * --------- | ---------------\r\n * `tabs-container`    | The container for the slotted prefix, tabs and suffix\r\n * `content`    | The container for the slotted panels\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute         | Description\r\n * ------------------|-------------\r\n * `loading` | Set when a tab without associated content is selected\r\n * `overflow`   | Set to `top`, `bottom`, `start`, `end`, all of them, or none.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\r\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes TabSheetMixin\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes ControllerMixin\r\n */\r\nclass TabSheet extends TabSheetMixin(ThemableMixin(ElementMixin(ControllerMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n\r\n        :host {\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n\r\n        [part='tabs-container'] {\r\n          position: relative;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n\r\n        ::slotted([slot='tabs']) {\r\n          flex: 1;\r\n          align-self: stretch;\r\n          min-width: 8em;\r\n        }\r\n\r\n        [part='content'] {\r\n          position: relative;\r\n          flex: 1;\r\n          box-sizing: border-box;\r\n        }\r\n      </style>\r\n\r\n      <div part=\"tabs-container\">\r\n        <slot name=\"prefix\"></slot>\r\n        <slot name=\"tabs\"></slot>\r\n        <slot name=\"suffix\"></slot>\r\n      </div>\r\n\r\n      <vaadin-tabsheet-scroller part=\"content\">\r\n        <div part=\"loader\"></div>\r\n        <slot id=\"panel-slot\"></slot>\r\n      </vaadin-tabsheet-scroller>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-tabsheet';\r\n  }\r\n}\r\n\r\ndefineCustomElement(TabSheet);\r\n\r\nexport { TabSheet };\r\n"],
  "mappings": "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",
  "names": ["panel"]
}
