{
  "version": 3,
  "sources": ["../../@vaadin/a11y-base/src/active-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { addListener } from '@vaadin/component-base/src/gestures.js';\r\nimport { DisabledMixin } from './disabled-mixin.js';\r\nimport { KeyboardMixin } from './keyboard-mixin.js';\r\n\r\n/**\r\n * A mixin to toggle the `active` attribute.\r\n *\r\n * The attribute is set whenever the user activates the element by a pointer\r\n * or presses an activation key on the element from the keyboard.\r\n *\r\n * The attribute is removed as soon as the element is deactivated\r\n * by the pointer or by releasing the activation key.\r\n *\r\n * @polymerMixin\r\n * @mixes DisabledMixin\r\n * @mixes KeyboardMixin\r\n */\r\nexport const ActiveMixin = (superclass) =>\r\n  class ActiveMixinClass extends DisabledMixin(KeyboardMixin(superclass)) {\r\n    /**\r\n     * An array of activation keys.\r\n     *\r\n     * See possible values here:\r\n     * https://developer.mozilla.org/ru/docs/Web/API/KeyboardEvent/key/Key_Values\r\n     *\r\n     * @protected\r\n     * @return {!Array<!string>}\r\n     */\r\n    get _activeKeys() {\r\n      return [' '];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      addListener(this, 'down', (event) => {\r\n        if (this._shouldSetActive(event)) {\r\n          this._setActive(true);\r\n        }\r\n      });\r\n\r\n      addListener(this, 'up', () => {\r\n        this._setActive(false);\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      // When the element is disconnecting from the DOM at the moment being active,\r\n      // the `active` attribute needs to be manually removed from the element.\r\n      // Otherwise, it will preserve on the element until the element is activated once again.\r\n      // The case reproduces for `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\r\n      this._setActive(false);\r\n    }\r\n\r\n    /**\r\n     * @param {KeyboardEvent | MouseEvent} _event\r\n     * @protected\r\n     */\r\n    _shouldSetActive(_event) {\r\n      return !this.disabled;\r\n    }\r\n\r\n    /**\r\n     * Sets the `active` attribute on the element if an activation key is pressed.\r\n     *\r\n     * @param {KeyboardEvent} event\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onKeyDown(event) {\r\n      super._onKeyDown(event);\r\n\r\n      if (this._shouldSetActive(event) && this._activeKeys.includes(event.key)) {\r\n        this._setActive(true);\r\n\r\n        // Element can become hidden before the `keyup` event, e.g. on button click.\r\n        // Use document listener to ensure `active` attribute is removed correctly.\r\n        document.addEventListener(\r\n          'keyup',\r\n          (e) => {\r\n            if (this._activeKeys.includes(e.key)) {\r\n              this._setActive(false);\r\n            }\r\n          },\r\n          { once: true },\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Toggles the `active` attribute on the element.\r\n     *\r\n     * @param {boolean} active\r\n     * @protected\r\n     */\r\n    _setActive(active) {\r\n      this.toggleAttribute('active', active);\r\n    }\r\n  };\r\n"],
  "mappings": ";;;;;;;;;;;AAsBO,IAAM,cAAc,CAAC,eAC1B,MAAM,yBAAyB,cAAc,cAAc,UAAU,CAAC,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUtE,IAAI,cAAc;AAChB,WAAO,CAAC,GAAG;AAAA,EACb;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,gBAAY,MAAM,QAAQ,CAAC,UAAU;AACnC,UAAI,KAAK,iBAAiB,KAAK,GAAG;AAChC,aAAK,WAAW,IAAI;AAAA,MACtB;AAAA,IACF,CAAC;AAED,gBAAY,MAAM,MAAM,MAAM;AAC5B,WAAK,WAAW,KAAK;AAAA,IACvB,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,uBAAuB;AACrB,UAAM,qBAAqB;AAM3B,SAAK,WAAW,KAAK;AAAA,EACvB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,iBAAiB,QAAQ;AACvB,WAAO,CAAC,KAAK;AAAA,EACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,WAAW,OAAO;AAChB,UAAM,WAAW,KAAK;AAEtB,QAAI,KAAK,iBAAiB,KAAK,KAAK,KAAK,YAAY,SAAS,MAAM,GAAG,GAAG;AACxE,WAAK,WAAW,IAAI;AAIpB,eAAS;AAAA,QACP;AAAA,QACA,CAAC,MAAM;AACL,cAAI,KAAK,YAAY,SAAS,EAAE,GAAG,GAAG;AACpC,iBAAK,WAAW,KAAK;AAAA,UACvB;AAAA,QACF;AAAA,QACA,EAAE,MAAM,KAAK;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,WAAW,QAAQ;AACjB,SAAK,gBAAgB,UAAU,MAAM;AAAA,EACvC;AACF;",
  "names": []
}
