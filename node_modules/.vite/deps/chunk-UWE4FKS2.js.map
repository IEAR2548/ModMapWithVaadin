{
  "version": 3,
  "sources": ["../../ol/src/css.js"],
  "sourcesContent": ["/**\r\n * @module ol/css\r\n */\r\n\r\n/**\r\n * @typedef {Object} FontParameters\r\n * @property {string} style Style.\r\n * @property {string} variant Variant.\r\n * @property {string} weight Weight.\r\n * @property {string} size Size.\r\n * @property {string} lineHeight LineHeight.\r\n * @property {string} family Family.\r\n * @property {Array<string>} families Families.\r\n */\r\n\r\n/**\r\n * The CSS class for hidden feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_HIDDEN = 'ol-hidden';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them selectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_SELECTABLE = 'ol-selectable';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements to have them unselectable.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\r\n\r\n/**\r\n * The CSS class for unsupported feature.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\r\n\r\n/**\r\n * The CSS class for controls.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_CONTROL = 'ol-control';\r\n\r\n/**\r\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\r\n * to those elements which usually can be expanded.\r\n *\r\n * @const\r\n * @type {string}\r\n */\r\nexport const CLASS_COLLAPSED = 'ol-collapsed';\r\n\r\n/**\r\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\r\n * @type {RegExp}\r\n */\r\nconst fontRegEx = new RegExp(\r\n  [\r\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\r\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\r\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\r\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\r\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\r\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\r\n  ].join(''),\r\n  'i'\r\n);\r\nconst fontRegExMatchIndex = [\r\n  'style',\r\n  'variant',\r\n  'weight',\r\n  'size',\r\n  'lineHeight',\r\n  'family',\r\n];\r\n\r\n/**\r\n * Get the list of font families from a font spec.  Note that this doesn't work\r\n * for font families that have commas in them.\r\n * @param {string} fontSpec The CSS font property.\r\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\r\n */\r\nexport const getFontParameters = function (fontSpec) {\r\n  const match = fontSpec.match(fontRegEx);\r\n  if (!match) {\r\n    return null;\r\n  }\r\n  const style = /** @type {FontParameters} */ ({\r\n    lineHeight: 'normal',\r\n    size: '1.2em',\r\n    style: 'normal',\r\n    weight: 'normal',\r\n    variant: 'normal',\r\n  });\r\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\r\n    const value = match[i + 1];\r\n    if (value !== undefined) {\r\n      style[fontRegExMatchIndex[i]] = value;\r\n    }\r\n  }\r\n  style.families = style.family.split(/,\\s?/);\r\n  return style;\r\n};\r\n\r\n/**\r\n * @param {number} opacity Opacity (0..1).\r\n * @return {string} CSS opacity.\r\n */\r\nexport function cssOpacity(opacity) {\r\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\r\n}\r\n"],
  "mappings": ";AAqBO,IAAM,eAAe;AAQrB,IAAM,mBAAmB;AAQzB,IAAM,qBAAqB;AAQ3B,IAAM,oBAAoB;AAQ1B,IAAM,gBAAgB;AAStB,IAAM,kBAAkB;AAM/B,IAAM,YAAY,IAAI,OACpB;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA,KAAK,EAAE,GACT,GAAG;AAEL,IAAM,sBAAsB;EAC1B;EACA;EACA;EACA;EACA;EACA;;AASK,IAAM,oBAAoB,SAAU,UAAQ;AACjD,MAAM,QAAQ,SAAS,MAAM,SAAS;AACtC,MAAI,CAAC,OAAO;AACV,WAAO;;AAET,MAAM;;IAAuC;MAC3C,YAAY;MACZ,MAAM;MACN,OAAO;MACP,QAAQ;MACR,SAAS;;;AAEX,WAAS,IAAI,GAAG,KAAK,oBAAoB,QAAQ,IAAI,IAAI,EAAE,GAAG;AAC5D,QAAM,QAAQ,MAAM,IAAI,CAAC;AACzB,QAAI,UAAU,QAAW;AACvB,YAAM,oBAAoB,CAAC,CAAC,IAAI;;;AAGpC,QAAM,WAAW,MAAM,OAAO,MAAM,MAAM;AAC1C,SAAO;AACT;AAMM,SAAU,WAAW,SAAO;AAChC,SAAO,YAAY,IAAI,KAAK,OAAO,KAAK,MAAM,UAAU,GAAG,IAAI,GAAG;AACpE;",
  "names": []
}
