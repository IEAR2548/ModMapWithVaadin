{
  "version": 3,
  "sources": ["../../@vaadin/overlay/src/vaadin-overlay-styles.js", "../../@vaadin/overlay/src/vaadin-overlay-focus-mixin.js", "../../@vaadin/overlay/src/vaadin-overlay-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const overlayStyles = css`\r\n  :host {\r\n    z-index: 200;\r\n    position: fixed;\r\n\r\n    /* Despite of what the names say, <vaadin-overlay> is just a container\r\n          for position/sizing/alignment. The actual overlay is the overlay part. */\r\n\r\n    /* Default position constraints: the entire viewport. Note: themes can\r\n          override this to introduce gaps between the overlay and the viewport. */\r\n    inset: 0;\r\n    bottom: var(--vaadin-overlay-viewport-bottom);\r\n\r\n    /* Use flexbox alignment for the overlay part. */\r\n    display: flex;\r\n    flex-direction: column; /* makes dropdowns sizing easier */\r\n    /* Align to center by default. */\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    /* Allow centering when max-width/max-height applies. */\r\n    margin: auto;\r\n\r\n    /* The host is not clickable, only the overlay part is. */\r\n    pointer-events: none;\r\n\r\n    /* Remove tap highlight on touch devices. */\r\n    -webkit-tap-highlight-color: transparent;\r\n\r\n    /* CSS API for host */\r\n    --vaadin-overlay-viewport-bottom: 0;\r\n  }\r\n\r\n  :host([hidden]),\r\n  :host(:not([opened]):not([closing])),\r\n  :host(:not([opened]):not([closing])) [part='overlay'] {\r\n    display: none !important;\r\n  }\r\n\r\n  [part='overlay'] {\r\n    -webkit-overflow-scrolling: touch;\r\n    overflow: auto;\r\n    pointer-events: auto;\r\n\r\n    /* Prevent overflowing the host */\r\n    max-width: 100%;\r\n    box-sizing: border-box;\r\n\r\n    -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\r\n  }\r\n\r\n  [part='backdrop'] {\r\n    z-index: -1;\r\n    content: '';\r\n    background: rgba(0, 0, 0, 0.5);\r\n    position: fixed;\r\n    inset: 0;\r\n    pointer-events: auto;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { AriaModalController } from '@vaadin/a11y-base/src/aria-modal-controller.js';\r\nimport { FocusRestorationController } from '@vaadin/a11y-base/src/focus-restoration-controller.js';\r\nimport { FocusTrapController } from '@vaadin/a11y-base/src/focus-trap-controller.js';\r\nimport { getDeepActiveElement, isKeyboardActive } from '@vaadin/a11y-base/src/focus-utils.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ControllerMixin\r\n */\r\nexport const OverlayFocusMixin = (superClass) =>\r\n  class OverlayFocusMixin extends ControllerMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * When true, opening the overlay moves focus to the first focusable child,\r\n         * or to the overlay part with tabindex if there are no focusable children.\r\n         * @attr {boolean} focus-trap\r\n         */\r\n        focusTrap: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * Set to true to enable restoring of focus when overlay is closed.\r\n         * @attr {boolean} restore-focus-on-close\r\n         */\r\n        restoreFocusOnClose: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * Set to specify the element which should be focused on overlay close,\r\n         * if `restoreFocusOnClose` is set to true.\r\n         * @type {HTMLElement}\r\n         */\r\n        restoreFocusNode: {\r\n          type: HTMLElement,\r\n        },\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.__ariaModalController = new AriaModalController(this);\r\n      this.__focusTrapController = new FocusTrapController(this);\r\n      this.__focusRestorationController = new FocusRestorationController();\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addController(this.__ariaModalController);\r\n      this.addController(this.__focusTrapController);\r\n      this.addController(this.__focusRestorationController);\r\n    }\r\n\r\n    /**\r\n     * Release focus and restore focus after the overlay is closed.\r\n     *\r\n     * @protected\r\n     */\r\n    _resetFocus() {\r\n      if (this.focusTrap) {\r\n        this.__ariaModalController.close();\r\n        this.__focusTrapController.releaseFocus();\r\n      }\r\n\r\n      if (this.restoreFocusOnClose && this._shouldRestoreFocus()) {\r\n        const preventScroll = !isKeyboardActive();\r\n        this.__focusRestorationController.restoreFocus({ preventScroll });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Save the previously focused node when the overlay starts to open.\r\n     *\r\n     * @protected\r\n     */\r\n    _saveFocus() {\r\n      if (this.restoreFocusOnClose) {\r\n        this.__focusRestorationController.saveFocus(this.restoreFocusNode);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Trap focus within the overlay after opening has completed.\r\n     *\r\n     * @protected\r\n     */\r\n    _trapFocus() {\r\n      if (this.focusTrap) {\r\n        this.__ariaModalController.showModal();\r\n        this.__focusTrapController.trapFocus(this.$.overlay);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns true if focus is still inside the overlay or on the body element,\r\n     * otherwise false.\r\n     *\r\n     * Focus shouldn't be restored if it's been moved elsewhere by another\r\n     * component or as a result of a user interaction e.g. the user clicked\r\n     * on a button outside the overlay while the overlay was open.\r\n     *\r\n     * @protected\r\n     * @return {boolean}\r\n     */\r\n    _shouldRestoreFocus() {\r\n      const activeElement = getDeepActiveElement();\r\n      return activeElement === document.body || this._deepContains(activeElement);\r\n    }\r\n\r\n    /**\r\n     * Returns true if the overlay contains the given node,\r\n     * including those within shadow DOM trees.\r\n     *\r\n     * @param {Node} node\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    _deepContains(node) {\r\n      if (this.contains(node)) {\r\n        return true;\r\n      }\r\n      let n = node;\r\n      const doc = node.ownerDocument;\r\n      // Walk from node to `this` or `document`\r\n      while (n && n !== doc && n !== this) {\r\n        n = n.parentNode || n.host;\r\n      }\r\n      return n === this;\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\r\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\r\nimport { OverlayFocusMixin } from './vaadin-overlay-focus-mixin.js';\r\nimport { OverlayStackMixin } from './vaadin-overlay-stack-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes OverlayFocusMixin\r\n * @mixes OverlayStackMixin\r\n */\r\nexport const OverlayMixin = (superClass) =>\r\n  class OverlayMixin extends OverlayFocusMixin(OverlayStackMixin(superClass)) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * When true, the overlay is visible and attached to body.\r\n         */\r\n        opened: {\r\n          type: Boolean,\r\n          notify: true,\r\n          observer: '_openedChanged',\r\n          reflectToAttribute: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Owner element passed with renderer function\r\n         * @type {HTMLElement}\r\n         */\r\n        owner: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Object with properties that is passed to `renderer` function\r\n         */\r\n        model: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the content of the overlay.\r\n         * Receives three arguments:\r\n         *\r\n         * - `root` The root container DOM element. Append your content to it.\r\n         * - `owner` The host element of the renderer function.\r\n         * - `model` The object with the properties related with rendering.\r\n         * @type {OverlayRenderer | null | undefined}\r\n         */\r\n        renderer: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * When true the overlay won't disable the main content, showing\r\n         * it doesn't change the functionality of the user interface.\r\n         * @type {boolean}\r\n         */\r\n        modeless: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          observer: '_modelessChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * When set to true, the overlay is hidden. This also closes the overlay\r\n         * immediately in case there is a closing animation in progress.\r\n         * @type {boolean}\r\n         */\r\n        hidden: {\r\n          type: Boolean,\r\n          reflectToAttribute: true,\r\n          observer: '_hiddenChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * When true the overlay has backdrop on top of content when opened.\r\n         * @type {boolean}\r\n         */\r\n        withBackdrop: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_rendererOrDataChanged(renderer, owner, model, opened)'];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this._boundMouseDownListener = this._mouseDownListener.bind(this);\r\n      this._boundMouseUpListener = this._mouseUpListener.bind(this);\r\n      this._boundOutsideClickListener = this._outsideClickListener.bind(this);\r\n      this._boundKeydownListener = this._keydownListener.bind(this);\r\n\r\n      /* c8 ignore next 3 */\r\n      if (isIOS) {\r\n        this._boundIosResizeListener = () => this._detectIosNavbar();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      // Need to add dummy click listeners to this and the backdrop or else\r\n      // the document click event listener (_outsideClickListener) may never\r\n      // get invoked on iOS Safari (reproducible in <vaadin-dialog>\r\n      // and <vaadin-context-menu>).\r\n      this.addEventListener('click', () => {});\r\n      this.$.backdrop.addEventListener('click', () => {});\r\n\r\n      this.addEventListener('mouseup', () => {\r\n        // In Chrome, focus moves to body on overlay content mousedown\r\n        // See https://github.com/vaadin/flow-components/issues/5507\r\n        if (document.activeElement === document.body && this.$.overlay.getAttribute('tabindex') === '0') {\r\n          this.$.overlay.focus();\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      /* c8 ignore next 3 */\r\n      if (this._boundIosResizeListener) {\r\n        this._detectIosNavbar();\r\n        window.addEventListener('resize', this._boundIosResizeListener);\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      /* c8 ignore next 3 */\r\n      if (this._boundIosResizeListener) {\r\n        window.removeEventListener('resize', this._boundIosResizeListener);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Requests an update for the content of the overlay.\r\n     * While performing the update, it invokes the renderer passed in the `renderer` property.\r\n     *\r\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n     */\r\n    requestContentUpdate() {\r\n      if (this.renderer) {\r\n        this.renderer.call(this.owner, this, this.owner, this.model);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {Event=} sourceEvent\r\n     */\r\n    close(sourceEvent) {\r\n      const evt = new CustomEvent('vaadin-overlay-close', {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail: { sourceEvent },\r\n      });\r\n      this.dispatchEvent(evt);\r\n      if (!evt.defaultPrevented) {\r\n        this.opened = false;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _detectIosNavbar() {\r\n      /* c8 ignore next 15 */\r\n      if (!this.opened) {\r\n        return;\r\n      }\r\n\r\n      const innerHeight = window.innerHeight;\r\n      const innerWidth = window.innerWidth;\r\n\r\n      const landscape = innerWidth > innerHeight;\r\n\r\n      const clientHeight = document.documentElement.clientHeight;\r\n\r\n      if (landscape && clientHeight > innerHeight) {\r\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\r\n      } else {\r\n        this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _addGlobalListeners() {\r\n      document.addEventListener('mousedown', this._boundMouseDownListener);\r\n      document.addEventListener('mouseup', this._boundMouseUpListener);\r\n      // Firefox leaks click to document on contextmenu even if prevented\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\r\n      document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\r\n    }\r\n\r\n    /** @private */\r\n    _removeGlobalListeners() {\r\n      document.removeEventListener('mousedown', this._boundMouseDownListener);\r\n      document.removeEventListener('mouseup', this._boundMouseUpListener);\r\n      document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\r\n    }\r\n\r\n    /** @private */\r\n    _rendererOrDataChanged(renderer, owner, model, opened) {\r\n      const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\r\n      this._oldModel = model;\r\n      this._oldOwner = owner;\r\n\r\n      const rendererChanged = this._oldRenderer !== renderer;\r\n      const hasOldRenderer = this._oldRenderer !== undefined;\r\n      this._oldRenderer = renderer;\r\n\r\n      const openedChanged = this._oldOpened !== opened;\r\n      this._oldOpened = opened;\r\n\r\n      if (rendererChanged && hasOldRenderer) {\r\n        this.innerHTML = '';\r\n        // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\r\n        // When clearing the rendered content, this part needs to be manually disposed of.\r\n        // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\r\n        delete this._$litPart$;\r\n      }\r\n\r\n      if (opened && renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\r\n        this.requestContentUpdate();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _modelessChanged(modeless) {\r\n      if (!modeless) {\r\n        if (this.opened) {\r\n          this._addGlobalListeners();\r\n          this._enterModalState();\r\n        }\r\n      } else {\r\n        this._removeGlobalListeners();\r\n        this._exitModalState();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _openedChanged(opened, wasOpened) {\r\n      if (opened) {\r\n        this._saveFocus();\r\n\r\n        this._animatedOpening();\r\n\r\n        afterNextRender(this, () => {\r\n          this._trapFocus();\r\n\r\n          const evt = new CustomEvent('vaadin-overlay-open', { bubbles: true });\r\n          this.dispatchEvent(evt);\r\n        });\r\n\r\n        document.addEventListener('keydown', this._boundKeydownListener);\r\n\r\n        if (!this.modeless) {\r\n          this._addGlobalListeners();\r\n        }\r\n      } else if (wasOpened) {\r\n        this._resetFocus();\r\n\r\n        this._animatedClosing();\r\n\r\n        document.removeEventListener('keydown', this._boundKeydownListener);\r\n\r\n        if (!this.modeless) {\r\n          this._removeGlobalListeners();\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _hiddenChanged(hidden) {\r\n      if (hidden && this.hasAttribute('closing')) {\r\n        this._flushAnimation('closing');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    _shouldAnimate() {\r\n      const style = getComputedStyle(this);\r\n      const name = style.getPropertyValue('animation-name');\r\n      const hidden = style.getPropertyValue('display') === 'none';\r\n      return !hidden && name && name !== 'none';\r\n    }\r\n\r\n    /**\r\n     * @param {string} type\r\n     * @param {Function} callback\r\n     * @private\r\n     */\r\n    _enqueueAnimation(type, callback) {\r\n      const handler = `__${type}Handler`;\r\n      const listener = (event) => {\r\n        if (event && event.target !== this) {\r\n          return;\r\n        }\r\n        callback();\r\n        this.removeEventListener('animationend', listener);\r\n        delete this[handler];\r\n      };\r\n      this[handler] = listener;\r\n      this.addEventListener('animationend', listener);\r\n    }\r\n\r\n    /**\r\n     * @param {string} type\r\n     * @protected\r\n     */\r\n    _flushAnimation(type) {\r\n      const handler = `__${type}Handler`;\r\n      if (typeof this[handler] === 'function') {\r\n        this[handler]();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _animatedOpening() {\r\n      if (this.parentNode === document.body && this.hasAttribute('closing')) {\r\n        this._flushAnimation('closing');\r\n      }\r\n      this._attachOverlay();\r\n      if (!this.modeless) {\r\n        this._enterModalState();\r\n      }\r\n      this.setAttribute('opening', '');\r\n\r\n      if (this._shouldAnimate()) {\r\n        this._enqueueAnimation('opening', () => {\r\n          this._finishOpening();\r\n        });\r\n      } else {\r\n        this._finishOpening();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _attachOverlay() {\r\n      this._placeholder = document.createComment('vaadin-overlay-placeholder');\r\n      this.parentNode.insertBefore(this._placeholder, this);\r\n      document.body.appendChild(this);\r\n      this.bringToFront();\r\n    }\r\n\r\n    /** @private */\r\n    _finishOpening() {\r\n      this.removeAttribute('opening');\r\n    }\r\n\r\n    /** @private */\r\n    _finishClosing() {\r\n      this._detachOverlay();\r\n      this.$.overlay.style.removeProperty('pointer-events');\r\n      this.removeAttribute('closing');\r\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closed'));\r\n    }\r\n\r\n    /** @private */\r\n    _animatedClosing() {\r\n      if (this.hasAttribute('opening')) {\r\n        this._flushAnimation('opening');\r\n      }\r\n      if (this._placeholder) {\r\n        this._exitModalState();\r\n        this.setAttribute('closing', '');\r\n        this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\r\n\r\n        if (this._shouldAnimate()) {\r\n          this._enqueueAnimation('closing', () => {\r\n            this._finishClosing();\r\n          });\r\n        } else {\r\n          this._finishClosing();\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _detachOverlay() {\r\n      this._placeholder.parentNode.insertBefore(this, this._placeholder);\r\n      this._placeholder.parentNode.removeChild(this._placeholder);\r\n    }\r\n\r\n    /** @private */\r\n    _mouseDownListener(event) {\r\n      this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\r\n    }\r\n\r\n    /** @private */\r\n    _mouseUpListener(event) {\r\n      this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\r\n    }\r\n\r\n    /**\r\n     * Whether to close the overlay on outside click or not.\r\n     * Override this method to customize the closing logic.\r\n     *\r\n     * @param {Event} _event\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    _shouldCloseOnOutsideClick(_event) {\r\n      return this._last;\r\n    }\r\n\r\n    /**\r\n     * Outside click listener used in capture phase to close the overlay before\r\n     * propagating the event to the listener on the element that triggered it.\r\n     * Otherwise, calling `open()` would result in closing and re-opening.\r\n     *\r\n     * @private\r\n     */\r\n    _outsideClickListener(event) {\r\n      if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\r\n        this._mouseDownInside = false;\r\n        this._mouseUpInside = false;\r\n        return;\r\n      }\r\n\r\n      if (!this._shouldCloseOnOutsideClick(event)) {\r\n        return;\r\n      }\r\n\r\n      const evt = new CustomEvent('vaadin-overlay-outside-click', {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail: { sourceEvent: event },\r\n      });\r\n      this.dispatchEvent(evt);\r\n\r\n      if (this.opened && !evt.defaultPrevented) {\r\n        this.close(event);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Listener used to close whe overlay on Escape press, if it is the last one.\r\n     * @private\r\n     */\r\n    _keydownListener(event) {\r\n      if (!this._last) {\r\n        return;\r\n      }\r\n\r\n      // Only close modeless overlay on Esc press when it contains focus\r\n      if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\r\n        return;\r\n      }\r\n\r\n      if (event.key === 'Escape') {\r\n        const evt = new CustomEvent('vaadin-overlay-escape-press', {\r\n          bubbles: true,\r\n          cancelable: true,\r\n          detail: { sourceEvent: event },\r\n        });\r\n        this.dispatchEvent(evt);\r\n\r\n        if (this.opened && !evt.defaultPrevented) {\r\n          this.close(event);\r\n        }\r\n      }\r\n    }\r\n  };\r\n"],
  "mappings": "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",
  "names": []
}
