{
  "version": 3,
  "sources": ["../../@vaadin/grid-pro/theme/lumo/vaadin-grid-pro-styles.js", "../../@vaadin/grid-pro/src/vaadin-grid-pro-inline-editing-mixin.js", "../../@vaadin/grid-pro/src/vaadin-grid-pro.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-grid-pro',\r\n  css`\r\n    :host([navigating]) [part~='cell']:active::before {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 0;\r\n      pointer-events: none;\r\n      box-shadow: inset 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n    }\r\n\r\n    [part~='editable-cell'],\r\n    [part~='editable-cell'] ::slotted(vaadin-grid-cell-content) {\r\n      cursor: var(--lumo-clickable-cursor);\r\n    }\r\n\r\n    [part~='editable-cell']:hover,\r\n    [part~='editable-cell']:focus {\r\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\r\n    }\r\n\r\n    /* Indicate editable cells */\r\n\r\n    :host([theme~='highlight-editable-cells']) [part~='editable-cell'] {\r\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\r\n    }\r\n\r\n    :host([theme~='highlight-editable-cells']) [part~='editable-cell']:hover,\r\n    :host([theme~='highlight-editable-cells']) [part~='editable-cell']:focus {\r\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-10pct), var(--lumo-contrast-10pct));\r\n    }\r\n\r\n    /* Indicate read-only cells */\r\n\r\n    /* prettier-ignore */\r\n    :host([theme~='highlight-read-only-cells']) [tabindex]:not([part~='editable-cell']):not([part~='header-cell']):not([part~='footer-cell']) {\r\n      background-image: repeating-linear-gradient(\r\n        135deg,\r\n        transparent,\r\n        transparent 6px,\r\n        var(--lumo-contrast-5pct) 6px,\r\n        var(--lumo-contrast-5pct) 14px\r\n      );\r\n    }\r\n\r\n    /* Loading editor cell styles are used by Flow GridPro */\r\n    :host([loading-editor]) [part~='focused-cell']::before {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 0;\r\n      pointer-events: none;\r\n      box-shadow: inset 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n      animation: vaadin-grid-pro-loading-editor 1.4s infinite;\r\n      opacity: 0;\r\n    }\r\n\r\n    @keyframes vaadin-grid-pro-loading-editor {\r\n      50% {\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n    [part~='updating-cell']::after {\r\n      content: '';\r\n      position: absolute;\r\n      inset: var(--_cell-padding);\r\n      margin: var(--_focus-ring-width);\r\n      border-radius: 4px;\r\n      background-size: max(4em, 50%);\r\n      background-repeat: no-repeat;\r\n      background-position: min(-200%, -4em) 0;\r\n      background-image: linear-gradient(90deg, transparent, var(--lumo-contrast-10pct), transparent);\r\n      animation: vaadin-grid-pro-updating-cell 1.3s ease-out infinite;\r\n    }\r\n\r\n    @keyframes vaadin-grid-pro-updating-cell {\r\n      100% {\r\n        background-position: max(300%, 8em) 0;\r\n      }\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-grid-pro' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { animationFrame } from '@vaadin/component-base/src/async.js';\r\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\r\nimport { get, set } from '@vaadin/component-base/src/path-utils.js';\r\nimport { iterateRowCells, updatePart } from '@vaadin/grid/src/vaadin-grid-helpers.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-grid-pro',\r\n  css`\r\n    :host([loading-editor]) [part~='focused-cell'] ::slotted(vaadin-grid-cell-content),\r\n    [part~='updating-cell'] ::slotted(vaadin-grid-cell-content) {\r\n      opacity: 0;\r\n      pointer-events: none;\r\n    }\r\n  `,\r\n  {\r\n    moduleId: 'vaadin-grid-pro-styles',\r\n  },\r\n);\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const InlineEditingMixin = (superClass) =>\r\n  class InlineEditingMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * When true, pressing Enter while in cell edit mode\r\n         * will move focus to the editable cell in the next row\r\n         * (Shift + Enter - same, but for previous row).\r\n         * @attr {boolean} enter-next-row\r\n         */\r\n        enterNextRow: {\r\n          type: Boolean,\r\n          notify: true, // FIXME(yuriy-fix): needed by Flow counterpart\r\n        },\r\n\r\n        /**\r\n         * When true, after moving to next or previous editable cell using\r\n         * Tab / Shift+Tab, it will be focused without edit mode.\r\n         *\r\n         * When `enterNextRow` is true, pressing Enter will also\r\n         * preserve edit mode, otherwise, it will have no effect.\r\n         * @attr {boolean} single-cell-edit\r\n         */\r\n        singleCellEdit: {\r\n          type: Boolean,\r\n          notify: true, // FIXME(yuriy-fix): needed by Flow counterpart\r\n        },\r\n\r\n        /**\r\n         * When true, the grid enters cell edit mode on a single click\r\n         * instead of the default double click.\r\n         * @attr {boolean} edit-on-click\r\n         */\r\n        editOnClick: {\r\n          type: Boolean,\r\n        },\r\n\r\n        /** @private */\r\n        _editingDisabled: {\r\n          type: Boolean,\r\n        },\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n      this.__boundItemPropertyChanged = this._onItemPropertyChanged.bind(this);\r\n      this.__boundEditorFocusOut = this._onEditorFocusOut.bind(this);\r\n      this.__boundEditorFocusIn = this._onEditorFocusIn.bind(this);\r\n\r\n      this._addEditColumnListener('mousedown', (e) => {\r\n        // Prevent grid from resetting navigating state\r\n        e.stopImmediatePropagation();\r\n        this.toggleAttribute('navigating', true);\r\n      });\r\n\r\n      this._addEditColumnListener('focusout', (e) => {\r\n        // Prevent grid from resetting navigating state\r\n        e.stopImmediatePropagation();\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      this.addEventListener(\r\n        'keydown',\r\n        (e) => {\r\n          if (this.hasAttribute('loading-editor') && !['Tab', 'Escape', 'Enter'].includes(e.key)) {\r\n            // If an editor is focused while it's loading, prevent default keydown behavior\r\n            // to avoid user interaction with the editor before it's fully loaded\r\n            // Used by Flow GridPro\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n          }\r\n        },\r\n        true,\r\n      );\r\n      // Add listener before `vaadin-grid` interaction mode listener\r\n      this.addEventListener('keydown', (e) => {\r\n        switch (e.keyCode) {\r\n          case 27:\r\n            if (this.__edited) {\r\n              this._stopEdit(true);\r\n            }\r\n            break;\r\n          case 9:\r\n            if (this.__edited) {\r\n              this._switchEditCell(e);\r\n            }\r\n            break;\r\n          case 13:\r\n            if (this.__edited) {\r\n              this._switchEditCell(e);\r\n            } else {\r\n              this._enterEditFromEvent(e);\r\n            }\r\n            break;\r\n          case 32:\r\n            if (!this.__edited) {\r\n              this._enterEditFromEvent(e);\r\n            }\r\n            break;\r\n          default:\r\n            if (e.key && e.key.length === 1) {\r\n              this._enterEditFromEvent(e, 'text');\r\n            }\r\n            break;\r\n        }\r\n      });\r\n\r\n      super.ready();\r\n\r\n      this.$.table.addEventListener('click', (e) => {\r\n        const column = this.getEventContext(e).column;\r\n        if (column && this._isEditColumn(column)) {\r\n          if (this.editOnClick) {\r\n            this._enterEditFromEvent(e);\r\n          }\r\n        }\r\n      });\r\n\r\n      // Dblclick does not work on iOS Safari\r\n      if (this._ios) {\r\n        let firstClickTime;\r\n        let waitingSecondClick = false;\r\n\r\n        this.addEventListener('click', (e) => {\r\n          if (!waitingSecondClick) {\r\n            firstClickTime = new Date().getTime();\r\n            waitingSecondClick = true;\r\n\r\n            setTimeout(() => {\r\n              waitingSecondClick = false;\r\n            }, 300);\r\n          } else {\r\n            waitingSecondClick = false;\r\n\r\n            const time = new Date().getTime();\r\n            if (time - firstClickTime < 300) {\r\n              this._enterEditFromEvent(e);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        this.addEventListener('dblclick', (e) => {\r\n          if (!this.editOnClick) {\r\n            this._enterEditFromEvent(e);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Prevents making an edit column cell's parent row active on click.\r\n     *\r\n     * @override\r\n     * @protected\r\n     */\r\n    _shouldPreventCellActivationOnClick(e) {\r\n      return (\r\n        super._shouldPreventCellActivationOnClick(e) ||\r\n        // The clicked cell is editable\r\n        this._isEditColumn(this.getEventContext(e).column)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Override an observer from `DisabledMixin` to stop\r\n     * editing when grid element becomes disabled.\r\n     *\r\n     * @param {boolean} disabled\r\n     * @param {boolean} oldDisabled\r\n     * @protected\r\n     * @override\r\n     */\r\n    _disabledChanged(disabled, oldDisabled) {\r\n      super._disabledChanged(disabled, oldDisabled);\r\n\r\n      if (disabled && this.__edited) {\r\n        this._stopEdit(true);\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _checkImports() {\r\n      super._checkImports();\r\n      ['vaadin-grid-pro-edit-column'].forEach((elementName) => {\r\n        const element = this.querySelector(elementName);\r\n        if (element && !customElements.get(elementName)) {\r\n          console.warn(`Make sure you have imported the required module for <${elementName}> element.`);\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    _applyEdit({ path, value, item }) {\r\n      set(path, value, item);\r\n      this.requestContentUpdate();\r\n    }\r\n\r\n    /** @private */\r\n    _addEditColumnListener(type, callback) {\r\n      this.addEventListener(type, (e) => {\r\n        const context = this.getEventContext(e);\r\n        const column = context.column;\r\n        const edited = this.__edited;\r\n\r\n        if (context.item && this._isEditColumn(column)) {\r\n          const { cell } = this._getGridEventLocation(e);\r\n\r\n          if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\r\n            return;\r\n          }\r\n\r\n          if (edited && edited.cell === cell) {\r\n            return;\r\n          }\r\n\r\n          if (!this._isCellEditable(cell)) {\r\n            return;\r\n          }\r\n\r\n          callback(e);\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    _onItemPropertyChanged(e) {\r\n      if (!e.defaultPrevented) {\r\n        this._applyEdit(e.detail);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _getRowByIndex(index) {\r\n      return Array.from(this.$.items.children).find((el) => el.index === index);\r\n    }\r\n\r\n    /** @private */\r\n    _isEditColumn(column) {\r\n      return column && column.localName.toLowerCase() === 'vaadin-grid-pro-edit-column';\r\n    }\r\n\r\n    /** @private */\r\n    _getEditColumns() {\r\n      const columnTreeLevel = this._columnTree.length - 1;\r\n      return this._columnTree[columnTreeLevel]\r\n        .filter((column) => this._isEditColumn(column) && !column.hidden)\r\n        .sort((a, b) => a._order - b._order);\r\n    }\r\n\r\n    /** @private */\r\n    _cancelStopEdit() {\r\n      // Stop edit on outside click will always trigger notify resize.\r\n      // when tabbing within same row it might not be needed, so cancel\r\n      if (this._debouncerStopEdit) {\r\n        this._debouncerStopEdit.cancel();\r\n        delete this._debouncerStopEdit;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _flushStopEdit() {\r\n      if (this._debouncerStopEdit) {\r\n        this._debouncerStopEdit.flush();\r\n        delete this._debouncerStopEdit;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _enterEditFromEvent(e, type) {\r\n      const context = this.getEventContext(e);\r\n      const column = context.column;\r\n      const edited = this.__edited;\r\n\r\n      if (context.item && this._isEditColumn(column)) {\r\n        const { cell } = this._getGridEventLocation(e);\r\n\r\n        if (!cell || cell.getAttribute('part').indexOf('details-cell') > -1) {\r\n          return;\r\n        }\r\n\r\n        if (type && column.editorType !== type) {\r\n          return;\r\n        }\r\n\r\n        if (edited && edited.cell === cell && column._getEditorComponent(cell).contains(e.target)) {\r\n          return;\r\n        }\r\n\r\n        this._flushStopEdit();\r\n\r\n        this._startEdit(cell, column);\r\n      } else if (edited) {\r\n        this._stopEdit();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onEditorFocusOut(event) {\r\n      if (this.__shouldIgnoreFocusOut(event)) {\r\n        return;\r\n      }\r\n\r\n      // Schedule stop on editor component focusout\r\n      this._debouncerStopEdit = Debouncer.debounce(this._debouncerStopEdit, animationFrame, this._stopEdit.bind(this));\r\n    }\r\n\r\n    /** @private */\r\n    __shouldIgnoreFocusOut(event) {\r\n      const edited = this.__edited;\r\n      if (edited) {\r\n        const { cell, column } = this.__edited;\r\n        const editor = column._getEditorComponent(cell);\r\n\r\n        const path = event.composedPath();\r\n        const nodes = path.slice(0, path.indexOf(editor) + 1).filter((node) => node.nodeType === Node.ELEMENT_NODE);\r\n        // Detect focus moving to e.g. vaadin-select-overlay or vaadin-date-picker-overlay\r\n        if (nodes.some((el) => typeof el._shouldRemoveFocus === 'function' && !el._shouldRemoveFocus(event))) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onEditorFocusIn() {\r\n      this._cancelStopEdit();\r\n    }\r\n\r\n    /** @private */\r\n    _startEdit(cell, column) {\r\n      const isCellEditable = this._isCellEditable(cell);\r\n\r\n      // TODO: remove `_editingDisabled` after Flow counterpart is updated.\r\n      if (this.disabled || this._editingDisabled || !isCellEditable) {\r\n        return;\r\n      }\r\n      // Cancel debouncer enqueued on focusout\r\n      this._cancelStopEdit();\r\n\r\n      this._scrollHorizontallyToCell(cell);\r\n\r\n      const model = this.__getRowModel(cell.parentElement);\r\n      this.__edited = { cell, column, model };\r\n      column._startCellEdit(cell, model);\r\n\r\n      this.dispatchEvent(\r\n        new CustomEvent('cell-edit-started', {\r\n          detail: {\r\n            index: model.index,\r\n            item: model.item,\r\n            path: column.path,\r\n          },\r\n          composed: true,\r\n        }),\r\n      );\r\n      this.addEventListener('item-property-changed', this.__boundItemPropertyChanged);\r\n    }\r\n\r\n    /**\r\n     * @param {boolean=} shouldCancel\r\n     * @param {boolean=} shouldRestoreFocus\r\n     * @protected\r\n     */\r\n    _stopEdit(shouldCancel, shouldRestoreFocus) {\r\n      if (!this.__edited) {\r\n        return;\r\n      }\r\n      const { cell, column, model } = this.__edited;\r\n\r\n      if (!shouldCancel && !this.hasAttribute('loading-editor')) {\r\n        const editor = column._getEditorComponent(cell);\r\n        if (editor) {\r\n          const value = column._getEditorValue(editor);\r\n          if (value !== get(column.path, model.item)) {\r\n            // In some cases, where the value comes from the editor's change\r\n            // event (eg. custom editor in vaadin-grid-pro-flow), the event is\r\n            // not dispatched in FF/Safari/Edge. That's due the change event\r\n            // doesn't occur when the editor is removed from the DOM. Manually\r\n            // calling blur makes the event to be dispatched.\r\n            editor.blur();\r\n\r\n            this.dispatchEvent(\r\n              new CustomEvent('item-property-changed', {\r\n                detail: {\r\n                  index: model.index,\r\n                  item: model.item,\r\n                  path: column.path,\r\n                  value,\r\n                },\r\n                bubbles: true,\r\n                cancelable: true,\r\n                composed: true,\r\n              }),\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      column._stopCellEdit(cell, model);\r\n\r\n      this.__edited = null;\r\n\r\n      this.removeEventListener('item-property-changed', this.__boundItemPropertyChanged);\r\n\r\n      if (shouldRestoreFocus) {\r\n        cell.focus();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!KeyboardEvent} e\r\n     * @protected\r\n     */\r\n    async _switchEditCell(e) {\r\n      if (e.defaultPrevented && e.keyCode === 9) {\r\n        return;\r\n      }\r\n\r\n      this._cancelStopEdit();\r\n\r\n      const editableColumns = this._getEditColumns();\r\n      const { cell, column, model } = this.__edited;\r\n\r\n      // Prevent vaadin-grid handler from being called\r\n      e.stopImmediatePropagation();\r\n\r\n      const editor = column._getEditorComponent(cell);\r\n\r\n      // Do not prevent Tab to allow native input blur and wait for it,\r\n      // unless the keydown event is from the edit cell select overlay.\r\n      if (e.key === 'Tab' && editor && editor.contains(e.target)) {\r\n        const ignore = await new Promise((resolve) => {\r\n          editor.addEventListener(\r\n            'focusout',\r\n            (event) => {\r\n              resolve(this.__shouldIgnoreFocusOut(event));\r\n            },\r\n            { once: true },\r\n          );\r\n        });\r\n\r\n        // Ignore focusout event after which focus stays in the field,\r\n        // e.g. Tab between date and time pickers in date-time-picker.\r\n        if (ignore) {\r\n          return;\r\n        }\r\n      } else {\r\n        e.preventDefault();\r\n      }\r\n\r\n      this._stopEdit();\r\n\r\n      // Try to find the next editable cell\r\n      let nextIndex = model.index;\r\n      let nextColumn = column;\r\n      let nextCell = cell;\r\n      let directionX = 0;\r\n      let directionY = 0;\r\n\r\n      // Enter key: move up / down\r\n      if (e.keyCode === 13 && this.enterNextRow) {\r\n        directionY = e.shiftKey ? -1 : 1;\r\n      }\r\n\r\n      // Tab: move right / left\r\n      if (e.keyCode === 9) {\r\n        directionX = e.shiftKey ? -1 : 1;\r\n      }\r\n\r\n      if (directionX || directionY) {\r\n        while (nextCell) {\r\n          if (directionX) {\r\n            // Move horizontally\r\n            nextColumn = editableColumns[editableColumns.indexOf(nextColumn) + directionX];\r\n            if (!nextColumn) {\r\n              // Wrap to the next or previous row\r\n              nextIndex += directionX;\r\n              nextColumn = editableColumns[directionX > 0 ? 0 : editableColumns.length - 1];\r\n            }\r\n          }\r\n          // Move vertically\r\n          if (directionY) {\r\n            nextIndex += directionY;\r\n          }\r\n          // Stop looking if the next cell is editable\r\n          const nextRow = this._getRowByIndex(nextIndex);\r\n          // eslint-disable-next-line @typescript-eslint/no-loop-func\r\n          nextCell = nextRow && Array.from(nextRow.children).find((cell) => cell._column === nextColumn);\r\n          if (nextCell && this._isCellEditable(nextCell)) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Focus current cell as fallback\r\n      if (!nextCell) {\r\n        nextCell = cell;\r\n        nextIndex = model.index;\r\n      }\r\n\r\n      if (!this.singleCellEdit && nextCell !== cell) {\r\n        this._startEdit(nextCell, nextColumn);\r\n      } else {\r\n        this.__ensureFlatIndexInViewport(nextIndex);\r\n        nextCell.focus();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!HTMLElement} row\r\n     * @param {GridItem} item\r\n     * @protected\r\n     */\r\n    _updateItem(row, item) {\r\n      if (this.__edited) {\r\n        const { cell, model } = this.__edited;\r\n        if (cell.parentNode === row && model.item !== item) {\r\n          this._stopEdit();\r\n        }\r\n      }\r\n      super._updateItem(row, item);\r\n    }\r\n\r\n    /**\r\n     * Override method from `StylingMixin` to apply `editable-cell` part to the\r\n     * cells of edit columns.\r\n     *\r\n     * @override\r\n     */\r\n    _generateCellPartNames(row, model) {\r\n      super._generateCellPartNames(row, model);\r\n\r\n      iterateRowCells(row, (cell) => {\r\n        const isEditable = !row.hasAttribute('loading') && this._isCellEditable(cell);\r\n        const target = cell._focusButton || cell;\r\n        updatePart(target, isEditable, 'editable-cell');\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    _isCellEditable(cell) {\r\n      const column = cell._column;\r\n      // Not editable if the column is not an edit column\r\n      if (!this._isEditColumn(column)) {\r\n        return false;\r\n      }\r\n      // Cell is editable by default if isCellEditable is not configured\r\n      if (!column.isCellEditable) {\r\n        return true;\r\n      }\r\n      // Otherwise, check isCellEditable function\r\n      const model = this.__getRowModel(cell.parentElement);\r\n      const isEditable = column.isCellEditable(model);\r\n\r\n      // Cancel editing if the cell is currently edited one and becomes no longer editable\r\n      // TODO: should be moved to `_updateItem` when Grid connector is updated to use it.\r\n      if (this.__edited && this.__edited.cell === cell && !isEditable) {\r\n        this._stopEdit(true, true);\r\n      }\r\n\r\n      return isEditable;\r\n    }\r\n\r\n    /**\r\n     * Fired before exiting the cell edit mode, if the value has been changed.\r\n     * If the default is prevented, value change would not be applied.\r\n     *\r\n     * @event item-property-changed\r\n     * @param {Object} detail\r\n     * @param {Object} detail.index the row index of the edited cell\r\n     * @param {Object} detail.item the grid item rendered to the row of the edited cell\r\n     * @param {Object} detail.path the column path of the edited cell\r\n     * @param {Object} detail.value the new value of the edited cell\r\n     */\r\n\r\n    /**\r\n     * Fired when the user starts editing a grid cell.\r\n     *\r\n     * @event cell-edit-started\r\n     * @param {Object} detail\r\n     * @param {Object} detail.index the row index of the edited cell\r\n     * @param {Object} detail.item the grid item rendered to the row of the edited cell\r\n     * @param {Object} detail.path the column path of the edited cell\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { Grid } from '@vaadin/grid/src/vaadin-grid.js';\r\nimport { InlineEditingMixin } from './vaadin-grid-pro-inline-editing-mixin.js';\r\n\r\n/**\r\n *\r\n * `<vaadin-grid-pro>` is a high quality data grid / data table Web Component with extended functionality.\r\n * It extends `<vaadin-grid>` and adds extra features on top of the basic ones.\r\n *\r\n * See [`<vaadin-grid>`](#/elements/vaadin-grid) documentation for details.\r\n *\r\n * ```\r\n * <vaadin-grid-pro></vaadin-grid-pro>\r\n * ```\r\n *\r\n * ### Internal components\r\n *\r\n * In addition to `<vaadin-grid-pro>` itself, the following internal\r\n * components are themable:\r\n *\r\n * - `<vaadin-grid-pro-edit-checkbox>` - has the same API as [`<vaadin-checkbox>`](#/elements/vaadin-checkbox).\r\n * - `<vaadin-grid-pro-edit-text-field>` - has the same API as [`<vaadin-text-field>`](#/elements/vaadin-text-field).\r\n * - `<vaadin-grid-pro-edit-select>` - has the same API as [`<vaadin-select>`](#/elements/vaadin-select).\r\n *\r\n * @fires {CustomEvent} active-item-changed - Fired when the `activeItem` property changes.\r\n * @fires {CustomEvent} cell-activate - Fired when the cell is activated with click or keyboard.\r\n * @fires {CustomEvent} cell-edit-started - Fired when the user starts editing a grid cell.\r\n * @fires {CustomEvent} column-reorder - Fired when the columns in the grid are reordered.\r\n * @fires {CustomEvent} column-resize - Fired when the grid column resize is finished.\r\n * @fires {CustomEvent} expanded-items-changed - Fired when the `expandedItems` property changes.\r\n * @fires {CustomEvent} grid-dragstart - Fired when starting to drag grid rows.\r\n * @fires {CustomEvent} grid-dragend - Fired when the dragging of the rows ends.\r\n * @fires {CustomEvent} grid-drop - Fired when a drop occurs on top of the grid.\r\n * @fires {CustomEvent} item-property-changed - Fired before exiting the cell edit mode, if the value has been changed.\r\n * @fires {CustomEvent} loading-changed - Fired when the `loading` property changes.\r\n * @fires {CustomEvent} selected-items-changed - Fired when the `selectedItems` property changes.\r\n *\r\n * @customElement\r\n * @extends Grid\r\n * @mixes InlineEditingMixin\r\n */\r\nclass GridPro extends InlineEditingMixin(Grid) {\r\n  static get is() {\r\n    return 'vaadin-grid-pro';\r\n  }\r\n\r\n  static get cvdlName() {\r\n    return 'vaadin-grid-pro';\r\n  }\r\n}\r\n\r\ndefineCustomElement(GridPro);\r\n\r\nexport { GridPro };\r\n"],
  "mappings": "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",
  "names": ["cell"]
}
