{
  "version": 3,
  "sources": ["../../@vaadin/app-layout/theme/lumo/vaadin-app-layout-styles.js", "../../@vaadin/app-layout/src/detect-ios-navbar.js", "../../@vaadin/app-layout/src/safe-area-inset.js", "../../@vaadin/app-layout/src/vaadin-app-layout-mixin.js", "../../@vaadin/app-layout/src/vaadin-app-layout-styles.js", "../../@vaadin/app-layout/src/vaadin-app-layout.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-app-layout',\r\n  css`\r\n    [part='navbar'],\r\n    [part='drawer'] {\r\n      background-color: var(--lumo-base-color);\r\n      background-clip: padding-box;\r\n    }\r\n\r\n    [part='navbar'] {\r\n      min-height: var(--lumo-size-xl);\r\n      border-bottom: 1px solid var(--lumo-contrast-10pct);\r\n    }\r\n\r\n    [part='navbar'][bottom] {\r\n      border-bottom: none;\r\n      border-top: 1px solid var(--lumo-contrast-10pct);\r\n    }\r\n\r\n    [part='drawer'] {\r\n      border-inline-end: 1px solid var(--lumo-contrast-10pct);\r\n    }\r\n\r\n    :host([overlay]) [part='drawer'] {\r\n      border-inline-end: none;\r\n      box-shadow: var(--lumo-box-shadow-s);\r\n    }\r\n\r\n    :host([primary-section='navbar']) [part='navbar'] {\r\n      border: none;\r\n      background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\r\n    }\r\n\r\n    :host([primary-section='drawer']:not([overlay])) [part='drawer'] {\r\n      background-image: linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\r\n    }\r\n\r\n    [part='backdrop'] {\r\n      background-color: var(--lumo-shade-20pct);\r\n      opacity: 1;\r\n    }\r\n\r\n    [part] ::slotted(h2),\r\n    [part] ::slotted(h3),\r\n    [part] ::slotted(h4) {\r\n      margin-top: var(--lumo-space-xs) !important;\r\n      margin-bottom: var(--lumo-space-xs) !important;\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-app-layout' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\r\n\r\nexport function _detectIosNavbar() {\r\n  /* c8 ignore next 11 */\r\n  if (isIOS) {\r\n    const innerHeight = window.innerHeight;\r\n    const innerWidth = window.innerWidth;\r\n    const landscape = innerWidth > innerHeight;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n    if (landscape && clientHeight > innerHeight) {\r\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', `${clientHeight - innerHeight}px`);\r\n    } else {\r\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', '');\r\n    }\r\n  }\r\n}\r\n\r\n_detectIosNavbar();\r\nwindow.addEventListener('resize', _detectIosNavbar);\r\n", "const template = document.createElement('template');\r\n\r\ntemplate.innerHTML = `\r\n  <style>\r\n    /* Use units so that the values can be used in calc() */\r\n    html {\r\n      --safe-area-inset-top: env(safe-area-inset-top, 0px);\r\n      --safe-area-inset-right: env(safe-area-inset-right, 0px);\r\n      --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);\r\n      --safe-area-inset-left: env(safe-area-inset-left, 0px);\r\n    }\r\n  </style>\r\n`;\r\n\r\ndocument.head.appendChild(template.content);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { afterNextRender, beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\r\nimport { AriaModalController } from '@vaadin/a11y-base/src/aria-modal-controller.js';\r\nimport { FocusTrapController } from '@vaadin/a11y-base/src/focus-trap-controller.js';\r\nimport { I18nMixin } from '@vaadin/component-base/src/i18n-mixin.js';\r\n\r\n/**\r\n * @typedef {import('./vaadin-app-layout.js').AppLayoutI18n} AppLayoutI18n\r\n */\r\n\r\nconst DEFAULT_I18N = {\r\n  drawer: 'Drawer',\r\n};\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes I18nMixin\r\n */\r\nexport const AppLayoutMixin = (superclass) =>\r\n  class AppLayoutMixinClass extends I18nMixin(DEFAULT_I18N, superclass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Defines whether navbar or drawer will come first visually.\r\n         * - By default (`primary-section=\"navbar\"`), the navbar takes the full available width and moves the drawer down.\r\n         * - If `primary-section=\"drawer\"` is set, then the drawer will move the navbar, taking the full available height.\r\n         * @attr {navbar|drawer} primary-section\r\n         * @type {!PrimarySection}\r\n         */\r\n        primarySection: {\r\n          type: String,\r\n          value: 'navbar',\r\n          notify: true,\r\n          reflectToAttribute: true,\r\n          observer: '__primarySectionChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Controls whether the drawer is opened (visible) or not.\r\n         * Its default value depends on the viewport:\r\n         * - `true`, for desktop size views\r\n         * - `false`, for mobile size views\r\n         * @attr {boolean} drawer-opened\r\n         * @type {boolean}\r\n         */\r\n        drawerOpened: {\r\n          type: Boolean,\r\n          notify: true,\r\n          value: true,\r\n          reflectToAttribute: true,\r\n          observer: '__drawerOpenedChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Drawer is an overlay on top of the content\r\n         * Controlled via CSS using `--vaadin-app-layout-drawer-overlay: true|false`;\r\n         * @type {boolean}\r\n         */\r\n        overlay: {\r\n          type: Boolean,\r\n          notify: true,\r\n          readOnly: true,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * A global event that causes the drawer to close (be hidden) when it is in overlay mode.\r\n         * - The default is `vaadin-router-location-changed` dispatched by Vaadin Router\r\n         *\r\n         * @attr {string} close-drawer-on\r\n         * @type {string}\r\n         */\r\n        closeDrawerOn: {\r\n          type: String,\r\n          value: 'vaadin-router-location-changed',\r\n          observer: '_closeDrawerOnChanged',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__i18nChanged(__effectiveI18n)'];\r\n    }\r\n\r\n    /**\r\n     * Helper static method that dispatches a `close-overlay-drawer` event\r\n     */\r\n    static dispatchCloseOverlayDrawerEvent() {\r\n      window.dispatchEvent(new CustomEvent('close-overlay-drawer'));\r\n    }\r\n\r\n    /**\r\n     * The object used to localize this component. To change the default\r\n     * localization, replace this with an object that provides all properties, or\r\n     * just the individual properties you want to change.\r\n     *\r\n     * The object has the following structure and default values:\r\n     * ```\r\n     * {\r\n     *   drawer: 'Drawer'\r\n     * }\r\n     * ```\r\n     * @return {!AppLayoutI18n}\r\n     */\r\n    get i18n() {\r\n      return super.i18n;\r\n    }\r\n\r\n    set i18n(value) {\r\n      super.i18n = value;\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n      // TODO(jouni): might want to debounce\r\n      this.__boundResizeListener = this._resize.bind(this);\r\n      this.__drawerToggleClickListener = this._drawerToggleClick.bind(this);\r\n      this.__onDrawerKeyDown = this.__onDrawerKeyDown.bind(this);\r\n      this.__closeOverlayDrawerListener = this.__closeOverlayDrawer.bind(this);\r\n      this.__trapFocusInDrawer = this.__trapFocusInDrawer.bind(this);\r\n      this.__releaseFocusFromDrawer = this.__releaseFocusFromDrawer.bind(this);\r\n\r\n      // Hide all the elements except the drawer toggle and drawer content\r\n      this.__ariaModalController = new AriaModalController(this, () => [\r\n        ...this.querySelectorAll('vaadin-drawer-toggle, [slot=\"drawer\"]'),\r\n      ]);\r\n      this.__focusTrapController = new FocusTrapController(this);\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      this._blockAnimationUntilAfterNextRender();\r\n\r\n      window.addEventListener('resize', this.__boundResizeListener);\r\n      this.addEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\r\n\r\n      beforeNextRender(this, this._afterFirstRender);\r\n\r\n      this._updateTouchOptimizedMode();\r\n      this._updateDrawerSize();\r\n      this._updateOverlayMode();\r\n\r\n      this._navbarSizeObserver = new ResizeObserver(() => {\r\n        requestAnimationFrame(() => {\r\n          // Prevent updating offset size multiple times\r\n          // during the drawer open / close transition.\r\n          if (this.__isDrawerAnimating) {\r\n            this.__updateOffsetSizePending = true;\r\n          } else {\r\n            this._updateOffsetSize();\r\n          }\r\n        });\r\n      });\r\n      this._navbarSizeObserver.observe(this.$.navbarTop);\r\n      this._navbarSizeObserver.observe(this.$.navbarBottom);\r\n\r\n      window.addEventListener('close-overlay-drawer', this.__closeOverlayDrawerListener);\r\n      window.addEventListener('keydown', this.__onDrawerKeyDown);\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this.addController(this.__focusTrapController);\r\n      this.__setAriaExpanded();\r\n\r\n      this.$.drawer.addEventListener('transitionstart', () => {\r\n        this.__isDrawerAnimating = true;\r\n      });\r\n\r\n      this.$.drawer.addEventListener('transitionend', () => {\r\n        // Update offset size after drawer animation.\r\n        if (this.__updateOffsetSizePending) {\r\n          this.__updateOffsetSizePending = false;\r\n          this._updateOffsetSize();\r\n        }\r\n\r\n        // Delay resetting the flag until animation frame\r\n        // to avoid updating offset size again on resize.\r\n        requestAnimationFrame(() => {\r\n          this.__isDrawerAnimating = false;\r\n        });\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      window.removeEventListener('resize', this.__boundResizeListener);\r\n      this.removeEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\r\n      window.removeEventListener('close-overlay-drawer', this.__drawerToggleClickListener);\r\n      window.removeEventListener('keydown', this.__onDrawerKeyDown);\r\n    }\r\n\r\n    /**\r\n     * A callback for the `primarySection` property observer.\r\n     *\r\n     * Ensures the property is set to its default value `navbar`\r\n     * whenever the new value is not one of the valid values: `navbar`, `drawer`.\r\n     *\r\n     * @param {string} value\r\n     * @private\r\n     */\r\n    __primarySectionChanged(value) {\r\n      const isValid = ['navbar', 'drawer'].includes(value);\r\n      if (!isValid) {\r\n        this.primarySection = 'navbar';\r\n      }\r\n    }\r\n\r\n    /**\r\n     * A callback for the `drawerOpened` property observer.\r\n     *\r\n     * When the drawer opens, the method ensures the drawer has a proper height and sets focus on it.\r\n     * As long as the drawer is open, the focus is trapped within the drawer.\r\n     *\r\n     * When the drawer closes, the method releases focus from the drawer, setting focus on the drawer toggle.\r\n     *\r\n     * @param {boolean} drawerOpened\r\n     * @param {boolean} oldDrawerOpened\r\n     * @private\r\n     */\r\n    __drawerOpenedChanged(drawerOpened, oldDrawerOpened) {\r\n      if (this.overlay) {\r\n        if (drawerOpened) {\r\n          this.__trapFocusInDrawer();\r\n        } else if (oldDrawerOpened) {\r\n          this.__releaseFocusFromDrawer();\r\n        }\r\n      }\r\n\r\n      this.__setAriaExpanded();\r\n    }\r\n\r\n    /**\r\n     * A callback for the `i18n` property observer.\r\n     *\r\n     * The method ensures the drawer has ARIA attributes updated\r\n     * once the `i18n` property changes.\r\n     *\r\n     * @private\r\n     */\r\n    __i18nChanged() {\r\n      this.__updateDrawerAriaAttributes();\r\n    }\r\n\r\n    /** @protected */\r\n    _afterFirstRender() {\r\n      this._blockAnimationUntilAfterNextRender();\r\n      this._updateOffsetSize();\r\n    }\r\n\r\n    /** @private */\r\n    _drawerToggleClick(e) {\r\n      e.stopPropagation();\r\n      this.drawerOpened = !this.drawerOpened;\r\n    }\r\n\r\n    /** @private */\r\n    __closeOverlayDrawer() {\r\n      if (this.overlay) {\r\n        this.drawerOpened = false;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __setAriaExpanded() {\r\n      const toggle = this.querySelector('vaadin-drawer-toggle');\r\n      if (toggle) {\r\n        toggle.setAttribute('aria-expanded', this.drawerOpened);\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _updateDrawerSize() {\r\n      const childCount = this.querySelectorAll('[slot=drawer]').length;\r\n      const drawer = this.$.drawer;\r\n\r\n      if (childCount === 0) {\r\n        drawer.setAttribute('hidden', '');\r\n        this.style.setProperty('--_vaadin-app-layout-drawer-width', 0);\r\n      } else {\r\n        drawer.removeAttribute('hidden');\r\n        this.style.removeProperty('--_vaadin-app-layout-drawer-width');\r\n      }\r\n      this._updateOffsetSize();\r\n    }\r\n\r\n    /** @private */\r\n    _resize() {\r\n      this._blockAnimationUntilAfterNextRender();\r\n      this._updateTouchOptimizedMode();\r\n      this._updateOverlayMode();\r\n    }\r\n\r\n    /** @protected */\r\n    _updateOffsetSize() {\r\n      const navbar = this.$.navbarTop;\r\n      const navbarRect = navbar.getBoundingClientRect();\r\n\r\n      const navbarBottom = this.$.navbarBottom;\r\n      const navbarBottomRect = navbarBottom.getBoundingClientRect();\r\n\r\n      const drawer = this.$.drawer;\r\n      const drawerRect = drawer.getBoundingClientRect();\r\n\r\n      this.style.setProperty('--_vaadin-app-layout-navbar-offset-size', `${navbarRect.height}px`);\r\n      this.style.setProperty('--_vaadin-app-layout-navbar-offset-size-bottom', `${navbarBottomRect.height}px`);\r\n      this.style.setProperty('--_vaadin-app-layout-drawer-offset-size', `${drawerRect.width}px`);\r\n    }\r\n\r\n    /** @protected */\r\n    _updateOverlayMode() {\r\n      const overlay = this._getCustomPropertyValue('--vaadin-app-layout-drawer-overlay') === 'true';\r\n\r\n      if (!this.overlay && overlay) {\r\n        // Changed from not overlay to overlay\r\n        this._drawerStateSaved = this.drawerOpened;\r\n        this.drawerOpened = false;\r\n      }\r\n\r\n      this._setOverlay(overlay);\r\n\r\n      if (!this.overlay && this._drawerStateSaved) {\r\n        this.drawerOpened = this._drawerStateSaved;\r\n        this._drawerStateSaved = null;\r\n      }\r\n\r\n      this.__updateDrawerAriaAttributes();\r\n    }\r\n\r\n    /**\r\n     * Updates ARIA attributes on the drawer depending on the drawer mode.\r\n     *\r\n     * - In the overlay mode, the method marks the drawer with ARIA attributes as a dialog\r\n     * labelled with the `i18n.drawer` property.\r\n     * - In the normal mode, the method removes the ARIA attributes that has been set for the overlay mode.\r\n     *\r\n     * @private\r\n     */\r\n    __updateDrawerAriaAttributes() {\r\n      const drawer = this.$.drawer;\r\n      if (this.overlay) {\r\n        drawer.setAttribute('role', 'dialog');\r\n        drawer.setAttribute('aria-modal', 'true');\r\n        drawer.setAttribute('aria-label', this.__effectiveI18n.drawer);\r\n      } else {\r\n        drawer.removeAttribute('role');\r\n        drawer.removeAttribute('aria-modal');\r\n        drawer.removeAttribute('aria-label');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns a promise that resolves when the drawer opening/closing CSS transition ends.\r\n     *\r\n     * The method relies on the `--vaadin-app-layout-transition` CSS variable to detect whether\r\n     * the drawer has a CSS transition that needs to be awaited. If the CSS variable equals `none`,\r\n     * the promise resolves immediately.\r\n     *\r\n     * @return {Promise}\r\n     * @private\r\n     */\r\n    __drawerTransitionComplete() {\r\n      return new Promise((resolve) => {\r\n        if (this._getCustomPropertyValue('--vaadin-app-layout-transition') === 'none') {\r\n          resolve();\r\n          return;\r\n        }\r\n\r\n        this.$.drawer.addEventListener('transitionend', resolve, { once: true });\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    async __trapFocusInDrawer() {\r\n      // Wait for the drawer CSS transition before focusing the drawer\r\n      // in order for VoiceOver to have a proper outline.\r\n      await this.__drawerTransitionComplete();\r\n\r\n      if (!this.drawerOpened) {\r\n        // The drawer has been closed during the CSS transition.\r\n        return;\r\n      }\r\n\r\n      this.$.drawer.setAttribute('tabindex', '0');\r\n\r\n      this.__ariaModalController.showModal();\r\n      this.__focusTrapController.trapFocus(this.$.drawer);\r\n    }\r\n\r\n    /** @private */\r\n    async __releaseFocusFromDrawer() {\r\n      // Wait for the drawer CSS transition in order to restore focus to the toggle\r\n      // only after `visibility` becomes `hidden`, that is, the drawer becomes inaccessible by the tabbing navigation.\r\n      await this.__drawerTransitionComplete();\r\n\r\n      if (this.drawerOpened) {\r\n        // The drawer has been opened during the CSS transition.\r\n        return;\r\n      }\r\n\r\n      this.__ariaModalController.close();\r\n      this.__focusTrapController.releaseFocus();\r\n      this.$.drawer.removeAttribute('tabindex');\r\n\r\n      // Move focus to the drawer toggle when closing the drawer.\r\n      const toggle = this.querySelector('vaadin-drawer-toggle');\r\n      if (toggle) {\r\n        toggle.focus();\r\n        toggle.setAttribute('focus-ring', 'focus');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Closes the drawer on Escape press if it has been opened in the overlay mode.\r\n     *\r\n     * @param {KeyboardEvent} event\r\n     * @private\r\n     */\r\n    __onDrawerKeyDown(event) {\r\n      if (event.key === 'Escape' && this.overlay) {\r\n        this.drawerOpened = false;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _closeDrawerOnChanged(closeDrawerOn, oldCloseDrawerOn) {\r\n      if (oldCloseDrawerOn) {\r\n        window.removeEventListener(oldCloseDrawerOn, this.__closeOverlayDrawerListener);\r\n      }\r\n      if (closeDrawerOn) {\r\n        window.addEventListener(closeDrawerOn, this.__closeOverlayDrawerListener);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onBackdropClick() {\r\n      this._close();\r\n    }\r\n\r\n    /** @private */\r\n    _onBackdropTouchend(event) {\r\n      // Prevent the click event from being fired\r\n      // on clickable element behind the backdrop\r\n      event.preventDefault();\r\n\r\n      this._close();\r\n    }\r\n\r\n    /** @protected */\r\n    _close() {\r\n      this.drawerOpened = false;\r\n    }\r\n\r\n    /** @private */\r\n    _getCustomPropertyValue(customProperty) {\r\n      const customPropertyValue = getComputedStyle(this).getPropertyValue(customProperty);\r\n      return (customPropertyValue || '').trim().toLowerCase();\r\n    }\r\n\r\n    /** @protected */\r\n    _updateTouchOptimizedMode() {\r\n      const touchOptimized = this._getCustomPropertyValue('--vaadin-app-layout-touch-optimized') === 'true';\r\n\r\n      const navbarItems = this.querySelectorAll('[slot*=\"navbar\"]');\r\n\r\n      if (navbarItems.length > 0) {\r\n        Array.from(navbarItems).forEach((navbar) => {\r\n          if (navbar.getAttribute('slot').indexOf('touch-optimized') > -1) {\r\n            navbar.__touchOptimized = true;\r\n          }\r\n\r\n          if (touchOptimized && navbar.__touchOptimized) {\r\n            navbar.setAttribute('slot', 'navbar-bottom');\r\n          } else {\r\n            navbar.setAttribute('slot', 'navbar');\r\n          }\r\n        });\r\n      }\r\n\r\n      if (this.$.navbarTop.querySelector('[name=navbar]').assignedNodes().length === 0) {\r\n        this.$.navbarTop.setAttribute('hidden', '');\r\n      } else {\r\n        this.$.navbarTop.removeAttribute('hidden');\r\n      }\r\n\r\n      if (this.$.navbarBottom.querySelector('[name=navbar-bottom]').assignedNodes().length === 0) {\r\n        this.$.navbarBottom.setAttribute('hidden', '');\r\n      } else {\r\n        this.$.navbarBottom.removeAttribute('hidden');\r\n      }\r\n\r\n      this._updateOffsetSize();\r\n    }\r\n\r\n    /** @protected */\r\n    _blockAnimationUntilAfterNextRender() {\r\n      this.setAttribute('no-anim', '');\r\n      afterNextRender(this, () => {\r\n        this.removeAttribute('no-anim');\r\n      });\r\n    }\r\n\r\n    /**\r\n     * App Layout listens to `close-overlay-drawer` on the window level.\r\n     * A custom event can be dispatched and the App Layout will close the drawer in overlay.\r\n     *\r\n     * That can be used, for instance, when a navigation occurs when user clicks in a menu item inside the drawer.\r\n     *\r\n     * See `dispatchCloseOverlayDrawerEvent()` helper method.\r\n     *\r\n     * @event close-overlay-drawer\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const appLayoutStyles = css`\r\n  :host {\r\n    display: block;\r\n    box-sizing: border-box;\r\n    height: 100%;\r\n    --vaadin-app-layout-transition: 200ms;\r\n    transition: padding var(--vaadin-app-layout-transition);\r\n    --_vaadin-app-layout-drawer-width: var(--vaadin-app-layout-drawer-width, 16em);\r\n    --vaadin-app-layout-touch-optimized: false;\r\n    --vaadin-app-layout-navbar-offset-top: var(--_vaadin-app-layout-navbar-offset-size);\r\n    --vaadin-app-layout-navbar-offset-bottom: var(--_vaadin-app-layout-navbar-offset-size-bottom);\r\n    padding-block: var(--vaadin-app-layout-navbar-offset-top) var(--vaadin-app-layout-navbar-offset-bottom);\r\n    padding-inline-start: var(--vaadin-app-layout-navbar-offset-left);\r\n  }\r\n\r\n  :host([hidden]),\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n\r\n  :host([no-anim]) {\r\n    --vaadin-app-layout-transition: none !important;\r\n  }\r\n\r\n  :host([drawer-opened]) {\r\n    --vaadin-app-layout-drawer-offset-left: var(--_vaadin-app-layout-drawer-offset-size);\r\n  }\r\n\r\n  :host([overlay]) {\r\n    --vaadin-app-layout-drawer-offset-left: 0;\r\n    --vaadin-app-layout-navbar-offset-left: 0;\r\n  }\r\n\r\n  :host(:not([no-scroll])) [content] {\r\n    overflow: auto;\r\n  }\r\n\r\n  [content] {\r\n    height: 100%;\r\n  }\r\n\r\n  @media (pointer: coarse) and (max-width: 800px) and (min-height: 500px) {\r\n    :host {\r\n      --vaadin-app-layout-touch-optimized: true;\r\n    }\r\n  }\r\n\r\n  [part='navbar'] {\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    top: 0;\r\n    inset-inline: 0;\r\n    transition: inset-inline-start var(--vaadin-app-layout-transition);\r\n    padding-top: var(--safe-area-inset-top);\r\n    padding-left: var(--safe-area-inset-left);\r\n    padding-right: var(--safe-area-inset-right);\r\n    z-index: 1;\r\n  }\r\n\r\n  :host([primary-section='drawer'][drawer-opened]:not([overlay])) [part='navbar'] {\r\n    inset-inline-start: var(--vaadin-app-layout-drawer-offset-left, 0);\r\n  }\r\n\r\n  :host([primary-section='drawer']) [part='drawer'] {\r\n    top: 0;\r\n  }\r\n\r\n  [part='navbar'][bottom] {\r\n    top: auto;\r\n    bottom: 0;\r\n    padding-bottom: var(--safe-area-inset-bottom);\r\n  }\r\n\r\n  [part='drawer'] {\r\n    overflow: auto;\r\n    position: fixed;\r\n    top: var(--vaadin-app-layout-navbar-offset-top, 0);\r\n    bottom: var(--vaadin-app-layout-navbar-offset-bottom, var(--vaadin-viewport-offset-bottom, 0));\r\n    inset-inline: var(--vaadin-app-layout-navbar-offset-left, 0) auto;\r\n    transition:\r\n      transform var(--vaadin-app-layout-transition),\r\n      visibility var(--vaadin-app-layout-transition);\r\n    transform: translateX(-100%);\r\n    max-width: 90%;\r\n    width: var(--_vaadin-app-layout-drawer-width);\r\n    box-sizing: border-box;\r\n    padding: var(--safe-area-inset-top) 0 var(--safe-area-inset-bottom) var(--safe-area-inset-left);\r\n    outline: none;\r\n    /* The drawer should be inaccessible by the tabbing navigation when it is closed. */\r\n    visibility: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  :host([drawer-opened]) [part='drawer'] {\r\n    /* The drawer should be accessible by the tabbing navigation when it is opened. */\r\n    visibility: visible;\r\n    transform: translateX(0%);\r\n    touch-action: manipulation;\r\n  }\r\n\r\n  [part='backdrop'] {\r\n    background-color: #000;\r\n    opacity: 0.3;\r\n  }\r\n\r\n  :host(:not([drawer-opened])) [part='backdrop'] {\r\n    opacity: 0;\r\n  }\r\n\r\n  :host([overlay]) [part='backdrop'] {\r\n    position: fixed;\r\n    inset: 0;\r\n    pointer-events: none;\r\n    transition: opacity var(--vaadin-app-layout-transition);\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  :host([overlay]) [part='drawer'] {\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  :host([overlay]) [part='drawer'],\r\n  :host([overlay]) [part='backdrop'] {\r\n    z-index: 2;\r\n  }\r\n\r\n  :host([drawer-opened][overlay]) [part='backdrop'] {\r\n    pointer-events: auto;\r\n    touch-action: manipulation;\r\n  }\r\n\r\n  :host([dir='rtl']) [part='drawer'] {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  :host([dir='rtl'][drawer-opened]) [part='drawer'] {\r\n    transform: translateX(0%);\r\n  }\r\n\r\n  :host([drawer-opened]:not([overlay])) {\r\n    padding-inline-start: var(--vaadin-app-layout-drawer-offset-left);\r\n  }\r\n\r\n  @media (max-width: 800px), (max-height: 600px) {\r\n    :host {\r\n      --vaadin-app-layout-drawer-overlay: true;\r\n      --_vaadin-app-layout-drawer-width: var(--vaadin-app-layout-drawer-width, 20em);\r\n    }\r\n  }\r\n\r\n  /* If a vaadin-scroller is used in the drawer, allow it to take all remaining space and contain scrolling */\r\n  [part='drawer'] ::slotted(vaadin-scroller) {\r\n    flex: 1;\r\n    overscroll-behavior: contain;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './detect-ios-navbar.js';\r\nimport './safe-area-inset.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { AppLayoutMixin } from './vaadin-app-layout-mixin.js';\r\nimport { appLayoutStyles } from './vaadin-app-layout-styles.js';\r\n\r\nregisterStyles('vaadin-app-layout', appLayoutStyles, { moduleId: 'vaadin-app-layout-styles' });\r\n\r\n/**\r\n * `<vaadin-app-layout>` is a Web Component providing a quick and easy way to get a common application layout structure done.\r\n *\r\n * ```\r\n * <vaadin-app-layout primary-section=\"navbar|drawer\">\r\n *  <vaadin-drawer-toggle slot=\"navbar [touch-optimized]\"></vaadin-drawer-toggle>\r\n *  <h3 slot=\"navbar [touch-optimized]\">Company Name</h3>\r\n *  <vaadin-tabs orientation=\"vertical\" slot=\"drawer\">\r\n *    <vaadin-tab>Menu item 1</vaadin-tab>\r\n *  </vaadin-tabs>\r\n *  <!-- Everything else will be the page content -->\r\n *  <div>\r\n *    <h3>Page title</h3>\r\n *    <p>Page content</p>\r\n *  </div>\r\n * </vaadin-app-layout>\r\n * ```\r\n *\r\n * For best results, the component should be added to the root level of your application (i.e., as a direct child of `<body>`).\r\n *\r\n * The page should include a viewport meta tag which contains `viewport-fit=cover`, like the following:\r\n * ```\r\n * <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\r\n * ```\r\n * This causes the viewport to be scaled to fill the device display.\r\n * To ensure that important content is displayed, use the provided css variables.\r\n * ```\r\n * --safe-area-inset-top\r\n * --safe-area-inset-right\r\n * --safe-area-inset-bottom\r\n * --safe-area-inset-left\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following Shadow DOM parts of the `<vaadin-app-layout>` are available for styling:\r\n *\r\n * Part name     | Description\r\n * --------------|---------------------------------------------------------|\r\n * `navbar`      | Container for the navigation bar\r\n * `drawer`      | Container for the drawer area\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * ### Component's slots\r\n *\r\n * The following slots are available to be set\r\n *\r\n * Slot name          | Description\r\n * -------------------|---------------------------------------------------|\r\n * no name            | Default container for the page content\r\n * `navbar `          | Container for the top navbar area\r\n * `drawer`           | Container for an application menu\r\n * `touch-optimized`  | Container for the bottom navbar area (only visible for mobile devices)\r\n *\r\n * #### Touch optimized\r\n *\r\n * App Layout has a pseudo-slot `touch-optimized` in order to give more control of the presentation of\r\n * elements with `slot[navbar]`. Internally, when the user is interacting with App Layout from a\r\n * touchscreen device, the component will search for elements with `slot[navbar touch-optimized]` and move\r\n * them to the bottom of the page.\r\n *\r\n * ### Navigation\r\n *\r\n * As the drawer opens as an overlay in small devices, it makes sense to close it once a navigation happens.\r\n * If you are using Vaadin Router, this will happen automatically unless you change the `closeDrawerOn` event name.\r\n *\r\n * In order to do so, there are two options:\r\n * - If the `vaadin-app-layout` instance is available, then `drawerOpened` can be set to `false`\r\n * - If not, a custom event `close-overlay-drawer` can be dispatched either by calling\r\n *  `window.dispatchEvent(new CustomEvent('close-overlay-drawer'))` or by calling\r\n *  `AppLayout.dispatchCloseOverlayDrawerEvent()`\r\n *\r\n * ### Scrolling areas\r\n *\r\n * By default, the component will act with the \"body scrolling\", so on mobile (iOS Safari and Android Chrome),\r\n * the toolbars will collapse when a scroll happens.\r\n *\r\n * To use the \"content scrolling\", in case of the content of the page relies on a pre-defined height (for instance,\r\n * it has a `height:100%`), then the developer can set `height: 100%` to both `html` and `body`.\r\n * That will make the `[content]` element of app layout scrollable.\r\n * On this case, the toolbars on mobile device won't collapse.\r\n *\r\n * @fires {CustomEvent} drawer-opened-changed - Fired when the `drawerOpened` property changes.\r\n * @fires {CustomEvent} overlay-changed - Fired when the `overlay` property changes.\r\n * @fires {CustomEvent} primary-section-changed - Fired when the `primarySection` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes AppLayoutMixin\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes ControllerMixin\r\n */\r\nclass AppLayout extends AppLayoutMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <div part=\"navbar\" id=\"navbarTop\">\r\n        <slot name=\"navbar\" on-slotchange=\"_updateTouchOptimizedMode\"></slot>\r\n      </div>\r\n      <div part=\"backdrop\" on-click=\"_onBackdropClick\" on-touchend=\"_onBackdropTouchend\"></div>\r\n      <div part=\"drawer\" id=\"drawer\">\r\n        <slot name=\"drawer\" id=\"drawerSlot\" on-slotchange=\"_updateDrawerSize\"></slot>\r\n      </div>\r\n      <div content>\r\n        <slot></slot>\r\n      </div>\r\n      <div part=\"navbar\" id=\"navbarBottom\" bottom hidden>\r\n        <slot name=\"navbar-bottom\"></slot>\r\n      </div>\r\n      <div hidden>\r\n        <slot id=\"touchSlot\" name=\"navbar touch-optimized\" on-slotchange=\"_updateTouchOptimizedMode\"></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-app-layout';\r\n  }\r\n}\r\n\r\ndefineCustomElement(AppLayout);\r\n\r\nexport { AppLayout };\r\n"],
  "mappings": "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",
  "names": []
}
