{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/element-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { setCancelSyntheticClickEvents } from '@polymer/polymer/lib/utils/settings.js';\r\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\r\nimport { idlePeriod } from './async.js';\r\nimport { Debouncer, enqueueDebouncer } from './debounce.js';\r\nimport { DirMixin } from './dir-mixin.js';\r\n\r\n// This setting affects the legacy Polymer gestures which get activated\r\n// once you import any iron component e.g iron-icon.\r\n// It has to be explicitly disabled to prevent click issues in iOS + VoiceOver\r\n// for buttons that are based on `[role=button]` e.g vaadin-button.\r\nsetCancelSyntheticClickEvents(false);\r\n\r\nif (!window.Vaadin) {\r\n  window.Vaadin = {};\r\n}\r\n\r\n/**\r\n * Array of Vaadin custom element classes that have been finalized.\r\n */\r\nif (!window.Vaadin.registrations) {\r\n  window.Vaadin.registrations = [];\r\n}\r\n\r\nif (!window.Vaadin.developmentModeCallback) {\r\n  window.Vaadin.developmentModeCallback = {};\r\n}\r\n\r\nwindow.Vaadin.developmentModeCallback['vaadin-usage-statistics'] = function () {\r\n  usageStatistics();\r\n};\r\n\r\nlet statsJob;\r\n\r\nconst registered = new Set();\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes DirMixin\r\n */\r\nexport const ElementMixin = (superClass) =>\r\n  class VaadinElementMixin extends DirMixin(superClass) {\r\n    /** @protected */\r\n    static finalize() {\r\n      super.finalize();\r\n\r\n      const { is } = this;\r\n\r\n      // Registers a class prototype for telemetry purposes.\r\n      if (is && !registered.has(is)) {\r\n        window.Vaadin.registrations.push(this);\r\n        registered.add(is);\r\n\r\n        if (window.Vaadin.developmentModeCallback) {\r\n          statsJob = Debouncer.debounce(statsJob, idlePeriod, () => {\r\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\r\n          });\r\n          enqueueDebouncer(statsJob);\r\n        }\r\n      }\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      if (document.doctype === null) {\r\n        console.warn(\r\n          'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.',\r\n        );\r\n      }\r\n    }\r\n  };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;AAMA,SAAS,uBAAuB;AAShC,8BAA8B,KAAK;AAEnC,IAAI,CAAC,OAAO,QAAQ;AAClB,SAAO,SAAS,CAAC;AACnB;AAKA,IAAI,CAAC,OAAO,OAAO,eAAe;AAChC,SAAO,OAAO,gBAAgB,CAAC;AACjC;AAEA,IAAI,CAAC,OAAO,OAAO,yBAAyB;AAC1C,SAAO,OAAO,0BAA0B,CAAC;AAC3C;AAEA,OAAO,OAAO,wBAAwB,yBAAyB,IAAI,WAAY;AAC7E,kBAAgB;AAClB;AAEA,IAAI;AAEJ,IAAM,aAAa,oBAAI,IAAI;AAMpB,IAAM,eAAe,CAAC,eAC3B,MAAM,2BAA2B,SAAS,UAAU,EAAE;AAAA;AAAA,EAEpD,OAAO,WAAW;AAChB,UAAM,SAAS;AAEf,UAAM,EAAE,GAAG,IAAI;AAGf,QAAI,MAAM,CAAC,WAAW,IAAI,EAAE,GAAG;AAC7B,aAAO,OAAO,cAAc,KAAK,IAAI;AACrC,iBAAW,IAAI,EAAE;AAEjB,UAAI,OAAO,OAAO,yBAAyB;AACzC,mBAAW,UAAU,SAAS,UAAU,YAAY,MAAM;AACxD,iBAAO,OAAO,wBAAwB,yBAAyB,EAAE;AAAA,QACnE,CAAC;AACD,yBAAiB,QAAQ;AAAA,MAC3B;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,UAAM;AAEN,QAAI,SAAS,YAAY,MAAM;AAC7B,cAAQ;AAAA,QACN;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
