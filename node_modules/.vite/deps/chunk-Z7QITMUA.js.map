{
  "version": 3,
  "sources": ["../../@vaadin/list-box/node_modules/@vaadin/component-base/src/controller-mixin.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/define.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/element-mixin.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/async.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/debounce.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/dir-mixin.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/dom-utils.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/slot-observer.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/unique-id-utils.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/slot-controller.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/tooltip-controller.js", "../../@vaadin/list-box/node_modules/@vaadin/component-base/src/dir-utils.js", "../../@vaadin/list-box/node_modules/@vaadin/a11y-base/src/focus-utils.js", "../../@vaadin/list-box/node_modules/@vaadin/a11y-base/src/keyboard-mixin.js", "../../@vaadin/list-box/node_modules/@vaadin/a11y-base/src/keyboard-direction-mixin.js", "../../@vaadin/list-box/node_modules/@vaadin/a11y-base/src/list-mixin.js", "../../@vaadin/list-box/src/vaadin-multi-select-list-mixin.js", "../../@vaadin/list-box/src/vaadin-list-box.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\r\n\r\n/**\r\n * @typedef ReactiveController\r\n * @type {import('lit').ReactiveController}\r\n */\r\n\r\n/**\r\n * A mixin for connecting controllers to the element.\r\n *\r\n * @polymerMixin\r\n */\r\nexport const ControllerMixin = dedupingMixin((superClass) => {\r\n  // If the superclass extends from LitElement,\r\n  // use its own controllers implementation.\r\n  if (typeof superClass.prototype.addController === 'function') {\r\n    return superClass;\r\n  }\r\n\r\n  return class ControllerMixinClass extends superClass {\r\n    constructor() {\r\n      super();\r\n\r\n      /**\r\n       * @type {Set<ReactiveController>}\r\n       */\r\n      this.__controllers = new Set();\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      this.__controllers.forEach((c) => {\r\n        if (c.hostConnected) {\r\n          c.hostConnected();\r\n        }\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      this.__controllers.forEach((c) => {\r\n        if (c.hostDisconnected) {\r\n          c.hostDisconnected();\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Registers a controller to participate in the element update cycle.\r\n     *\r\n     * @param {ReactiveController} controller\r\n     * @protected\r\n     */\r\n    addController(controller) {\r\n      this.__controllers.add(controller);\r\n      // Call hostConnected if a controller is added after the element is attached.\r\n      if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\r\n        controller.hostConnected();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Removes a controller from the element.\r\n     *\r\n     * @param {ReactiveController} controller\r\n     * @protected\r\n     */\r\n    removeController(controller) {\r\n      this.__controllers.delete(controller);\r\n    }\r\n  };\r\n});\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\nwindow.Vaadin ||= {};\r\nwindow.Vaadin.featureFlags ||= {};\r\n\r\nfunction dashToCamelCase(dash) {\r\n  return dash.replace(/-[a-z]/gu, (m) => m[1].toUpperCase());\r\n}\r\n\r\nconst experimentalMap = {};\r\n\r\nexport function defineCustomElement(CustomElement, version = '24.7.5') {\r\n  Object.defineProperty(CustomElement, 'version', {\r\n    get() {\r\n      return version;\r\n    },\r\n  });\r\n\r\n  if (CustomElement.experimental) {\r\n    const featureFlagKey =\r\n      typeof CustomElement.experimental === 'string'\r\n        ? CustomElement.experimental\r\n        : `${dashToCamelCase(CustomElement.is.split('-').slice(1).join('-'))}Component`;\r\n\r\n    if (!window.Vaadin.featureFlags[featureFlagKey] && !experimentalMap[featureFlagKey]) {\r\n      // Add setter to define experimental component when it's set to true\r\n      experimentalMap[featureFlagKey] = new Set();\r\n      experimentalMap[featureFlagKey].add(CustomElement);\r\n\r\n      Object.defineProperty(window.Vaadin.featureFlags, featureFlagKey, {\r\n        get() {\r\n          return experimentalMap[featureFlagKey].size === 0;\r\n        },\r\n        set(value) {\r\n          if (!!value && experimentalMap[featureFlagKey].size > 0) {\r\n            experimentalMap[featureFlagKey].forEach((elementClass) => {\r\n              customElements.define(elementClass.is, elementClass);\r\n            });\r\n            experimentalMap[featureFlagKey].clear();\r\n          }\r\n        },\r\n      });\r\n\r\n      return;\r\n    } else if (experimentalMap[featureFlagKey]) {\r\n      // Allow to register multiple components with single flag\r\n      experimentalMap[featureFlagKey].add(CustomElement);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const defined = customElements.get(CustomElement.is);\r\n  if (!defined) {\r\n    customElements.define(CustomElement.is, CustomElement);\r\n  } else {\r\n    const definedVersion = defined.version;\r\n    if (definedVersion && CustomElement.version && definedVersion === CustomElement.version) {\r\n      // Just loading the same thing again\r\n      console.warn(`The component ${CustomElement.is} has been loaded twice`);\r\n    } else {\r\n      console.error(\r\n        `Tried to define ${CustomElement.is} version ${CustomElement.version} when version ${defined.version} is already in use. Something will probably break.`,\r\n      );\r\n    }\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { setCancelSyntheticClickEvents } from '@polymer/polymer/lib/utils/settings.js';\r\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\r\nimport { idlePeriod } from './async.js';\r\nimport { Debouncer, enqueueDebouncer } from './debounce.js';\r\nimport { DirMixin } from './dir-mixin.js';\r\n\r\n// This setting affects the legacy Polymer gestures which get activated\r\n// once you import any iron component e.g iron-icon.\r\n// It has to be explicitly disabled to prevent click issues in iOS + VoiceOver\r\n// for buttons that are based on `[role=button]` e.g vaadin-button.\r\nsetCancelSyntheticClickEvents(false);\r\n\r\nif (!window.Vaadin) {\r\n  window.Vaadin = {};\r\n}\r\n\r\n/**\r\n * Array of Vaadin custom element classes that have been finalized.\r\n */\r\nif (!window.Vaadin.registrations) {\r\n  window.Vaadin.registrations = [];\r\n}\r\n\r\nif (!window.Vaadin.developmentModeCallback) {\r\n  window.Vaadin.developmentModeCallback = {};\r\n}\r\n\r\nwindow.Vaadin.developmentModeCallback['vaadin-usage-statistics'] = function () {\r\n  usageStatistics();\r\n};\r\n\r\nlet statsJob;\r\n\r\nconst registered = new Set();\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes DirMixin\r\n */\r\nexport const ElementMixin = (superClass) =>\r\n  class VaadinElementMixin extends DirMixin(superClass) {\r\n    /** @protected */\r\n    static finalize() {\r\n      super.finalize();\r\n\r\n      const { is } = this;\r\n\r\n      // Registers a class prototype for telemetry purposes.\r\n      if (is && !registered.has(is)) {\r\n        window.Vaadin.registrations.push(this);\r\n        registered.add(is);\r\n\r\n        if (window.Vaadin.developmentModeCallback) {\r\n          statsJob = Debouncer.debounce(statsJob, idlePeriod, () => {\r\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\r\n          });\r\n          enqueueDebouncer(statsJob);\r\n        }\r\n      }\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      if (document.doctype === null) {\r\n        console.warn(\r\n          'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.',\r\n        );\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n/**\r\n * @fileoverview\r\n *\r\n * This module provides a number of strategies for enqueuing asynchronous\r\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\r\n * handle, and a `cancel(handle)` interface for canceling async tasks before\r\n * they run.\r\n *\r\n * @summary Module that provides a number of strategies for enqueuing\r\n * asynchronous tasks.\r\n */\r\n\r\nlet microtaskCurrHandle = 0;\r\nlet microtaskLastHandle = 0;\r\nconst microtaskCallbacks = [];\r\nlet microtaskScheduled = false;\r\n\r\nfunction microtaskFlush() {\r\n  microtaskScheduled = false;\r\n  const len = microtaskCallbacks.length;\r\n  for (let i = 0; i < len; i++) {\r\n    const cb = microtaskCallbacks[i];\r\n    if (cb) {\r\n      try {\r\n        cb();\r\n      } catch (e) {\r\n        setTimeout(() => {\r\n          throw e;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  microtaskCallbacks.splice(0, len);\r\n  microtaskLastHandle += len;\r\n}\r\n\r\n/**\r\n * Async interface wrapper around `setTimeout`.\r\n *\r\n * @namespace\r\n * @summary Async interface wrapper around `setTimeout`.\r\n */\r\nconst timeOut = {\r\n  /**\r\n   * Returns a sub-module with the async interface providing the provided\r\n   * delay.\r\n   *\r\n   * @memberof timeOut\r\n   * @param {number=} delay Time to wait before calling callbacks in ms\r\n   * @return {!AsyncInterface} An async timeout interface\r\n   */\r\n  after(delay) {\r\n    return {\r\n      run(fn) {\r\n        return window.setTimeout(fn, delay);\r\n      },\r\n      cancel(handle) {\r\n        window.clearTimeout(handle);\r\n      },\r\n    };\r\n  },\r\n  /**\r\n   * Enqueues a function called in the next task.\r\n   *\r\n   * @memberof timeOut\r\n   * @param {!Function} fn Callback to run\r\n   * @param {number=} delay Delay in milliseconds\r\n   * @return {number} Handle used for canceling task\r\n   */\r\n  run(fn, delay) {\r\n    return window.setTimeout(fn, delay);\r\n  },\r\n  /**\r\n   * Cancels a previously enqueued `timeOut` callback.\r\n   *\r\n   * @memberof timeOut\r\n   * @param {number} handle Handle returned from `run` of callback to cancel\r\n   * @return {void}\r\n   */\r\n  cancel(handle) {\r\n    window.clearTimeout(handle);\r\n  },\r\n};\r\nexport { timeOut };\r\n\r\n/**\r\n * Async interface wrapper around `requestAnimationFrame`.\r\n *\r\n * @namespace\r\n * @summary Async interface wrapper around `requestAnimationFrame`.\r\n */\r\nconst animationFrame = {\r\n  /**\r\n   * Enqueues a function called at `requestAnimationFrame` timing.\r\n   *\r\n   * @memberof animationFrame\r\n   * @param {function(number):void} fn Callback to run\r\n   * @return {number} Handle used for canceling task\r\n   */\r\n  run(fn) {\r\n    return window.requestAnimationFrame(fn);\r\n  },\r\n  /**\r\n   * Cancels a previously enqueued `animationFrame` callback.\r\n   *\r\n   * @memberof animationFrame\r\n   * @param {number} handle Handle returned from `run` of callback to cancel\r\n   * @return {void}\r\n   */\r\n  cancel(handle) {\r\n    window.cancelAnimationFrame(handle);\r\n  },\r\n};\r\nexport { animationFrame };\r\n\r\n/**\r\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\r\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\r\n *\r\n * @namespace\r\n * @summary Async interface wrapper around `requestIdleCallback`.\r\n */\r\nconst idlePeriod = {\r\n  /**\r\n   * Enqueues a function called at `requestIdleCallback` timing.\r\n   *\r\n   * @memberof idlePeriod\r\n   * @param {function(!IdleDeadline):void} fn Callback to run\r\n   * @return {number} Handle used for canceling task\r\n   */\r\n  run(fn) {\r\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\r\n  },\r\n  /**\r\n   * Cancels a previously enqueued `idlePeriod` callback.\r\n   *\r\n   * @memberof idlePeriod\r\n   * @param {number} handle Handle returned from `run` of callback to cancel\r\n   * @return {void}\r\n   */\r\n  cancel(handle) {\r\n    if (window.cancelIdleCallback) {\r\n      window.cancelIdleCallback(handle);\r\n    } else {\r\n      window.clearTimeout(handle);\r\n    }\r\n  },\r\n};\r\nexport { idlePeriod };\r\n\r\n/**\r\n * Async interface for enqueuing callbacks that run at microtask timing.\r\n *\r\n * @namespace\r\n * @summary Async interface for enqueuing callbacks that run at microtask\r\n *   timing.\r\n */\r\nconst microTask = {\r\n  /**\r\n   * Enqueues a function called at microtask timing.\r\n   *\r\n   * @memberof microTask\r\n   * @param {!Function=} callback Callback to run\r\n   * @return {number} Handle used for canceling task\r\n   */\r\n  run(callback) {\r\n    if (!microtaskScheduled) {\r\n      microtaskScheduled = true;\r\n      queueMicrotask(() => microtaskFlush());\r\n    }\r\n    microtaskCallbacks.push(callback);\r\n    const result = microtaskCurrHandle;\r\n    microtaskCurrHandle += 1;\r\n    return result;\r\n  },\r\n\r\n  /**\r\n   * Cancels a previously enqueued `microTask` callback.\r\n   *\r\n   * @memberof microTask\r\n   * @param {number} handle Handle returned from `run` of callback to cancel\r\n   * @return {void}\r\n   */\r\n  cancel(handle) {\r\n    const idx = handle - microtaskLastHandle;\r\n    if (idx >= 0) {\r\n      if (!microtaskCallbacks[idx]) {\r\n        throw new Error(`invalid async handle: ${handle}`);\r\n      }\r\n      microtaskCallbacks[idx] = null;\r\n    }\r\n  },\r\n};\r\nexport { microTask };\r\n", "/**\r\n@license\r\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\r\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\nCode distributed by Google as part of the polymer project is also\r\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n*/\r\n\r\nconst debouncerQueue = new Set();\r\n\r\n/**\r\n * @summary Collapse multiple callbacks into one invocation after a timer.\r\n */\r\nexport class Debouncer {\r\n  /**\r\n   * Creates a debouncer if no debouncer is passed as a parameter\r\n   * or it cancels an active debouncer otherwise. The following\r\n   * example shows how a debouncer can be called multiple times within a\r\n   * microtask and \"debounced\" such that the provided callback function is\r\n   * called once. Add this method to a custom element:\r\n   *\r\n   * ```js\r\n   * import {microTask} from '@vaadin/component-base/src/async.js';\r\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\r\n   * // ...\r\n   *\r\n   * _debounceWork() {\r\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\r\n   *       microTask, () => this._doWork());\r\n   * }\r\n   * ```\r\n   *\r\n   * If the `_debounceWork` method is called multiple times within the same\r\n   * microtask, the `_doWork` function will be called only once at the next\r\n   * microtask checkpoint.\r\n   *\r\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\r\n   * this with a debouncer, you can use `enqueueDebouncer` and\r\n   * `flush`. For example, extend the above example by adding\r\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\r\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\r\n   * the debouncer has completed.\r\n   *\r\n   * @param {Debouncer?} debouncer Debouncer object.\r\n   * @param {!AsyncInterface} asyncModule Object with Async interface\r\n   * @param {function()} callback Callback to run.\r\n   * @return {!Debouncer} Returns a debouncer object.\r\n   */\r\n  static debounce(debouncer, asyncModule, callback) {\r\n    if (debouncer instanceof Debouncer) {\r\n      // Cancel the async callback, but leave in debouncerQueue if it was\r\n      // enqueued, to maintain 1.x flush order\r\n      debouncer._cancelAsync();\r\n    } else {\r\n      debouncer = new Debouncer();\r\n    }\r\n    debouncer.setConfig(asyncModule, callback);\r\n    return debouncer;\r\n  }\r\n\r\n  constructor() {\r\n    this._asyncModule = null;\r\n    this._callback = null;\r\n    this._timer = null;\r\n  }\r\n\r\n  /**\r\n   * Sets the scheduler; that is, a module with the Async interface,\r\n   * a callback and optional arguments to be passed to the run function\r\n   * from the async module.\r\n   *\r\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\r\n   * @param {function()} callback Callback to run.\r\n   * @return {void}\r\n   */\r\n  setConfig(asyncModule, callback) {\r\n    this._asyncModule = asyncModule;\r\n    this._callback = callback;\r\n    this._timer = this._asyncModule.run(() => {\r\n      this._timer = null;\r\n      debouncerQueue.delete(this);\r\n      this._callback();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cancels an active debouncer and returns a reference to itself.\r\n   *\r\n   * @return {void}\r\n   */\r\n  cancel() {\r\n    if (this.isActive()) {\r\n      this._cancelAsync();\r\n      // Canceling a debouncer removes its spot from the flush queue,\r\n      // so if a debouncer is manually canceled and re-debounced, it\r\n      // will reset its flush order (this is a very minor difference from 1.x)\r\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\r\n      debouncerQueue.delete(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels a debouncer's async callback.\r\n   *\r\n   * @return {void}\r\n   */\r\n  _cancelAsync() {\r\n    if (this.isActive()) {\r\n      this._asyncModule.cancel(/** @type {number} */ (this._timer));\r\n      this._timer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Flushes an active debouncer and returns a reference to itself.\r\n   *\r\n   * @return {void}\r\n   */\r\n  flush() {\r\n    if (this.isActive()) {\r\n      this.cancel();\r\n      this._callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if the debouncer is active.\r\n   *\r\n   * @return {boolean} True if active.\r\n   */\r\n  isActive() {\r\n    return this._timer != null;\r\n  }\r\n}\r\n\r\n/**\r\n * Adds a `Debouncer` to a list of globally flushable tasks.\r\n *\r\n * @param {!Debouncer} debouncer Debouncer to enqueue\r\n * @return {void}\r\n */\r\nexport function enqueueDebouncer(debouncer) {\r\n  debouncerQueue.add(debouncer);\r\n}\r\n\r\n/**\r\n * Flushes any enqueued debouncers\r\n *\r\n * @return {boolean} Returns whether any debouncers were flushed\r\n */\r\nexport function flushDebouncers() {\r\n  const didFlush = Boolean(debouncerQueue.size);\r\n  // If new debouncers are added while flushing, Set.forEach will ensure\r\n  // newly added ones are also flushed\r\n  debouncerQueue.forEach((debouncer) => {\r\n    try {\r\n      debouncer.flush();\r\n    } catch (e) {\r\n      setTimeout(() => {\r\n        throw e;\r\n      });\r\n    }\r\n  });\r\n  return didFlush;\r\n}\r\n\r\nexport const flush = () => {\r\n  let debouncers;\r\n  do {\r\n    debouncers = flushDebouncers();\r\n  } while (debouncers);\r\n};\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\r\n */\r\nconst directionSubscribers = [];\r\n\r\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\r\n  if (documentDir) {\r\n    element.setAttribute('dir', documentDir);\r\n  } else if (elementDir != null) {\r\n    element.removeAttribute('dir');\r\n  }\r\n}\r\n\r\nfunction getDocumentDir() {\r\n  return document.documentElement.getAttribute('dir');\r\n}\r\n\r\nfunction directionUpdater() {\r\n  const documentDir = getDocumentDir();\r\n  directionSubscribers.forEach((element) => {\r\n    alignDirs(element, documentDir);\r\n  });\r\n}\r\n\r\nconst directionObserver = new MutationObserver(directionUpdater);\r\ndirectionObserver.observe(document.documentElement, { attributes: true, attributeFilter: ['dir'] });\r\n\r\n/**\r\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\r\n *\r\n * @polymerMixin\r\n */\r\nexport const DirMixin = (superClass) =>\r\n  class VaadinDirMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * @protected\r\n         */\r\n        dir: {\r\n          type: String,\r\n          value: '',\r\n          reflectToAttribute: true,\r\n          converter: {\r\n            fromAttribute: (attr) => {\r\n              return !attr ? '' : attr;\r\n            },\r\n            toAttribute: (prop) => {\r\n              return prop === '' ? null : prop;\r\n            },\r\n          },\r\n        },\r\n      };\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get __isRTL() {\r\n      return this.getAttribute('dir') === 'rtl';\r\n    }\r\n\r\n    /** @protected */\r\n    connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      if (!this.hasAttribute('dir') || this.__restoreSubscription) {\r\n        this.__subscribe();\r\n        alignDirs(this, getDocumentDir(), null);\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n      super.attributeChangedCallback(name, oldValue, newValue);\r\n      if (name !== 'dir') {\r\n        return;\r\n      }\r\n\r\n      const documentDir = getDocumentDir();\r\n\r\n      // New value equals to the document direction and the element is not subscribed to the changes\r\n      const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\r\n      // Value was emptied and the element is not subscribed to the changes\r\n      const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\r\n      // New value is different and the old equals to document direction and the element is not subscribed to the changes\r\n      const newDiffValue = newValue !== documentDir && oldValue === documentDir;\r\n\r\n      if (newValueEqlDocDir || newValueEmptied) {\r\n        this.__subscribe();\r\n        alignDirs(this, documentDir, newValue);\r\n      } else if (newDiffValue) {\r\n        this.__unsubscribe();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      this.__restoreSubscription = directionSubscribers.includes(this);\r\n      this.__unsubscribe();\r\n    }\r\n\r\n    /** @protected */\r\n    _valueToNodeAttribute(node, value, attribute) {\r\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\r\n      // If the property contains an empty string then it should not create an empty attribute\r\n      if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\r\n        return;\r\n      }\r\n      super._valueToNodeAttribute(node, value, attribute);\r\n    }\r\n\r\n    /** @protected */\r\n    _attributeToProperty(attribute, value, type) {\r\n      // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\r\n      // If the attribute is removed, then the dir property should contain an empty string instead of null\r\n      if (attribute === 'dir' && !value) {\r\n        this.dir = '';\r\n      } else {\r\n        super._attributeToProperty(attribute, value, type);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __subscribe() {\r\n      if (!directionSubscribers.includes(this)) {\r\n        directionSubscribers.push(this);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __unsubscribe() {\r\n      if (directionSubscribers.includes(this)) {\r\n        directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * Returns an array of ancestor root nodes for the given node.\r\n *\r\n * A root node is either a document node or a document fragment node (Shadow Root).\r\n * The array is collected by a bottom-up DOM traversing that starts with the given node\r\n * and involves both the light DOM and ancestor shadow DOM trees.\r\n *\r\n * @param {Node} node\r\n * @return {Node[]}\r\n */\r\nexport function getAncestorRootNodes(node) {\r\n  const result = [];\r\n\r\n  while (node) {\r\n    if (node.nodeType === Node.DOCUMENT_NODE) {\r\n      result.push(node);\r\n      break;\r\n    }\r\n\r\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n      result.push(node);\r\n      node = node.host;\r\n      continue;\r\n    }\r\n\r\n    if (node.assignedSlot) {\r\n      node = node.assignedSlot;\r\n      continue;\r\n    }\r\n\r\n    node = node.parentNode;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns the list of flattened elements for the given `node`.\r\n * This list consists of a node's children and, for any children that are\r\n * `<slot>` elements, the expanded flattened list of `assignedElements`.\r\n *\r\n * @param {Node} node\r\n * @return {Element[]}\r\n */\r\nexport function getFlattenedElements(node) {\r\n  const result = [];\r\n  let elements;\r\n  if (node.localName === 'slot') {\r\n    elements = node.assignedElements();\r\n  } else {\r\n    result.push(node);\r\n    elements = [...node.children];\r\n  }\r\n  elements.forEach((elem) => result.push(...getFlattenedElements(elem)));\r\n  return result;\r\n}\r\n\r\n/**\r\n * Traverses the given node and its parents, including those that are across\r\n * the shadow root boundaries, until it finds a node that matches the selector.\r\n *\r\n * @param {string} selector The CSS selector to match against\r\n * @param {Node} node The starting node for the traversal\r\n * @return {Node | null} The closest matching element, or null if no match is found\r\n */\r\nexport function getClosestElement(selector, node) {\r\n  if (!node) {\r\n    return null;\r\n  }\r\n\r\n  return node.closest(selector) || getClosestElement(selector, node.getRootNode().host);\r\n}\r\n\r\n/**\r\n * Takes a string with values separated by space and returns a set the values\r\n *\r\n * @param {string} value\r\n * @return {Set<string>}\r\n */\r\nexport function deserializeAttributeValue(value) {\r\n  if (!value) {\r\n    return new Set();\r\n  }\r\n\r\n  return new Set(value.split(' '));\r\n}\r\n\r\n/**\r\n * Takes a set of string values and returns a string with values separated by space\r\n *\r\n * @param {Set<string>} values\r\n * @return {string}\r\n */\r\nexport function serializeAttributeValue(values) {\r\n  return values ? [...values].join(' ') : '';\r\n}\r\n\r\n/**\r\n * Adds a value to an attribute containing space-delimited values.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} attr\r\n * @param {string} value\r\n */\r\nexport function addValueToAttribute(element, attr, value) {\r\n  const values = deserializeAttributeValue(element.getAttribute(attr));\r\n  values.add(value);\r\n  element.setAttribute(attr, serializeAttributeValue(values));\r\n}\r\n\r\n/**\r\n * Removes a value from an attribute containing space-delimited values.\r\n * If the value is the last one, the whole attribute is removed.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} attr\r\n * @param {string} value\r\n */\r\nexport function removeValueFromAttribute(element, attr, value) {\r\n  const values = deserializeAttributeValue(element.getAttribute(attr));\r\n  values.delete(value);\r\n  if (values.size === 0) {\r\n    element.removeAttribute(attr);\r\n    return;\r\n  }\r\n  element.setAttribute(attr, serializeAttributeValue(values));\r\n}\r\n\r\n/**\r\n * Returns true if the given node is an empty text node, false otherwise.\r\n *\r\n * @param {Node} node\r\n * @return {boolean}\r\n */\r\nexport function isEmptyTextNode(node) {\r\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2023 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * A helper for observing slot changes.\r\n */\r\nexport class SlotObserver {\r\n  constructor(slot, callback) {\r\n    /** @type HTMLSlotElement */\r\n    this.slot = slot;\r\n\r\n    /** @type Function */\r\n    this.callback = callback;\r\n\r\n    /** @type {Node[]} */\r\n    this._storedNodes = [];\r\n\r\n    this._connected = false;\r\n    this._scheduled = false;\r\n\r\n    this._boundSchedule = () => {\r\n      this._schedule();\r\n    };\r\n\r\n    this.connect();\r\n    this._schedule();\r\n  }\r\n\r\n  /**\r\n   * Activates an observer. This method is automatically called when\r\n   * a `SlotObserver` is created. It should only be called to  re-activate\r\n   * an observer that has been deactivated via the `disconnect` method.\r\n   */\r\n  connect() {\r\n    this.slot.addEventListener('slotchange', this._boundSchedule);\r\n    this._connected = true;\r\n  }\r\n\r\n  /**\r\n   * Deactivates the observer. After calling this method the observer callback\r\n   * will not be called when changes to slotted nodes occur. The `connect` method\r\n   * may be subsequently called to reactivate the observer.\r\n   */\r\n  disconnect() {\r\n    this.slot.removeEventListener('slotchange', this._boundSchedule);\r\n    this._connected = false;\r\n  }\r\n\r\n  /** @private */\r\n  _schedule() {\r\n    if (!this._scheduled) {\r\n      this._scheduled = true;\r\n\r\n      queueMicrotask(() => {\r\n        this.flush();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Run the observer callback synchronously.\r\n   */\r\n  flush() {\r\n    if (!this._connected) {\r\n      return;\r\n    }\r\n\r\n    this._scheduled = false;\r\n\r\n    this._processNodes();\r\n  }\r\n\r\n  /** @private */\r\n  _processNodes() {\r\n    const currentNodes = this.slot.assignedNodes({ flatten: true });\r\n\r\n    let addedNodes = [];\r\n    const removedNodes = [];\r\n    const movedNodes = [];\r\n\r\n    if (currentNodes.length) {\r\n      addedNodes = currentNodes.filter((node) => !this._storedNodes.includes(node));\r\n    }\r\n\r\n    if (this._storedNodes.length) {\r\n      this._storedNodes.forEach((node, index) => {\r\n        const idx = currentNodes.indexOf(node);\r\n        if (idx === -1) {\r\n          removedNodes.push(node);\r\n        } else if (idx !== index) {\r\n          movedNodes.push(node);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (addedNodes.length || removedNodes.length || movedNodes.length) {\r\n      this.callback({ addedNodes, currentNodes, movedNodes, removedNodes });\r\n    }\r\n\r\n    this._storedNodes = currentNodes;\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * Resets the unique id counter.\r\n *\r\n * @return {void}\r\n */\r\nexport function resetUniqueId() {\r\n  uniqueId = 0;\r\n}\r\n\r\n/**\r\n * Returns a unique integer id.\r\n *\r\n * @return {number}\r\n */\r\nexport function generateUniqueId() {\r\n  // eslint-disable-next-line no-plusplus\r\n  return uniqueId++;\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isEmptyTextNode } from './dom-utils.js';\r\nimport { SlotObserver } from './slot-observer.js';\r\nimport { generateUniqueId } from './unique-id-utils.js';\r\n\r\n/**\r\n * A controller for providing content to slot element and observing changes.\r\n */\r\nexport class SlotController extends EventTarget {\r\n  /**\r\n   * Ensure that every instance has unique ID.\r\n   *\r\n   * @param {HTMLElement} host\r\n   * @param {string} slotName\r\n   * @return {string}\r\n   * @protected\r\n   */\r\n  static generateId(host, prefix = 'default') {\r\n    return `${prefix}-${host.localName}-${generateUniqueId()}`;\r\n  }\r\n\r\n  constructor(host, slotName, tagName, config = {}) {\r\n    super();\r\n\r\n    const { initializer, multiple, observe, useUniqueId, uniqueIdPrefix } = config;\r\n\r\n    this.host = host;\r\n    this.slotName = slotName;\r\n    this.tagName = tagName;\r\n    this.observe = typeof observe === 'boolean' ? observe : true;\r\n    this.multiple = typeof multiple === 'boolean' ? multiple : false;\r\n    this.slotInitializer = initializer;\r\n\r\n    if (multiple) {\r\n      this.nodes = [];\r\n    }\r\n\r\n    // Only generate the default ID if requested by the controller.\r\n    if (useUniqueId) {\r\n      this.defaultId = this.constructor.generateId(host, uniqueIdPrefix || slotName);\r\n    }\r\n  }\r\n\r\n  hostConnected() {\r\n    if (!this.initialized) {\r\n      if (this.multiple) {\r\n        this.initMultiple();\r\n      } else {\r\n        this.initSingle();\r\n      }\r\n\r\n      if (this.observe) {\r\n        this.observeSlot();\r\n      }\r\n\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  /** @protected */\r\n  initSingle() {\r\n    let node = this.getSlotChild();\r\n\r\n    if (!node) {\r\n      node = this.attachDefaultNode();\r\n      this.initNode(node);\r\n    } else {\r\n      this.node = node;\r\n      this.initAddedNode(node);\r\n    }\r\n  }\r\n\r\n  /** @protected */\r\n  initMultiple() {\r\n    const children = this.getSlotChildren();\r\n\r\n    if (children.length === 0) {\r\n      const defaultNode = this.attachDefaultNode();\r\n      if (defaultNode) {\r\n        this.nodes = [defaultNode];\r\n        this.initNode(defaultNode);\r\n      }\r\n    } else {\r\n      this.nodes = children;\r\n      children.forEach((node) => {\r\n        this.initAddedNode(node);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create and attach default node using the provided tag name, if any.\r\n   * @return {Node | undefined}\r\n   * @protected\r\n   */\r\n  attachDefaultNode() {\r\n    const { host, slotName, tagName } = this;\r\n\r\n    // Check if the node was created previously and if so, reuse it.\r\n    let node = this.defaultNode;\r\n\r\n    // Tag name is optional, sometimes we don't init default content.\r\n    if (!node && tagName) {\r\n      node = document.createElement(tagName);\r\n      if (node instanceof Element) {\r\n        if (slotName !== '') {\r\n          node.setAttribute('slot', slotName);\r\n        }\r\n        this.defaultNode = node;\r\n      }\r\n    }\r\n\r\n    if (node) {\r\n      this.node = node;\r\n      host.appendChild(node);\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Return the list of nodes matching the slot managed by the controller.\r\n   * @return {Node}\r\n   */\r\n  getSlotChildren() {\r\n    const { slotName } = this;\r\n    return Array.from(this.host.childNodes).filter((node) => {\r\n      // Either an element (any slot) or a text node (only un-named slot).\r\n      return (\r\n        (node.nodeType === Node.ELEMENT_NODE && node.slot === slotName) ||\r\n        (node.nodeType === Node.TEXT_NODE && node.textContent.trim() && slotName === '')\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Return a reference to the node managed by the controller.\r\n   * @return {Node}\r\n   */\r\n  getSlotChild() {\r\n    return this.getSlotChildren()[0];\r\n  }\r\n\r\n  /**\r\n   * Run `slotInitializer` for the node managed by the controller.\r\n   *\r\n   * @param {Node} node\r\n   * @protected\r\n   */\r\n  initNode(node) {\r\n    const { slotInitializer } = this;\r\n    // Don't try to bind `this` to initializer (normally it's arrow function).\r\n    // Instead, pass the host as a first argument to access component's state.\r\n    if (slotInitializer) {\r\n      slotInitializer(node, this.host);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override to initialize the newly added custom node.\r\n   *\r\n   * @param {Node} _node\r\n   * @protected\r\n   */\r\n  initCustomNode(_node) {}\r\n\r\n  /**\r\n   * Override to teardown slotted node when it's removed.\r\n   *\r\n   * @param {Node} _node\r\n   * @protected\r\n   */\r\n  teardownNode(_node) {}\r\n\r\n  /**\r\n   * Run both `initCustomNode` and `initNode` for a custom slotted node.\r\n   *\r\n   * @param {Node} node\r\n   * @protected\r\n   */\r\n  initAddedNode(node) {\r\n    if (node !== this.defaultNode) {\r\n      this.initCustomNode(node);\r\n      this.initNode(node);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup the observer to manage slot content changes.\r\n   * @protected\r\n   */\r\n  observeSlot() {\r\n    const { slotName } = this;\r\n    const selector = slotName === '' ? 'slot:not([name])' : `slot[name=${slotName}]`;\r\n    const slot = this.host.shadowRoot.querySelector(selector);\r\n\r\n    this.__slotObserver = new SlotObserver(slot, ({ addedNodes, removedNodes }) => {\r\n      const current = this.multiple ? this.nodes : [this.node];\r\n\r\n      // Calling `slot.assignedNodes()` includes whitespace text nodes in case of default slot:\r\n      // unlike comment nodes, they are not filtered out. So we need to manually ignore them.\r\n      const newNodes = addedNodes.filter((node) => !isEmptyTextNode(node) && !current.includes(node));\r\n\r\n      if (removedNodes.length) {\r\n        this.nodes = current.filter((node) => !removedNodes.includes(node));\r\n\r\n        removedNodes.forEach((node) => {\r\n          this.teardownNode(node);\r\n        });\r\n      }\r\n\r\n      if (newNodes && newNodes.length > 0) {\r\n        if (this.multiple) {\r\n          // Remove default node if exists\r\n          if (this.defaultNode) {\r\n            this.defaultNode.remove();\r\n          }\r\n          this.nodes = [...current, ...newNodes].filter((node) => node !== this.defaultNode);\r\n          newNodes.forEach((node) => {\r\n            this.initAddedNode(node);\r\n          });\r\n        } else {\r\n          // Remove previous node if exists\r\n          if (this.node) {\r\n            this.node.remove();\r\n          }\r\n          this.node = newNodes[0];\r\n          this.initAddedNode(this.node);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { SlotController } from './slot-controller.js';\r\n\r\n/**\r\n * A controller that manages the slotted tooltip element.\r\n */\r\nexport class TooltipController extends SlotController {\r\n  constructor(host) {\r\n    // Do not provide slot factory to create tooltip lazily.\r\n    super(host, 'tooltip');\r\n\r\n    this.setTarget(host);\r\n  }\r\n\r\n  /**\r\n   * Override to initialize the newly added custom tooltip.\r\n   *\r\n   * @param {Node} tooltipNode\r\n   * @protected\r\n   * @override\r\n   */\r\n  initCustomNode(tooltipNode) {\r\n    tooltipNode.target = this.target;\r\n\r\n    if (this.ariaTarget !== undefined) {\r\n      tooltipNode.ariaTarget = this.ariaTarget;\r\n    }\r\n\r\n    if (this.context !== undefined) {\r\n      tooltipNode.context = this.context;\r\n    }\r\n\r\n    if (this.manual !== undefined) {\r\n      tooltipNode.manual = this.manual;\r\n    }\r\n\r\n    if (this.opened !== undefined) {\r\n      tooltipNode.opened = this.opened;\r\n    }\r\n\r\n    if (this.position !== undefined) {\r\n      tooltipNode._position = this.position;\r\n    }\r\n\r\n    if (this.shouldShow !== undefined) {\r\n      tooltipNode.shouldShow = this.shouldShow;\r\n    }\r\n\r\n    this.__notifyChange();\r\n  }\r\n\r\n  /**\r\n   * Override to notify the host when the tooltip is removed.\r\n   *\r\n   * @param {Node} tooltipNode\r\n   * @protected\r\n   * @override\r\n   */\r\n  teardownNode() {\r\n    this.__notifyChange();\r\n  }\r\n\r\n  /**\r\n   * Set an HTML element for linking with the tooltip overlay\r\n   * via `aria-describedby` attribute used by screen readers.\r\n   * @param {HTMLElement} ariaTarget\r\n   */\r\n  setAriaTarget(ariaTarget) {\r\n    this.ariaTarget = ariaTarget;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.ariaTarget = ariaTarget;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set a context object to be used by generator.\r\n   * @param {object} context\r\n   */\r\n  setContext(context) {\r\n    this.context = context;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.context = context;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle manual state on the slotted tooltip.\r\n   * @param {boolean} manual\r\n   */\r\n  setManual(manual) {\r\n    this.manual = manual;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.manual = manual;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle opened state on the slotted tooltip.\r\n   * @param {boolean} opened\r\n   */\r\n  setOpened(opened) {\r\n    this.opened = opened;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.opened = opened;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set default position for the slotted tooltip.\r\n   * This can be overridden by setting the position\r\n   * using corresponding property or attribute.\r\n   * @param {string} position\r\n   */\r\n  setPosition(position) {\r\n    this.position = position;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode._position = position;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set function used to detect whether to show\r\n   * the tooltip based on a condition.\r\n   * @param {Function} shouldShow\r\n   */\r\n  setShouldShow(shouldShow) {\r\n    this.shouldShow = shouldShow;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.shouldShow = shouldShow;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set an HTML element to attach the tooltip to.\r\n   * @param {HTMLElement} target\r\n   */\r\n  setTarget(target) {\r\n    this.target = target;\r\n\r\n    const tooltipNode = this.node;\r\n    if (tooltipNode) {\r\n      tooltipNode.target = target;\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __notifyChange() {\r\n    this.dispatchEvent(new CustomEvent('tooltip-changed', { detail: { node: this.node } }));\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * Get the scrollLeft value of the element relative to the direction\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} direction current direction of the element\r\n * @return {number} the scrollLeft value.\r\n */\r\nexport function getNormalizedScrollLeft(element, direction) {\r\n  const { scrollLeft } = element;\r\n  if (direction !== 'rtl') {\r\n    return scrollLeft;\r\n  }\r\n\r\n  return element.scrollWidth - element.clientWidth + scrollLeft;\r\n}\r\n\r\n/**\r\n * Set the scrollLeft value of the element relative to the direction\r\n *\r\n * @param {HTMLElement} element\r\n * @param {string} direction current direction of the element\r\n * @param {number} scrollLeft the scrollLeft value to be set\r\n */\r\nexport function setNormalizedScrollLeft(element, direction, scrollLeft) {\r\n  if (direction !== 'rtl') {\r\n    element.scrollLeft = scrollLeft;\r\n  } else {\r\n    element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n// We consider the keyboard to be active if the window has received a keydown\r\n// event since the last mousedown event.\r\nlet keyboardActive = false;\r\n\r\n// Listen for top-level keydown and mousedown events.\r\n// Use capture phase so we detect events even if they're handled.\r\nwindow.addEventListener(\r\n  'keydown',\r\n  () => {\r\n    keyboardActive = true;\r\n  },\r\n  { capture: true },\r\n);\r\n\r\nwindow.addEventListener(\r\n  'mousedown',\r\n  () => {\r\n    keyboardActive = false;\r\n  },\r\n  { capture: true },\r\n);\r\n\r\n/**\r\n * Returns the actually focused element by traversing shadow\r\n * trees recursively to ensure it's the leaf element.\r\n *\r\n * @return {Element}\r\n */\r\nexport function getDeepActiveElement() {\r\n  let host = document.activeElement || document.body;\r\n  while (host.shadowRoot && host.shadowRoot.activeElement) {\r\n    host = host.shadowRoot.activeElement;\r\n  }\r\n  return host;\r\n}\r\n\r\n/**\r\n * Returns true if the window has received a keydown\r\n * event since the last mousedown event.\r\n *\r\n * @return {boolean}\r\n */\r\nexport function isKeyboardActive() {\r\n  return keyboardActive;\r\n}\r\n\r\n/**\r\n * Returns true if the element is hidden directly with `display: none` or `visibility: hidden`,\r\n * false otherwise.\r\n *\r\n * The method doesn't traverse the element's ancestors, it only checks for the CSS properties\r\n * set directly to or inherited by the element.\r\n *\r\n * @param {HTMLElement} element\r\n * @return {boolean}\r\n */\r\nfunction isElementHiddenDirectly(element) {\r\n  // Check inline style first to save a re-flow.\r\n  const style = element.style;\r\n  if (style.visibility === 'hidden' || style.display === 'none') {\r\n    return true;\r\n  }\r\n\r\n  const computedStyle = window.getComputedStyle(element);\r\n  if (computedStyle.visibility === 'hidden' || computedStyle.display === 'none') {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns if element `a` has lower tab order compared to element `b`\r\n * (both elements are assumed to be focusable and tabbable).\r\n * Elements with tabindex = 0 have lower tab order compared to elements\r\n * with tabindex > 0.\r\n * If both have same tabindex, it returns false.\r\n *\r\n * @param {HTMLElement} a\r\n * @param {HTMLElement} b\r\n * @return {boolean}\r\n */\r\nfunction hasLowerTabOrder(a, b) {\r\n  // Normalize tabIndexes\r\n  // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\r\n  const ati = Math.max(a.tabIndex, 0);\r\n  const bti = Math.max(b.tabIndex, 0);\r\n  return ati === 0 || bti === 0 ? bti > ati : ati > bti;\r\n}\r\n\r\n/**\r\n * Merge sort iterator, merges the two arrays into one, sorted by tabindex.\r\n *\r\n * @param {HTMLElement[]} left\r\n * @param {HTMLElement[]} right\r\n * @return {HTMLElement[]}\r\n */\r\nfunction mergeSortByTabIndex(left, right) {\r\n  const result = [];\r\n  while (left.length > 0 && right.length > 0) {\r\n    if (hasLowerTabOrder(left[0], right[0])) {\r\n      result.push(right.shift());\r\n    } else {\r\n      result.push(left.shift());\r\n    }\r\n  }\r\n\r\n  return result.concat(left, right);\r\n}\r\n\r\n/**\r\n * Sorts an array of elements by tabindex. Returns a new array.\r\n *\r\n * @param {HTMLElement[]} elements\r\n * @return {HTMLElement[]}\r\n */\r\nfunction sortElementsByTabIndex(elements) {\r\n  // Implement a merge sort as Array.prototype.sort does a non-stable sort\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\r\n  const len = elements.length;\r\n  if (len < 2) {\r\n    return elements;\r\n  }\r\n  const pivot = Math.ceil(len / 2);\r\n  const left = sortElementsByTabIndex(elements.slice(0, pivot));\r\n  const right = sortElementsByTabIndex(elements.slice(pivot));\r\n\r\n  return mergeSortByTabIndex(left, right);\r\n}\r\n\r\n/**\r\n * Returns true if the element is hidden, false otherwise.\r\n *\r\n * An element is treated as hidden when any of the following conditions are met:\r\n * - the element itself or one of its ancestors has `display: none`.\r\n * - the element has or inherits `visibility: hidden`.\r\n *\r\n * @param {HTMLElement} element\r\n * @return {boolean}\r\n */\r\nexport function isElementHidden(element) {\r\n  if (element.checkVisibility) {\r\n    return !element.checkVisibility({ visibilityProperty: true });\r\n  }\r\n\r\n  // TODO: checkVisibility is supported only from Safari 17.4, so we still need to\r\n  // keep the custom implementation as a fallback for older versions until Vaadin 25:\r\n\r\n  // `offsetParent` is `null` when the element itself\r\n  // or one of its ancestors is hidden with `display: none`.\r\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\r\n  // However `offsetParent` is also null when the element is using fixed\r\n  // positioning, so additionally check if the element takes up layout space.\r\n  if (element.offsetParent === null && element.clientWidth === 0 && element.clientHeight === 0) {\r\n    return true;\r\n  }\r\n\r\n  return isElementHiddenDirectly(element);\r\n}\r\n\r\n/**\r\n * Returns true if the element is focusable, otherwise false.\r\n *\r\n * The list of focusable elements is taken from http://stackoverflow.com/a/1600194/4228703.\r\n * However, there isn't a definite list, it's up to the browser.\r\n * The only standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\r\n * according to which the only elements that have a `focus()` method are:\r\n * - HTMLInputElement\r\n * - HTMLSelectElement\r\n * - HTMLTextAreaElement\r\n * - HTMLAnchorElement\r\n *\r\n * This notably omits HTMLButtonElement and HTMLAreaElement.\r\n * Referring to these tests with tabbables in different browsers\r\n * http://allyjs.io/data-tables/focusable.html\r\n *\r\n * @param {HTMLElement} element\r\n * @return {boolean}\r\n */\r\nexport function isElementFocusable(element) {\r\n  // The element cannot be focused if its `tabindex` attribute is set to `-1`.\r\n  if (element.matches('[tabindex=\"-1\"]')) {\r\n    return false;\r\n  }\r\n\r\n  // Elements that cannot be focused if they have a `disabled` attribute.\r\n  if (element.matches('input, select, textarea, button, object')) {\r\n    return element.matches(':not([disabled])');\r\n  }\r\n\r\n  // Elements that can be focused even if they have a `disabled` attribute.\r\n  return element.matches('a[href], area[href], iframe, [tabindex], [contentEditable]');\r\n}\r\n\r\n/**\r\n * Returns true if the element is focused, false otherwise.\r\n *\r\n * @param {HTMLElement} element\r\n * @return {boolean}\r\n */\r\nexport function isElementFocused(element) {\r\n  return element.getRootNode().activeElement === element;\r\n}\r\n\r\n/**\r\n * Returns the normalized element tabindex. If not focusable, returns -1.\r\n * It checks for the attribute \"tabindex\" instead of the element property\r\n * `tabIndex` since browsers assign different values to it.\r\n * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\r\n *\r\n * @param {HTMLElement} element\r\n * @return {number}\r\n */\r\nfunction normalizeTabIndex(element) {\r\n  if (!isElementFocusable(element)) {\r\n    return -1;\r\n  }\r\n\r\n  const tabIndex = element.getAttribute('tabindex') || 0;\r\n  return Number(tabIndex);\r\n}\r\n\r\n/**\r\n * Searches for nodes that are tabbable and adds them to the `result` array.\r\n * Returns if the `result` array needs to be sorted by tabindex.\r\n *\r\n * @param {Node} node The starting point for the search; added to `result` if tabbable.\r\n * @param {HTMLElement[]} result\r\n * @return {boolean}\r\n * @private\r\n */\r\nfunction collectFocusableNodes(node, result) {\r\n  if (node.nodeType !== Node.ELEMENT_NODE || isElementHiddenDirectly(node)) {\r\n    // Don't traverse children if the node is not an HTML element or not visible.\r\n    return false;\r\n  }\r\n\r\n  const element = /** @type {HTMLElement} */ (node);\r\n  const tabIndex = normalizeTabIndex(element);\r\n  let needsSort = tabIndex > 0;\r\n  if (tabIndex >= 0) {\r\n    result.push(element);\r\n  }\r\n\r\n  let children = [];\r\n  if (element.localName === 'slot') {\r\n    children = element.assignedNodes({ flatten: true });\r\n  } else {\r\n    // Use shadow root if possible, will check for distributed nodes.\r\n    children = (element.shadowRoot || element).children;\r\n  }\r\n  [...children].forEach((child) => {\r\n    // Ensure method is always invoked to collect focusable children.\r\n    needsSort = collectFocusableNodes(child, result) || needsSort;\r\n  });\r\n  return needsSort;\r\n}\r\n\r\n/**\r\n * Returns a tab-ordered array of focusable elements for a root element.\r\n * The resulting array will include the root element if it is focusable.\r\n *\r\n * The method traverses nodes in shadow DOM trees too if any.\r\n *\r\n * @param {HTMLElement} element\r\n * @return {HTMLElement[]}\r\n */\r\nexport function getFocusableElements(element) {\r\n  const focusableElements = [];\r\n  const needsSortByTabIndex = collectFocusableNodes(element, focusableElements);\r\n  // If there is at least one element with tabindex > 0,\r\n  // we need to sort the final array by tabindex.\r\n  if (needsSortByTabIndex) {\r\n    return sortElementsByTabIndex(focusableElements);\r\n  }\r\n  return focusableElements;\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\r\n\r\n/**\r\n * A mixin that manages keyboard handling.\r\n * The mixin subscribes to the keyboard events while an actual implementation\r\n * for the event handlers is left to the client (a component or another mixin).\r\n *\r\n * @polymerMixin\r\n */\r\nexport const KeyboardMixin = dedupingMixin(\r\n  (superclass) =>\r\n    class KeyboardMixinClass extends superclass {\r\n      /** @protected */\r\n      ready() {\r\n        super.ready();\r\n\r\n        this.addEventListener('keydown', (event) => {\r\n          this._onKeyDown(event);\r\n        });\r\n\r\n        this.addEventListener('keyup', (event) => {\r\n          this._onKeyUp(event);\r\n        });\r\n      }\r\n\r\n      /**\r\n       * A handler for the `keydown` event. By default, it calls\r\n       * separate methods for handling \"Enter\" and \"Escape\" keys.\r\n       * Override the method to implement your own behavior.\r\n       *\r\n       * @param {KeyboardEvent} event\r\n       * @protected\r\n       */\r\n      _onKeyDown(event) {\r\n        switch (event.key) {\r\n          case 'Enter':\r\n            this._onEnter(event);\r\n            break;\r\n          case 'Escape':\r\n            this._onEscape(event);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n\r\n      /**\r\n       * A handler for the `keyup` event. By default, it does nothing.\r\n       * Override the method to implement your own behavior.\r\n       *\r\n       * @param {KeyboardEvent} _event\r\n       * @protected\r\n       */\r\n      _onKeyUp(_event) {\r\n        // To be implemented.\r\n      }\r\n\r\n      /**\r\n       * A handler for the \"Enter\" key. By default, it does nothing.\r\n       * Override the method to implement your own behavior.\r\n       *\r\n       * @param {KeyboardEvent} _event\r\n       * @protected\r\n       */\r\n      _onEnter(_event) {\r\n        // To be implemented.\r\n      }\r\n\r\n      /**\r\n       * A handler for the \"Escape\" key. By default, it does nothing.\r\n       * Override the method to implement your own behavior.\r\n       *\r\n       * @param {KeyboardEvent} _event\r\n       * @protected\r\n       */\r\n      _onEscape(_event) {\r\n        // To be implemented.\r\n      }\r\n    },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isElementFocused, isElementHidden } from './focus-utils.js';\r\nimport { KeyboardMixin } from './keyboard-mixin.js';\r\n\r\n/**\r\n * A mixin for navigating items with keyboard.\r\n *\r\n * @polymerMixin\r\n * @mixes KeyboardMixin\r\n */\r\nexport const KeyboardDirectionMixin = (superclass) =>\r\n  class KeyboardDirectionMixinClass extends KeyboardMixin(superclass) {\r\n    /**\r\n     * @return {Element | null}\r\n     * @protected\r\n     */\r\n    get focused() {\r\n      return (this._getItems() || []).find(isElementFocused);\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _vertical() {\r\n      return true;\r\n    }\r\n\r\n    /** @protected */\r\n    focus() {\r\n      const items = this._getItems();\r\n      if (Array.isArray(items)) {\r\n        const idx = this._getAvailableIndex(items, 0, null, (item) => !isElementHidden(item));\r\n        if (idx >= 0) {\r\n          this._focus(idx);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the list of items participating in keyboard navigation.\r\n     * By default, it treats all the light DOM children as items.\r\n     * Override this method to provide custom list of elements.\r\n     *\r\n     * @return {Element[]}\r\n     * @protected\r\n     */\r\n    _getItems() {\r\n      return Array.from(this.children);\r\n    }\r\n\r\n    /**\r\n     * Override an event listener from `KeyboardMixin`.\r\n     *\r\n     * @param {!KeyboardEvent} event\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onKeyDown(event) {\r\n      super._onKeyDown(event);\r\n\r\n      if (event.metaKey || event.ctrlKey) {\r\n        return;\r\n      }\r\n\r\n      const { key } = event;\r\n      const items = this._getItems() || [];\r\n      const currentIdx = items.indexOf(this.focused);\r\n\r\n      let idx;\r\n      let increment;\r\n\r\n      const isRTL = !this._vertical && this.getAttribute('dir') === 'rtl';\r\n      const dirIncrement = isRTL ? -1 : 1;\r\n\r\n      if (this.__isPrevKey(key)) {\r\n        increment = -dirIncrement;\r\n        idx = currentIdx - dirIncrement;\r\n      } else if (this.__isNextKey(key)) {\r\n        increment = dirIncrement;\r\n        idx = currentIdx + dirIncrement;\r\n      } else if (key === 'Home') {\r\n        increment = 1;\r\n        idx = 0;\r\n      } else if (key === 'End') {\r\n        increment = -1;\r\n        idx = items.length - 1;\r\n      }\r\n\r\n      idx = this._getAvailableIndex(items, idx, increment, (item) => !isElementHidden(item));\r\n\r\n      if (idx >= 0) {\r\n        event.preventDefault();\r\n        this._focus(idx, true);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    __isPrevKey(key) {\r\n      return this._vertical ? key === 'ArrowUp' : key === 'ArrowLeft';\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    __isNextKey(key) {\r\n      return this._vertical ? key === 'ArrowDown' : key === 'ArrowRight';\r\n    }\r\n\r\n    /**\r\n     * Focus the item at given index. Override this method to add custom logic.\r\n     *\r\n     * @param {number} index\r\n     * @param {boolean} navigating\r\n     * @protected\r\n     */\r\n    _focus(index, navigating = false) {\r\n      const items = this._getItems();\r\n\r\n      this._focusItem(items[index], navigating);\r\n    }\r\n\r\n    /**\r\n     * Focus the given item. Override this method to add custom logic.\r\n     *\r\n     * @param {Element} item\r\n     * @param {boolean} navigating\r\n     * @protected\r\n     */\r\n    _focusItem(item) {\r\n      if (item) {\r\n        item.focus();\r\n\r\n        // Generally, the items are expected to implement `FocusMixin`\r\n        // that would set this attribute based on the `keydown` event.\r\n        // We set it manually to handle programmatic focus() calls.\r\n        item.setAttribute('focus-ring', '');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns index of the next item that satisfies the given condition,\r\n     * based on the index of the current item and a numeric increment.\r\n     *\r\n     * @param {Element[]} items - array of items to iterate over\r\n     * @param {number} index - index of the current item\r\n     * @param {number} increment - numeric increment, can be either 1 or -1\r\n     * @param {Function} condition - function used to check the item\r\n     * @return {number}\r\n     * @protected\r\n     */\r\n    _getAvailableIndex(items, index, increment, condition) {\r\n      const totalItems = items.length;\r\n      let idx = index;\r\n      for (let i = 0; typeof idx === 'number' && i < totalItems; i += 1, idx += increment || 1) {\r\n        if (idx < 0) {\r\n          idx = totalItems - 1;\r\n        } else if (idx >= totalItems) {\r\n          idx = 0;\r\n        }\r\n\r\n        const item = items[idx];\r\n\r\n        if (this._isItemFocusable(item) && this.__isMatchingItem(item, condition)) {\r\n          return idx;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the item matches condition.\r\n     *\r\n     * @param {Element} item - item to check\r\n     * @param {Function} condition - function used to check the item\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    __isMatchingItem(item, condition) {\r\n      return typeof condition === 'function' ? condition(item) : true;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the item is focusable. By default,\r\n     * returns true if the item is not disabled.\r\n     *\r\n     * @param {Element} item\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    _isItemFocusable(item) {\r\n      return !item.hasAttribute('disabled');\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { timeOut } from '@vaadin/component-base/src/async.js';\r\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\r\nimport { getNormalizedScrollLeft, setNormalizedScrollLeft } from '@vaadin/component-base/src/dir-utils.js';\r\nimport { getFlattenedElements } from '@vaadin/component-base/src/dom-utils.js';\r\nimport { SlotObserver } from '@vaadin/component-base/src/slot-observer.js';\r\nimport { isElementHidden } from './focus-utils.js';\r\nimport { KeyboardDirectionMixin } from './keyboard-direction-mixin.js';\r\n\r\n/**\r\n * A mixin for list elements, facilitating navigation and selection of items.\r\n *\r\n * @polymerMixin\r\n * @mixes KeyboardDirectionMixin\r\n */\r\nexport const ListMixin = (superClass) =>\r\n  class ListMixinClass extends KeyboardDirectionMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * If true, the user cannot interact with this element.\r\n         * When the element is disabled, the selected item is\r\n         * not updated when `selected` property is changed.\r\n         */\r\n        disabled: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n        },\r\n\r\n        /**\r\n         * The index of the item selected in the items array.\r\n         * Note: Not updated when used in `multiple` selection mode.\r\n         */\r\n        selected: {\r\n          type: Number,\r\n          reflectToAttribute: true,\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Define how items are disposed in the dom.\r\n         * Possible values are: `horizontal|vertical`.\r\n         * It also changes navigation keys from left/right to up/down.\r\n         * @type {!ListOrientation}\r\n         */\r\n        orientation: {\r\n          type: String,\r\n          reflectToAttribute: true,\r\n          value: '',\r\n        },\r\n\r\n        /**\r\n         * The list of items from which a selection can be made.\r\n         * It is populated from the elements passed to the light DOM,\r\n         * and updated dynamically when adding or removing items.\r\n         *\r\n         * The item elements must implement `Vaadin.ItemMixin`.\r\n         *\r\n         * Note: unlike `<vaadin-combo-box>`, this property is read-only,\r\n         * so if you want to provide items by iterating array of data,\r\n         * you have to use `dom-repeat` and place it to the light DOM.\r\n         * @type {!Array<!Element> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          readOnly: true,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * The search buffer for the keyboard selection feature.\r\n         * @private\r\n         */\r\n        _searchBuf: {\r\n          type: String,\r\n          value: '',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_enhanceItems(items, orientation, selected, disabled)'];\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _isRTL() {\r\n      return !this._vertical && this.getAttribute('dir') === 'rtl';\r\n    }\r\n\r\n    /**\r\n     * @return {!HTMLElement}\r\n     * @protected\r\n     */\r\n    get _scrollerElement() {\r\n      // Returning scroller element of the component\r\n      console.warn(`Please implement the '_scrollerElement' property in <${this.localName}>`);\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _vertical() {\r\n      return this.orientation !== 'horizontal';\r\n    }\r\n\r\n    focus() {\r\n      // In initialization (e.g vaadin-select) observer might not been run yet.\r\n      if (this._observer) {\r\n        this._observer.flush();\r\n      }\r\n\r\n      const items = Array.isArray(this.items) ? this.items : [];\r\n      const idx = this._getAvailableIndex(items, 0, null, (item) => item.tabIndex === 0 && !isElementHidden(item));\r\n      if (idx >= 0) {\r\n        this._focus(idx);\r\n      } else {\r\n        // Call `KeyboardDirectionMixin` logic to focus first non-disabled item.\r\n        super.focus();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.addEventListener('click', (e) => this._onClick(e));\r\n\r\n      const slot = this.shadowRoot.querySelector('slot:not([name])');\r\n      this._observer = new SlotObserver(slot, () => {\r\n        this._setItems(this._filterItems(getFlattenedElements(this)));\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Override method inherited from `KeyboardDirectionMixin`\r\n     * to use the stored list of item elements.\r\n     *\r\n     * @return {Element[]}\r\n     * @protected\r\n     * @override\r\n     */\r\n    _getItems() {\r\n      return this.items;\r\n    }\r\n\r\n    /** @private */\r\n    _enhanceItems(items, orientation, selected, disabled) {\r\n      if (!disabled) {\r\n        if (items) {\r\n          this.setAttribute('aria-orientation', orientation || 'vertical');\r\n          items.forEach((item) => {\r\n            if (orientation) {\r\n              item.setAttribute('orientation', orientation);\r\n            } else {\r\n              item.removeAttribute('orientation');\r\n            }\r\n          });\r\n\r\n          // When selected is set to -1, focus the first available item.\r\n          this._setFocusable(selected < 0 || !selected ? 0 : selected);\r\n\r\n          const itemToSelect = items[selected];\r\n          items.forEach((item) => {\r\n            item.selected = item === itemToSelect;\r\n          });\r\n          if (itemToSelect && !itemToSelect.disabled) {\r\n            this._scrollToItem(selected);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!Array<!Element>} array\r\n     * @return {!Array<!Element>}\r\n     * @protected\r\n     */\r\n    _filterItems(array) {\r\n      return array.filter((e) => e._hasVaadinItemMixin);\r\n    }\r\n\r\n    /**\r\n     * @param {!MouseEvent} event\r\n     * @protected\r\n     */\r\n    _onClick(event) {\r\n      if (event.metaKey || event.shiftKey || event.ctrlKey || event.defaultPrevented) {\r\n        return;\r\n      }\r\n\r\n      const item = this._filterItems(event.composedPath())[0];\r\n      let idx;\r\n      if (item && !item.disabled && (idx = this.items.indexOf(item)) >= 0) {\r\n        this.selected = idx;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {number} currentIdx\r\n     * @param {string} key\r\n     * @return {number}\r\n     * @protected\r\n     */\r\n    _searchKey(currentIdx, key) {\r\n      this._searchReset = Debouncer.debounce(this._searchReset, timeOut.after(500), () => {\r\n        this._searchBuf = '';\r\n      });\r\n      this._searchBuf += key.toLowerCase();\r\n\r\n      if (!this.items.some((item) => this.__isMatchingKey(item))) {\r\n        this._searchBuf = key.toLowerCase();\r\n      }\r\n\r\n      const idx = this._searchBuf.length === 1 ? currentIdx + 1 : currentIdx;\r\n      return this._getAvailableIndex(\r\n        this.items,\r\n        idx,\r\n        1,\r\n        (item) => this.__isMatchingKey(item) && getComputedStyle(item).display !== 'none',\r\n      );\r\n    }\r\n\r\n    /** @private */\r\n    __isMatchingKey(item) {\r\n      return item.textContent\r\n        .replace(/[^\\p{L}\\p{Nd}]/gu, '')\r\n        .toLowerCase()\r\n        .startsWith(this._searchBuf);\r\n    }\r\n\r\n    /**\r\n     * Override an event listener from `KeyboardMixin`\r\n     * to search items by key.\r\n     *\r\n     * @param {!KeyboardEvent} event\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onKeyDown(event) {\r\n      if (event.metaKey || event.ctrlKey) {\r\n        return;\r\n      }\r\n\r\n      const key = event.key;\r\n\r\n      const currentIdx = this.items.indexOf(this.focused);\r\n      if (/[\\p{L}\\p{Nd}]/u.test(key) && key.length === 1) {\r\n        const idx = this._searchKey(currentIdx, key);\r\n        if (idx >= 0) {\r\n          this._focus(idx);\r\n        }\r\n        return;\r\n      }\r\n\r\n      super._onKeyDown(event);\r\n    }\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _setFocusable(idx) {\r\n      idx = this._getAvailableIndex(this.items, idx, 1);\r\n      const item = this.items[idx];\r\n      this.items.forEach((e) => {\r\n        e.tabIndex = e === item ? 0 : -1;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _focus(idx) {\r\n      this.items.forEach((e, index) => {\r\n        e.focused = index === idx;\r\n      });\r\n      this._setFocusable(idx);\r\n      this._scrollToItem(idx);\r\n      super._focus(idx);\r\n    }\r\n\r\n    /**\r\n     * Scroll the container to have the next item by the edge of the viewport.\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _scrollToItem(idx) {\r\n      const item = this.items[idx];\r\n      if (!item) {\r\n        return;\r\n      }\r\n\r\n      const props = this._vertical ? ['top', 'bottom'] : this._isRTL ? ['right', 'left'] : ['left', 'right'];\r\n\r\n      const scrollerRect = this._scrollerElement.getBoundingClientRect();\r\n      const nextItemRect = (this.items[idx + 1] || item).getBoundingClientRect();\r\n      const prevItemRect = (this.items[idx - 1] || item).getBoundingClientRect();\r\n\r\n      let scrollDistance = 0;\r\n      if (\r\n        (!this._isRTL && nextItemRect[props[1]] >= scrollerRect[props[1]]) ||\r\n        (this._isRTL && nextItemRect[props[1]] <= scrollerRect[props[1]])\r\n      ) {\r\n        scrollDistance = nextItemRect[props[1]] - scrollerRect[props[1]];\r\n      } else if (\r\n        (!this._isRTL && prevItemRect[props[0]] <= scrollerRect[props[0]]) ||\r\n        (this._isRTL && prevItemRect[props[0]] >= scrollerRect[props[0]])\r\n      ) {\r\n        scrollDistance = prevItemRect[props[0]] - scrollerRect[props[0]];\r\n      }\r\n\r\n      this._scroll(scrollDistance);\r\n    }\r\n\r\n    /**\r\n     * @param {number} pixels\r\n     * @protected\r\n     */\r\n    _scroll(pixels) {\r\n      if (this._vertical) {\r\n        this._scrollerElement.scrollTop += pixels;\r\n      } else {\r\n        const dir = this.getAttribute('dir') || 'ltr';\r\n        const scrollLeft = getNormalizedScrollLeft(this._scrollerElement, dir) + pixels;\r\n        setNormalizedScrollLeft(this._scrollerElement, dir, scrollLeft);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fired when the selection is changed.\r\n     * Not fired when used in `multiple` selection mode.\r\n     *\r\n     * @event selected-changed\r\n     * @param {Object} detail\r\n     * @param {Object} detail.value the index of the item selected in the items array.\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { ListMixin } from '@vaadin/a11y-base/src/list-mixin.js';\r\n\r\n/**\r\n * A mixin for `nav` elements, facilitating multiple selection of childNodes.\r\n *\r\n * @polymerMixin\r\n * @mixes ListMixin\r\n */\r\nexport const MultiSelectListMixin = (superClass) =>\r\n  class VaadinMultiSelectListMixin extends ListMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Specifies that multiple options can be selected at once.\r\n         */\r\n        multiple: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          observer: '_multipleChanged',\r\n        },\r\n\r\n        /**\r\n         * Array of indexes of the items selected in the items array\r\n         * Note: Not updated when used in single selection mode.\r\n         * @type {number[] | null | undefined}\r\n         */\r\n        selectedValues: {\r\n          type: Array,\r\n          notify: true,\r\n          value: () => [],\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_enhanceMultipleItems(items, multiple, selected, disabled, selectedValues)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      // Should be attached before click listener in list-mixin\r\n      this.addEventListener('click', (e) => this._onMultipleClick(e));\r\n\r\n      super.ready();\r\n    }\r\n\r\n    /** @private */\r\n    _enhanceMultipleItems(items, multiple, _selected, _disabled, selectedValues) {\r\n      if (!items || !multiple) {\r\n        return;\r\n      }\r\n\r\n      if (selectedValues) {\r\n        const selectedItems = selectedValues.map((selectedId) => items[selectedId]);\r\n        items.forEach((item) => {\r\n          item.selected = selectedItems.includes(item);\r\n        });\r\n      }\r\n\r\n      this._scrollToLastSelectedItem();\r\n    }\r\n\r\n    /** @private */\r\n    _scrollToLastSelectedItem() {\r\n      const lastSelectedItem = this.selectedValues.slice(-1)[0];\r\n      if (lastSelectedItem && !lastSelectedItem.disabled) {\r\n        this._scrollToItem(lastSelectedItem);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {!MouseEvent} event\r\n     * @protected\r\n     */\r\n    _onMultipleClick(event) {\r\n      const item = this._filterItems(event.composedPath())[0];\r\n      const idx = item && !item.disabled ? this.items.indexOf(item) : -1;\r\n      if (idx < 0 || !this.multiple) {\r\n        return;\r\n      }\r\n\r\n      event.preventDefault();\r\n      if (this.selectedValues.includes(idx)) {\r\n        this.selectedValues = this.selectedValues.filter((v) => v !== idx);\r\n      } else {\r\n        this.selectedValues = this.selectedValues.concat(idx);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _multipleChanged(value, oldValue) {\r\n      // Changing from multiple to single selection, clear selection.\r\n      if (!value && oldValue) {\r\n        this.selectedValues = [];\r\n        this.items.forEach((item) => {\r\n          item.selected = false;\r\n        });\r\n\r\n        this.removeAttribute('aria-multiselectable');\r\n      }\r\n\r\n      // Changing from single to multiple selection, add selected to selectedValues.\r\n      if (value && !oldValue) {\r\n        this.setAttribute('aria-multiselectable', 'true');\r\n\r\n        if (this.selected !== undefined) {\r\n          this.selectedValues = [...this.selectedValues, this.selected];\r\n          this.selected = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fired when the selection is changed.\r\n     * Not fired in single selection mode.\r\n     *\r\n     * @event selected-values-changed\r\n     * @param {Object} detail\r\n     * @param {Object} detail.value the array of indexes of the items selected in the items array.\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { MultiSelectListMixin } from './vaadin-multi-select-list-mixin.js';\r\n\r\n/**\r\n * `<vaadin-list-box>` is a Web Component for creating menus.\r\n *\r\n * ```\r\n *   <vaadin-list-box selected=\"2\">\r\n *     <vaadin-item>Item 1</vaadin-item>\r\n *     <vaadin-item>Item 2</vaadin-item>\r\n *     <vaadin-item>Item 3</vaadin-item>\r\n *     <vaadin-item>Item 4</vaadin-item>\r\n *   </vaadin-list-box>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name         | Description\r\n * ------------------|------------------------\r\n * `items`           | The items container\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\r\n * @fires {CustomEvent} selected-changed - Fired when the `selected` property changes.\r\n * @fires {CustomEvent} selected-values-changed - Fired when the `selectedValues` property changes.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes MultiSelectListMixin\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n * @mixes ControllerMixin\r\n */\r\nclass ListBox extends ElementMixin(MultiSelectListMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: flex;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n\r\n        [part='items'] {\r\n          height: 100%;\r\n          width: 100%;\r\n          overflow-y: auto;\r\n          -webkit-overflow-scrolling: touch;\r\n        }\r\n      </style>\r\n      <div part=\"items\">\r\n        <slot></slot>\r\n      </div>\r\n\r\n      <slot name=\"tooltip\"></slot>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-list-box';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      // We don't need to define this property since super default is vertical,\r\n      // but we don't want it to be modified, or be shown in the API docs.\r\n      /** @private */\r\n      orientation: {\r\n        readOnly: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @type {Element | null}\r\n     * @protected\r\n     */\r\n    this.focused;\r\n  }\r\n\r\n  /**\r\n   * @return {!HTMLElement}\r\n   * @protected\r\n   * @override\r\n   */\r\n  get _scrollerElement() {\r\n    return this.shadowRoot.querySelector('[part=\"items\"]');\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    this.setAttribute('role', 'listbox');\r\n\r\n    setTimeout(this._checkImport.bind(this), 2000);\r\n\r\n    this._tooltipController = new TooltipController(this);\r\n    this.addController(this._tooltipController);\r\n  }\r\n\r\n  /** @private */\r\n  _checkImport() {\r\n    const item = this.querySelector('vaadin-item');\r\n    if (item && !(item instanceof PolymerElement)) {\r\n      console.warn(`Make sure you have imported the vaadin-item element.`);\r\n    }\r\n  }\r\n}\r\n\r\ndefineCustomElement(ListBox);\r\n\r\nexport { ListBox };\r\n"],
  "mappings": "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",
  "names": []
}
