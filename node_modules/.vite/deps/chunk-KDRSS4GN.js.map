{
  "version": 3,
  "sources": ["../../@vaadin/avatar-group/theme/lumo/vaadin-avatar-group-styles.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-menu.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-menu-item.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-overlay.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-mixin.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group-styles.js", "../../@vaadin/avatar-group/src/vaadin-avatar-group.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport { item } from '@vaadin/item/theme/lumo/vaadin-item-styles.js';\r\nimport { listBox } from '@vaadin/list-box/theme/lumo/vaadin-list-box-styles.js';\r\nimport { menuOverlayCore } from '@vaadin/vaadin-lumo-styles/mixins/menu-overlay.js';\r\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-avatar-group',\r\n  css`\r\n    :host {\r\n      --vaadin-avatar-size: var(--lumo-size-m);\r\n    }\r\n\r\n    :host([theme~='xlarge']) {\r\n      --vaadin-avatar-group-overlap: 12px;\r\n      --vaadin-avatar-group-overlap-border: 3px;\r\n      --vaadin-avatar-size: var(--lumo-size-xl);\r\n    }\r\n\r\n    :host([theme~='large']) {\r\n      --vaadin-avatar-group-overlap: 10px;\r\n      --vaadin-avatar-group-overlap-border: 3px;\r\n      --vaadin-avatar-size: var(--lumo-size-l);\r\n    }\r\n\r\n    :host([theme~='small']) {\r\n      --vaadin-avatar-group-overlap: 6px;\r\n      --vaadin-avatar-group-overlap-border: 2px;\r\n      --vaadin-avatar-size: var(--lumo-size-s);\r\n    }\r\n\r\n    :host([theme~='xsmall']) {\r\n      --vaadin-avatar-group-overlap: 4px;\r\n      --vaadin-avatar-group-overlap-border: 2px;\r\n      --vaadin-avatar-size: var(--lumo-size-xs);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-avatar-group' },\r\n);\r\n\r\nconst avatarGroupOverlay = css`\r\n  :host {\r\n    --_lumo-list-box-item-selected-icon-display: none;\r\n    --_lumo-list-box-item-padding-left: calc(var(--lumo-space-m) + var(--lumo-border-radius-m) / 4);\r\n  }\r\n\r\n  [part='overlay'] {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-avatar-group-overlay', [overlay, menuOverlayCore, avatarGroupOverlay], {\r\n  moduleId: 'lumo-avatar-group-overlay',\r\n});\r\n\r\nregisterStyles('vaadin-avatar-group-menu', listBox, { moduleId: 'lumo-avatar-group-menu' });\r\n\r\nregisterStyles(\r\n  'vaadin-avatar-group-menu-item',\r\n  [\r\n    item,\r\n    css`\r\n      :host {\r\n        padding: var(--lumo-space-xs);\r\n        padding-inline-end: var(--lumo-space-m);\r\n      }\r\n\r\n      [part='content'] {\r\n        display: flex;\r\n        align-items: center;\r\n      }\r\n\r\n      [part='content'] ::slotted(vaadin-avatar) {\r\n        width: var(--lumo-size-xs);\r\n        height: var(--lumo-size-xs);\r\n        margin-inline-end: var(--lumo-space-s);\r\n      }\r\n    `,\r\n  ],\r\n  { moduleId: 'lumo-avatar-group-menu-item' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ListMixin } from '@vaadin/a11y-base/src/list-mixin.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ControllerMixin\r\n * @mixes DirMixin\r\n * @mixes ListMixin\r\n * @mixes ThemableMixin\r\n * @protected\r\n */\r\nclass AvatarGroupMenu extends ListMixin(ThemableMixin(DirMixin(ControllerMixin(PolymerElement)))) {\r\n  static get is() {\r\n    return 'vaadin-avatar-group-menu';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: flex;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n\r\n        [part='items'] {\r\n          height: 100%;\r\n          width: 100%;\r\n          overflow-y: auto;\r\n          -webkit-overflow-scrolling: touch;\r\n        }\r\n      </style>\r\n      <div part=\"items\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      // We don't need to define this property since super default is vertical,\r\n      // but we don't want it to be modified, or be shown in the API docs.\r\n      /** @private */\r\n      orientation: {\r\n        readOnly: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @return {!HTMLElement}\r\n   * @protected\r\n   * @override\r\n   */\r\n  get _scrollerElement() {\r\n    return this.shadowRoot.querySelector('[part=\"items\"]');\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    this.setAttribute('role', 'menu');\r\n  }\r\n}\r\n\r\ndefineCustomElement(AvatarGroupMenu);\r\n\r\nexport { AvatarGroupMenu };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { ItemMixin } from '@vaadin/item/src/vaadin-item-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes DirMixin\r\n * @mixes ItemMixin\r\n * @mixes ThemableMixin\r\n * @protected\r\n */\r\nclass AvatarGroupMenuItem extends ItemMixin(ThemableMixin(DirMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-avatar-group-menu-item';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: inline-block;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n      </style>\r\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\r\n      <div part=\"content\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n\r\n    this.setAttribute('role', 'menuitem');\r\n  }\r\n}\r\n\r\ndefineCustomElement(AvatarGroupMenuItem);\r\n\r\nexport { AvatarGroupMenuItem };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\r\nimport { PositionMixin } from '@vaadin/overlay/src/vaadin-overlay-position-mixin.js';\r\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles('vaadin-avatar-group-overlay', [overlayStyles], {\r\n  moduleId: 'vaadin-avatar-group-overlay-styles',\r\n});\r\n\r\n/**\r\n * An element used internally by `<vaadin-avatar-group>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes PositionMixin\r\n * @mixes OverlayMixin\r\n * @mixes DirMixin\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass AvatarGroupOverlay extends PositionMixin(OverlayMixin(DirMixin(ThemableMixin(PolymerElement)))) {\r\n  static get is() {\r\n    return 'vaadin-avatar-group-overlay';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\r\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\r\n        <div part=\"content\" id=\"content\">\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(AvatarGroupOverlay);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\r\nimport { html, render } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport { announce } from '@vaadin/a11y-base/src/announce.js';\r\nimport { I18nMixin } from '@vaadin/component-base/src/i18n-mixin.js';\r\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\r\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\n\r\nconst MINIMUM_DISPLAYED_AVATARS = 2;\r\n\r\nconst DEFAULT_I18N = {\r\n  anonymous: 'anonymous',\r\n  activeUsers: {\r\n    one: 'Currently one active user',\r\n    many: 'Currently {count} active users',\r\n  },\r\n  joined: '{user} joined',\r\n  left: '{user} left',\r\n};\r\n\r\n/**\r\n * A mixin providing common avatar group functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes I18nMixin\r\n * @mixes ResizeMixin\r\n * @mixes OverlayClassMixin\r\n */\r\nexport const AvatarGroupMixin = (superClass) =>\r\n  class AvatarGroupMixinClass extends I18nMixin(DEFAULT_I18N, ResizeMixin(OverlayClassMixin(superClass))) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * An array containing the items which will be stamped as avatars.\r\n         *\r\n         * The items objects allow to configure [`name`](#/elements/vaadin-avatar#property-name),\r\n         * [`abbr`](#/elements/vaadin-avatar#property-abbr), [`img`](#/elements/vaadin-avatar#property-img)\r\n         * and [`colorIndex`](#/elements/vaadin-avatar#property-colorIndex) properties on the\r\n         * stamped avatars, and set `className` to provide CSS class names.\r\n         *\r\n         * #### Example\r\n         *\r\n         * ```js\r\n         * group.items = [\r\n         *   {\r\n         *     name: 'User name',\r\n         *     img: 'url-to-image.png',\r\n         *     className: 'even'\r\n         *   },\r\n         *   {\r\n         *     abbr: 'JD',\r\n         *     colorIndex: 1,\r\n         *     className: 'odd'\r\n         *   },\r\n         * ];\r\n         * ```\r\n         *\r\n         * @type {!Array<!AvatarGroupItem> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          observer: '__itemsChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * The maximum number of avatars to display. By default, all the avatars are displayed.\r\n         * When _maxItemsVisible_ is set, the overflowing avatars are grouped into one avatar with\r\n         * a dropdown. Setting 0 or 1 has no effect so there are always at least two avatars visible.\r\n         * @attr {number} max-items-visible\r\n         */\r\n        maxItemsVisible: {\r\n          type: Number,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _avatars: {\r\n          type: Array,\r\n          value: () => [],\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        __itemsInView: {\r\n          type: Number,\r\n          value: null,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _overflow: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _overflowItems: {\r\n          type: Array,\r\n          observer: '__overflowItemsChanged',\r\n          computed: '__computeOverflowItems(items, __itemsInView, maxItemsVisible)',\r\n        },\r\n\r\n        /** @private */\r\n        _overflowTooltip: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _opened: {\r\n          type: Boolean,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '__i18nItemsChanged(__effectiveI18n, items)',\r\n        '__openedChanged(_opened, _overflow)',\r\n        '__updateAvatarsTheme(_overflow, _avatars, _theme)',\r\n        '__updateAvatars(items, __itemsInView, maxItemsVisible, _overflow, __effectiveI18n)',\r\n        '__updateOverflowAvatar(_overflow, items, __itemsInView, maxItemsVisible)',\r\n        '__updateOverflowTooltip(_overflowTooltip, items, __itemsInView, maxItemsVisible)',\r\n      ];\r\n    }\r\n\r\n    /**\r\n     * The object used to localize this component. To change the default\r\n     * localization, replace this with an object that provides all properties, or\r\n     * just the individual properties you want to change.\r\n     *\r\n     * The object has the following JSON structure and default values:\r\n     * ```\r\n     * {\r\n     *   // Translation of the anonymous user avatar tooltip.\r\n     *   anonymous: 'anonymous',\r\n     *   // Translation of the avatar group accessible label.\r\n     *   // {count} is replaced with the actual count of users.\r\n     *   activeUsers: {\r\n     *     one: 'Currently one active user',\r\n     *     many: 'Currently {count} active users'\r\n     *   },\r\n     *   // Screen reader announcement when user joins group.\r\n     *   // {user} is replaced with the name or abbreviation.\r\n     *   // When neither is set, \"anonymous\" is used instead.\r\n     *   joined: '{user} joined',\r\n     *   // Screen reader announcement when user leaves group.\r\n     *   // {user} is replaced with the name or abbreviation.\r\n     *   // When neither is set, \"anonymous\" is used instead.\r\n     *   left: '{user} left'\r\n     * }\r\n     * ```\r\n     * @return {!AvatarGroupI18n}\r\n     */\r\n    get i18n() {\r\n      return super.i18n;\r\n    }\r\n\r\n    set i18n(value) {\r\n      super.i18n = value;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._overflowController = new SlotController(this, 'overflow', 'vaadin-avatar', {\r\n        initializer: (overflow) => {\r\n          overflow.setAttribute('role', 'button');\r\n          overflow.setAttribute('aria-haspopup', 'menu');\r\n          overflow.setAttribute('aria-expanded', 'false');\r\n          overflow.addEventListener('click', (e) => this._onOverflowClick(e));\r\n          overflow.addEventListener('keydown', (e) => this._onOverflowKeyDown(e));\r\n\r\n          const tooltip = document.createElement('vaadin-tooltip');\r\n          tooltip.setAttribute('slot', 'tooltip');\r\n          overflow.appendChild(tooltip);\r\n\r\n          this._overflow = overflow;\r\n          this._overflowTooltip = tooltip;\r\n        },\r\n      });\r\n      this.addController(this._overflowController);\r\n\r\n      const overlay = this.$.overlay;\r\n      overlay.renderer = this.__overlayRenderer.bind(this);\r\n      this._overlayElement = overlay;\r\n\r\n      afterNextRender(this, () => {\r\n        this.__setItemsInView();\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n\r\n      this._opened = false;\r\n    }\r\n\r\n    /** @private */\r\n    __getMessage(user, action) {\r\n      return action.replace('{user}', user.name || user.abbr || this.__effectiveI18n.anonymous);\r\n    }\r\n\r\n    /**\r\n     * Renders items when they are provided by the `items` property and clears the content otherwise.\r\n     * @param {!HTMLElement} root\r\n     * @param {!Select} _select\r\n     * @private\r\n     */\r\n    __overlayRenderer(root) {\r\n      let menu = root.firstElementChild;\r\n      if (!menu) {\r\n        menu = document.createElement('vaadin-avatar-group-menu');\r\n        menu.addEventListener('keydown', (event) => this._onListKeyDown(event));\r\n        root.appendChild(menu);\r\n      }\r\n\r\n      menu.textContent = '';\r\n\r\n      if (!this._overflowItems) {\r\n        return;\r\n      }\r\n\r\n      this._overflowItems.forEach((item) => {\r\n        menu.appendChild(this.__createItemElement(item));\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __createItemElement(item) {\r\n      const itemElement = document.createElement('vaadin-avatar-group-menu-item');\r\n\r\n      const avatar = document.createElement('vaadin-avatar');\r\n      itemElement.appendChild(avatar);\r\n\r\n      avatar.setAttribute('aria-hidden', 'true');\r\n      avatar.setAttribute('tabindex', '-1');\r\n      avatar.i18n = this.__effectiveI18n;\r\n\r\n      if (this._theme) {\r\n        avatar.setAttribute('theme', this._theme);\r\n      }\r\n\r\n      avatar.name = item.name;\r\n      avatar.abbr = item.abbr;\r\n      avatar.img = item.img;\r\n      avatar.colorIndex = item.colorIndex;\r\n      if (item.className) {\r\n        avatar.className = item.className;\r\n      }\r\n\r\n      if (item.name) {\r\n        const text = document.createTextNode(item.name);\r\n        itemElement.appendChild(text);\r\n      }\r\n\r\n      return itemElement;\r\n    }\r\n\r\n    /** @private */\r\n    _onOverflowClick(e) {\r\n      e.stopPropagation();\r\n      if (this._opened) {\r\n        this.$.overlay.close();\r\n      } else if (!e.defaultPrevented) {\r\n        this._opened = true;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onOverflowKeyDown(e) {\r\n      if (!this._opened) {\r\n        if (/^(Enter|SpaceBar|\\s)$/u.test(e.key)) {\r\n          e.preventDefault();\r\n          this._opened = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onListKeyDown(event) {\r\n      if (event.key === 'Escape' || event.key === 'Tab') {\r\n        this._opened = false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onResize() {\r\n      this.__setItemsInView();\r\n    }\r\n\r\n    /** @private */\r\n    _onVaadinOverlayClose(e) {\r\n      if (e.detail.sourceEvent && e.detail.sourceEvent.composedPath().includes(this)) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onVaadinOverlayOpen() {\r\n      if (this._menuElement) {\r\n        this._menuElement.focus();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __renderAvatars(items) {\r\n      render(\r\n        html`\r\n          ${items.map(\r\n            (item) => html`\r\n              <vaadin-avatar\r\n                .name=\"${item.name}\"\r\n                .abbr=\"${item.abbr}\"\r\n                .img=\"${item.img}\"\r\n                .colorIndex=\"${item.colorIndex}\"\r\n                .i18n=\"${this.__effectiveI18n}\"\r\n                class=\"${ifDefined(item.className)}\"\r\n                with-tooltip\r\n              ></vaadin-avatar>\r\n            `,\r\n          )}\r\n        `,\r\n        this,\r\n        { renderBefore: this._overflow },\r\n      );\r\n    }\r\n\r\n    /** @private */\r\n    __updateAvatars(items, itemsInView, maxItemsVisible, overflow) {\r\n      if (!overflow || !Array.isArray(items)) {\r\n        return;\r\n      }\r\n\r\n      const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\r\n\r\n      this.__renderAvatars(limit ? items.slice(0, limit) : items);\r\n\r\n      this._avatars = [...this.querySelectorAll('vaadin-avatar')];\r\n    }\r\n\r\n    /** @private */\r\n    __computeOverflowItems(items, itemsInView, maxItemsVisible) {\r\n      const count = Array.isArray(items) ? items.length : 0;\r\n      const limit = this.__getLimit(count, itemsInView, maxItemsVisible);\r\n      return limit ? items.slice(limit) : [];\r\n    }\r\n\r\n    /** @private */\r\n    __updateOverflowAvatar(overflow, items, itemsInView, maxItemsVisible) {\r\n      if (overflow) {\r\n        const count = Array.isArray(items) ? items.length : 0;\r\n        const maxReached = maxItemsVisible != null && count > this.__getMax(maxItemsVisible);\r\n\r\n        overflow.abbr = `+${count - this.__getLimit(count, itemsInView, maxItemsVisible)}`;\r\n        overflow.toggleAttribute('hidden', !maxReached && !(itemsInView && itemsInView < count));\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateAvatarsTheme(overflow, avatars, theme) {\r\n      if (overflow) {\r\n        [overflow, ...avatars].forEach((avatar) => {\r\n          if (theme) {\r\n            avatar.setAttribute('theme', theme);\r\n          } else {\r\n            avatar.removeAttribute('theme');\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __updateOverflowTooltip(tooltip, items, itemsInView, maxItemsVisible) {\r\n      if (!tooltip || !Array.isArray(items)) {\r\n        return;\r\n      }\r\n\r\n      const limit = this.__getLimit(items.length, itemsInView, maxItemsVisible);\r\n      if (limit == null) {\r\n        return;\r\n      }\r\n\r\n      const result = [];\r\n      for (let i = limit; i < items.length; i++) {\r\n        const item = items[i];\r\n        if (item) {\r\n          result.push(item.name || item.abbr || 'anonymous');\r\n        }\r\n      }\r\n\r\n      tooltip.text = result.join('\\n');\r\n    }\r\n\r\n    /** @private */\r\n    __getLimit(items, itemsInView, maxItemsVisible) {\r\n      let limit = null;\r\n      // Handle max set to 0 or 1\r\n      const adjustedMax = this.__getMax(maxItemsVisible);\r\n      if (maxItemsVisible != null && adjustedMax < items) {\r\n        limit = adjustedMax - 1;\r\n      } else if (itemsInView && itemsInView < items) {\r\n        limit = itemsInView;\r\n      }\r\n\r\n      return Math.min(limit, this.__calculateAvatarsFitWidth());\r\n    }\r\n\r\n    /** @private */\r\n    __getMax(maxItemsVisible) {\r\n      return Math.max(maxItemsVisible, MINIMUM_DISPLAYED_AVATARS);\r\n    }\r\n\r\n    /** @private */\r\n    __itemsChanged(items, oldItems) {\r\n      this.__setItemsInView();\r\n\r\n      let added = [];\r\n      let removed = [];\r\n\r\n      const hasNewItems = Array.isArray(items);\r\n      const hasOldItems = Array.isArray(oldItems);\r\n\r\n      if (hasOldItems) {\r\n        removed = oldItems.filter((item) => hasNewItems && !items.includes(item));\r\n      }\r\n\r\n      if (hasNewItems) {\r\n        added = items.filter((item) => hasOldItems && !oldItems.includes(item));\r\n      }\r\n\r\n      this.__announceItemsChange(added, removed);\r\n    }\r\n\r\n    /** @private */\r\n    __announceItemsChange(added, removed) {\r\n      let addedMsg = [];\r\n      let removedMsg = [];\r\n      if (added) {\r\n        addedMsg = added.map((user) => this.__getMessage(user, this.__effectiveI18n.joined || '{user} joined'));\r\n      }\r\n\r\n      if (removed) {\r\n        removedMsg = removed.map((user) => this.__getMessage(user, this.__effectiveI18n.left || '{user} left'));\r\n      }\r\n\r\n      const messages = removedMsg.concat(addedMsg);\r\n      if (messages.length > 0) {\r\n        announce(messages.join(', '));\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __i18nItemsChanged(effectiveI18n, items) {\r\n      if (effectiveI18n && effectiveI18n.activeUsers) {\r\n        const count = Array.isArray(items) ? items.length : 0;\r\n        const field = count === 1 ? 'one' : 'many';\r\n        if (effectiveI18n.activeUsers[field]) {\r\n          this.setAttribute('aria-label', effectiveI18n.activeUsers[field].replace('{count}', count || 0));\r\n        }\r\n\r\n        this._avatars.forEach((avatar) => {\r\n          avatar.i18n = effectiveI18n;\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __openedChanged(opened, overflow) {\r\n      if (!overflow) {\r\n        return;\r\n      }\r\n\r\n      if (opened) {\r\n        if (!this._menuElement) {\r\n          this._menuElement = this.$.overlay.querySelector('vaadin-avatar-group-menu');\r\n        }\r\n\r\n        this._openedWithFocusRing = overflow.hasAttribute('focus-ring');\r\n      } else if (this.__oldOpened) {\r\n        overflow.focus();\r\n        if (this._openedWithFocusRing) {\r\n          overflow.setAttribute('focus-ring', '');\r\n        }\r\n      }\r\n\r\n      overflow.setAttribute('aria-expanded', opened === true);\r\n      this.__oldOpened = opened;\r\n    }\r\n\r\n    /** @private */\r\n    __overflowItemsChanged(items, oldItems) {\r\n      if (items || oldItems) {\r\n        this.$.overlay.requestContentUpdate();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __setItemsInView() {\r\n      const avatars = this._avatars;\r\n      const items = this.items;\r\n\r\n      // Always show at least two avatars\r\n      if (!items || !avatars || avatars.length < 3) {\r\n        return;\r\n      }\r\n\r\n      let result = this.__calculateAvatarsFitWidth();\r\n\r\n      // Only show overlay if two or more avatars don't fit\r\n      if (result === items.length - 1) {\r\n        result = items.length;\r\n      }\r\n\r\n      // Close overlay if all avatars become visible\r\n      if (result >= items.length && this._opened) {\r\n        this.$.overlay.close();\r\n        // FIXME: hack to avoid jump before closing\r\n        this.$.overlay._flushAnimation('closing');\r\n      }\r\n\r\n      // Reserve space for overflow avatar\r\n      this.__itemsInView = result;\r\n    }\r\n\r\n    /** @private */\r\n    __calculateAvatarsFitWidth() {\r\n      if (!this.shadowRoot || this._avatars.length < MINIMUM_DISPLAYED_AVATARS) {\r\n        return MINIMUM_DISPLAYED_AVATARS;\r\n      }\r\n\r\n      const avatars = this._avatars;\r\n\r\n      // Assume all the avatars have the same width\r\n      const avatarWidth = avatars[0].clientWidth;\r\n\r\n      // Take negative margin into account\r\n      const { marginLeft, marginRight } = getComputedStyle(avatars[1]);\r\n\r\n      const offset = this.__isRTL\r\n        ? parseInt(marginRight, 0) - parseInt(marginLeft, 0)\r\n        : parseInt(marginLeft, 0) - parseInt(marginRight, 0);\r\n\r\n      return Math.floor((this.$.container.offsetWidth - avatarWidth) / (avatarWidth + offset));\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const avatarGroupStyles = css`\r\n  :host {\r\n    display: block;\r\n    width: 100%; /* prevent collapsing inside non-stretching column flex */\r\n    --vaadin-avatar-group-overlap: 8px;\r\n    --vaadin-avatar-group-overlap-border: 2px;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  [part='container'] {\r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    flex-wrap: nowrap;\r\n  }\r\n\r\n  ::slotted(vaadin-avatar:not(:first-child)) {\r\n    -webkit-mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\r\n    mask-image: url('data:image/svg+xml;utf8,<svg viewBox=%220 0 300 300%22 fill=%22none%22 xmlns=%22http://www.w3.org/2000/svg%22><path fill-rule=%22evenodd%22 clip-rule=%22evenodd%22 d=%22M300 0H0V300H300V0ZM150 200C177.614 200 200 177.614 200 150C200 122.386 177.614 100 150 100C122.386 100 100 122.386 100 150C100 177.614 122.386 200 150 200Z%22 fill=%22black%22/></svg>');\r\n    -webkit-mask-size: calc(\r\n      300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6\r\n    );\r\n    mask-size: calc(300% + var(--vaadin-avatar-group-overlap-border) * 6 - var(--vaadin-avatar-outline-width) * 6);\r\n  }\r\n\r\n  ::slotted(vaadin-avatar:not([dir='rtl']):not(:first-child)) {\r\n    margin-left: calc(var(--vaadin-avatar-group-overlap) * -1 - var(--vaadin-avatar-outline-width));\r\n    -webkit-mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\r\n    mask-position: calc(50% - var(--vaadin-avatar-size) + var(--vaadin-avatar-group-overlap));\r\n  }\r\n\r\n  ::slotted(vaadin-avatar[dir='rtl']:not(:first-child)) {\r\n    margin-right: calc(var(--vaadin-avatar-group-overlap) * -1);\r\n    -webkit-mask-position: calc(\r\n      50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\r\n    );\r\n    mask-position: calc(\r\n      50% + var(--vaadin-avatar-size) - var(--vaadin-avatar-group-overlap) + var(--vaadin-avatar-outline-width)\r\n    );\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2020 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/avatar/src/vaadin-avatar.js';\r\nimport './vaadin-avatar-group-menu.js';\r\nimport './vaadin-avatar-group-menu-item.js';\r\nimport './vaadin-avatar-group-overlay.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { AvatarGroupMixin } from './vaadin-avatar-group-mixin.js';\r\nimport { avatarGroupStyles } from './vaadin-avatar-group-styles.js';\r\n\r\nregisterStyles('vaadin-avatar-group', avatarGroupStyles, { moduleId: 'vaadin-avatar-group-styles' });\r\n\r\n/**\r\n * `<vaadin-avatar-group>` is a Web Component providing avatar group displaying functionality.\r\n *\r\n * To create the avatar group, first add the component to the page:\r\n *\r\n * ```\r\n * <vaadin-avatar-group></vaadin-avatar-group>\r\n * ```\r\n *\r\n * And then use [`items`](#/elements/vaadin-avatar-group#property-items) property to initialize the structure:\r\n *\r\n * ```\r\n * document.querySelector('vaadin-avatar-group').items = [\r\n *   {name: 'John Doe'},\r\n *   {abbr: 'AB'}\r\n * ];\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are exposed for styling:\r\n *\r\n * Part name   | Description\r\n * ----------- | ---------------\r\n * `container` | The container element\r\n *\r\n * See the [`<vaadin-avatar>`](#/elements/vaadin-avatar) documentation for the available\r\n * state attributes and stylable shadow parts of avatar elements.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * ### Internal components\r\n *\r\n * In addition to `<vaadin-avatar-group>` itself, the following internal\r\n * components are themable:\r\n *\r\n * - `<vaadin-avatar-group-overlay>` - has the same API as [`<vaadin-overlay>`](#/elements/vaadin-overlay).\r\n * - `<vaadin-avatar-group-menu>` - has the same API as [`<vaadin-list-box>`](#/elements/vaadin-list-box).\r\n * - `<vaadin-avatar-group-menu-item>` - has the same API as [`<vaadin-item>`](#/elements/vaadin-item).\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ControllerMixin\r\n * @mixes ElementMixin\r\n * @mixes AvatarGroupMixin\r\n * @mixes ThemableMixin\r\n */\r\nclass AvatarGroup extends AvatarGroupMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <div id=\"container\" part=\"container\">\r\n        <slot></slot>\r\n        <slot name=\"overflow\"></slot>\r\n      </div>\r\n      <vaadin-avatar-group-overlay\r\n        id=\"overlay\"\r\n        opened=\"{{_opened}}\"\r\n        position-target=\"[[_overflow]]\"\r\n        no-vertical-overlap\r\n        on-vaadin-overlay-close=\"_onVaadinOverlayClose\"\r\n        on-vaadin-overlay-open=\"_onVaadinOverlayOpen\"\r\n      ></vaadin-avatar-group-overlay>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-avatar-group';\r\n  }\r\n}\r\n\r\ndefineCustomElement(AvatarGroup);\r\n\r\nexport { AvatarGroup };\r\n"],
  "mappings": "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",
  "names": ["html", "html", "html", "overlay", "item", "html"]
}
