{
  "version": 3,
  "sources": ["../../@vaadin/dashboard/src/vaadin-dashboard-widget.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { html, LitElement } from 'lit';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { PolylitMixin } from '@vaadin/component-base/src/polylit-mixin.js';\r\nimport { css, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { SYNCHRONIZED_ATTRIBUTES, WRAPPER_LOCAL_NAME } from './vaadin-dashboard-helpers.js';\r\nimport { DashboardItemMixin } from './vaadin-dashboard-item-mixin.js';\r\nimport { getDefaultI18n } from './vaadin-dashboard-item-mixin.js';\r\n\r\n/**\r\n * A Widget component for use with the Dashboard component\r\n *\r\n * ```html\r\n * <vaadin-dashboard-widget widget-title=\"Title\">\r\n *   <span slot=\"header-content\">Header</span>\r\n *   <div>Content</div>\r\n * </vaadin-dashboard-widget>\r\n * ```\r\n *\r\n * ### Customization\r\n *\r\n * You can configure the item by using `slot` names.\r\n *\r\n * Slot name        | Description\r\n * -----------------|-------------\r\n * `header-content` | A slot for the widget header content.\r\n *\r\n * #### Example\r\n *\r\n * ```html\r\n * <vaadin-dashboard-widget widget-title=\"Title\">\r\n *   <span slot=\"header-content\">Header</span>\r\n *   <div>Content</div>\r\n * </vaadin-dashboard-widget>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name                     | Description\r\n * ------------------------------|-------------\r\n * `header`                      | The header of the widget\r\n * `title`                       | The title of the widget\r\n * `content`                     | The content of the widget\r\n * `move-button`                 | The move button\r\n * `remove-button`               | The remove button\r\n * `resize-button`               | The resize button\r\n * `move-backward-button`        | The move backward button when in move mode\r\n * `move-forward-button`         | The move forward button when in move mode\r\n * `move-apply-button`           | The apply button when in move mode\r\n * `resize-shrink-width-button`  | The shrink width button when in resize mode\r\n * `resize-grow-width-button`    | The grow width button when in resize mode\r\n * `resize-shrink-height-button` | The shrink height button when in resize mode\r\n * `resize-grow-height-button`   | The grow height button when in resize mode\r\n * `resize-apply-button`         | The apply button when in resize mode\r\n *\r\n * The following custom properties are available:\r\n *\r\n * Custom Property                   | Description\r\n * ----------------------------------|-------------\r\n * `--vaadin-dashboard-item-colspan` | colspan of the widget\r\n * `--vaadin-dashboard-item-rowspan` | rowspan of the widget\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute      | Description\r\n * ---------------|-------------\r\n * `selected`     | Set when the element is selected.\r\n * `focused`      | Set when the element is focused.\r\n * `move-mode`    | Set when the element is being moved.\r\n * `resize-mode`  | Set when the element is being resized.\r\n * `resizing`     | Set when the element is being resized.\r\n * `dragging`     | Set when the element is being dragged.\r\n * `editable`     | Set when the element is editable.\r\n * `first-child`  | Set when the element is the first child of the parent.\r\n * `last-child`   | Set when the element is the last child of the parent.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes DashboardItemMixin\r\n */\r\nclass DashboardWidget extends DashboardItemMixin(ElementMixin(ThemableMixin(PolylitMixin(LitElement)))) {\r\n  static get is() {\r\n    return 'vaadin-dashboard-widget';\r\n  }\r\n\r\n  static get experimental() {\r\n    return 'dashboardComponent';\r\n  }\r\n\r\n  static get styles() {\r\n    return [\r\n      css`\r\n        :host {\r\n          display: flex;\r\n          flex-direction: column;\r\n          grid-column: var(--_vaadin-dashboard-item-column);\r\n          grid-row: var(--_vaadin-dashboard-item-row);\r\n          position: relative;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n\r\n        :host(:not([editable])) [part~='resize-button'] {\r\n          display: none;\r\n        }\r\n\r\n        [part~='content'] {\r\n          flex: 1;\r\n          overflow: hidden;\r\n        }\r\n\r\n        [part~='resize-button'] {\r\n          position: absolute;\r\n          bottom: 0;\r\n          inset-inline-end: 0;\r\n          z-index: 1;\r\n          overflow: hidden;\r\n        }\r\n\r\n        :host([resizing])::after {\r\n          content: '';\r\n          z-index: 2;\r\n          position: absolute;\r\n          top: -1px;\r\n          width: var(--_vaadin-dashboard-widget-resizer-width, 0);\r\n          height: var(--_vaadin-dashboard-widget-resizer-height, 0);\r\n          background: rgba(0, 0, 0, 0.1);\r\n          border-radius: inherit;\r\n        }\r\n      `,\r\n      super.styles,\r\n    ];\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * The object used to localize this component.\r\n       *\r\n       * To change the default localization, replace the entire\r\n       * `i18n` object with a custom one.\r\n       *\r\n       * The object has the following structure and default values:\r\n       * ```\r\n       * {\r\n       *   selectWidget: 'Select widget for editing',\r\n       *   remove: 'Remove',\r\n       *   resize: 'Resize',\r\n       *   resizeApply: 'Apply',\r\n       *   resizeShrinkWidth: 'Shrink width',\r\n       *   resizeGrowWidth: 'Grow width',\r\n       *   resizeShrinkHeight: 'Shrink height',\r\n       *   resizeGrowHeight: 'Grow height',\r\n       *   move: 'Move',\r\n       *   moveApply: 'Apply',\r\n       *   moveForward: 'Move Forward',\r\n       *   moveBackward: 'Move Backward',\r\n       * }\r\n       * ```\r\n       * @private\r\n       */\r\n      __i18n: {\r\n        type: Object,\r\n        value: () => {\r\n          return getDefaultI18n();\r\n        },\r\n      },\r\n\r\n      /**\r\n       * The title of the widget.\r\n       *\r\n       * @attr {string} widget-title\r\n       * @type {string | null | undefined}\r\n       */\r\n      widgetTitle: {\r\n        type: String,\r\n        value: '',\r\n        observer: '__onWidgetTitleChanged',\r\n      },\r\n\r\n      /* @private */\r\n      __nestedHeadingLevel: {\r\n        type: Boolean,\r\n        value: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  /** @protected */\r\n  render() {\r\n    return html`\r\n      ${this.__renderMoveControls()} ${this.__renderResizeControls()}\r\n\r\n      <div id=\"focustrap\">\r\n        ${this.__renderFocusButton('selectWidget')}\r\n\r\n        <header part=\"header\">\r\n          ${this.__renderDragHandle()}\r\n          ${this.__nestedHeadingLevel\r\n            ? html`<h3 id=\"title\" part=\"title\" .hidden=${!this.widgetTitle}>${this.widgetTitle}</h3>`\r\n            : html`<h2 id=\"title\" part=\"title\" .hidden=${!this.widgetTitle}>${this.widgetTitle}</h2>`}\r\n          <slot name=\"header-content\"></slot>\r\n          ${this.__renderRemoveButton()}\r\n        </header>\r\n\r\n        ${this.__renderResizeHandle()}\r\n      </div>\r\n\r\n      <div id=\"content\" part=\"content\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /** @protected */\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const wrapper = this.closest(WRAPPER_LOCAL_NAME);\r\n    if (wrapper) {\r\n      SYNCHRONIZED_ATTRIBUTES.forEach((attr) => {\r\n        this.toggleAttribute(attr, !!wrapper[attr]);\r\n      });\r\n      this.__i18n = wrapper.i18n;\r\n    }\r\n\r\n    const undefinedAncestor = this.closest('*:not(:defined)');\r\n    if (undefinedAncestor) {\r\n      customElements.whenDefined(undefinedAncestor.localName).then(() => queueMicrotask(() => this.__updateTitle()));\r\n    } else {\r\n      this.__updateTitle();\r\n    }\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n    if (!this.hasAttribute('role')) {\r\n      this.setAttribute('role', 'article');\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __onWidgetTitleChanged() {\r\n    this.__updateTitle();\r\n  }\r\n\r\n  /** @private */\r\n  __updateTitle() {\r\n    const titleLevel = getComputedStyle(this).getPropertyValue('--_vaadin-dashboard-title-level');\r\n    this.__nestedHeadingLevel = titleLevel === '3';\r\n  }\r\n}\r\n\r\ndefineCustomElement(DashboardWidget);\r\n\r\nexport { DashboardWidget };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA,IAAM,kBAAN,cAA8B,mBAAmB,aAAa,cAAc,aAAa,UAAU,CAAC,CAAC,CAAC,EAAE;AAAA,EACtG,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,eAAe;AACxB,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,SAAS;AAClB,WAAO;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAyCA,MAAM;AAAA,IACR;AAAA,EACF;AAAA,EAEA,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0BL,QAAQ;AAAA,QACN,MAAM;AAAA,QACN,OAAO,MAAM;AACX,iBAAO,eAAe;AAAA,QACxB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,aAAa;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,UAAU;AAAA,MACZ;AAAA;AAAA,MAGA,sBAAsB;AAAA,QACpB,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAGA,SAAS;AACP,WAAO;AAAA,QACH,KAAK,qBAAqB,CAAC,IAAI,KAAK,uBAAuB,CAAC;AAAA;AAAA;AAAA,UAG1D,KAAK,oBAAoB,cAAc,CAAC;AAAA;AAAA;AAAA,YAGtC,KAAK,mBAAmB,CAAC;AAAA,YACzB,KAAK,uBACH,2CAA2C,CAAC,KAAK,WAAW,IAAI,KAAK,WAAW,UAChF,2CAA2C,CAAC,KAAK,WAAW,IAAI,KAAK,WAAW,OAAO;AAAA;AAAA,YAEzF,KAAK,qBAAqB,CAAC;AAAA;AAAA;AAAA,UAG7B,KAAK,qBAAqB,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOnC;AAAA;AAAA,EAGA,oBAAoB;AAClB,UAAM,kBAAkB;AAExB,UAAM,UAAU,KAAK,QAAQ,kBAAkB;AAC/C,QAAI,SAAS;AACX,8BAAwB,QAAQ,CAAC,SAAS;AACxC,aAAK,gBAAgB,MAAM,CAAC,CAAC,QAAQ,IAAI,CAAC;AAAA,MAC5C,CAAC;AACD,WAAK,SAAS,QAAQ;AAAA,IACxB;AAEA,UAAM,oBAAoB,KAAK,QAAQ,iBAAiB;AACxD,QAAI,mBAAmB;AACrB,qBAAe,YAAY,kBAAkB,SAAS,EAAE,KAAK,MAAM,eAAe,MAAM,KAAK,cAAc,CAAC,CAAC;AAAA,IAC/G,OAAO;AACL,WAAK,cAAc;AAAA,IACrB;AAAA,EACF;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AACZ,QAAI,CAAC,KAAK,aAAa,MAAM,GAAG;AAC9B,WAAK,aAAa,QAAQ,SAAS;AAAA,IACrC;AAAA,EACF;AAAA;AAAA,EAGA,yBAAyB;AACvB,SAAK,cAAc;AAAA,EACrB;AAAA;AAAA,EAGA,gBAAgB;AACd,UAAM,aAAa,iBAAiB,IAAI,EAAE,iBAAiB,iCAAiC;AAC5F,SAAK,uBAAuB,eAAe;AAAA,EAC7C;AACF;AAEA,oBAAoB,eAAe;",
  "names": []
}
