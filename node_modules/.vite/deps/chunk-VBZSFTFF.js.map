{
  "version": 3,
  "sources": ["../../@vaadin/login/theme/lumo/vaadin-login-form-wrapper-styles.js", "../../@vaadin/login/src/vaadin-login-form-wrapper-styles.js", "../../@vaadin/login/src/vaadin-login-form-wrapper.js", "../../@vaadin/login/src/vaadin-login-mixin.js", "../../@vaadin/login/src/vaadin-login-form-mixin.js", "../../@vaadin/login/src/vaadin-login-form.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport { color } from '@vaadin/vaadin-lumo-styles/color.js';\r\nimport { typography } from '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nconst loginFormWrapper = css`\r\n  :host {\r\n    max-width: calc(var(--lumo-size-m) * 10);\r\n    background: var(--lumo-base-color) linear-gradient(var(--lumo-tint-5pct), var(--lumo-tint-5pct));\r\n  }\r\n\r\n  [part='form'] {\r\n    padding: var(--lumo-space-l);\r\n  }\r\n\r\n  [part='form-title'] {\r\n    margin-top: calc(var(--lumo-font-size-xxxl) - var(--lumo-font-size-xxl));\r\n    color: var(--lumo-header-text-color);\r\n    font-size: var(--lumo-font-size-xxl);\r\n    font-weight: 600;\r\n    line-height: var(--lumo-line-height-xs);\r\n  }\r\n\r\n  ::slotted([slot='submit']) {\r\n    margin-top: var(--lumo-space-l);\r\n    margin-bottom: var(--lumo-space-s);\r\n  }\r\n\r\n  ::slotted([slot='forgot-password']) {\r\n    margin: var(--lumo-space-s) auto;\r\n  }\r\n\r\n  [part='error-message'] {\r\n    background-color: var(--lumo-error-color-10pct);\r\n    padding: var(--lumo-space-m);\r\n    border-radius: var(--lumo-border-radius-m);\r\n    margin-top: var(--lumo-space-m);\r\n    margin-bottom: var(--lumo-space-s);\r\n    color: var(--lumo-error-text-color);\r\n  }\r\n\r\n  :host(:not([dir='rtl'])) [part='error-message'] {\r\n    padding-left: var(--lumo-size-m);\r\n  }\r\n\r\n  :host([dir='rtl']) [part='error-message'] {\r\n    padding-right: var(--lumo-size-m);\r\n  }\r\n\r\n  [part='error-message']::before {\r\n    content: var(--lumo-icons-error);\r\n    font-family: lumo-icons;\r\n    font-size: var(--lumo-icon-size-m);\r\n    position: absolute;\r\n    width: var(--lumo-size-m);\r\n    height: 1em;\r\n    line-height: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  :host(:not([dir='rtl'])) [part='error-message']::before {\r\n    /* Visual centering */\r\n    margin-left: calc(var(--lumo-size-m) * -0.95);\r\n  }\r\n\r\n  :host([dir='rtl']) [part='error-message']::before {\r\n    /* Visual centering */\r\n    margin-right: calc(var(--lumo-size-m) * -0.95);\r\n  }\r\n\r\n  [part='error-message-title'] {\r\n    display: block;\r\n    margin: 0 0 0.25em;\r\n    color: inherit;\r\n    line-height: var(--lumo-line-height-xs);\r\n  }\r\n\r\n  [part='error-message-description'] {\r\n    font-size: var(--lumo-font-size-s);\r\n    line-height: var(--lumo-line-height-s);\r\n    margin: 0;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  [part='footer'] {\r\n    font-size: var(--lumo-font-size-xs);\r\n    line-height: var(--lumo-line-height-s);\r\n    color: var(--lumo-secondary-text-color);\r\n  }\r\n`;\r\n\r\nregisterStyles('vaadin-login-form-wrapper', [color, typography, loginFormWrapper], {\r\n  moduleId: 'lumo-login-form-wrapper',\r\n});\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const loginFormWrapperStyles = css`\r\n  :host {\r\n    overflow: hidden;\r\n    display: inline-block;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  [part='form'] {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  [part='form-title'] {\r\n    margin: 0;\r\n  }\r\n\r\n  [part='error-message'] {\r\n    position: relative;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { loginFormWrapperStyles } from './vaadin-login-form-wrapper-styles.js';\r\n\r\nregisterStyles('vaadin-login-form-wrapper', loginFormWrapperStyles, {\r\n  moduleId: 'vaadin-login-form-wrapper-styles',\r\n});\r\n\r\n/**\r\n * An element used internally by `<vaadin-login-form>`. Not intended to be used separately.\r\n *\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass LoginFormWrapper extends ThemableMixin(PolymerElement) {\r\n  static get template() {\r\n    return html`\r\n      <section part=\"form\">\r\n        <div part=\"form-title\" part=\"form-title\" role=\"heading\" aria-level$=\"[[headingLevel]]\">[[i18n.form.title]]</div>\r\n        <div part=\"error-message\" hidden$=\"[[!error]]\">\r\n          <strong part=\"error-message-title\">[[i18n.errorMessage.title]]</strong>\r\n          <p part=\"error-message-description\">[[i18n.errorMessage.message]]</p>\r\n        </div>\r\n\r\n        <slot name=\"form\"></slot>\r\n\r\n        <slot name=\"custom-form-area\"></slot>\r\n\r\n        <slot name=\"submit\"></slot>\r\n\r\n        <slot name=\"forgot-password\"></slot>\r\n\r\n        <div part=\"footer\">\r\n          <slot name=\"footer\"></slot>\r\n          <p>[[i18n.additionalInformation]]</p>\r\n        </div>\r\n      </section>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-login-form-wrapper';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * If set, the error message is shown. The message is hidden by default.\r\n       * When set, it changes the disabled state of the submit button.\r\n       * @type {boolean}\r\n       */\r\n      error: {\r\n        type: Boolean,\r\n        value: false,\r\n        reflectToAttribute: true,\r\n      },\r\n\r\n      /**\r\n       * The object used to localize this component.\r\n       */\r\n      i18n: {\r\n        type: Object,\r\n      },\r\n\r\n      /**\r\n       * Used to customize the `aria-level` attribute on the heading element.\r\n       */\r\n      headingLevel: {\r\n        type: Number,\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\ndefineCustomElement(LoginFormWrapper);\r\n\r\nexport { LoginFormWrapper };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const LoginMixin = (superClass) =>\r\n  class LoginMixin extends superClass {\r\n    /**\r\n     * Fired when user clicks on the \"Forgot password\" button.\r\n     *\r\n     * @event forgot-password\r\n     */\r\n\r\n    /**\r\n     * Fired when an user submits the login.\r\n     * The event contains `username` and `password` values in the `detail` property.\r\n     *\r\n     * @event login\r\n     */\r\n\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * If set, a synchronous POST call will be fired to the path defined.\r\n         * The `login` event is also dispatched, so `event.preventDefault()` can be called to prevent the POST call.\r\n         * @type {string | null}\r\n         */\r\n        action: {\r\n          type: String,\r\n          value: null,\r\n        },\r\n\r\n        /**\r\n         * If set, disable the \"Log in\" button and prevent user from submitting login form.\r\n         * It is re-enabled automatically, when error is set to true, allowing form resubmission\r\n         * after user makes changes.\r\n         * @type {boolean}\r\n         */\r\n        disabled: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * If set, the error message is shown. The message is hidden by default.\r\n         * When set, it changes the disabled state of the submit button.\r\n         * @type {boolean}\r\n         */\r\n        error: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * Whether to hide the forgot password button. The button is visible by default.\r\n         * @type {boolean}\r\n         * @attr {boolean} no-forgot-password\r\n         */\r\n        noForgotPassword: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * If set, the user name field automatically receives focus when the component is attached to the document.\r\n         * @type {boolean}\r\n         * @attr {boolean} no-autofocus\r\n         */\r\n        noAutofocus: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /**\r\n         * The object used to localize this component.\r\n         * For changing the default localization, change the entire\r\n         * _i18n_ object or just the property you want to modify.\r\n         *\r\n         * The object has the following JSON structure (by default it doesn't include `additionalInformation`\r\n         * and `header` sections, `header` can be added to override `title` and `description` properties\r\n         * in `vaadin-login-overlay`):\r\n         *\r\n         * ```\r\n         * {\r\n         *   header: {\r\n         *     title: 'App name',\r\n         *     description: 'Inspiring application description'\r\n         *   },\r\n         *   form: {\r\n         *     title: 'Log in',\r\n         *     username: 'Username',\r\n         *     password: 'Password',\r\n         *     submit: 'Log in',\r\n         *     forgotPassword: 'Forgot password'\r\n         *   },\r\n         *   errorMessage: {\r\n         *     title: 'Incorrect username or password',\r\n         *     message: 'Check that you have entered the correct username and password and try again.',\r\n         *     username: 'Username is required',\r\n         *     password: 'Password is required'\r\n         *   },\r\n         *   additionalInformation: 'In case you need to provide some additional info for the user.'\r\n         * }\r\n         * ```\r\n         *\r\n         * @type {!LoginI18n}\r\n         * @default {English/US}\r\n         */\r\n        i18n: {\r\n          type: Object,\r\n          value() {\r\n            return {\r\n              form: {\r\n                title: 'Log in',\r\n                username: 'Username',\r\n                password: 'Password',\r\n                submit: 'Log in',\r\n                forgotPassword: 'Forgot password',\r\n              },\r\n              errorMessage: {\r\n                title: 'Incorrect username or password',\r\n                message: 'Check that you have entered the correct username and password and try again.',\r\n                username: 'Username is required',\r\n                password: 'Password is required',\r\n              },\r\n            };\r\n          },\r\n        },\r\n\r\n        /**\r\n         * Sets the root heading level (`aria-level`) for the heading hierarchy. Default value: 1.\r\n         * Child headings automatically increment from this base level i.e. standalone login form\r\n         * renders its title as `<h1>`, whereas the form in the overlay uses `<h2>`, as the `<h1>`\r\n         * element is used by the overlay's own title.\r\n         *\r\n         * @attr {number} heading-level\r\n         */\r\n        headingLevel: {\r\n          type: Number,\r\n          value: 1,\r\n        },\r\n\r\n        /**\r\n         * If set, prevents auto enabling the component when error property is set to true.\r\n         * @private\r\n         */\r\n        _preventAutoEnable: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n      };\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { LoginMixin } from './vaadin-login-mixin.js';\r\n\r\nfunction isCheckbox(field) {\r\n  return (field.inputElement || field).type === 'checkbox';\r\n}\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes LoginMixin\r\n */\r\nexport const LoginFormMixin = (superClass) =>\r\n  class LoginFormMixin extends LoginMixin(superClass) {\r\n    static get observers() {\r\n      return ['_errorChanged(error)'];\r\n    }\r\n\r\n    get _customFields() {\r\n      return [...this.$.vaadinLoginFormWrapper.children].filter((node) => {\r\n        return node.getAttribute('slot') === 'custom-form-area' && node.hasAttribute('name');\r\n      });\r\n    }\r\n\r\n    /** @protected */\r\n    async connectedCallback() {\r\n      super.connectedCallback();\r\n\r\n      if (!this.noAutofocus) {\r\n        // Wait for the form to fully render.\r\n        await new Promise(requestAnimationFrame);\r\n        this.$.vaadinLoginUsername.focus();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _errorChanged() {\r\n      if (this.error && !this._preventAutoEnable) {\r\n        this.disabled = false;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Submits the form.\r\n     */\r\n    submit() {\r\n      const userName = this.$.vaadinLoginUsername;\r\n      const password = this.$.vaadinLoginPassword;\r\n\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      userName.validate();\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      password.validate();\r\n\r\n      if (this.disabled || userName.invalid || password.invalid) {\r\n        return;\r\n      }\r\n\r\n      this.error = false;\r\n      this.disabled = true;\r\n\r\n      const detail = {\r\n        username: userName.value,\r\n        password: password.value,\r\n      };\r\n\r\n      const fields = this._customFields;\r\n      if (fields.length) {\r\n        detail.custom = {};\r\n\r\n        fields.forEach((field) => {\r\n          if (isCheckbox(field) && !field.checked) {\r\n            return;\r\n          }\r\n\r\n          detail.custom[field.name] = field.value;\r\n        });\r\n      }\r\n\r\n      const loginEventDetails = {\r\n        bubbles: true,\r\n        cancelable: true,\r\n        detail,\r\n      };\r\n\r\n      const firedEvent = this.dispatchEvent(new CustomEvent('login', loginEventDetails));\r\n      if (this.action && firedEvent) {\r\n        const csrfMetaName = document.querySelector('meta[name=_csrf_parameter]');\r\n        const csrfMetaValue = document.querySelector('meta[name=_csrf]');\r\n        if (csrfMetaName && csrfMetaValue) {\r\n          this.$.csrf.name = csrfMetaName.content;\r\n          this.$.csrf.value = csrfMetaValue.content;\r\n        }\r\n        this.querySelector('form').submit();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _onFormData(event) {\r\n      const { formData } = event;\r\n\r\n      if (this._customFields.length) {\r\n        this._customFields.forEach((field) => {\r\n          if (isCheckbox(field) && !field.checked) {\r\n            return;\r\n          }\r\n\r\n          formData.append(field.name, field.value);\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _handleInputKeydown(e) {\r\n      if (e.key === 'Enter') {\r\n        const { currentTarget: inputActive } = e;\r\n        const nextInput =\r\n          inputActive.id === 'vaadinLoginUsername' ? this.$.vaadinLoginPassword : this.$.vaadinLoginUsername;\r\n        // eslint-disable-next-line no-restricted-syntax\r\n        if (inputActive.validate()) {\r\n          if (nextInput.checkValidity()) {\r\n            this.submit();\r\n          } else {\r\n            nextInput.focus();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _handleInputKeyup(e) {\r\n      const input = e.currentTarget;\r\n      if (e.key === 'Tab' && input instanceof HTMLInputElement) {\r\n        input.select();\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _onForgotPasswordClick() {\r\n      this.dispatchEvent(new CustomEvent('forgot-password'));\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/button/src/vaadin-button.js';\r\nimport '@vaadin/text-field/src/vaadin-text-field.js';\r\nimport '@vaadin/password-field/src/vaadin-password-field.js';\r\nimport './vaadin-login-form-wrapper.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { LoginFormMixin } from './vaadin-login-form-mixin.js';\r\n\r\n/**\r\n * `<vaadin-login-form>` is a Web Component providing an easy way to require users\r\n * to log in into an application. Note that component has no shadowRoot.\r\n *\r\n * ```\r\n * <vaadin-login-form></vaadin-login-form>\r\n * ```\r\n *\r\n * Component has to be accessible from the `document` layer in order to allow password managers to work properly with form values.\r\n * Using `<vaadin-login-overlay>` allows to always attach the component to the document body.\r\n *\r\n * ### Styling\r\n *\r\n * The component doesn't have a shadowRoot, so the `<form>` and input fields can be styled from a global scope.\r\n * Use `<vaadin-login-form-wrapper>` themable component to apply styles.\r\n *\r\n * The following shadow DOM parts of the `<vaadin-login-form-wrapper>` are available for styling:\r\n *\r\n * Part name      | Description\r\n * ---------------|---------------------------------------------------------|\r\n * `form`         | Container for the entire component's content\r\n * `form-title`   | Title of the login form\r\n * `error-message`| Container for error message, contains error-message-title and error-message-description parts. Hidden by default.\r\n * `error-message-title`       | Container for error message title\r\n * `error-message-description` | Container for error message description\r\n * `footer`  | Container additional information text from `i18n` object\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} disabled-changed - Fired when the `disabled` property changes.\r\n * @fires {CustomEvent} error-changed - Fired when the `error` property changes.\r\n * @fires {CustomEvent} forgot-password - Fired when user clicks on the \"Forgot password\" button.\r\n * @fires {CustomEvent} login - Fired when a user submits the login.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes LoginFormMixin\r\n */\r\nclass LoginForm extends LoginFormMixin(ElementMixin(ThemableMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        vaadin-login-form-wrapper > form > * {\r\n          width: 100%;\r\n        }\r\n      </style>\r\n      <vaadin-login-form-wrapper\r\n        id=\"vaadinLoginFormWrapper\"\r\n        theme$=\"[[_theme]]\"\r\n        error=\"[[error]]\"\r\n        i18n=\"[[i18n]]\"\r\n        heading-level=\"[[headingLevel]]\"\r\n      >\r\n        <form method=\"POST\" action$=\"[[action]]\" on-formdata=\"_onFormData\" slot=\"form\">\r\n          <input id=\"csrf\" type=\"hidden\" />\r\n          <vaadin-text-field\r\n            name=\"username\"\r\n            label=\"[[i18n.form.username]]\"\r\n            error-message=\"[[i18n.errorMessage.username]]\"\r\n            id=\"vaadinLoginUsername\"\r\n            required\r\n            on-keydown=\"_handleInputKeydown\"\r\n            autocapitalize=\"none\"\r\n            autocorrect=\"off\"\r\n            spellcheck=\"false\"\r\n            autocomplete=\"username\"\r\n            manual-validation\r\n          >\r\n            <input type=\"text\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\r\n          </vaadin-text-field>\r\n\r\n          <vaadin-password-field\r\n            name=\"password\"\r\n            label=\"[[i18n.form.password]]\"\r\n            error-message=\"[[i18n.errorMessage.password]]\"\r\n            id=\"vaadinLoginPassword\"\r\n            required\r\n            on-keydown=\"_handleInputKeydown\"\r\n            spellcheck=\"false\"\r\n            autocomplete=\"current-password\"\r\n            manual-validation\r\n          >\r\n            <input type=\"password\" slot=\"input\" on-keyup=\"_handleInputKeyup\" />\r\n          </vaadin-password-field>\r\n        </form>\r\n\r\n        <vaadin-button slot=\"submit\" theme=\"primary contained submit\" on-click=\"submit\" disabled$=\"[[disabled]]\">\r\n          [[i18n.form.submit]]\r\n        </vaadin-button>\r\n\r\n        <vaadin-button\r\n          slot=\"forgot-password\"\r\n          theme=\"tertiary small\"\r\n          on-click=\"_onForgotPasswordClick\"\r\n          hidden$=\"[[noForgotPassword]]\"\r\n        >\r\n          [[i18n.form.forgotPassword]]\r\n        </vaadin-button>\r\n      </vaadin-login-form-wrapper>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-login-form';\r\n  }\r\n\r\n  /**\r\n   * @param {StampedTemplate} dom\r\n   * @return {null}\r\n   * @protected\r\n   */\r\n  _attachDom(dom) {\r\n    this.appendChild(dom);\r\n  }\r\n}\r\n\r\ndefineCustomElement(LoginForm);\r\n\r\nexport { LoginForm };\r\n"],
  "mappings": "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",
  "names": []
}
