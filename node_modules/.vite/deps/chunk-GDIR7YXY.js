import {
  ContextMenuMixin,
  MenuOverlayMixin,
  styles
} from "./chunk-35QMGZNA.js";
import {
  processTemplates
} from "./chunk-KDMU7KRZ.js";
import {
  prevent,
  register
} from "./chunk-KMJME6UN.js";
import {
  ItemMixin
} from "./chunk-XQZHWSYU.js";
import {
  ListMixin
} from "./chunk-NQUFUYCJ.js";
import {
  OverlayClassMixin
} from "./chunk-UF5ES3VB.js";
import {
  OverlayMixin,
  overlayStyles
} from "./chunk-T243RQF2.js";
import {
  isFirefox,
  isIOS
} from "./chunk-VNRF6E57.js";
import {
  ElementMixin
} from "./chunk-QN4QZSZG.js";
import {
  ControllerMixin
} from "./chunk-QZAHM4JN.js";
import {
  isKeyboardActive
} from "./chunk-CXDC5LNX.js";
import {
  ThemableMixin,
  ThemePropertyMixin,
  registerStyles
} from "./chunk-KEWLZU7R.js";
import {
  DirMixin
} from "./chunk-QBLL3FQM.js";
import {
  defineCustomElement
} from "./chunk-AQ7DMXX6.js";
import {
  PolymerElement
} from "./chunk-YBEXGSZO.js";
import {
  html
} from "./chunk-QO5P4LIH.js";

// node_modules/@vaadin/context-menu/src/vaadin-contextmenu-event.js
register({
  name: "vaadin-contextmenu",
  deps: ["touchstart", "touchmove", "touchend", "contextmenu"],
  flow: {
    start: ["touchstart", "contextmenu"],
    end: ["contextmenu"]
  },
  emits: ["vaadin-contextmenu"],
  info: {
    sourceEvent: null
  },
  reset() {
    this.info.sourceEvent = null;
    this._cancelTimer();
    this.info.touchJob = null;
    this.info.touchStartCoords = null;
  },
  _cancelTimer() {
    if (this._timerId) {
      clearTimeout(this._timerId);
      delete this._fired;
    }
  },
  _setSourceEvent(e) {
    this.info.sourceEvent = e;
    const path = e.composedPath();
    this.info.sourceEvent.__composedPath = path;
  },
  touchstart(e) {
    this._setSourceEvent(e);
    this.info.touchStartCoords = {
      x: e.changedTouches[0].clientX,
      y: e.changedTouches[0].clientY
    };
    const t = e.composedPath()[0] || e.target;
    this._timerId = setTimeout(() => {
      const ct = e.changedTouches[0];
      if (!e.shiftKey) {
        if (isIOS) {
          this._fired = true;
          this.fire(t, ct.clientX, ct.clientY);
        }
        prevent("tap");
      }
    }, 500);
  },
  touchmove(e) {
    const moveThreshold = 15;
    const touchStartCoords = this.info.touchStartCoords;
    if (Math.abs(touchStartCoords.x - e.changedTouches[0].clientX) > moveThreshold || Math.abs(touchStartCoords.y - e.changedTouches[0].clientY) > moveThreshold) {
      this._cancelTimer();
    }
  },
  touchend(e) {
    if (this._fired) {
      e.preventDefault();
    }
    this._cancelTimer();
  },
  contextmenu(e) {
    if (!e.shiftKey) {
      this._setSourceEvent(e);
      if (isFirefox && isKeyboardActive()) {
        const keyboardTarget = e.composedPath()[0];
        const targetRect = keyboardTarget.getBoundingClientRect();
        this.fire(keyboardTarget, targetRect.left, targetRect.bottom);
      } else {
        this.fire(e.target, e.clientX, e.clientY);
      }
      prevent("tap");
    }
  },
  fire(target, x, y) {
    const sourceEvent = this.info.sourceEvent;
    const ev = new Event("vaadin-contextmenu", { bubbles: true, cancelable: true, composed: true });
    ev.detail = { x, y, sourceEvent };
    target.dispatchEvent(ev);
    if (ev.defaultPrevented && sourceEvent && sourceEvent.preventDefault) {
      sourceEvent.preventDefault();
    }
  }
});

// node_modules/@vaadin/context-menu/src/vaadin-context-menu-item.js
var ContextMenuItem = class extends ItemMixin(ThemableMixin(DirMixin(PolymerElement))) {
  static get is() {
    return "vaadin-context-menu-item";
  }
  static get template() {
    return html`
      <style>
        :host {
          display: inline-block;
        }

        :host([hidden]) {
          display: none !important;
        }
      </style>
      <span part="checkmark" aria-hidden="true"></span>
      <div part="content">
        <slot></slot>
      </div>
    `;
  }
  /** @protected */
  ready() {
    super.ready();
    this.setAttribute("role", "menuitem");
  }
};
defineCustomElement(ContextMenuItem);

// node_modules/@vaadin/context-menu/src/vaadin-context-menu-list-box.js
var ContextMenuListBox = class extends ListMixin(ThemableMixin(DirMixin(ControllerMixin(PolymerElement)))) {
  static get is() {
    return "vaadin-context-menu-list-box";
  }
  static get template() {
    return html`
      <style>
        :host {
          display: flex;
        }

        :host([hidden]) {
          display: none !important;
        }

        [part='items'] {
          height: 100%;
          width: 100%;
          overflow-y: auto;
          -webkit-overflow-scrolling: touch;
        }
      </style>
      <div part="items">
        <slot></slot>
      </div>
    `;
  }
  static get properties() {
    return {
      // We don't need to define this property since super default is vertical,
      // but we don't want it to be modified, or be shown in the API docs.
      /** @private */
      orientation: {
        readOnly: true
      }
    };
  }
  /**
   * @return {!HTMLElement}
   * @protected
   * @override
   */
  get _scrollerElement() {
    return this.shadowRoot.querySelector('[part="items"]');
  }
  /** @protected */
  ready() {
    super.ready();
    this.setAttribute("role", "menu");
  }
};
defineCustomElement(ContextMenuListBox);

// node_modules/@vaadin/context-menu/src/vaadin-context-menu-overlay.js
registerStyles("vaadin-context-menu-overlay", [overlayStyles, styles], {
  moduleId: "vaadin-context-menu-overlay-styles"
});
var ContextMenuOverlay = class extends MenuOverlayMixin(OverlayMixin(DirMixin(ThemableMixin(PolymerElement)))) {
  static get is() {
    return "vaadin-context-menu-overlay";
  }
  static get template() {
    return html`
      <div id="backdrop" part="backdrop" hidden$="[[!withBackdrop]]"></div>
      <div part="overlay" id="overlay" tabindex="0">
        <div part="content" id="content">
          <slot></slot>
        </div>
      </div>
    `;
  }
};
defineCustomElement(ContextMenuOverlay);

// node_modules/@vaadin/context-menu/src/vaadin-context-menu.js
var ContextMenu = class extends ContextMenuMixin(
  OverlayClassMixin(ControllerMixin(ElementMixin(ThemePropertyMixin(PolymerElement))))
) {
  static get template() {
    return html`
      <style>
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none !important;
        }
      </style>

      <slot id="slot"></slot>
    `;
  }
  static get is() {
    return "vaadin-context-menu";
  }
  /** @protected */
  ready() {
    super.ready();
    processTemplates(this);
  }
  /**
   * @param {DocumentFragment} dom
   * @return {null}
   * @protected
   * @override
   */
  _attachDom(dom) {
    const root = this.attachShadow({ mode: "open" });
    root.appendChild(dom);
    root.appendChild(this._overlayElement);
    return root;
  }
  /**
   * Fired when an item is selected when the context menu is populated using the `items` API.
   *
   * @event item-selected
   * @param {Object} detail
   * @param {Object} detail.value the selected menu item
   */
};
defineCustomElement(ContextMenu);

export {
  ContextMenu
};
/*! Bundled license information:

@vaadin/context-menu/src/vaadin-contextmenu-event.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/context-menu/src/vaadin-context-menu-item.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/context-menu/src/vaadin-context-menu-list-box.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/context-menu/src/vaadin-context-menu-overlay.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)

@vaadin/context-menu/src/vaadin-context-menu.js:
  (**
   * @license
   * Copyright (c) 2016 - 2025 Vaadin Ltd.
   * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
   *)
*/
//# sourceMappingURL=chunk-GDIR7YXY.js.map
