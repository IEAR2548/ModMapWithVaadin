{
  "version": 3,
  "sources": ["../../@vaadin/board/src/vaadin-board.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport './vaadin-board-row.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { BoardRow } from './vaadin-board-row.js';\r\n\r\n/**\r\n * `<vaadin-board>` is a web component to create flexible responsive layouts\r\n * and build nice looking dashboards.\r\n *\r\n * A `<vaadin-board>` is built using `<vaadin-board-row>` elements containing your child elements.\r\n * Each board row consists of four columns, and can contain up to four elements. Using column spans\r\n * you can tune the layout to your liking.\r\n *\r\n * ```html\r\n * <vaadin-board>\r\n *   <vaadin-board-row>\r\n *     <div>This could be chart 1</div>\r\n *     <div>This could be chart 2</div>\r\n *     <div>This could be chart 3</div>\r\n *     <div>This could be chart 4</div>\r\n *   </vaadin-board-row>\r\n * </vaadin-board>\r\n * ```\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ElementMixin\r\n */\r\nclass Board extends ElementMixin(PolymerElement) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: block;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n      </style>\r\n      <slot></slot>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-board';\r\n  }\r\n\r\n  static get cvdlName() {\r\n    return 'vaadin-board';\r\n  }\r\n\r\n  /**\r\n   * Redraws the board and all rows inside it, if necessary.\r\n   *\r\n   * In most cases, board will redraw itself if your reconfigure it. If you dynamically change\r\n   * breakpoints `--vaadin-board-width-small` or `--vaadin-board-width-medium`,\r\n   * then you need to call this method.\r\n   */\r\n  redraw() {\r\n    [...this.querySelectorAll('*')].filter((node) => node instanceof BoardRow).forEach((row) => row.redraw());\r\n  }\r\n}\r\n\r\ndefineCustomElement(Board);\r\n\r\nexport { Board };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,IAAM,QAAN,cAAoB,aAAa,cAAc,EAAE;AAAA,EAC/C,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,WAAW;AACpB,WAAO;AAAA,EACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,SAAS;AACP,KAAC,GAAG,KAAK,iBAAiB,GAAG,CAAC,EAAE,OAAO,CAAC,SAAS,gBAAgB,QAAQ,EAAE,QAAQ,CAAC,QAAQ,IAAI,OAAO,CAAC;AAAA,EAC1G;AACF;AAEA,oBAAoB,KAAK;",
  "names": []
}
