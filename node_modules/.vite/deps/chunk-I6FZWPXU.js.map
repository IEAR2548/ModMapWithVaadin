{
  "version": 3,
  "sources": ["../../ol/src/style/IconAnchorUnits.js", "../../ol/src/style/IconOrigin.js", "../../ol/src/style/IconImageCache.js", "../../ol/src/style/IconImage.js", "../../ol/src/style/Icon.js"],
  "sourcesContent": ["/**\r\n * @module ol/style/IconAnchorUnits\r\n */\r\n\r\n/**\r\n * Icon anchor units. One of 'fraction', 'pixels'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Anchor is a fraction\r\n   * @api\r\n   */\r\n  FRACTION: 'fraction',\r\n  /**\r\n   * Anchor is in pixels\r\n   * @api\r\n   */\r\n  PIXELS: 'pixels',\r\n};\r\n", "/**\r\n * @module ol/style/IconOrigin\r\n */\r\n\r\n/**\r\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Origin is at bottom left\r\n   * @api\r\n   */\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  /**\r\n   * Origin is at bottom right\r\n   * @api\r\n   */\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  /**\r\n   * Origin is at top left\r\n   * @api\r\n   */\r\n  TOP_LEFT: 'top-left',\r\n  /**\r\n   * Origin is at top right\r\n   * @api\r\n   */\r\n  TOP_RIGHT: 'top-right',\r\n};\r\n", "/**\r\n * @module ol/style/IconImageCache\r\n */\r\nimport {asString} from '../color.js';\r\n\r\n/**\r\n * @classdesc\r\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\r\n */\r\nclass IconImageCache {\r\n  constructor() {\r\n    /**\r\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\r\n     * @private\r\n     */\r\n    this.cache_ = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.cacheSize_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxCacheSize_ = 32;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.cache_ = {};\r\n    this.cacheSize_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Can expire cache.\r\n   */\r\n  canExpireCache() {\r\n    return this.cacheSize_ > this.maxCacheSize_;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  expire() {\r\n    if (this.canExpireCache()) {\r\n      let i = 0;\r\n      for (const key in this.cache_) {\r\n        const iconImage = this.cache_[key];\r\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\r\n          delete this.cache_[key];\r\n          --this.cacheSize_;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   * @return {import(\"./IconImage.js\").default} Icon image.\r\n   */\r\n  get(src, crossOrigin, color) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    return key in this.cache_ ? this.cache_[key] : null;\r\n  }\r\n\r\n  /**\r\n   * @param {string} src Src.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\r\n   */\r\n  set(src, crossOrigin, color, iconImage) {\r\n    const key = getKey(src, crossOrigin, color);\r\n    this.cache_[key] = iconImage;\r\n    ++this.cacheSize_;\r\n  }\r\n\r\n  /**\r\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\r\n   * your map uses more than 32 different icon images and you are not caching icon\r\n   * styles on the application level.\r\n   * @param {number} maxCacheSize Cache max size.\r\n   * @api\r\n   */\r\n  setSize(maxCacheSize) {\r\n    this.maxCacheSize_ = maxCacheSize;\r\n    this.expire();\r\n  }\r\n}\r\n\r\n/**\r\n * @param {string} src Src.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {string} Cache key.\r\n */\r\nfunction getKey(src, crossOrigin, color) {\r\n  const colorString = color ? asString(color) : 'null';\r\n  return crossOrigin + ':' + src + ':' + colorString;\r\n}\r\n\r\nexport default IconImageCache;\r\n\r\n/**\r\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\r\n * {@link module:ol/style/Icon~Icon} images.\r\n * @api\r\n */\r\nexport const shared = new IconImageCache();\r\n", "/**\r\n * @module ol/style/IconImage\r\n */\r\n\r\nimport EventTarget from '../events/Target.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ImageState from '../ImageState.js';\r\nimport {asString} from '../color.js';\r\nimport {createCanvasContext2D} from '../dom.js';\r\nimport {shared as iconImageCache} from './IconImageCache.js';\r\nimport {listenImage} from '../Image.js';\r\n\r\n/**\r\n * @type {CanvasRenderingContext2D}\r\n */\r\nlet taintedTestContext = null;\r\n\r\nclass IconImage extends EventTarget {\r\n  /**\r\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n   * @param {string|undefined} src Src.\r\n   * @param {import(\"../size.js\").Size} size Size.\r\n   * @param {?string} crossOrigin Cross origin.\r\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n   * @param {import(\"../color.js\").Color} color Color.\r\n   */\r\n  constructor(image, src, size, crossOrigin, imageState, color) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.hitDetectionImage_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    this.image_ = !image ? new Image() : image;\r\n\r\n    if (crossOrigin !== null) {\r\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<number, HTMLCanvasElement>}\r\n     */\r\n    this.canvas_ = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = color;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?function():void}\r\n     */\r\n    this.unlisten_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    this.imageState_ = imageState;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = size;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.src_ = src;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.tainted_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {boolean} The image canvas is tainted.\r\n   */\r\n  isTainted_() {\r\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\r\n      if (!taintedTestContext) {\r\n        taintedTestContext = createCanvasContext2D(1, 1);\r\n      }\r\n      taintedTestContext.drawImage(this.image_, 0, 0);\r\n      try {\r\n        taintedTestContext.getImageData(0, 0, 1, 1);\r\n        this.tainted_ = false;\r\n      } catch (e) {\r\n        taintedTestContext = null;\r\n        this.tainted_ = true;\r\n      }\r\n    }\r\n    return this.tainted_ === true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  dispatchChangeEvent_() {\r\n    this.dispatchEvent(EventType.CHANGE);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageError_() {\r\n    this.imageState_ = ImageState.ERROR;\r\n    this.unlistenImage_();\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleImageLoad_() {\r\n    this.imageState_ = ImageState.LOADED;\r\n    if (this.size_) {\r\n      this.image_.width = this.size_[0];\r\n      this.image_.height = this.size_[1];\r\n    } else {\r\n      this.size_ = [this.image_.width, this.image_.height];\r\n    }\r\n    this.unlistenImage_();\r\n    this.dispatchChangeEvent_();\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   */\r\n  getImage(pixelRatio) {\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} Image or Canvas element.\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    this.replaceColor_(pixelRatio);\r\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.imageState_;\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    if (!this.hitDetectionImage_) {\r\n      if (this.isTainted_()) {\r\n        const width = this.size_[0];\r\n        const height = this.size_[1];\r\n        const context = createCanvasContext2D(width, height);\r\n        context.fillRect(0, 0, width, height);\r\n        this.hitDetectionImage_ = context.canvas;\r\n      } else {\r\n        this.hitDetectionImage_ = this.image_;\r\n      }\r\n    }\r\n    return this.hitDetectionImage_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getSize() {\r\n    return this.size_;\r\n  }\r\n\r\n  /**\r\n   * @return {string|undefined} Image src.\r\n   */\r\n  getSrc() {\r\n    return this.src_;\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   */\r\n  load() {\r\n    if (this.imageState_ == ImageState.IDLE) {\r\n      this.imageState_ = ImageState.LOADING;\r\n      try {\r\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\r\n      } catch (e) {\r\n        this.handleImageError_();\r\n      }\r\n      this.unlisten_ = listenImage(\r\n        this.image_,\r\n        this.handleImageLoad_.bind(this),\r\n        this.handleImageError_.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @private\r\n   */\r\n  replaceColor_(pixelRatio) {\r\n    if (\r\n      !this.color_ ||\r\n      this.canvas_[pixelRatio] ||\r\n      this.imageState_ !== ImageState.LOADED\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const canvas = document.createElement('canvas');\r\n    this.canvas_[pixelRatio] = canvas;\r\n\r\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\r\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(pixelRatio, pixelRatio);\r\n    ctx.drawImage(this.image_, 0, 0);\r\n\r\n    ctx.globalCompositeOperation = 'multiply';\r\n    // Internet Explorer 11 does not support the multiply operation.\r\n    // If the canvas is tainted in Internet Explorer this still produces\r\n    // a solid color image with the shape of the icon.\r\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\r\n      ctx.fillStyle = asString(this.color_);\r\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\r\n\r\n      ctx.globalCompositeOperation = 'destination-in';\r\n      ctx.drawImage(this.image_, 0, 0);\r\n    } else {\r\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n      const data = imgData.data;\r\n      const r = this.color_[0] / 255.0;\r\n      const g = this.color_[1] / 255.0;\r\n      const b = this.color_[2] / 255.0;\r\n      const a = this.color_[3];\r\n\r\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\r\n        data[i] *= r;\r\n        data[i + 1] *= g;\r\n        data[i + 2] *= b;\r\n        data[i + 3] *= a;\r\n      }\r\n      ctx.putImageData(imgData, 0, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Discards event handlers which listen for load completion or errors.\r\n   *\r\n   * @private\r\n   */\r\n  unlistenImage_() {\r\n    if (this.unlisten_) {\r\n      this.unlisten_();\r\n      this.unlisten_ = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\r\n * @param {string} src Src.\r\n * @param {import(\"../size.js\").Size} size Size.\r\n * @param {?string} crossOrigin Cross origin.\r\n * @param {import(\"../ImageState.js\").default} imageState Image state.\r\n * @param {import(\"../color.js\").Color} color Color.\r\n * @return {IconImage} Icon image.\r\n */\r\nexport function get(image, src, size, crossOrigin, imageState, color) {\r\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\r\n  if (!iconImage) {\r\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\r\n    iconImageCache.set(src, crossOrigin, color, iconImage);\r\n  }\r\n  return iconImage;\r\n}\r\n\r\nexport default IconImage;\r\n", "/**\r\n * @module ol/style/Icon\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport IconAnchorUnits from './IconAnchorUnits.js';\r\nimport IconOrigin from './IconOrigin.js';\r\nimport ImageState from '../ImageState.js';\r\nimport ImageStyle from './Image.js';\r\nimport {asArray} from '../color.js';\r\nimport {assert} from '../asserts.js';\r\nimport {get as getIconImage} from './IconImage.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\r\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\r\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the x value in pixels.\r\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\r\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\r\n * the y value in pixels.\r\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\r\n * the icon will be left as is.\r\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\r\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\r\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\r\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\r\n * provided image must already be loaded. And in that case, it is required\r\n * to provide the size of the image, with the `imgSize` option.\r\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\r\n * sub-rectangle to use from the original icon image.\r\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\r\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\r\n * `top-left` or `top-right`.\r\n * @property {number} [opacity=1] Opacity of the icon.\r\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\r\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\r\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\r\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\r\n * sub-rectangle to use from the origin (sprite) icon image.\r\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\r\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\r\n * @property {string} [src] Image source URI.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Set icon style for vector features.\r\n * @api\r\n */\r\nclass Icon extends ImageStyle {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\r\n\r\n    /**\r\n     * @type {number|import(\"../size.js\").Size}\r\n     */\r\n    const scale = options.scale !== undefined ? options.scale : 1;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    const rotateWithView =\r\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\r\n\r\n    super({\r\n      opacity: opacity,\r\n      rotation: rotation,\r\n      scale: scale,\r\n      displacement:\r\n        options.displacement !== undefined ? options.displacement : [0, 0],\r\n      rotateWithView: rotateWithView,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.normalizedAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconOrigin.js\").default}\r\n     */\r\n    this.anchorOrigin_ =\r\n      options.anchorOrigin !== undefined\r\n        ? options.anchorOrigin\r\n        : IconOrigin.TOP_LEFT;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconAnchorUnits.js\").default}\r\n     */\r\n    this.anchorXUnits_ =\r\n      options.anchorXUnits !== undefined\r\n        ? options.anchorXUnits\r\n        : IconAnchorUnits.FRACTION;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconAnchorUnits.js\").default}\r\n     */\r\n    this.anchorYUnits_ =\r\n      options.anchorYUnits !== undefined\r\n        ? options.anchorYUnits\r\n        : IconAnchorUnits.FRACTION;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?string}\r\n     */\r\n    this.crossOrigin_ =\r\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\r\n\r\n    /**\r\n     * @type {HTMLImageElement|HTMLCanvasElement}\r\n     */\r\n    const image = options.img !== undefined ? options.img : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size|undefined}\r\n     */\r\n    this.imgSize_ = options.imgSize;\r\n\r\n    /**\r\n     * @type {string|undefined}\r\n     */\r\n    let src = options.src;\r\n\r\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\r\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\r\n\r\n    if ((src === undefined || src.length === 0) && image) {\r\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\r\n    }\r\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\r\n\r\n    /**\r\n     * @type {import(\"../ImageState.js\").default}\r\n     */\r\n    const imageState =\r\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../color.js\").Color}\r\n     */\r\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconImage.js\").default}\r\n     */\r\n    this.iconImage_ = getIconImage(\r\n      image,\r\n      /** @type {string} */ (src),\r\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\r\n      this.crossOrigin_,\r\n      imageState,\r\n      this.color_\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\r\n    /**\r\n     * @private\r\n     * @type {import(\"./IconOrigin.js\").default}\r\n     */\r\n    this.offsetOrigin_ =\r\n      options.offsetOrigin !== undefined\r\n        ? options.offsetOrigin\r\n        : IconOrigin.TOP_LEFT;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.origin_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../size.js\").Size}\r\n     */\r\n    this.size_ = options.size !== undefined ? options.size : null;\r\n  }\r\n\r\n  /**\r\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\r\n   * @return {Icon} The cloned style.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const scale = this.getScale();\r\n    return new Icon({\r\n      anchor: this.anchor_.slice(),\r\n      anchorOrigin: this.anchorOrigin_,\r\n      anchorXUnits: this.anchorXUnits_,\r\n      anchorYUnits: this.anchorYUnits_,\r\n      color:\r\n        this.color_ && this.color_.slice\r\n          ? this.color_.slice()\r\n          : this.color_ || undefined,\r\n      crossOrigin: this.crossOrigin_,\r\n      imgSize: this.imgSize_,\r\n      offset: this.offset_.slice(),\r\n      offsetOrigin: this.offsetOrigin_,\r\n      opacity: this.getOpacity(),\r\n      rotateWithView: this.getRotateWithView(),\r\n      rotation: this.getRotation(),\r\n      scale: Array.isArray(scale) ? scale.slice() : scale,\r\n      size: this.size_ !== null ? this.size_.slice() : undefined,\r\n      src: this.getSrc(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the anchor point in pixels. The anchor determines the center point for the\r\n   * symbolizer.\r\n   * @return {Array<number>} Anchor.\r\n   * @api\r\n   */\r\n  getAnchor() {\r\n    let anchor = this.normalizedAnchor_;\r\n    if (!anchor) {\r\n      anchor = this.anchor_;\r\n      const size = this.getSize();\r\n      if (\r\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\r\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\r\n      ) {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        anchor = this.anchor_.slice();\r\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\r\n          anchor[0] *= size[0];\r\n        }\r\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\r\n          anchor[1] *= size[1];\r\n        }\r\n      }\r\n\r\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\r\n        if (!size) {\r\n          return null;\r\n        }\r\n        if (anchor === this.anchor_) {\r\n          anchor = this.anchor_.slice();\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\r\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\r\n        ) {\r\n          anchor[0] = -anchor[0] + size[0];\r\n        }\r\n        if (\r\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\r\n        ) {\r\n          anchor[1] = -anchor[1] + size[1];\r\n        }\r\n      }\r\n      this.normalizedAnchor_ = anchor;\r\n    }\r\n    const displacement = this.getDisplacement();\r\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\r\n  }\r\n\r\n  /**\r\n   * Set the anchor point. The anchor determines the center point for the\r\n   * symbolizer.\r\n   *\r\n   * @param {Array<number>} anchor Anchor.\r\n   * @api\r\n   */\r\n  setAnchor(anchor) {\r\n    this.anchor_ = anchor;\r\n    this.normalizedAnchor_ = null;\r\n  }\r\n\r\n  /**\r\n   * Get the icon color.\r\n   * @return {import(\"../color.js\").Color} Color.\r\n   * @api\r\n   */\r\n  getColor() {\r\n    return this.color_;\r\n  }\r\n\r\n  /**\r\n   * Get the image icon.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\r\n   * @api\r\n   */\r\n  getImage(pixelRatio) {\r\n    return this.iconImage_.getImage(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel ratio.\r\n   * @param {number} pixelRatio Pixel ratio.\r\n   * @return {number} The pixel ratio of the image.\r\n   * @api\r\n   */\r\n  getPixelRatio(pixelRatio) {\r\n    return this.iconImage_.getPixelRatio(pixelRatio);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   */\r\n  getImageSize() {\r\n    return this.iconImage_.getSize();\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../ImageState.js\").default} Image state.\r\n   */\r\n  getImageState() {\r\n    return this.iconImage_.getImageState();\r\n  }\r\n\r\n  /**\r\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\r\n   */\r\n  getHitDetectionImage() {\r\n    return this.iconImage_.getHitDetectionImage();\r\n  }\r\n\r\n  /**\r\n   * Get the origin of the symbolizer.\r\n   * @return {Array<number>} Origin.\r\n   * @api\r\n   */\r\n  getOrigin() {\r\n    if (this.origin_) {\r\n      return this.origin_;\r\n    }\r\n    let offset = this.offset_;\r\n\r\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\r\n      const size = this.getSize();\r\n      const iconImageSize = this.iconImage_.getSize();\r\n      if (!size || !iconImageSize) {\r\n        return null;\r\n      }\r\n      offset = offset.slice();\r\n      if (\r\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\r\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\r\n      ) {\r\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\r\n      }\r\n      if (\r\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\r\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\r\n      ) {\r\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\r\n      }\r\n    }\r\n    this.origin_ = offset;\r\n    return this.origin_;\r\n  }\r\n\r\n  /**\r\n   * Get the image URL.\r\n   * @return {string|undefined} Image src.\r\n   * @api\r\n   */\r\n  getSrc() {\r\n    return this.iconImage_.getSrc();\r\n  }\r\n\r\n  /**\r\n   * Get the size of the icon (in pixels).\r\n   * @return {import(\"../size.js\").Size} Image size.\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  listenImageChange(listener) {\r\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\r\n  }\r\n\r\n  /**\r\n   * Load not yet loaded URI.\r\n   * When rendering a feature with an icon style, the vector renderer will\r\n   * automatically call this method. However, you might want to call this\r\n   * method yourself for preloading or other purposes.\r\n   * @api\r\n   */\r\n  load() {\r\n    this.iconImage_.load();\r\n  }\r\n\r\n  /**\r\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\r\n   */\r\n  unlistenImageChange(listener) {\r\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\r\n  }\r\n}\r\n\r\nexport default Icon;\r\n"],
  "mappings": "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",
  "names": ["IconImageCache", "IconImage", "__extends", "Icon"]
}
