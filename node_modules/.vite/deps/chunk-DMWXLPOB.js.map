{
  "version": 3,
  "sources": ["../../@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2015 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { DataProviderController } from '@vaadin/component-base/src/data-provider-controller/data-provider-controller.js';\r\nimport { ComboBoxPlaceholder } from './vaadin-combo-box-placeholder.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const ComboBoxDataProviderMixin = (superClass) =>\r\n  class DataProviderMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Number of items fetched at a time from the dataprovider.\r\n         * @attr {number} page-size\r\n         * @type {number}\r\n         */\r\n        pageSize: {\r\n          type: Number,\r\n          value: 50,\r\n          observer: '_pageSizeChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Total number of items.\r\n         * @type {number | undefined}\r\n         */\r\n        size: {\r\n          type: Number,\r\n          observer: '_sizeChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Function that provides items lazily. Receives arguments `params`, `callback`\r\n         *\r\n         * `params.page` Requested page index\r\n         *\r\n         * `params.pageSize` Current page size\r\n         *\r\n         * `params.filter` Currently applied filter\r\n         *\r\n         * `callback(items, size)` Callback function with arguments:\r\n         *   - `items` Current page of items\r\n         *   - `size` Total number of items.\r\n         * @type {ComboBoxDataProvider | undefined}\r\n         */\r\n        dataProvider: {\r\n          type: Object,\r\n          observer: '_dataProviderChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        __dataProviderInitialized: {\r\n          type: Boolean,\r\n          value: false,\r\n        },\r\n\r\n        /** @private */\r\n        __previousDataProviderFilter: {\r\n          type: String,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '_dataProviderFilterChanged(filter)',\r\n        '_warnDataProviderValue(dataProvider, value)',\r\n        '_ensureFirstPage(opened)',\r\n      ];\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      /**\r\n       * @type {DataProviderController}\r\n       * @private\r\n       */\r\n      this.__dataProviderController = new DataProviderController(this, {\r\n        placeholder: new ComboBoxPlaceholder(),\r\n        isPlaceholder: (item) => item instanceof ComboBoxPlaceholder,\r\n        dataProviderParams: () => ({ filter: this.filter }),\r\n      });\r\n\r\n      this.__dataProviderController.addEventListener('page-requested', this.__onDataProviderPageRequested.bind(this));\r\n      this.__dataProviderController.addEventListener('page-loaded', this.__onDataProviderPageLoaded.bind(this));\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      this._scroller.addEventListener('index-requested', (e) => {\r\n        if (!this._shouldFetchData()) {\r\n          return;\r\n        }\r\n\r\n        const index = e.detail.index;\r\n        if (index !== undefined) {\r\n          this.__dataProviderController.ensureFlatIndexLoaded(index);\r\n        }\r\n      });\r\n\r\n      this.__dataProviderInitialized = true;\r\n\r\n      if (this.dataProvider) {\r\n        this.__synchronizeControllerState();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _dataProviderFilterChanged(filter) {\r\n      if (this.__previousDataProviderFilter === undefined && filter === '') {\r\n        this.__previousDataProviderFilter = filter;\r\n        return;\r\n      }\r\n\r\n      if (this.__previousDataProviderFilter !== filter) {\r\n        this.__previousDataProviderFilter = filter;\r\n\r\n        this.__keepOverlayOpened = true;\r\n        this.size = undefined;\r\n        this.clearCache();\r\n        this.__keepOverlayOpened = false;\r\n      }\r\n    }\r\n\r\n    /** @protected */\r\n    _shouldFetchData() {\r\n      if (!this.dataProvider) {\r\n        return false;\r\n      }\r\n\r\n      return this.opened || (this.filter && this.filter.length);\r\n    }\r\n\r\n    /** @private */\r\n    _ensureFirstPage(opened) {\r\n      if (!this._shouldFetchData() || !opened) {\r\n        return;\r\n      }\r\n\r\n      if (this._forceNextRequest || this.size === undefined) {\r\n        this._forceNextRequest = false;\r\n        this.__dataProviderController.loadFirstPage();\r\n      } else if (this.size > 0) {\r\n        this.__dataProviderController.ensureFlatIndexLoaded(0);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onDataProviderPageRequested() {\r\n      this.loading = true;\r\n    }\r\n\r\n    /** @private */\r\n    __onDataProviderPageLoaded() {\r\n      // The controller adds new items to the cache through mutation,\r\n      // so we need to create a new array to trigger filteredItems observers.\r\n      const { rootCache } = this.__dataProviderController;\r\n      rootCache.items = [...rootCache.items];\r\n\r\n      this.__synchronizeControllerState();\r\n\r\n      if (!this.opened && !this._isInputFocused()) {\r\n        this._commitValue();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Clears the cached pages and reloads data from dataprovider when needed.\r\n     */\r\n    clearCache() {\r\n      if (!this.dataProvider) {\r\n        return;\r\n      }\r\n\r\n      this.__dataProviderController.clearCache();\r\n\r\n      this.__synchronizeControllerState();\r\n\r\n      if (this._shouldFetchData()) {\r\n        this._forceNextRequest = false;\r\n        this.__dataProviderController.loadFirstPage();\r\n      } else {\r\n        this._forceNextRequest = true;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * When the size change originates externally, synchronizes the new size with\r\n     * the controller and request a content update to re-render the scroller.\r\n     *\r\n     * @private\r\n     */\r\n    _sizeChanged(size) {\r\n      const { rootCache } = this.__dataProviderController;\r\n      if (rootCache.size !== size) {\r\n        rootCache.size = size;\r\n        // The controller adds new placeholders to the cache through mutation,\r\n        // so we need to create a new array to trigger filteredItems observers.\r\n        rootCache.items = [...rootCache.items];\r\n        this.__synchronizeControllerState();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * When the items change originates externally, synchronizes the new items with\r\n     * the controller and requests a content update to re-render the scroller.\r\n     *\r\n     * @private\r\n     * @override\r\n     */\r\n    _filteredItemsChanged(items) {\r\n      super._filteredItemsChanged(items);\r\n\r\n      if (this.dataProvider && items) {\r\n        const { rootCache } = this.__dataProviderController;\r\n        if (rootCache.items !== items) {\r\n          rootCache.items = items;\r\n          this.__synchronizeControllerState();\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Synchronizes the controller's state with the component, which can be\r\n     * out of sync after the controller receives new data from the data provider\r\n     * or if the state in the controller is directly manipulated.\r\n     *\r\n     * @private\r\n     */\r\n    __synchronizeControllerState() {\r\n      // When the data provider isn't initialized, it means the content update was requested\r\n      // by an observer before the `ready()` callback. In such cases, some properties\r\n      // in the data provider controller might still be uninitialized, so it's not safe\r\n      // to use them to update the component's properties yet. Another content update\r\n      // will be requested in the `ready()` callback.\r\n      if (this.__dataProviderInitialized && this.dataProvider) {\r\n        const { rootCache } = this.__dataProviderController;\r\n        this.size = rootCache.size;\r\n        this.filteredItems = rootCache.items;\r\n        this.loading = this.__dataProviderController.isLoading();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _pageSizeChanged(pageSize, oldPageSize) {\r\n      if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\r\n        this.pageSize = oldPageSize;\r\n        throw new Error('`pageSize` value must be an integer > 0');\r\n      }\r\n\r\n      this.__dataProviderController.setPageSize(pageSize);\r\n      this.clearCache();\r\n    }\r\n\r\n    /** @private */\r\n    _dataProviderChanged(dataProvider, oldDataProvider) {\r\n      this._ensureItemsOrDataProvider(() => {\r\n        this.dataProvider = oldDataProvider;\r\n      });\r\n\r\n      this.__dataProviderController.setDataProvider(dataProvider);\r\n      this.clearCache();\r\n    }\r\n\r\n    /** @private */\r\n    _ensureItemsOrDataProvider(restoreOldValueCallback) {\r\n      if (this.items !== undefined && this.dataProvider !== undefined) {\r\n        restoreOldValueCallback();\r\n        throw new Error('Using `items` and `dataProvider` together is not supported');\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _warnDataProviderValue(dataProvider, value) {\r\n      if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\r\n        const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\r\n        if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\r\n          console.warn(\r\n            'Warning: unable to determine the label for the provided `value`. ' +\r\n              'Nothing to display in the text field. This usually happens when ' +\r\n              'setting an initial `value` before any items are returned from ' +\r\n              'the `dataProvider` callback. Consider setting `selectedItem` ' +\r\n              'instead of `value`',\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n"],
  "mappings": "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",
  "names": []
}
