{
  "version": 3,
  "sources": ["../../@vaadin/a11y-base/src/keyboard-direction-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2022 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { isElementFocused, isElementHidden } from './focus-utils.js';\r\nimport { KeyboardMixin } from './keyboard-mixin.js';\r\n\r\n/**\r\n * A mixin for navigating items with keyboard.\r\n *\r\n * @polymerMixin\r\n * @mixes KeyboardMixin\r\n */\r\nexport const KeyboardDirectionMixin = (superclass) =>\r\n  class KeyboardDirectionMixinClass extends KeyboardMixin(superclass) {\r\n    /**\r\n     * @return {Element | null}\r\n     * @protected\r\n     */\r\n    get focused() {\r\n      return (this._getItems() || []).find(isElementFocused);\r\n    }\r\n\r\n    /**\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    get _vertical() {\r\n      return true;\r\n    }\r\n\r\n    /** @protected */\r\n    focus() {\r\n      const items = this._getItems();\r\n      if (Array.isArray(items)) {\r\n        const idx = this._getAvailableIndex(items, 0, null, (item) => !isElementHidden(item));\r\n        if (idx >= 0) {\r\n          this._focus(idx);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get the list of items participating in keyboard navigation.\r\n     * By default, it treats all the light DOM children as items.\r\n     * Override this method to provide custom list of elements.\r\n     *\r\n     * @return {Element[]}\r\n     * @protected\r\n     */\r\n    _getItems() {\r\n      return Array.from(this.children);\r\n    }\r\n\r\n    /**\r\n     * Override an event listener from `KeyboardMixin`.\r\n     *\r\n     * @param {!KeyboardEvent} event\r\n     * @protected\r\n     * @override\r\n     */\r\n    _onKeyDown(event) {\r\n      super._onKeyDown(event);\r\n\r\n      if (event.metaKey || event.ctrlKey) {\r\n        return;\r\n      }\r\n\r\n      const { key } = event;\r\n      const items = this._getItems() || [];\r\n      const currentIdx = items.indexOf(this.focused);\r\n\r\n      let idx;\r\n      let increment;\r\n\r\n      const isRTL = !this._vertical && this.getAttribute('dir') === 'rtl';\r\n      const dirIncrement = isRTL ? -1 : 1;\r\n\r\n      if (this.__isPrevKey(key)) {\r\n        increment = -dirIncrement;\r\n        idx = currentIdx - dirIncrement;\r\n      } else if (this.__isNextKey(key)) {\r\n        increment = dirIncrement;\r\n        idx = currentIdx + dirIncrement;\r\n      } else if (key === 'Home') {\r\n        increment = 1;\r\n        idx = 0;\r\n      } else if (key === 'End') {\r\n        increment = -1;\r\n        idx = items.length - 1;\r\n      }\r\n\r\n      idx = this._getAvailableIndex(items, idx, increment, (item) => !isElementHidden(item));\r\n\r\n      if (idx >= 0) {\r\n        event.preventDefault();\r\n        this._focus(idx, true);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    __isPrevKey(key) {\r\n      return this._vertical ? key === 'ArrowUp' : key === 'ArrowLeft';\r\n    }\r\n\r\n    /**\r\n     * @param {string} key\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    __isNextKey(key) {\r\n      return this._vertical ? key === 'ArrowDown' : key === 'ArrowRight';\r\n    }\r\n\r\n    /**\r\n     * Focus the item at given index. Override this method to add custom logic.\r\n     *\r\n     * @param {number} index\r\n     * @param {boolean} navigating\r\n     * @protected\r\n     */\r\n    _focus(index, navigating = false) {\r\n      const items = this._getItems();\r\n\r\n      this._focusItem(items[index], navigating);\r\n    }\r\n\r\n    /**\r\n     * Focus the given item. Override this method to add custom logic.\r\n     *\r\n     * @param {Element} item\r\n     * @param {boolean} navigating\r\n     * @protected\r\n     */\r\n    _focusItem(item) {\r\n      if (item) {\r\n        item.focus();\r\n\r\n        // Generally, the items are expected to implement `FocusMixin`\r\n        // that would set this attribute based on the `keydown` event.\r\n        // We set it manually to handle programmatic focus() calls.\r\n        item.setAttribute('focus-ring', '');\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns index of the next item that satisfies the given condition,\r\n     * based on the index of the current item and a numeric increment.\r\n     *\r\n     * @param {Element[]} items - array of items to iterate over\r\n     * @param {number} index - index of the current item\r\n     * @param {number} increment - numeric increment, can be either 1 or -1\r\n     * @param {Function} condition - function used to check the item\r\n     * @return {number}\r\n     * @protected\r\n     */\r\n    _getAvailableIndex(items, index, increment, condition) {\r\n      const totalItems = items.length;\r\n      let idx = index;\r\n      for (let i = 0; typeof idx === 'number' && i < totalItems; i += 1, idx += increment || 1) {\r\n        if (idx < 0) {\r\n          idx = totalItems - 1;\r\n        } else if (idx >= totalItems) {\r\n          idx = 0;\r\n        }\r\n\r\n        const item = items[idx];\r\n\r\n        if (this._isItemFocusable(item) && this.__isMatchingItem(item, condition)) {\r\n          return idx;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * Returns true if the item matches condition.\r\n     *\r\n     * @param {Element} item - item to check\r\n     * @param {Function} condition - function used to check the item\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    __isMatchingItem(item, condition) {\r\n      return typeof condition === 'function' ? condition(item) : true;\r\n    }\r\n\r\n    /**\r\n     * Returns whether the item is focusable. By default,\r\n     * returns true if the item is not disabled.\r\n     *\r\n     * @param {Element} item\r\n     * @return {boolean}\r\n     * @protected\r\n     */\r\n    _isItemFocusable(item) {\r\n      return !item.hasAttribute('disabled');\r\n    }\r\n  };\r\n"],
  "mappings": "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",
  "names": []
}
