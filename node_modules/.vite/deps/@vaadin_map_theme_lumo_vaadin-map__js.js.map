{
  "version": 3,
  "sources": ["../../@vaadin/map/theme/lumo/vaadin-map-styles.js", "../../ol/src/MapEventType.js", "../../ol/src/control/Control.js", "../../ol/src/control/Attribution.js", "../../ol/src/control/Rotate.js", "../../ol/src/control/Zoom.js", "../../ol/src/MapProperty.js", "../../ol/src/control/FullScreen.js", "../../ol/src/pointer/EventType.js", "../../ol/src/control/MousePosition.js", "../../ol/src/renderer/Map.js", "../../ol/src/renderer/Composite.js", "../../ol/src/OverlayPositioning.js", "../../ol/src/Overlay.js", "../../ol/src/layer/Group.js", "../../ol/src/MapEvent.js", "../../ol/src/MapBrowserEvent.js", "../../ol/src/MapBrowserEventHandler.js", "../../ol/src/structs/PriorityQueue.js", "../../ol/src/TileQueue.js", "../../ol/src/PluggableMap.js", "../../ol/src/control/OverviewMap.js", "../../ol/src/control/ScaleLine.js", "../../ol/src/control/ZoomSlider.js", "../../ol/src/control/ZoomToExtent.js", "../../ol/src/control.js", "../../ol/src/interaction/DoubleClickZoom.js", "../../ol/src/interaction/DragPan.js", "../../ol/src/interaction/DragRotate.js", "../../ol/src/render/Box.js", "../../ol/src/interaction/DragBox.js", "../../ol/src/interaction/DragZoom.js", "../../ol/src/events/KeyCode.js", "../../ol/src/interaction/KeyboardPan.js", "../../ol/src/interaction/KeyboardZoom.js", "../../ol/src/Kinetic.js", "../../ol/src/interaction/MouseWheelZoom.js", "../../ol/src/interaction/PinchRotate.js", "../../ol/src/interaction/PinchZoom.js", "../../ol/src/interaction/DragAndDrop.js", "../../ol/src/interaction/DragRotateAndZoom.js", "../../ol/src/geom/Circle.js", "../../ol/src/geom/flat/interpolate.js", "../../ol/src/geom/LineString.js", "../../ol/src/geom/MultiLineString.js", "../../ol/src/geom/MultiPoint.js", "../../ol/src/geom/flat/center.js", "../../ol/src/geom/MultiPolygon.js", "../../ol/src/interaction/Draw.js", "../../ol/src/interaction/Extent.js", "../../ol/src/interaction/Modify.js", "../../ol/src/interaction/Select.js", "../../ol/src/interaction/Snap.js", "../../ol/src/interaction.js", "../../ol/src/Map.js", "../../@vaadin/map/src/vaadin-map-mixin.js", "../../@vaadin/map/src/vaadin-map-styles.js", "../../@vaadin/map/src/vaadin-map.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-map',\r\n  css`\r\n    :host {\r\n      font-family: var(--lumo-font-family);\r\n      font-size: var(--lumo-font-size-m);\r\n      --vaadin-map-controls-inset: var(--lumo-space-xs);\r\n      --vaadin-map-icon-zoom-in: var(--lumo-icons-plus);\r\n      --vaadin-map-icon-zoom-out: var(--lumo-icons-minus);\r\n      --vaadin-map-icon-compass: var(--lumo-icons-arrow-up);\r\n      --vaadin-map-icon-overview-map-collapse: var(--lumo-icons-angle-down);\r\n      --vaadin-map-icon-overview-map-expand: var(--lumo-icons-angle-up);\r\n      --vaadin-map-icon-close: var(--lumo-icons-cross);\r\n      --vaadin-map-icon-attribution-collapse: var(--lumo-icons-angle-right);\r\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n    }\r\n\r\n    :host(:not([theme~='borderless'])) {\r\n      border-radius: var(--lumo-border-radius-l);\r\n      position: relative;\r\n    }\r\n\r\n    :host(:not([theme~='borderless']))::before {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 0;\r\n      border: 1px solid var(--lumo-contrast-10pct);\r\n      border-radius: inherit;\r\n      z-index: 1;\r\n      pointer-events: none;\r\n    }\r\n\r\n    :host([focus-ring]) {\r\n      box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n    }\r\n\r\n    .ol-control,\r\n    .ol-scale-bar,\r\n    .ol-scale-line {\r\n      margin: var(--lumo-space-xs);\r\n    }\r\n\r\n    .ol-control {\r\n      border-radius: var(--lumo-border-radius-m);\r\n      transition:\r\n        0.15s box-shadow,\r\n        0.15s background-color;\r\n      -webkit-backdrop-filter: blur(8px);\r\n    }\r\n\r\n    .ol-control:hover {\r\n      background-color: var(--lumo-base-color);\r\n    }\r\n\r\n    .ol-control:not(.ol-uncollapsible):hover {\r\n      box-shadow: var(--lumo-box-shadow-s);\r\n      background-color: var(--lumo-shade-20pct);\r\n    }\r\n\r\n    .ol-control button {\r\n      width: var(--lumo-size-s);\r\n      height: var(--lumo-size-s);\r\n      border-radius: inherit;\r\n      font-family: 'lumo-icons';\r\n      font-size: var(--lumo-icon-size-s);\r\n      font-weight: 400;\r\n    }\r\n\r\n    .ol-control button,\r\n    .ol-attribution:not(.ol-uncollapsible) ul {\r\n      transition: 0.15s opacity;\r\n      background-color: var(--lumo-base-color);\r\n      color: var(--lumo-body-text-color);\r\n      opacity: 0.65;\r\n    }\r\n\r\n    .ol-control:hover button,\r\n    .ol-control button:focus,\r\n    .ol-attribution:hover ul {\r\n      opacity: 1;\r\n    }\r\n\r\n    .ol-control button:hover {\r\n      color: var(--lumo-primary-text-color);\r\n    }\r\n\r\n    .ol-control button:active {\r\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\r\n    }\r\n\r\n    @supports not selector(:focus-visible) {\r\n      .ol-control button:focus {\r\n        outline: none;\r\n        box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n      }\r\n    }\r\n\r\n    .ol-control button:focus-visible {\r\n      outline: none;\r\n      box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n    }\r\n\r\n    .ol-zoom {\r\n      gap: 2px;\r\n    }\r\n\r\n    button.ol-zoom-in {\r\n      border-bottom-left-radius: 0;\r\n      border-bottom-right-radius: 0;\r\n    }\r\n\r\n    button.ol-zoom-out {\r\n      border-top-left-radius: 0;\r\n      border-top-right-radius: 0;\r\n    }\r\n\r\n    .ol-attribution.ol-uncollapsible {\r\n      border-radius: var(--lumo-border-radius-m) 0 0 0;\r\n    }\r\n\r\n    .ol-attribution ul {\r\n      font-size: var(--lumo-font-size-xxs);\r\n      color: var(--lumo-secondary-text-color);\r\n      padding: var(--lumo-space-xs) var(--lumo-space-s);\r\n      cursor: default;\r\n    }\r\n\r\n    .ol-attribution:not(.ol-uncollapsible) ul {\r\n      background-color: var(--lumo-base-color);\r\n    }\r\n\r\n    .ol-attribution a {\r\n      color: inherit;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .ol-scale-bar-inner {\r\n      border-radius: var(--lumo-border-radius-s);\r\n    }\r\n\r\n    .ol-full-screen {\r\n      height: var(--lumo-size-s);\r\n    }\r\n\r\n    .ol-overviewmap:not(.ol-collapsed),\r\n    .ol-overviewmap:not(.ol-collapsed):hover {\r\n      background-color: var(--lumo-base-color);\r\n      box-shadow: var(--lumo-box-shadow-s);\r\n      transition: 0.15s box-shadow;\r\n    }\r\n\r\n    .ol-overviewmap-map {\r\n      margin: var(--lumo-space-xs);\r\n      border: 0;\r\n      border-radius: var(--lumo-border-radius-s);\r\n    }\r\n\r\n    .ol-overviewmap:not(.ol-uncollapsible) .ol-overviewmap-map {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .ol-zoomslider:not(.ol-uncollapsible):hover {\r\n      box-shadow: none;\r\n      overflow: visible;\r\n    }\r\n\r\n    .ol-zoomslider button {\r\n      height: var(--lumo-space-m);\r\n    }\r\n\r\n    .ol-zoomslider:hover button {\r\n      box-shadow: var(--lumo-box-shadow-s);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-map' },\r\n);\r\n", "/**\r\n * @module ol/MapEventType\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  /**\r\n   * Triggered after a map frame is rendered.\r\n   * @event module:ol/MapEvent~MapEvent#postrender\r\n   * @api\r\n   */\r\n  POSTRENDER: 'postrender',\r\n\r\n  /**\r\n   * Triggered when the map starts moving.\r\n   * @event module:ol/MapEvent~MapEvent#movestart\r\n   * @api\r\n   */\r\n  MOVESTART: 'movestart',\r\n\r\n  /**\r\n   * Triggered after the map is moved.\r\n   * @event module:ol/MapEvent~MapEvent#moveend\r\n   * @api\r\n   */\r\n  MOVEEND: 'moveend',\r\n};\r\n\r\n/***\r\n * @typedef {'postrender'|'movestart'|'moveend'} Types\r\n */\r\n", "/**\r\n * @module ol/control/Control\r\n */\r\nimport BaseObject from '../Object.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport {VOID} from '../functions.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {removeNode} from '../dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {HTMLElement} [element] The element is the control's\r\n * container element. This only needs to be specified if you're developing\r\n * a custom control.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want\r\n * the control to be rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control is a visible widget with a DOM element in a fixed position on the\r\n * screen. They can involve user input (buttons), or be informational only;\r\n * the position is determined using CSS. By default these are placed in the\r\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\r\n * any outside DOM element.\r\n *\r\n * This is the base class for controls. You can use it for simple custom\r\n * controls by creating the element with listeners, creating an instance:\r\n * ```js\r\n * var myControl = new Control({element: myElement});\r\n * ```\r\n * and then adding this to the map.\r\n *\r\n * The main advantage of having this as a control rather than a simple separate\r\n * DOM element is that preventing propagation is handled for you. Controls\r\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\r\n *\r\n * You can also extend this base for your own control class. See\r\n * examples/custom-controls for an example of how to do this.\r\n *\r\n * @api\r\n */\r\nclass Control extends BaseObject {\r\n  /**\r\n   * @param {Options} options Control options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    const element = options.element;\r\n    if (element && !options.target && !element.style.pointerEvents) {\r\n      element.style.pointerEvents = 'auto';\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = element ? element : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.target_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.listenerKeys = [];\r\n\r\n    if (options.render) {\r\n      this.render = options.render;\r\n    }\r\n\r\n    if (options.target) {\r\n      this.setTarget(options.target);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    removeNode(this.element);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this control.\r\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      removeNode(this.element);\r\n    }\r\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\r\n      unlistenByKey(this.listenerKeys[i]);\r\n    }\r\n    this.listenerKeys.length = 0;\r\n    this.map_ = map;\r\n    if (map) {\r\n      const target = this.target_\r\n        ? this.target_\r\n        : map.getOverlayContainerStopEvent();\r\n      target.appendChild(this.element);\r\n      if (this.render !== VOID) {\r\n        this.listenerKeys.push(\r\n          listen(map, MapEventType.POSTRENDER, this.render, this)\r\n        );\r\n      }\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the control.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @api\r\n   */\r\n  render(mapEvent) {}\r\n\r\n  /**\r\n   * This function is used to set a target element for the control. It has no\r\n   * effect if it is called after the control has been added to the map (i.e.\r\n   * after `setMap` is called on the control). If no `target` is set in the\r\n   * options passed to the control constructor and if `setTarget` is not called\r\n   * then the control is added to the map's overlay container.\r\n   * @param {HTMLElement|string} target Target.\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.target_ =\r\n      typeof target === 'string' ? document.getElementById(target) : target;\r\n  }\r\n}\r\n\r\nexport default Control;\r\n", "/**\r\n * @module ol/control/Attribution\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {equals} from '../array.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {removeChildren, replaceNode} from '../dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-attribution'] CSS class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you\r\n * want the control to be rendered outside of the map's\r\n * viewport.\r\n * @property {boolean} [collapsible] Specify if attributions can\r\n * be collapsed. If not specified, sources control this behavior with their\r\n * `attributionsCollapsible` setting.\r\n * @property {boolean} [collapsed=true] Specify if attributions should\r\n * be collapsed at startup.\r\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\r\n * @property {string|HTMLElement} [label='i'] Text label to use for the\r\n * collapsed attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\r\n * collapsed attributions button.\r\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\r\n * for the expanded attributions button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\r\n * expanded attributions button.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\r\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Control to show all the attributions associated with the layer sources\r\n * in the map. This control is one of the default controls included in maps.\r\n * By default it will show in the bottom right portion of the map, but this can\r\n * be changed by using a css selector for `.ol-attribution`.\r\n *\r\n * @api\r\n */\r\nclass Attribution extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Attribution options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.ulElement_ = document.createElement('ul');\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsed_ =\r\n      options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.userCollapsed_ = this.collapsed_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.overrideCollapsible_ = options.collapsible !== undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ =\r\n      options.collapsible !== undefined ? options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-attribution';\r\n\r\n    const tipLabel =\r\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\r\n\r\n    const expandClassName =\r\n      options.expandClassName !== undefined\r\n        ? options.expandClassName\r\n        : className + '-expand';\r\n\r\n    const collapseLabel =\r\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\r\n\r\n    const collapseClassName =\r\n      options.collapseClassName !== undefined\r\n        ? options.collapseClassName\r\n        : className + '-collapse';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n      this.collapseLabel_.className = collapseClassName;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : 'i';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n      this.label_.className = expandClassName;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel =\r\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.toggleButton_ = document.createElement('button');\r\n    this.toggleButton_.setAttribute('type', 'button');\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n    this.toggleButton_.title = tipLabel;\r\n    this.toggleButton_.appendChild(activeLabel);\r\n\r\n    this.toggleButton_.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className +\r\n      ' ' +\r\n      CLASS_UNSELECTABLE +\r\n      ' ' +\r\n      CLASS_CONTROL +\r\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.toggleButton_);\r\n    element.appendChild(this.ulElement_);\r\n\r\n    /**\r\n     * A list of currently rendered resolutions.\r\n     * @type {Array<string>}\r\n     * @private\r\n     */\r\n    this.renderedAttributions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * Collect a list of visible attributions and set the collapsible state.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @return {Array<string>} Attributions.\r\n   * @private\r\n   */\r\n  collectSourceAttributions_(frameState) {\r\n    /**\r\n     * Used to determine if an attribution already exists.\r\n     * @type {!Object<string, boolean>}\r\n     */\r\n    const lookup = {};\r\n\r\n    /**\r\n     * A list of visible attributions.\r\n     * @type {Array<string>}\r\n     */\r\n    const visibleAttributions = [];\r\n\r\n    let collapsible = true;\r\n    const layerStatesArray = frameState.layerStatesArray;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      if (!inView(layerState, frameState.viewState)) {\r\n        continue;\r\n      }\r\n\r\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\r\n        layerState.layer\r\n      ).getSource();\r\n      if (!source) {\r\n        continue;\r\n      }\r\n\r\n      const attributionGetter = source.getAttributions();\r\n      if (!attributionGetter) {\r\n        continue;\r\n      }\r\n\r\n      const attributions = attributionGetter(frameState);\r\n      if (!attributions) {\r\n        continue;\r\n      }\r\n\r\n      collapsible =\r\n        collapsible && source.getAttributionsCollapsible() !== false;\r\n\r\n      if (Array.isArray(attributions)) {\r\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\r\n          if (!(attributions[j] in lookup)) {\r\n            visibleAttributions.push(attributions[j]);\r\n            lookup[attributions[j]] = true;\r\n          }\r\n        }\r\n      } else {\r\n        if (!(attributions in lookup)) {\r\n          visibleAttributions.push(attributions);\r\n          lookup[attributions] = true;\r\n        }\r\n      }\r\n    }\r\n    if (!this.overrideCollapsible_) {\r\n      this.setCollapsible(collapsible);\r\n    }\r\n    return visibleAttributions;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  updateElement_(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const attributions = this.collectSourceAttributions_(frameState);\r\n\r\n    const visible = attributions.length > 0;\r\n    if (this.renderedVisible_ != visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.renderedVisible_ = visible;\r\n    }\r\n\r\n    if (equals(attributions, this.renderedAttributions_)) {\r\n      return;\r\n    }\r\n\r\n    removeChildren(this.ulElement_);\r\n\r\n    // append the attributions\r\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\r\n      const element = document.createElement('li');\r\n      element.innerHTML = attributions[i];\r\n      this.ulElement_.appendChild(element);\r\n    }\r\n\r\n    this.renderedAttributions_ = attributions;\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n    this.userCollapsed_ = this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the attribution is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the attribution should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (this.userCollapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the attribution according to the passed parameter. Will\r\n   * not do anything if the attribution isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    this.userCollapsed_ = collapsed;\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Return `true` when the attribution is currently collapsed or `false`\r\n   * otherwise.\r\n   * @return {boolean} True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Update the attribution element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    this.updateElement_(mapEvent.frameState);\r\n  }\r\n}\r\n\r\nexport default Attribution;\r\n", "/**\r\n * @module ol/control/Rotate\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-rotate'] CSS class name.\r\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\r\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\r\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {function():void} [resetNorth] Function called when the control is clicked.\r\n * This will override the default `resetNorth`.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A button control to reset rotation to 0.\r\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\r\n * selector is added to the button when the rotation is 0.\r\n *\r\n * @api\r\n */\r\nclass Rotate extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Rotate options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-rotate';\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u21E7';\r\n\r\n    const compassClassName =\r\n      options.compassClassName !== undefined\r\n        ? options.compassClassName\r\n        : 'ol-compass';\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.label_ = null;\r\n\r\n    if (typeof label === 'string') {\r\n      this.label_ = document.createElement('span');\r\n      this.label_.className = compassClassName;\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n      this.label_.classList.add(compassClassName);\r\n    }\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\r\n\r\n    const button = document.createElement('button');\r\n    button.className = className + '-reset';\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(this.label_);\r\n\r\n    button.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n\r\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.rotation_ = undefined;\r\n\r\n    if (this.autoHide_) {\r\n      this.element.classList.add(CLASS_HIDDEN);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    if (this.callResetNorth_ !== undefined) {\r\n      this.callResetNorth_();\r\n    } else {\r\n      this.resetNorth_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  resetNorth_() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const rotation = view.getRotation();\r\n    if (rotation !== undefined) {\r\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\r\n        view.animate({\r\n          rotation: 0,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setRotation(0);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the rotate control element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    const frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n      return;\r\n    }\r\n    const rotation = frameState.viewState.rotation;\r\n    if (rotation != this.rotation_) {\r\n      const transform = 'rotate(' + rotation + 'rad)';\r\n      if (this.autoHide_) {\r\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\r\n        if (!contains && rotation === 0) {\r\n          this.element.classList.add(CLASS_HIDDEN);\r\n        } else if (contains && rotation !== 0) {\r\n          this.element.classList.remove(CLASS_HIDDEN);\r\n        }\r\n      }\r\n      this.label_.style.transform = transform;\r\n    }\r\n    this.rotation_ = rotation;\r\n  }\r\n}\r\n\r\nexport default Rotate;\r\n", "/**\r\n * @module ol/control/Zoom\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {easeOut} from '../easing.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {string} [className='ol-zoom'] CSS class name.\r\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\r\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\r\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\r\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\r\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\r\n * @property {number} [delta=1] The zoom delta applied on each click.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\r\n * rendered outside of the map's viewport.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control with 2 buttons, one for zoom in and one for zoom out.\r\n * This control is one of the default controls of a map. To style this control\r\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\r\n *\r\n * @api\r\n */\r\nclass Zoom extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Zoom options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target,\r\n    });\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoom';\r\n\r\n    const delta = options.delta !== undefined ? options.delta : 1;\r\n\r\n    const zoomInClassName =\r\n      options.zoomInClassName !== undefined\r\n        ? options.zoomInClassName\r\n        : className + '-in';\r\n\r\n    const zoomOutClassName =\r\n      options.zoomOutClassName !== undefined\r\n        ? options.zoomOutClassName\r\n        : className + '-out';\r\n\r\n    const zoomInLabel =\r\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\r\n    const zoomOutLabel =\r\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\r\n\r\n    const zoomInTipLabel =\r\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\r\n    const zoomOutTipLabel =\r\n      options.zoomOutTipLabel !== undefined\r\n        ? options.zoomOutTipLabel\r\n        : 'Zoom out';\r\n\r\n    const inElement = document.createElement('button');\r\n    inElement.className = zoomInClassName;\r\n    inElement.setAttribute('type', 'button');\r\n    inElement.title = zoomInTipLabel;\r\n    inElement.appendChild(\r\n      typeof zoomInLabel === 'string'\r\n        ? document.createTextNode(zoomInLabel)\r\n        : zoomInLabel\r\n    );\r\n\r\n    inElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, delta),\r\n      false\r\n    );\r\n\r\n    const outElement = document.createElement('button');\r\n    outElement.className = zoomOutClassName;\r\n    outElement.setAttribute('type', 'button');\r\n    outElement.title = zoomOutTipLabel;\r\n    outElement.appendChild(\r\n      typeof zoomOutLabel === 'string'\r\n        ? document.createTextNode(zoomOutLabel)\r\n        : zoomOutLabel\r\n    );\r\n\r\n    outElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this, -delta),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(inElement);\r\n    element.appendChild(outElement);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(delta, event) {\r\n    event.preventDefault();\r\n    this.zoomByDelta_(delta);\r\n  }\r\n\r\n  /**\r\n   * @param {number} delta Zoom delta.\r\n   * @private\r\n   */\r\n  zoomByDelta_(delta) {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    if (!view) {\r\n      // the map does not have a view, so we can't act\r\n      // upon it\r\n      return;\r\n    }\r\n    const currentZoom = view.getZoom();\r\n    if (currentZoom !== undefined) {\r\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\r\n      if (this.duration_ > 0) {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.animate({\r\n          zoom: newZoom,\r\n          duration: this.duration_,\r\n          easing: easeOut,\r\n        });\r\n      } else {\r\n        view.setZoom(newZoom);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Zoom;\r\n", "/**\r\n * @module ol/MapProperty\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport default {\r\n  LAYERGROUP: 'layergroup',\r\n  SIZE: 'size',\r\n  TARGET: 'target',\r\n  VIEW: 'view',\r\n};\r\n", "/**\r\n * @module ol/control/FullScreen\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {replaceNode} from '../dom.js';\r\n\r\nconst events = [\r\n  'fullscreenchange',\r\n  'webkitfullscreenchange',\r\n  'MSFullscreenChange',\r\n];\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst FullScreenEventType = {\r\n  /**\r\n   * Triggered after the map entered fullscreen.\r\n   * @event FullScreenEventType#enterfullscreen\r\n   * @api\r\n   */\r\n  ENTERFULLSCREEN: 'enterfullscreen',\r\n\r\n  /**\r\n   * Triggered after the map leave fullscreen.\r\n   * @event FullScreenEventType#leavefullscreen\r\n   * @api\r\n   */\r\n  LEAVEFULLSCREEN: 'leavefullscreen',\r\n};\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\r\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\r\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-full-screen'] CSS class name.\r\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\r\n * button when full-screen is active.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\r\n * when full-screen is active.\r\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\r\n * when full-screen is inactive.\r\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\r\n * @property {boolean} [keys=false] Full keyboard access.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {HTMLElement|string} [source] The element to be displayed\r\n * fullscreen. When not provided, the element containing the map viewport will\r\n * be displayed fullscreen.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Provides a button that when clicked fills up the full screen with the map.\r\n * The full screen source element is by default the element containing the map viewport unless\r\n * overridden by providing the `source` option. In which case, the dom\r\n * element introduced using this parameter will be displayed in full screen.\r\n *\r\n * When in full screen mode, a close button is shown to exit full screen mode.\r\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\r\n * toggle the map in full screen mode.\r\n *\r\n * @fires FullScreenEventType#enterfullscreen\r\n * @fires FullScreenEventType#leavefullscreen\r\n * @api\r\n */\r\nclass FullScreen extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target,\r\n    });\r\n\r\n    /***\r\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {FullScreenOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.cssClassName_ =\r\n      options.className !== undefined ? options.className : 'ol-full-screen';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.documentListeners_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.activeClassName_ =\r\n      options.activeClassName !== undefined\r\n        ? options.activeClassName.split(' ')\r\n        : [this.cssClassName_ + '-true'];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.inactiveClassName_ =\r\n      options.inactiveClassName !== undefined\r\n        ? options.inactiveClassName.split(' ')\r\n        : [this.cssClassName_ + '-false'];\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u2922';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text|HTMLElement}\r\n     */\r\n    this.labelNode_ =\r\n      typeof label === 'string' ? document.createTextNode(label) : label;\r\n\r\n    const labelActive =\r\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\r\n\r\n    /**\r\n     * @private\r\n     * @type {Text|HTMLElement}\r\n     */\r\n    this.labelActiveNode_ =\r\n      typeof labelActive === 'string'\r\n        ? document.createTextNode(labelActive)\r\n        : labelActive;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.button_ = document.createElement('button');\r\n\r\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\r\n    this.button_.setAttribute('type', 'button');\r\n    this.button_.title = tipLabel;\r\n    this.button_.appendChild(this.labelNode_);\r\n\r\n    this.button_.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\r\n    this.element.appendChild(this.button_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.keys_ = options.keys !== undefined ? options.keys : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|string|undefined}\r\n     */\r\n    this.source_ = options.source;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.isInFullscreen_ = false;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleFullScreen_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreen_() {\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const doc = map.getOwnerDocument();\r\n    if (!isFullScreenSupported(doc)) {\r\n      return;\r\n    }\r\n    if (isFullScreen(doc)) {\r\n      exitFullScreen(doc);\r\n    } else {\r\n      let element;\r\n      if (this.source_) {\r\n        element =\r\n          typeof this.source_ === 'string'\r\n            ? doc.getElementById(this.source_)\r\n            : this.source_;\r\n      } else {\r\n        element = map.getTargetElement();\r\n      }\r\n      if (this.keys_) {\r\n        requestFullScreenWithKeys(element);\r\n      } else {\r\n        requestFullScreen(element);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleFullScreenChange_() {\r\n    const map = this.getMap();\r\n    if (!map) {\r\n      return;\r\n    }\r\n    const wasInFullscreen = this.isInFullscreen_;\r\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\r\n    if (wasInFullscreen !== this.isInFullscreen_) {\r\n      this.setClassName_(this.button_, this.isInFullscreen_);\r\n      if (this.isInFullscreen_) {\r\n        replaceNode(this.labelActiveNode_, this.labelNode_);\r\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\r\n      } else {\r\n        replaceNode(this.labelNode_, this.labelActiveNode_);\r\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\r\n      }\r\n      map.updateSize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} element Target element\r\n   * @param {boolean} fullscreen True if fullscreen class name should be active\r\n   * @private\r\n   */\r\n  setClassName_(element, fullscreen) {\r\n    const activeClassName = this.activeClassName_;\r\n    const inactiveClassName = this.inactiveClassName_;\r\n    const nextClassName = fullscreen ? activeClassName : inactiveClassName;\r\n    element.classList.remove(...activeClassName);\r\n    element.classList.remove(...inactiveClassName);\r\n    element.classList.add(...nextClassName);\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    if (oldMap) {\r\n      oldMap.removeChangeListener(\r\n        MapProperty.TARGET,\r\n        this.boundHandleMapTargetChange_\r\n      );\r\n    }\r\n\r\n    super.setMap(map);\r\n\r\n    this.handleMapTargetChange_();\r\n    if (map) {\r\n      map.addChangeListener(\r\n        MapProperty.TARGET,\r\n        this.boundHandleMapTargetChange_\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleMapTargetChange_() {\r\n    const listeners = this.documentListeners_;\r\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\r\n      unlistenByKey(listeners[i]);\r\n    }\r\n    listeners.length = 0;\r\n\r\n    const map = this.getMap();\r\n    if (map) {\r\n      const doc = map.getOwnerDocument();\r\n      if (isFullScreenSupported(doc)) {\r\n        this.element.classList.remove(CLASS_UNSUPPORTED);\r\n      } else {\r\n        this.element.classList.add(CLASS_UNSUPPORTED);\r\n      }\r\n\r\n      for (let i = 0, ii = events.length; i < ii; ++i) {\r\n        listeners.push(\r\n          listen(doc, events[i], this.handleFullScreenChange_, this)\r\n        );\r\n      }\r\n      this.handleFullScreenChange_();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {Document} doc The root document to check.\r\n * @return {boolean} Fullscreen is supported by the current platform.\r\n */\r\nfunction isFullScreenSupported(doc) {\r\n  const body = doc.body;\r\n  return !!(\r\n    body['webkitRequestFullscreen'] ||\r\n    (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\r\n    (body.requestFullscreen && doc.fullscreenEnabled)\r\n  );\r\n}\r\n\r\n/**\r\n * @param {Document} doc The root document to check.\r\n * @return {boolean} Element is currently in fullscreen.\r\n */\r\nfunction isFullScreen(doc) {\r\n  return !!(\r\n    doc['webkitIsFullScreen'] ||\r\n    doc['msFullscreenElement'] ||\r\n    doc.fullscreenElement\r\n  );\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreen(element) {\r\n  if (element.requestFullscreen) {\r\n    element.requestFullscreen();\r\n  } else if (element['msRequestFullscreen']) {\r\n    element['msRequestFullscreen']();\r\n  } else if (element['webkitRequestFullscreen']) {\r\n    element['webkitRequestFullscreen']();\r\n  }\r\n}\r\n\r\n/**\r\n * Request to fullscreen an element with keyboard input.\r\n * @param {HTMLElement} element Element to request fullscreen\r\n */\r\nfunction requestFullScreenWithKeys(element) {\r\n  if (element['webkitRequestFullscreen']) {\r\n    element['webkitRequestFullscreen']();\r\n  } else {\r\n    requestFullScreen(element);\r\n  }\r\n}\r\n\r\n/**\r\n * Exit fullscreen.\r\n * @param {Document} doc The document to exit fullscren from\r\n */\r\nfunction exitFullScreen(doc) {\r\n  if (doc.exitFullscreen) {\r\n    doc.exitFullscreen();\r\n  } else if (doc['msExitFullscreen']) {\r\n    doc['msExitFullscreen']();\r\n  } else if (doc['webkitExitFullscreen']) {\r\n    doc['webkitExitFullscreen']();\r\n  }\r\n}\r\n\r\nexport default FullScreen;\r\n", "/**\r\n * @module ol/pointer/EventType\r\n */\r\n\r\n/**\r\n * Constants for event names.\r\n * @enum {string}\r\n */\r\nexport default {\r\n  POINTERMOVE: 'pointermove',\r\n  POINTERDOWN: 'pointerdown',\r\n  POINTERUP: 'pointerup',\r\n  POINTEROVER: 'pointerover',\r\n  POINTEROUT: 'pointerout',\r\n  POINTERENTER: 'pointerenter',\r\n  POINTERLEAVE: 'pointerleave',\r\n  POINTERCANCEL: 'pointercancel',\r\n};\r\n", "/**\r\n * @module ol/control/MousePosition\r\n */\r\n\r\nimport Control from './Control.js';\r\nimport EventType from '../pointer/EventType.js';\r\nimport {\r\n  get as getProjection,\r\n  getTransformFromProjections,\r\n  getUserProjection,\r\n  identityTransform,\r\n} from '../proj.js';\r\nimport {listen} from '../events.js';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst PROJECTION = 'projection';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst COORDINATE_FORMAT = 'coordinateFormat';\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-mouse-position'] CSS class name.\r\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\r\n * control should be re-rendered. This is called in a `requestAnimationFrame`\r\n * callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the\r\n * control to be rendered outside of the map's viewport.\r\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\r\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\r\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\r\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\r\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\r\n * will be the default behavior.\r\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control to show the 2D coordinates of the mouse cursor. By default, these\r\n * are in the view projection, but can be in any supported projection.\r\n * By default the control is shown in the top right corner of the map, but this\r\n * can be changed by using the css selector `.ol-mouse-position`.\r\n *\r\n * On touch devices, which usually do not have a mouse cursor, the coordinates\r\n * of the currently touched position are shown.\r\n *\r\n * @api\r\n */\r\nclass MousePosition extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Mouse position options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const element = document.createElement('div');\r\n    element.className =\r\n      options.className !== undefined ? options.className : 'ol-mouse-position';\r\n\r\n    super({\r\n      element: element,\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /***\r\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {MousePositionOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\r\n\r\n    if (options.coordinateFormat) {\r\n      this.setCoordinateFormat(options.coordinateFormat);\r\n    }\r\n    if (options.projection) {\r\n      this.setProjection(options.projection);\r\n    }\r\n\r\n    /**\r\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\r\n     * @type {boolean}\r\n     */\r\n    let renderOnMouseOut = true;\r\n\r\n    /**\r\n     * @type {string}\r\n     */\r\n    let placeholder = '&#160;';\r\n\r\n    if ('undefinedHTML' in options) {\r\n      // deprecated behavior\r\n      if (options.undefinedHTML !== undefined) {\r\n        placeholder = options.undefinedHTML;\r\n      }\r\n      renderOnMouseOut = !!placeholder;\r\n    } else if ('placeholder' in options) {\r\n      if (options.placeholder === false) {\r\n        renderOnMouseOut = false;\r\n      } else {\r\n        placeholder = String(options.placeholder);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.placeholder_ = placeholder;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderOnMouseOut_ = renderOnMouseOut;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = element.innerHTML;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.mapProjection_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../proj.js\").TransformFunction}\r\n     */\r\n    this.transform_ = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleProjectionChanged_() {\r\n    this.transform_ = null;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate format type used to render the current position or\r\n   * undefined.\r\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getCoordinateFormat() {\r\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\r\n      this.get(COORDINATE_FORMAT)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the projection that is used to report the mouse position.\r\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getProjection() {\r\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\r\n      this.get(PROJECTION)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseMove(event) {\r\n    const map = this.getMap();\r\n    this.updateHTML_(map.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * @param {Event} event Browser event.\r\n   * @protected\r\n   */\r\n  handleMouseOut(event) {\r\n    this.updateHTML_(null);\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      const viewport = map.getViewport();\r\n      this.listenerKeys.push(\r\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\r\n      );\r\n      if (this.renderOnMouseOut_) {\r\n        this.listenerKeys.push(\r\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\r\n        );\r\n      }\r\n      this.updateHTML_(null);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the coordinate format type used to render the current position.\r\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setCoordinateFormat(format) {\r\n    this.set(COORDINATE_FORMAT, format);\r\n  }\r\n\r\n  /**\r\n   * Set the projection that is used to report the mouse position.\r\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\r\n   *     position in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setProjection(projection) {\r\n    this.set(PROJECTION, getProjection(projection));\r\n  }\r\n\r\n  /**\r\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @private\r\n   */\r\n  updateHTML_(pixel) {\r\n    let html = this.placeholder_;\r\n    if (pixel && this.mapProjection_) {\r\n      if (!this.transform_) {\r\n        const projection = this.getProjection();\r\n        if (projection) {\r\n          this.transform_ = getTransformFromProjections(\r\n            this.mapProjection_,\r\n            projection\r\n          );\r\n        } else {\r\n          this.transform_ = identityTransform;\r\n        }\r\n      }\r\n      const map = this.getMap();\r\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\r\n      if (coordinate) {\r\n        const userProjection = getUserProjection();\r\n        if (userProjection) {\r\n          this.transform_ = getTransformFromProjections(\r\n            this.mapProjection_,\r\n            userProjection\r\n          );\r\n        }\r\n        this.transform_(coordinate, coordinate);\r\n        const coordinateFormat = this.getCoordinateFormat();\r\n        if (coordinateFormat) {\r\n          html = coordinateFormat(coordinate);\r\n        } else {\r\n          html = coordinate.toString();\r\n        }\r\n      }\r\n    }\r\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\r\n      this.element.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the projection. Rendering of the coordinates is done in\r\n   * `handleMouseMove` and `handleMouseUp`.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    const frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n      this.mapProjection_ = null;\r\n    } else {\r\n      if (this.mapProjection_ != frameState.viewState.projection) {\r\n        this.mapProjection_ = frameState.viewState.projection;\r\n        this.transform_ = null;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MousePosition;\r\n", "/**\r\n * @module ol/renderer/Map\r\n */\r\nimport Disposable from '../Disposable.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {abstract} from '../util.js';\r\nimport {compose as composeTransform, makeInverse} from '../transform.js';\r\nimport {getWidth} from '../extent.js';\r\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {wrapX} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef HitMatch\r\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @property {number} distanceSq Squared distance.\r\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\r\n * @template T\r\n */\r\n\r\n/**\r\n * @abstract\r\n */\r\nclass MapRenderer extends Disposable {\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default}\r\n     */\r\n    this.map_ = map;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @protected\r\n   */\r\n  calculateMatrices2D(frameState) {\r\n    const viewState = frameState.viewState;\r\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\r\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\r\n\r\n    composeTransform(\r\n      coordinateToPixelTransform,\r\n      frameState.size[0] / 2,\r\n      frameState.size[1] / 2,\r\n      1 / viewState.resolution,\r\n      -1 / viewState.resolution,\r\n      -viewState.rotation,\r\n      -viewState.center[0],\r\n      -viewState.center[1]\r\n    );\r\n\r\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\r\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\r\n   * @return {T|undefined} Callback result.\r\n   * @template S,T,U\r\n   */\r\n  forEachFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    callback,\r\n    thisArg,\r\n    layerFilter,\r\n    thisArg2\r\n  ) {\r\n    let result;\r\n    const viewState = frameState.viewState;\r\n\r\n    /**\r\n     * @param {boolean} managed Managed layer.\r\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\r\n     * @return {T|undefined} Callback result.\r\n     */\r\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\r\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\r\n    }\r\n\r\n    const projection = viewState.projection;\r\n\r\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\r\n    const offsets = [[0, 0]];\r\n    if (projection.canWrapX() && checkWrapped) {\r\n      const projectionExtent = projection.getExtent();\r\n      const worldWidth = getWidth(projectionExtent);\r\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\r\n    }\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n\r\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\r\n    const tmpCoord = [];\r\n    for (let i = 0; i < offsets.length; i++) {\r\n      for (let j = numLayers - 1; j >= 0; --j) {\r\n        const layerState = layerStates[j];\r\n        const layer = layerState.layer;\r\n        if (\r\n          layer.hasRenderer() &&\r\n          inView(layerState, viewState) &&\r\n          layerFilter.call(thisArg2, layer)\r\n        ) {\r\n          const layerRenderer = layer.getRenderer();\r\n          const source = layer.getSource();\r\n          if (layerRenderer && source) {\r\n            const coordinates = source.getWrapX()\r\n              ? translatedCoordinate\r\n              : coordinate;\r\n            const callback = forEachFeatureAtCoordinate.bind(\r\n              null,\r\n              layerState.managed\r\n            );\r\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\r\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\r\n            result = layerRenderer.forEachFeatureAtCoordinate(\r\n              tmpCoord,\r\n              frameState,\r\n              hitTolerance,\r\n              callback,\r\n              matches\r\n            );\r\n          }\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (matches.length === 0) {\r\n      return undefined;\r\n    }\r\n    const order = 1 / matches.length;\r\n    matches.forEach((m, i) => (m.distanceSq += i * order));\r\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\r\n    matches.some((m) => {\r\n      return (result = m.callback(m.feature, m.layer, m.geometry));\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\r\n    return abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {boolean} checkWrapped Check for wrapped geometries.\r\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\r\n   * @return {boolean} Is there a feature at the given coordinate?\r\n   * @template U\r\n   */\r\n  hasFeatureAtCoordinate(\r\n    coordinate,\r\n    frameState,\r\n    hitTolerance,\r\n    checkWrapped,\r\n    layerFilter,\r\n    thisArg\r\n  ) {\r\n    const hasFeature = this.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      frameState,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      TRUE,\r\n      this,\r\n      layerFilter,\r\n      thisArg\r\n    );\r\n\r\n    return hasFeature !== undefined;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../PluggableMap.js\").default} Map.\r\n   */\r\n  getMap() {\r\n    return this.map_;\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @abstract\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    abstract();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   * @protected\r\n   */\r\n  scheduleExpireIconCache(frameState) {\r\n    if (iconImageCache.canExpireCache()) {\r\n      frameState.postRenderFunctions.push(expireIconCache);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../PluggableMap.js\").default} map Map.\r\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n */\r\nfunction expireIconCache(map, frameState) {\r\n  iconImageCache.expire();\r\n}\r\n\r\nexport default MapRenderer;\r\n", "/**\r\n * @module ol/renderer/Composite\r\n */\r\nimport MapRenderer from './Map.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport RenderEvent from '../render/Event.js';\r\nimport RenderEventType from '../render/EventType.js';\r\nimport SourceState from '../source/State.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {checkedFonts} from '../render/canvas.js';\r\nimport {inView} from '../layer/Layer.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {replaceChildren} from '../dom.js';\r\n\r\n/**\r\n * @classdesc\r\n * Canvas map renderer.\r\n * @api\r\n */\r\nclass CompositeMapRenderer extends MapRenderer {\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  constructor(map) {\r\n    super(map);\r\n\r\n    /**\r\n     * @type {import(\"../events.js\").EventsKey}\r\n     */\r\n    this.fontChangeListenerKey_ = listen(\r\n      checkedFonts,\r\n      ObjectEventType.PROPERTYCHANGE,\r\n      map.redrawText.bind(map)\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLDivElement}\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    const style = this.element_.style;\r\n    style.position = 'absolute';\r\n    style.width = '100%';\r\n    style.height = '100%';\r\n    style.zIndex = '0';\r\n\r\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\r\n\r\n    const container = map.getViewport();\r\n    container.insertBefore(this.element_, container.firstChild || null);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<HTMLElement>}\r\n     */\r\n    this.children_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = true;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../render/EventType.js\").default} type Event type.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  dispatchRenderEvent(type, frameState) {\r\n    const map = this.getMap();\r\n    if (map.hasListener(type)) {\r\n      const event = new RenderEvent(type, undefined, frameState);\r\n      map.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n  disposeInternal() {\r\n    unlistenByKey(this.fontChangeListenerKey_);\r\n    this.element_.parentNode.removeChild(this.element_);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Render.\r\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\r\n   */\r\n  renderFrame(frameState) {\r\n    if (!frameState) {\r\n      if (this.renderedVisible_) {\r\n        this.element_.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.calculateMatrices2D(frameState);\r\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\r\n\r\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\r\n      return a.zIndex - b.zIndex;\r\n    });\r\n    const viewState = frameState.viewState;\r\n\r\n    this.children_.length = 0;\r\n    /**\r\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\r\n     */\r\n    const declutterLayers = [];\r\n    let previousElement = null;\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layerState = layerStatesArray[i];\r\n      frameState.layerIndex = i;\r\n\r\n      const layer = layerState.layer;\r\n      const sourceState = layer.getSourceState();\r\n      if (\r\n        !inView(layerState, viewState) ||\r\n        (sourceState != SourceState.READY &&\r\n          sourceState != SourceState.UNDEFINED)\r\n      ) {\r\n        layer.unrender();\r\n        continue;\r\n      }\r\n\r\n      const element = layer.render(frameState, previousElement);\r\n      if (!element) {\r\n        continue;\r\n      }\r\n      if (element !== previousElement) {\r\n        this.children_.push(element);\r\n        previousElement = element;\r\n      }\r\n      if ('getDeclutter' in layer) {\r\n        declutterLayers.push(\r\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\r\n        );\r\n      }\r\n    }\r\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\r\n      declutterLayers[i].renderDeclutter(frameState);\r\n    }\r\n\r\n    replaceChildren(this.element_, this.children_);\r\n\r\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element_.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n\r\n    this.scheduleExpireIconCache(frameState);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\r\n   *     callback.\r\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\r\n   *     function, only layers which are visible and for which this function\r\n   *     returns `true` will be tested for features.  By default, all visible\r\n   *     layers will be tested.\r\n   * @return {T|undefined} Callback result.\r\n   * @template T\r\n   */\r\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\r\n    const viewState = frameState.viewState;\r\n\r\n    const layerStates = frameState.layerStatesArray;\r\n    const numLayers = layerStates.length;\r\n\r\n    for (let i = numLayers - 1; i >= 0; --i) {\r\n      const layerState = layerStates[i];\r\n      const layer = layerState.layer;\r\n      if (\r\n        layer.hasRenderer() &&\r\n        inView(layerState, viewState) &&\r\n        layerFilter(layer)\r\n      ) {\r\n        const layerRenderer = layer.getRenderer();\r\n        const data = layerRenderer.getDataAtPixel(\r\n          pixel,\r\n          frameState,\r\n          hitTolerance\r\n        );\r\n        if (data) {\r\n          const result = callback(layer, data);\r\n          if (result) {\r\n            return result;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n}\r\n\r\nexport default CompositeMapRenderer;\r\n", "/**\r\n * @module ol/OverlayPositioning\r\n */\r\n\r\n/**\r\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, `'top-right'`\r\n * @enum {string}\r\n */\r\nexport default {\r\n  BOTTOM_LEFT: 'bottom-left',\r\n  BOTTOM_CENTER: 'bottom-center',\r\n  BOTTOM_RIGHT: 'bottom-right',\r\n  CENTER_LEFT: 'center-left',\r\n  CENTER_CENTER: 'center-center',\r\n  CENTER_RIGHT: 'center-right',\r\n  TOP_LEFT: 'top-left',\r\n  TOP_CENTER: 'top-center',\r\n  TOP_RIGHT: 'top-right',\r\n};\r\n", "/**\r\n * @module ol/Overlay\r\n */\r\nimport BaseObject from './Object.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport OverlayPositioning from './OverlayPositioning.js';\r\nimport {CLASS_SELECTABLE} from './css.js';\r\nimport {containsExtent} from './extent.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\r\n * with the {@link module:ol/Map~Map#getOverlayById} method.\r\n * @property {HTMLElement} [element] The overlay element.\r\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\r\n * the overlay. The first element in the\r\n * array is the horizontal offset. A positive value shifts the overlay right.\r\n * The second element in the array is the vertical offset. A positive value\r\n * shifts the overlay down.\r\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\r\n * in map projection.\r\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\r\n * the overlay is actually positioned with respect to its `position` property.\r\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\r\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\r\n * `'top-center'`, and `'top-right'`.\r\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\r\n * viewport should be stopped. If `true` the overlay is placed in the same\r\n * container as that of the controls (CSS class name\r\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\r\n * with CSS class name specified by the `className` property.\r\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\r\n * in the overlay container, or appended. If the overlay is placed in the same\r\n * container as that of the controls (see the `stopEvent` option) you will\r\n * probably set `insertFirst` to `true` so the overlay is displayed below the\r\n * controls.\r\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\r\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\r\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\r\n * used to determine the panning parameters; if an object is supplied then other\r\n * parameters are ignored.\r\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\r\n * the overlay into view. This animation is only used when `autoPan` is enabled.\r\n * A `duration` and `easing` may be provided to customize the animation.\r\n * Deprecated and ignored if `autoPan` is supplied as an object.\r\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when autopanning. Deprecated and ignored\r\n * if `autoPan` is supplied as an object.\r\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\r\n * autoPan. This is only used when `autoPan` is enabled and has preference over\r\n * the individual `autoPanMargin` and `autoPanOptions`.\r\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\r\n * name.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PanOptions\r\n * @property {number} [duration=1000] The duration of the animation in\r\n * milliseconds.\r\n * @property {function(number):number} [easing] The easing function to use. Can\r\n * be one from {@link module:ol/easing} or a custom function.\r\n * Default is {@link module:ol/easing.inAndOut}.\r\n */\r\n\r\n/**\r\n * @typedef {Object} PanIntoViewOptions\r\n * @property {PanOptions} [animation={}] The animation parameters for the pan\r\n * @property {number} [margin=20] The margin (in pixels) between the\r\n * overlay and the borders of the map when panning into view.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @protected\r\n */\r\nconst Property = {\r\n  ELEMENT: 'element',\r\n  MAP: 'map',\r\n  OFFSET: 'offset',\r\n  POSITION: 'position',\r\n  POSITIONING: 'positioning',\r\n};\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\r\n *   'change:positioning'} OverlayObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * An element to be displayed over the map and attached to a single map\r\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\r\n * visible widgets. Unlike Controls, they are not in a fixed position on the\r\n * screen, but are tied to a geographical coordinate, so panning the map will\r\n * move an Overlay but not a Control.\r\n *\r\n * Example:\r\n *\r\n *     import Overlay from 'ol/Overlay';\r\n *\r\n *     var popup = new Overlay({\r\n *       element: document.getElementById('popup')\r\n *     });\r\n *     popup.setPosition(coordinate);\r\n *     map.addOverlay(popup);\r\n *\r\n * @api\r\n */\r\nclass Overlay extends BaseObject {\r\n  /**\r\n   * @param {Options} options Overlay options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {OverlayOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Options}\r\n     */\r\n    this.options = options;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {number|string|undefined}\r\n     */\r\n    this.id = options.id;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.insertFirst =\r\n      options.insertFirst !== undefined ? options.insertFirst : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {boolean}\r\n     */\r\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.element = document.createElement('div');\r\n    this.element.className =\r\n      options.className !== undefined\r\n        ? options.className\r\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\r\n    this.element.style.position = 'absolute';\r\n    this.element.style.pointerEvents = 'auto';\r\n\r\n    let autoPan = options.autoPan;\r\n    if (autoPan && 'object' !== typeof autoPan) {\r\n      autoPan = {\r\n        animation: options.autoPanAnimation,\r\n        margin: options.autoPanMargin,\r\n      };\r\n    }\r\n    /**\r\n     * @protected\r\n     * @type {PanIntoViewOptions|false}\r\n     */\r\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\r\n\r\n    /**\r\n     * @protected\r\n     * @type {{transform_: string,\r\n     *         visible: boolean}}\r\n     */\r\n    this.rendered = {\r\n      transform_: '',\r\n      visible: true,\r\n    };\r\n\r\n    /**\r\n     * @protected\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.mapPostrenderListenerKey = null;\r\n\r\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\r\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\r\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\r\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\r\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\r\n\r\n    if (options.element !== undefined) {\r\n      this.setElement(options.element);\r\n    }\r\n\r\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\r\n\r\n    this.setPositioning(\r\n      options.positioning !== undefined\r\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\r\n            options.positioning\r\n          )\r\n        : OverlayPositioning.TOP_LEFT\r\n    );\r\n\r\n    if (options.position !== undefined) {\r\n      this.setPosition(options.position);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element of this overlay.\r\n   * @return {HTMLElement|undefined} The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getElement() {\r\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\r\n  }\r\n\r\n  /**\r\n   * Get the overlay identifier which is set on constructor.\r\n   * @return {number|string|undefined} Id.\r\n   * @api\r\n   */\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * Get the map associated with this overlay.\r\n   * @return {import(\"./PluggableMap.js\").default|null} The map that the\r\n   * overlay is part of.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getMap() {\r\n    return /** @type {import(\"./PluggableMap.js\").default|null} */ (\r\n      this.get(Property.MAP) || null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the offset of this overlay.\r\n   * @return {Array<number>} The offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getOffset() {\r\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\r\n  }\r\n\r\n  /**\r\n   * Get the current position of this overlay.\r\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\r\n   *     anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPosition() {\r\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\r\n      this.get(Property.POSITION)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the current positioning of this overlay.\r\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\r\n   *     relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getPositioning() {\r\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\r\n      this.get(Property.POSITIONING)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleElementChanged() {\r\n    removeChildren(this.element);\r\n    const element = this.getElement();\r\n    if (element) {\r\n      this.element.appendChild(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleMapChanged() {\r\n    if (this.mapPostrenderListenerKey) {\r\n      removeNode(this.element);\r\n      unlistenByKey(this.mapPostrenderListenerKey);\r\n      this.mapPostrenderListenerKey = null;\r\n    }\r\n    const map = this.getMap();\r\n    if (map) {\r\n      this.mapPostrenderListenerKey = listen(\r\n        map,\r\n        MapEventType.POSTRENDER,\r\n        this.render,\r\n        this\r\n      );\r\n      this.updatePixelPosition();\r\n      const container = this.stopEvent\r\n        ? map.getOverlayContainerStopEvent()\r\n        : map.getOverlayContainer();\r\n      if (this.insertFirst) {\r\n        container.insertBefore(this.element, container.childNodes[0] || null);\r\n      } else {\r\n        container.appendChild(this.element);\r\n      }\r\n      this.performAutoPan();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  render() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleOffsetChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositionChanged() {\r\n    this.updatePixelPosition();\r\n    this.performAutoPan();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePositioningChanged() {\r\n    this.updatePixelPosition();\r\n  }\r\n\r\n  /**\r\n   * Set the DOM element to be associated with this overlay.\r\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setElement(element) {\r\n    this.set(Property.ELEMENT, element);\r\n  }\r\n\r\n  /**\r\n   * Set the map to be associated with this overlay.\r\n   * @param {import(\"./PluggableMap.js\").default|null} map The map that the\r\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    this.set(Property.MAP, map);\r\n  }\r\n\r\n  /**\r\n   * Set the offset for this overlay.\r\n   * @param {Array<number>} offset Offset.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setOffset(offset) {\r\n    this.set(Property.OFFSET, offset);\r\n  }\r\n\r\n  /**\r\n   * Set the position for this overlay. If the position is `undefined` the\r\n   * overlay is hidden.\r\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\r\n   *     is anchored at.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPosition(position) {\r\n    this.set(Property.POSITION, position);\r\n  }\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary) using the configured autoPan parameters\r\n   * @protected\r\n   */\r\n  performAutoPan() {\r\n    if (this.autoPan) {\r\n      this.panIntoView(this.autoPan);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pan the map so that the overlay is entirely visible in the current viewport\r\n   * (if necessary).\r\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\r\n   * @api\r\n   */\r\n  panIntoView(opt_panIntoViewOptions) {\r\n    const map = this.getMap();\r\n\r\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\r\n      return;\r\n    }\r\n\r\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\r\n    const element = this.getElement();\r\n    const overlayRect = this.getRect(element, [\r\n      outerWidth(element),\r\n      outerHeight(element),\r\n    ]);\r\n\r\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\r\n\r\n    const myMargin =\r\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\r\n    if (!containsExtent(mapRect, overlayRect)) {\r\n      // the overlay is not completely inside the viewport, so pan the map\r\n      const offsetLeft = overlayRect[0] - mapRect[0];\r\n      const offsetRight = mapRect[2] - overlayRect[2];\r\n      const offsetTop = overlayRect[1] - mapRect[1];\r\n      const offsetBottom = mapRect[3] - overlayRect[3];\r\n\r\n      const delta = [0, 0];\r\n      if (offsetLeft < 0) {\r\n        // move map to the left\r\n        delta[0] = offsetLeft - myMargin;\r\n      } else if (offsetRight < 0) {\r\n        // move map to the right\r\n        delta[0] = Math.abs(offsetRight) + myMargin;\r\n      }\r\n      if (offsetTop < 0) {\r\n        // move map up\r\n        delta[1] = offsetTop - myMargin;\r\n      } else if (offsetBottom < 0) {\r\n        // move map down\r\n        delta[1] = Math.abs(offsetBottom) + myMargin;\r\n      }\r\n\r\n      if (delta[0] !== 0 || delta[1] !== 0) {\r\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\r\n          map.getView().getCenterInternal()\r\n        );\r\n        const centerPx = map.getPixelFromCoordinateInternal(center);\r\n        if (!centerPx) {\r\n          return;\r\n        }\r\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\r\n\r\n        const panOptions = panIntoViewOptions.animation || {};\r\n        map.getView().animateInternal({\r\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\r\n          duration: panOptions.duration,\r\n          easing: panOptions.easing,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the extent of an element relative to the document\r\n   * @param {HTMLElement} element The element.\r\n   * @param {import(\"./size.js\").Size} size The size of the element.\r\n   * @return {import(\"./extent.js\").Extent} The extent.\r\n   * @protected\r\n   */\r\n  getRect(element, size) {\r\n    const box = element.getBoundingClientRect();\r\n    const offsetX = box.left + window.pageXOffset;\r\n    const offsetY = box.top + window.pageYOffset;\r\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\r\n  }\r\n\r\n  /**\r\n   * Set the positioning for this overlay.\r\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\r\n   *     positioned relative to its point on the map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setPositioning(positioning) {\r\n    this.set(Property.POSITIONING, positioning);\r\n  }\r\n\r\n  /**\r\n   * Modify the visibility of the element.\r\n   * @param {boolean} visible Element visibility.\r\n   * @protected\r\n   */\r\n  setVisible(visible) {\r\n    if (this.rendered.visible !== visible) {\r\n      this.element.style.display = visible ? '' : 'none';\r\n      this.rendered.visible = visible;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update pixel position.\r\n   * @protected\r\n   */\r\n  updatePixelPosition() {\r\n    const map = this.getMap();\r\n    const position = this.getPosition();\r\n    if (!map || !map.isRendered() || !position) {\r\n      this.setVisible(false);\r\n      return;\r\n    }\r\n\r\n    const pixel = map.getPixelFromCoordinate(position);\r\n    const mapSize = map.getSize();\r\n    this.updateRenderedPosition(pixel, mapSize);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\r\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\r\n   * @protected\r\n   */\r\n  updateRenderedPosition(pixel, mapSize) {\r\n    const style = this.element.style;\r\n    const offset = this.getOffset();\r\n\r\n    const positioning = this.getPositioning();\r\n\r\n    this.setVisible(true);\r\n\r\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\r\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\r\n    let posX = '0%';\r\n    let posY = '0%';\r\n    if (\r\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\r\n      positioning == OverlayPositioning.CENTER_RIGHT ||\r\n      positioning == OverlayPositioning.TOP_RIGHT\r\n    ) {\r\n      posX = '-100%';\r\n    } else if (\r\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n      positioning == OverlayPositioning.CENTER_CENTER ||\r\n      positioning == OverlayPositioning.TOP_CENTER\r\n    ) {\r\n      posX = '-50%';\r\n    }\r\n    if (\r\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\r\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\r\n      positioning == OverlayPositioning.BOTTOM_RIGHT\r\n    ) {\r\n      posY = '-100%';\r\n    } else if (\r\n      positioning == OverlayPositioning.CENTER_LEFT ||\r\n      positioning == OverlayPositioning.CENTER_CENTER ||\r\n      positioning == OverlayPositioning.CENTER_RIGHT\r\n    ) {\r\n      posY = '-50%';\r\n    }\r\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\r\n    if (this.rendered.transform_ != transform) {\r\n      this.rendered.transform_ = transform;\r\n      style.transform = transform;\r\n      // @ts-ignore IE9\r\n      style.msTransform = transform;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * returns the options this Overlay has been created with\r\n   * @return {Options} overlay options\r\n   */\r\n  getOptions() {\r\n    return this.options;\r\n  }\r\n}\r\n\r\nexport default Overlay;\r\n", "/**\r\n * @module ol/layer/Group\r\n */\r\nimport BaseLayer from './Base.js';\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport SourceState from '../source/State.js';\r\nimport {assert} from '../asserts.js';\r\nimport {assign, clear} from '../obj.js';\r\nimport {getIntersection} from '../extent.js';\r\nimport {getUid} from '../util.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {'addlayer'|'removelayer'} EventType\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\r\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\r\n * a single event will be triggered (instead of one per layer in the group added or removed).\r\n */\r\nexport class GroupEvent extends Event {\r\n  /**\r\n   * @param {EventType} type The event type.\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  constructor(type, layer) {\r\n    super(type);\r\n\r\n    /**\r\n     * The added or removed layer.\r\n     * @type {BaseLayer}\r\n     * @api\r\n     */\r\n    this.layer = layer;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\r\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [opacity=1] Opacity (0, 1).\r\n * @property {boolean} [visible=true] Visibility.\r\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\r\n * rendered outside of this extent.\r\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\r\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\r\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\r\n * method was used.\r\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\r\n * visible.\r\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\r\n * be visible.\r\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\r\n * visible.\r\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\r\n * be visible.\r\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\r\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n * @private\r\n */\r\nconst Property = {\r\n  LAYERS: 'layers',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\r\n *\r\n * A generic `change` event is triggered when the group/Collection changes.\r\n *\r\n * @api\r\n */\r\nclass LayerGroup extends BaseLayer {\r\n  /**\r\n   * @param {Options} [opt_options] Layer options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options || {};\r\n    const baseOptions = /** @type {Options} */ (assign({}, options));\r\n    delete baseOptions.layers;\r\n\r\n    let layers = options.layers;\r\n\r\n    super(baseOptions);\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {GroupOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.layersListenerKeys_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\r\n     */\r\n    this.listenerKeys_ = {};\r\n\r\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\r\n\r\n    if (layers) {\r\n      if (Array.isArray(layers)) {\r\n        layers = new Collection(layers.slice(), {unique: true});\r\n      } else {\r\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\r\n      }\r\n    } else {\r\n      layers = new Collection(undefined, {unique: true});\r\n    }\r\n\r\n    this.setLayers(layers);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerChange_() {\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayersChanged_() {\r\n    this.layersListenerKeys_.forEach(unlistenByKey);\r\n    this.layersListenerKeys_.length = 0;\r\n\r\n    const layers = this.getLayers();\r\n    this.layersListenerKeys_.push(\r\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\r\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\r\n    );\r\n\r\n    for (const id in this.listenerKeys_) {\r\n      this.listenerKeys_[id].forEach(unlistenByKey);\r\n    }\r\n    clear(this.listenerKeys_);\r\n\r\n    const layersArray = layers.getArray();\r\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\r\n      const layer = layersArray[i];\r\n      this.registerLayerListeners_(layer);\r\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {BaseLayer} layer The layer.\r\n   */\r\n  registerLayerListeners_(layer) {\r\n    const listenerKeys = [\r\n      listen(\r\n        layer,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleLayerChange_,\r\n        this\r\n      ),\r\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\r\n    ];\r\n\r\n    if (layer instanceof LayerGroup) {\r\n      listenerKeys.push(\r\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\r\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\r\n      );\r\n    }\r\n\r\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupAdd_(event) {\r\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {GroupEvent} event The layer group event.\r\n   */\r\n  handleLayerGroupRemove_(event) {\r\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersAdd_(collectionEvent) {\r\n    const layer = /** @type {import(\"./Base.js\").default} */ (\r\n      collectionEvent.element\r\n    );\r\n    this.registerLayerListeners_(layer);\r\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\r\n   * @private\r\n   */\r\n  handleLayersRemove_(collectionEvent) {\r\n    const layer = /** @type {import(\"./Base.js\").default} */ (\r\n      collectionEvent.element\r\n    );\r\n    const key = getUid(layer);\r\n    this.listenerKeys_[key].forEach(unlistenByKey);\r\n    delete this.listenerKeys_[key];\r\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\r\n      this.get(Property.LAYERS)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\r\n   * in this group.\r\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\r\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const collection = this.getLayers();\r\n    if (collection) {\r\n      const currentLayers = collection.getArray();\r\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\r\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\r\n      }\r\n    }\r\n\r\n    this.set(Property.LAYERS, layers);\r\n  }\r\n\r\n  /**\r\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\r\n   */\r\n  getLayersArray(opt_array) {\r\n    const array = opt_array !== undefined ? opt_array : [];\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayersArray(array);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  /**\r\n   * Get the layer states list and use this groups z-index as the default\r\n   * for all layers in this and nested groups, if it is unset at this point.\r\n   * If opt_states is not provided and this group's z-index is undefined\r\n   * 0 is used a the default z-index.\r\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\r\n   * of layer states (to be modified in place).\r\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\r\n   */\r\n  getLayerStatesArray(opt_states) {\r\n    const states = opt_states !== undefined ? opt_states : [];\r\n    const pos = states.length;\r\n\r\n    this.getLayers().forEach(function (layer) {\r\n      layer.getLayerStatesArray(states);\r\n    });\r\n\r\n    const ownLayerState = this.getLayerState();\r\n    let defaultZIndex = ownLayerState.zIndex;\r\n    if (!opt_states && ownLayerState.zIndex === undefined) {\r\n      defaultZIndex = 0;\r\n    }\r\n    for (let i = pos, ii = states.length; i < ii; i++) {\r\n      const layerState = states[i];\r\n      layerState.opacity *= ownLayerState.opacity;\r\n      layerState.visible = layerState.visible && ownLayerState.visible;\r\n      layerState.maxResolution = Math.min(\r\n        layerState.maxResolution,\r\n        ownLayerState.maxResolution\r\n      );\r\n      layerState.minResolution = Math.max(\r\n        layerState.minResolution,\r\n        ownLayerState.minResolution\r\n      );\r\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\r\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\r\n      if (ownLayerState.extent !== undefined) {\r\n        if (layerState.extent !== undefined) {\r\n          layerState.extent = getIntersection(\r\n            layerState.extent,\r\n            ownLayerState.extent\r\n          );\r\n        } else {\r\n          layerState.extent = ownLayerState.extent;\r\n        }\r\n      }\r\n      if (layerState.zIndex === undefined) {\r\n        layerState.zIndex = defaultZIndex;\r\n      }\r\n    }\r\n\r\n    return states;\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../source/State.js\").default} Source state.\r\n   */\r\n  getSourceState() {\r\n    return SourceState.READY;\r\n  }\r\n}\r\n\r\nexport default LayerGroup;\r\n", "/**\r\n * @module ol/MapEvent\r\n */\r\nimport Event from './events/Event.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\r\n */\r\nclass MapEvent extends Event {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\r\n   */\r\n  constructor(type, map, opt_frameState) {\r\n    super(type);\r\n\r\n    /**\r\n     * The map where the event occurred.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @api\r\n     */\r\n    this.map = map;\r\n\r\n    /**\r\n     * The frame state at the time of the event.\r\n     * @type {?import(\"./PluggableMap.js\").FrameState}\r\n     * @api\r\n     */\r\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\r\n  }\r\n}\r\n\r\nexport default MapEvent;\r\n", "/**\r\n * @module ol/MapBrowserEvent\r\n */\r\nimport MapEvent from './MapEvent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted as map browser events are instances of this type.\r\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\r\n * @template {UIEvent} EVENT\r\n */\r\nclass MapBrowserEvent extends MapEvent {\r\n  /**\r\n   * @param {string} type Event type.\r\n   * @param {import(\"./PluggableMap.js\").default} map Map.\r\n   * @param {EVENT} originalEvent Original event.\r\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\r\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\r\n   */\r\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\r\n    super(type, map, opt_frameState);\r\n\r\n    /**\r\n     * The original browser event.\r\n     * @const\r\n     * @type {EVENT}\r\n     * @api\r\n     */\r\n    this.originalEvent = originalEvent;\r\n\r\n    /**\r\n     * The map pixel relative to the viewport corresponding to the original browser event.\r\n     * @type {?import(\"./pixel.js\").Pixel}\r\n     */\r\n    this.pixel_ = null;\r\n\r\n    /**\r\n     * The coordinate in the user projection corresponding to the original browser event.\r\n     * @type {?import(\"./coordinate.js\").Coordinate}\r\n     */\r\n    this.coordinate_ = null;\r\n\r\n    /**\r\n     * Indicates if the map is currently being dragged. Only set for\r\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\r\n     *\r\n     * @type {boolean}\r\n     * @api\r\n     */\r\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\r\n  }\r\n\r\n  /**\r\n   * The map pixel relative to the viewport corresponding to the original event.\r\n   * @type {import(\"./pixel.js\").Pixel}\r\n   * @api\r\n   */\r\n  get pixel() {\r\n    if (!this.pixel_) {\r\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\r\n    }\r\n    return this.pixel_;\r\n  }\r\n  set pixel(pixel) {\r\n    this.pixel_ = pixel;\r\n  }\r\n\r\n  /**\r\n   * The coordinate corresponding to the original browser event.  This will be in the user\r\n   * projection if one is set.  Otherwise it will be in the view projection.\r\n   * @type {import(\"./coordinate.js\").Coordinate}\r\n   * @api\r\n   */\r\n  get coordinate() {\r\n    if (!this.coordinate_) {\r\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\r\n    }\r\n    return this.coordinate_;\r\n  }\r\n  set coordinate(coordinate) {\r\n    this.coordinate_ = coordinate;\r\n  }\r\n\r\n  /**\r\n   * Prevents the default browser action.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\r\n   * @api\r\n   */\r\n  preventDefault() {\r\n    super.preventDefault();\r\n    if ('preventDefault' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prevents further propagation of the current event.\r\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\r\n   * @api\r\n   */\r\n  stopPropagation() {\r\n    super.stopPropagation();\r\n    if ('stopPropagation' in this.originalEvent) {\r\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapBrowserEvent;\r\n", "/**\r\n * @module ol/MapBrowserEventHandler\r\n */\r\n\r\nimport EventType from './events/EventType.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport Target from './events/Target.js';\r\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {VOID} from './functions.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\n\r\nclass MapBrowserEventHandler extends Target {\r\n  /**\r\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\r\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\r\n   */\r\n  constructor(map, moveTolerance) {\r\n    super(map);\r\n\r\n    /**\r\n     * This is the element that we will listen to the real events on.\r\n     * @type {import(\"./PluggableMap.js\").default}\r\n     * @private\r\n     */\r\n    this.map_ = map;\r\n\r\n    /**\r\n     * @type {any}\r\n     * @private\r\n     */\r\n    this.clickTimeoutId_;\r\n\r\n    /**\r\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\r\n     * @type {boolean}\r\n     */\r\n    this.emulateClicks_ = false;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_ = false;\r\n\r\n    /**\r\n     * @type {!Array<import(\"./events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\r\n\r\n    /**\r\n     * The most recent \"down\" type event (or null if none have occurred).\r\n     * Set on pointerdown.\r\n     * @type {PointerEvent|null}\r\n     * @private\r\n     */\r\n    this.down_ = null;\r\n\r\n    const element = this.map_.getViewport();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.activePointers_ = 0;\r\n\r\n    /**\r\n     * @type {!Object<number, boolean>}\r\n     * @private\r\n     */\r\n    this.trackedTouches_ = {};\r\n\r\n    this.element_ = element;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.pointerdownListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERDOWN,\r\n      this.handlePointerDown_,\r\n      this\r\n    );\r\n\r\n    /**\r\n     * @type {PointerEvent}\r\n     * @private\r\n     */\r\n    this.originalPointerMoveEvent_;\r\n\r\n    /**\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     * @private\r\n     */\r\n    this.relayedListenerKey_ = listen(\r\n      element,\r\n      PointerEventType.POINTERMOVE,\r\n      this.relayEvent_,\r\n      this\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\r\n\r\n    this.element_.addEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_,\r\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  emulateClick_(pointerEvent) {\r\n    let newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.CLICK,\r\n      this.map_,\r\n      pointerEvent\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n    if (this.clickTimeoutId_ !== undefined) {\r\n      // double-click\r\n      clearTimeout(this.clickTimeoutId_);\r\n      this.clickTimeoutId_ = undefined;\r\n      newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.DBLCLICK,\r\n        this.map_,\r\n        pointerEvent\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    } else {\r\n      // click\r\n      this.clickTimeoutId_ = setTimeout(\r\n        /** @this {MapBrowserEventHandler} */\r\n        function () {\r\n          this.clickTimeoutId_ = undefined;\r\n          const newEvent = new MapBrowserEvent(\r\n            MapBrowserEventType.SINGLECLICK,\r\n            this.map_,\r\n            pointerEvent\r\n          );\r\n          this.dispatchEvent(newEvent);\r\n        }.bind(this),\r\n        250\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track on how many pointers are currently active.\r\n   *\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  updateActivePointers_(pointerEvent) {\r\n    const event = pointerEvent;\r\n\r\n    if (\r\n      event.type == MapBrowserEventType.POINTERUP ||\r\n      event.type == MapBrowserEventType.POINTERCANCEL\r\n    ) {\r\n      delete this.trackedTouches_[event.pointerId];\r\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\r\n      this.trackedTouches_[event.pointerId] = true;\r\n    }\r\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerUp_(pointerEvent) {\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERUP,\r\n      this.map_,\r\n      pointerEvent\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // We emulate click events on left mouse button click, touch contact, and pen\r\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\r\n    // to 0).\r\n    // See http://www.w3.org/TR/pointerevents/#button-states\r\n    // We only fire click, singleclick, and doubleclick if nobody has called\r\n    // event.preventDefault().\r\n    if (\r\n      this.emulateClicks_ &&\r\n      !newEvent.defaultPrevented &&\r\n      !this.dragging_ &&\r\n      this.isMouseActionButton_(pointerEvent)\r\n    ) {\r\n      this.emulateClick_(this.down_);\r\n    }\r\n\r\n    if (this.activePointers_ === 0) {\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n      this.dragging_ = false;\r\n      this.down_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} If the left mouse button was pressed.\r\n   * @private\r\n   */\r\n  isMouseActionButton_(pointerEvent) {\r\n    return pointerEvent.button === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerDown_(pointerEvent) {\r\n    this.emulateClicks_ = this.activePointers_ === 0;\r\n    this.updateActivePointers_(pointerEvent);\r\n    const newEvent = new MapBrowserEvent(\r\n      MapBrowserEventType.POINTERDOWN,\r\n      this.map_,\r\n      pointerEvent\r\n    );\r\n    this.dispatchEvent(newEvent);\r\n\r\n    // Store a copy of the down event\r\n    this.down_ = /** @type {PointerEvent} */ ({});\r\n    for (const property in pointerEvent) {\r\n      const value = pointerEvent[property];\r\n      this.down_[property] = typeof value === 'function' ? VOID : value;\r\n    }\r\n\r\n    if (this.dragListenerKeys_.length === 0) {\r\n      const doc = this.map_.getOwnerDocument();\r\n      this.dragListenerKeys_.push(\r\n        listen(\r\n          doc,\r\n          MapBrowserEventType.POINTERMOVE,\r\n          this.handlePointerMove_,\r\n          this\r\n        ),\r\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\r\n        /* Note that the listener for `pointercancel is set up on\r\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\r\n         * the `pointerup` and `pointermove` listeners.\r\n         *\r\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\r\n         * issues `pointercancel` events, when there was no `touchend` for a\r\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\r\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\r\n         * But `documentPointerEventHandler_` doesn't know about the first\r\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\r\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\r\n         * only registered there.\r\n         */\r\n        listen(\r\n          this.element_,\r\n          MapBrowserEventType.POINTERCANCEL,\r\n          this.handlePointerUp_,\r\n          this\r\n        )\r\n      );\r\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\r\n        this.dragListenerKeys_.push(\r\n          listen(\r\n            this.element_.getRootNode(),\r\n            MapBrowserEventType.POINTERUP,\r\n            this.handlePointerUp_,\r\n            this\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(pointerEvent) {\r\n    // Between pointerdown and pointerup, pointermove events are triggered.\r\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\r\n    // moved a significant distance.\r\n    if (this.isMoving_(pointerEvent)) {\r\n      this.dragging_ = true;\r\n      const newEvent = new MapBrowserEvent(\r\n        MapBrowserEventType.POINTERDRAG,\r\n        this.map_,\r\n        pointerEvent,\r\n        this.dragging_\r\n      );\r\n      this.dispatchEvent(newEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wrap and relay a pointer event.  Note that this requires that the type\r\n   * string for the MapBrowserEvent matches the PointerEvent type.\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @private\r\n   */\r\n  relayEvent_(pointerEvent) {\r\n    this.originalPointerMoveEvent_ = pointerEvent;\r\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\r\n    this.dispatchEvent(\r\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\r\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\r\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\r\n   * when an interaction (currently `DragPan` handles the event.\r\n   * @param {TouchEvent} event Event.\r\n   * @private\r\n   */\r\n  handleTouchMove_(event) {\r\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\r\n    // may not be initialized yet when we get here on a platform without native pointer events.\r\n    const originalEvent = this.originalPointerMoveEvent_;\r\n    if (\r\n      (!originalEvent || originalEvent.defaultPrevented) &&\r\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} pointerEvent Pointer\r\n   * event.\r\n   * @return {boolean} Is moving.\r\n   * @private\r\n   */\r\n  isMoving_(pointerEvent) {\r\n    return (\r\n      this.dragging_ ||\r\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\r\n        this.moveTolerance_ ||\r\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    if (this.relayedListenerKey_) {\r\n      unlistenByKey(this.relayedListenerKey_);\r\n      this.relayedListenerKey_ = null;\r\n    }\r\n    this.element_.removeEventListener(\r\n      EventType.TOUCHMOVE,\r\n      this.boundHandleTouchMove_\r\n    );\r\n\r\n    if (this.pointerdownListenerKey_) {\r\n      unlistenByKey(this.pointerdownListenerKey_);\r\n      this.pointerdownListenerKey_ = null;\r\n    }\r\n\r\n    this.dragListenerKeys_.forEach(unlistenByKey);\r\n    this.dragListenerKeys_.length = 0;\r\n\r\n    this.element_ = null;\r\n    super.disposeInternal();\r\n  }\r\n}\r\n\r\nexport default MapBrowserEventHandler;\r\n", "/**\r\n * @module ol/structs/PriorityQueue\r\n */\r\nimport {assert} from '../asserts.js';\r\nimport {clear} from '../obj.js';\r\n\r\n/**\r\n * @type {number}\r\n */\r\nexport const DROP = Infinity;\r\n\r\n/**\r\n * @classdesc\r\n * Priority queue.\r\n *\r\n * The implementation is inspired from the Closure Library's Heap class and\r\n * Python's heapq module.\r\n *\r\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\r\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\r\n *\r\n * @template T\r\n */\r\nclass PriorityQueue {\r\n  /**\r\n   * @param {function(T): number} priorityFunction Priority function.\r\n   * @param {function(T): string} keyFunction Key function.\r\n   */\r\n  constructor(priorityFunction, keyFunction) {\r\n    /**\r\n     * @type {function(T): number}\r\n     * @private\r\n     */\r\n    this.priorityFunction_ = priorityFunction;\r\n\r\n    /**\r\n     * @type {function(T): string}\r\n     * @private\r\n     */\r\n    this.keyFunction_ = keyFunction;\r\n\r\n    /**\r\n     * @type {Array<T>}\r\n     * @private\r\n     */\r\n    this.elements_ = [];\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.priorities_ = [];\r\n\r\n    /**\r\n     * @type {!Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.queuedElements_ = {};\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  clear() {\r\n    this.elements_.length = 0;\r\n    this.priorities_.length = 0;\r\n    clear(this.queuedElements_);\r\n  }\r\n\r\n  /**\r\n   * Remove and return the highest-priority element. O(log N).\r\n   * @return {T} Element.\r\n   */\r\n  dequeue() {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[0];\r\n    if (elements.length == 1) {\r\n      elements.length = 0;\r\n      priorities.length = 0;\r\n    } else {\r\n      elements[0] = elements.pop();\r\n      priorities[0] = priorities.pop();\r\n      this.siftUp_(0);\r\n    }\r\n    const elementKey = this.keyFunction_(element);\r\n    delete this.queuedElements_[elementKey];\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Enqueue an element. O(log N).\r\n   * @param {T} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\r\n    const priority = this.priorityFunction_(element);\r\n    if (priority != DROP) {\r\n      this.elements_.push(element);\r\n      this.priorities_.push(priority);\r\n      this.queuedElements_[this.keyFunction_(element)] = true;\r\n      this.siftDown_(0, this.elements_.length - 1);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Count.\r\n   */\r\n  getCount() {\r\n    return this.elements_.length;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the left child of the node at the given index.\r\n   * @param {number} index The index of the node to get the left child for.\r\n   * @return {number} The index of the left child.\r\n   * @private\r\n   */\r\n  getLeftChildIndex_(index) {\r\n    return index * 2 + 1;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the right child of the node at the given index.\r\n   * @param {number} index The index of the node to get the right child for.\r\n   * @return {number} The index of the right child.\r\n   * @private\r\n   */\r\n  getRightChildIndex_(index) {\r\n    return index * 2 + 2;\r\n  }\r\n\r\n  /**\r\n   * Gets the index of the parent of the node at the given index.\r\n   * @param {number} index The index of the node to get the parent for.\r\n   * @return {number} The index of the parent.\r\n   * @private\r\n   */\r\n  getParentIndex_(index) {\r\n    return (index - 1) >> 1;\r\n  }\r\n\r\n  /**\r\n   * Make this a heap. O(N).\r\n   * @private\r\n   */\r\n  heapify_() {\r\n    let i;\r\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\r\n      this.siftUp_(i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is empty.\r\n   */\r\n  isEmpty() {\r\n    return this.elements_.length === 0;\r\n  }\r\n\r\n  /**\r\n   * @param {string} key Key.\r\n   * @return {boolean} Is key queued.\r\n   */\r\n  isKeyQueued(key) {\r\n    return key in this.queuedElements_;\r\n  }\r\n\r\n  /**\r\n   * @param {T} element Element.\r\n   * @return {boolean} Is queued.\r\n   */\r\n  isQueued(element) {\r\n    return this.isKeyQueued(this.keyFunction_(element));\r\n  }\r\n\r\n  /**\r\n   * @param {number} index The index of the node to move down.\r\n   * @private\r\n   */\r\n  siftUp_(index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const count = elements.length;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n    const startIndex = index;\r\n\r\n    while (index < count >> 1) {\r\n      const lIndex = this.getLeftChildIndex_(index);\r\n      const rIndex = this.getRightChildIndex_(index);\r\n\r\n      const smallerChildIndex =\r\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\r\n          ? rIndex\r\n          : lIndex;\r\n\r\n      elements[index] = elements[smallerChildIndex];\r\n      priorities[index] = priorities[smallerChildIndex];\r\n      index = smallerChildIndex;\r\n    }\r\n\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n    this.siftDown_(startIndex, index);\r\n  }\r\n\r\n  /**\r\n   * @param {number} startIndex The index of the root.\r\n   * @param {number} index The index of the node to move up.\r\n   * @private\r\n   */\r\n  siftDown_(startIndex, index) {\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    const element = elements[index];\r\n    const priority = priorities[index];\r\n\r\n    while (index > startIndex) {\r\n      const parentIndex = this.getParentIndex_(index);\r\n      if (priorities[parentIndex] > priority) {\r\n        elements[index] = elements[parentIndex];\r\n        priorities[index] = priorities[parentIndex];\r\n        index = parentIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    elements[index] = element;\r\n    priorities[index] = priority;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  reprioritize() {\r\n    const priorityFunction = this.priorityFunction_;\r\n    const elements = this.elements_;\r\n    const priorities = this.priorities_;\r\n    let index = 0;\r\n    const n = elements.length;\r\n    let element, i, priority;\r\n    for (i = 0; i < n; ++i) {\r\n      element = elements[i];\r\n      priority = priorityFunction(element);\r\n      if (priority == DROP) {\r\n        delete this.queuedElements_[this.keyFunction_(element)];\r\n      } else {\r\n        priorities[index] = priority;\r\n        elements[index++] = element;\r\n      }\r\n    }\r\n    elements.length = index;\r\n    priorities.length = index;\r\n    this.heapify_();\r\n  }\r\n}\r\n\r\nexport default PriorityQueue;\r\n", "/**\r\n * @module ol/TileQueue\r\n */\r\nimport EventType from './events/EventType.js';\r\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\r\nimport TileState from './TileState.js';\r\n\r\n/**\r\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\r\n */\r\n\r\nclass TileQueue extends PriorityQueue {\r\n  /**\r\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\r\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\r\n   */\r\n  constructor(tilePriorityFunction, tileChangeCallback) {\r\n    super(\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {number} Priority.\r\n       */\r\n      function (element) {\r\n        return tilePriorityFunction.apply(null, element);\r\n      },\r\n      /**\r\n       * @param {Array} element Element.\r\n       * @return {string} Key.\r\n       */\r\n      function (element) {\r\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\r\n      }\r\n    );\r\n\r\n    /** @private */\r\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(): ?}\r\n     */\r\n    this.tileChangeCallback_ = tileChangeCallback;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.tilesLoading_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Object<string,boolean>}\r\n     */\r\n    this.tilesLoadingKeys_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {Array} element Element.\r\n   * @return {boolean} The element was added to the queue.\r\n   */\r\n  enqueue(element) {\r\n    const added = super.enqueue(element);\r\n    if (added) {\r\n      const tile = element[0];\r\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\r\n    }\r\n    return added;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Number of tiles loading.\r\n   */\r\n  getTilesLoading() {\r\n    return this.tilesLoading_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./events/Event.js\").default} event Event.\r\n   * @protected\r\n   */\r\n  handleTileChange(event) {\r\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\r\n    const state = tile.getState();\r\n    if (\r\n      state === TileState.LOADED ||\r\n      state === TileState.ERROR ||\r\n      state === TileState.EMPTY\r\n    ) {\r\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\r\n      const tileKey = tile.getKey();\r\n      if (tileKey in this.tilesLoadingKeys_) {\r\n        delete this.tilesLoadingKeys_[tileKey];\r\n        --this.tilesLoading_;\r\n      }\r\n      this.tileChangeCallback_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\r\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\r\n   */\r\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\r\n    let newLoads = 0;\r\n    let state, tile, tileKey;\r\n    while (\r\n      this.tilesLoading_ < maxTotalLoading &&\r\n      newLoads < maxNewLoads &&\r\n      this.getCount() > 0\r\n    ) {\r\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\r\n      tileKey = tile.getKey();\r\n      state = tile.getState();\r\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\r\n        this.tilesLoadingKeys_[tileKey] = true;\r\n        ++this.tilesLoading_;\r\n        ++newLoads;\r\n        tile.load();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TileQueue;\r\n\r\n/**\r\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\r\n * @param {import(\"./Tile.js\").default} tile Tile.\r\n * @param {string} tileSourceKey Tile source key.\r\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n * @param {number} tileResolution Tile resolution.\r\n * @return {number} Tile priority.\r\n */\r\nexport function getTilePriority(\r\n  frameState,\r\n  tile,\r\n  tileSourceKey,\r\n  tileCenter,\r\n  tileResolution\r\n) {\r\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\r\n  // are outside the visible extent.\r\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\r\n    return DROP;\r\n  }\r\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\r\n    return DROP;\r\n  }\r\n  // Prioritize the highest zoom level tiles closest to the focus.\r\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\r\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\r\n  // the center of the tile and the center of the viewport.  The factor of 65536\r\n  // means that the prioritization should behave as desired for tiles up to\r\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\r\n  const center = frameState.viewState.center;\r\n  const deltaX = tileCenter[0] - center[0];\r\n  const deltaY = tileCenter[1] - center[1];\r\n  return (\r\n    65536 * Math.log(tileResolution) +\r\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\r\n  );\r\n}\r\n", "/**\r\n * @module ol/PluggableMap\r\n */\r\nimport BaseObject from './Object.js';\r\nimport Collection from './Collection.js';\r\nimport CollectionEventType from './CollectionEventType.js';\r\nimport EventType from './events/EventType.js';\r\nimport Layer from './layer/Layer.js';\r\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\r\nimport MapBrowserEvent from './MapBrowserEvent.js';\r\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\r\nimport MapBrowserEventType from './MapBrowserEventType.js';\r\nimport MapEvent from './MapEvent.js';\r\nimport MapEventType from './MapEventType.js';\r\nimport MapProperty from './MapProperty.js';\r\nimport ObjectEventType from './ObjectEventType.js';\r\nimport PointerEventType from './pointer/EventType.js';\r\nimport RenderEventType from './render/EventType.js';\r\nimport TileQueue, {getTilePriority} from './TileQueue.js';\r\nimport View from './View.js';\r\nimport ViewHint from './ViewHint.js';\r\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\r\nimport {TRUE} from './functions.js';\r\nimport {\r\n  apply as applyTransform,\r\n  create as createTransform,\r\n} from './transform.js';\r\nimport {assert} from './asserts.js';\r\nimport {\r\n  clone,\r\n  createOrUpdateEmpty,\r\n  equals,\r\n  getForViewAndSize,\r\n  isEmpty,\r\n} from './extent.js';\r\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\r\nimport {getUid} from './util.js';\r\nimport {hasArea} from './size.js';\r\nimport {listen, unlistenByKey} from './events.js';\r\nimport {removeNode} from './dom.js';\r\n\r\n/**\r\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\r\n * be used in applications.\r\n * @typedef {Object} FrameState\r\n * @property {number} pixelRatio The pixel ratio of the frame.\r\n * @property {number} time The time when rendering of the frame was requested.\r\n * @property {import(\"./View.js\").State} viewState The state of the current view.\r\n * @property {boolean} animate Animate.\r\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\r\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\r\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\r\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\r\n * @property {number} index Index.\r\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\r\n * @property {number} layerIndex LayerIndex.\r\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\r\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\r\n * @property {import(\"./size.js\").Size} size Size.\r\n * @property {TileQueue} tileQueue TileQueue.\r\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\r\n * @property {Array<number>} viewHints ViewHints.\r\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\r\n * @property {string} mapId The id of the map.\r\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\r\n */\r\n\r\n/**\r\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} AtPixelOptions\r\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\r\n * function. The filter function will receive one argument, the\r\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\r\n * Only layers which are visible and for which this function returns `true`\r\n * will be tested for features. By default, all visible layers will be tested.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\r\n * inside the radius around the given position will be checked for features.\r\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\r\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\r\n */\r\n\r\n/**\r\n * @typedef {Object} MapOptionsInternal\r\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\r\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\r\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\r\n * @property {Object<string, *>} values Values.\r\n */\r\n\r\n/**\r\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\r\n */\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\r\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\r\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\r\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\r\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\r\n */\r\n\r\n/**\r\n * Object literal with config options for the map.\r\n * @typedef {Object} MapOptions\r\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\r\n * Controls initially added to the map. If not specified,\r\n * {@link module:ol/control.defaults} is used.\r\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\r\n * physical pixels and device-independent pixels (dips) on the device.\r\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\r\n * Interactions that are initially added to the map. If not specified,\r\n * {@link module:ol/interaction.defaults} is used.\r\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\r\n * listen to keyboard events on. This determines when the `KeyboardPan` and\r\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\r\n * `document` the keyboard interactions will always trigger. If this option is\r\n * not specified, the element the library listens to keyboard events on is the\r\n * map target (i.e. the user-provided div for the map). If this is not\r\n * `document`, the target element needs to be focused for key events to be\r\n * emitted, requiring that the target element has a `tabindex` attribute.\r\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\r\n * Layers. If this is not defined, a map with no layers will be rendered. Note\r\n * that layers are rendered in the order supplied, so if you want, for example,\r\n * a vector layer to appear on top of a tile layer, it must come after the tile\r\n * layer.\r\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\r\n * simultaneously.\r\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\r\n * cursor must move to be detected as a map move event instead of a click.\r\n * Increasing this value can make it easier to click on the map.\r\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\r\n * Overlays initially added to the map. By default, no overlays are added.\r\n * @property {HTMLElement|string} [target] The container for the map, either the\r\n * element itself or the `id` of the element. If not specified at construction\r\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\r\n * rendered. If passed by element, the container can be in a secondary document.\r\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\r\n * fetched unless this is specified at construction time or through\r\n * {@link module:ol/Map~Map#setView}.\r\n */\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n */\r\nfunction removeLayerMapProperty(layer) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(null);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    layer.getLayers().forEach(removeLayerMapProperty);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n * @param {PluggableMap} map Map.\r\n */\r\nfunction setLayerMapProperty(layer, map) {\r\n  if (layer instanceof Layer) {\r\n    layer.setMapInternal(map);\r\n    return;\r\n  }\r\n  if (layer instanceof LayerGroup) {\r\n    const layers = layer.getLayers().getArray();\r\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\r\n      setLayerMapProperty(layers[i], map);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\r\n * @fires import(\"./MapEvent.js\").MapEvent\r\n * @fires import(\"./render/Event.js\").default#precompose\r\n * @fires import(\"./render/Event.js\").default#postcompose\r\n * @fires import(\"./render/Event.js\").default#rendercomplete\r\n * @api\r\n */\r\nclass PluggableMap extends BaseObject {\r\n  /**\r\n   * @param {MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {PluggableMapOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    const optionsInternal = createOptionsInternal(options);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderComplete_;\r\n\r\n    /** @private */\r\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxTilesLoading_ =\r\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelRatio_ =\r\n      options.pixelRatio !== undefined\r\n        ? options.pixelRatio\r\n        : DEVICE_PIXEL_RATIO;\r\n\r\n    /**\r\n     * @private\r\n     * @type {*}\r\n     */\r\n    this.postRenderTimeoutHandle_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.animationDelayKey_;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\r\n      this.animationDelayKey_ = undefined;\r\n      this.renderFrame_(Date.now());\r\n    }.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.coordinateToPixelTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"./transform.js\").Transform}\r\n     */\r\n    this.pixelToCoordinateTransform_ = createTransform();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.frameIndex_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?FrameState}\r\n     */\r\n    this.frameState_ = null;\r\n\r\n    /**\r\n     * The extent at the previous 'moveend' event.\r\n     * @private\r\n     * @type {import(\"./extent.js\").Extent}\r\n     */\r\n    this.previousExtent_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewPropertyListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"./events.js\").EventsKey}\r\n     */\r\n    this.viewChangeListenerKey_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.layerGroupPropertyListenerKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.viewport_ = document.createElement('div');\r\n    this.viewport_.className =\r\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\r\n    this.viewport_.style.position = 'relative';\r\n    this.viewport_.style.overflow = 'hidden';\r\n    this.viewport_.style.width = '100%';\r\n    this.viewport_.style.height = '100%';\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainer_ = document.createElement('div');\r\n    this.overlayContainer_.style.position = 'absolute';\r\n    this.overlayContainer_.style.zIndex = '0';\r\n    this.overlayContainer_.style.width = '100%';\r\n    this.overlayContainer_.style.height = '100%';\r\n    this.overlayContainer_.style.pointerEvents = 'none';\r\n    this.overlayContainer_.className = 'ol-overlaycontainer';\r\n    this.viewport_.appendChild(this.overlayContainer_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {!HTMLElement}\r\n     */\r\n    this.overlayContainerStopEvent_ = document.createElement('div');\r\n    this.overlayContainerStopEvent_.style.position = 'absolute';\r\n    this.overlayContainerStopEvent_.style.zIndex = '0';\r\n    this.overlayContainerStopEvent_.style.width = '100%';\r\n    this.overlayContainerStopEvent_.style.height = '100%';\r\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\r\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\r\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {MapBrowserEventHandler}\r\n     */\r\n    this.mapBrowserEventHandler_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.moveTolerance_ = options.moveTolerance;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|Document}\r\n     */\r\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"./events.js\").EventsKey>}\r\n     */\r\n    this.targetChangeHandlerKeys_ = null;\r\n\r\n    /**\r\n     * @type {Collection<import(\"./control/Control.js\").default>}\r\n     * @protected\r\n     */\r\n    this.controls = optionsInternal.controls || new Collection();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\r\n     * @protected\r\n     */\r\n    this.interactions = optionsInternal.interactions || new Collection();\r\n\r\n    /**\r\n     * @type {Collection<import(\"./Overlay.js\").default>}\r\n     * @private\r\n     */\r\n    this.overlays_ = optionsInternal.overlays;\r\n\r\n    /**\r\n     * A lookup of overlays by id.\r\n     * @private\r\n     * @type {Object<string, import(\"./Overlay.js\").default>}\r\n     */\r\n    this.overlayIdIndex_ = {};\r\n\r\n    /**\r\n     * @type {import(\"./renderer/Map.js\").default}\r\n     * @private\r\n     */\r\n    this.renderer_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {!Array<PostRenderFunction>}\r\n     */\r\n    this.postRenderFunctions_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {TileQueue}\r\n     */\r\n    this.tileQueue_ = new TileQueue(\r\n      this.getTilePriority.bind(this),\r\n      this.handleTileChange_.bind(this)\r\n    );\r\n\r\n    this.addChangeListener(\r\n      MapProperty.LAYERGROUP,\r\n      this.handleLayerGroupChanged_\r\n    );\r\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\r\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\r\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\r\n\r\n    // setProperties will trigger the rendering of the map if the map\r\n    // is \"defined\" already.\r\n    this.setProperties(optionsInternal.values);\r\n\r\n    const map = this;\r\n    if (options.view && !(options.view instanceof View)) {\r\n      options.view.then(function (viewOptions) {\r\n        map.setView(new View(viewOptions));\r\n      });\r\n    }\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.controls.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.ADD,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        this.addOverlayInternal_(\r\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\r\n        );\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      /**\r\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\r\n       */\r\n      function (event) {\r\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\r\n          event.element\r\n        );\r\n        const id = overlay.getId();\r\n        if (id !== undefined) {\r\n          delete this.overlayIdIndex_[id.toString()];\r\n        }\r\n        event.element.setMap(null);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.controls.forEach(\r\n      /**\r\n       * @param {import(\"./control/Control.js\").default} control Control.\r\n       * @this {PluggableMap}\r\n       */\r\n      function (control) {\r\n        control.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.interactions.forEach(\r\n      /**\r\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\r\n       * @this {PluggableMap}\r\n       */\r\n      function (interaction) {\r\n        interaction.setMap(this);\r\n      }.bind(this)\r\n    );\r\n\r\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\r\n   */\r\n  createRenderer() {\r\n    throw new Error('Use a map type that has a createRenderer method');\r\n  }\r\n\r\n  /**\r\n   * Add the given control to the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @api\r\n   */\r\n  addControl(control) {\r\n    this.getControls().push(control);\r\n  }\r\n\r\n  /**\r\n   * Add the given interaction to the map. If you want to add an interaction\r\n   * at another point of the collection use `getInteraction()` and the methods\r\n   * available on {@link module:ol/Collection~Collection}. This can be used to\r\n   * stop the event propagation from the handleEvent function. The interactions\r\n   * get to handle the events in the reverse order of this collection.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\r\n   * @api\r\n   */\r\n  addInteraction(interaction) {\r\n    this.getInteractions().push(interaction);\r\n  }\r\n\r\n  /**\r\n   * Adds the given layer to the top of this map. If you want to add a layer\r\n   * elsewhere in the stack, use `getLayers()` and the methods available on\r\n   * {@link module:ol/Collection~Collection}.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @api\r\n   */\r\n  addLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    layers.push(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\r\n   * @private\r\n   */\r\n  handleLayerAdd_(event) {\r\n    setLayerMapProperty(event.layer, this);\r\n  }\r\n\r\n  /**\r\n   * Add the given overlay to the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @api\r\n   */\r\n  addOverlay(overlay) {\r\n    this.getOverlays().push(overlay);\r\n  }\r\n\r\n  /**\r\n   * This deals with map's overlay collection changes.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @private\r\n   */\r\n  addOverlayInternal_(overlay) {\r\n    const id = overlay.getId();\r\n    if (id !== undefined) {\r\n      this.overlayIdIndex_[id.toString()] = overlay;\r\n    }\r\n    overlay.setMap(this);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.setTarget(null);\r\n    super.disposeInternal();\r\n  }\r\n\r\n  /**\r\n   * Detect features that intersect a pixel on the viewport, and execute a\r\n   * callback with each intersecting feature. Layers included in the detection can\r\n   * be configured through the `layerFilter` option in `opt_options`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\r\n   *     called with two arguments. The first argument is one\r\n   *     {@link module:ol/Feature~Feature feature} or\r\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\r\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\r\n   *     unmanaged layers. To stop detection, callback functions can return a\r\n   *     truthy value.\r\n   * @param {AtPixelOptions} [opt_options] Optional options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template T\r\n   * @api\r\n   */\r\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options : {};\r\n    const hitTolerance =\r\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\r\n    const layerFilter =\r\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\r\n    const checkWrapped = opt_options.checkWrapped !== false;\r\n    return this.renderer_.forEachFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      callback,\r\n      null,\r\n      layerFilter,\r\n      null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get all features that intersect a pixel on the viewport.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [opt_options] Optional options.\r\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\r\n   * an empty array if none were found.\r\n   * @api\r\n   */\r\n  getFeaturesAtPixel(pixel, opt_options) {\r\n    const features = [];\r\n    this.forEachFeatureAtPixel(\r\n      pixel,\r\n      function (feature) {\r\n        features.push(feature);\r\n      },\r\n      opt_options\r\n    );\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * Get all layers from all layer groups.\r\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getAllLayers() {\r\n    const layers = [];\r\n    function addLayersFrom(layerGroup) {\r\n      layerGroup.forEach(function (layer) {\r\n        if (layer instanceof LayerGroup) {\r\n          addLayersFrom(layer.getLayers());\r\n        } else {\r\n          layers.push(layer);\r\n        }\r\n      });\r\n    }\r\n    addLayersFrom(this.getLayers());\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\r\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\r\n   *\r\n   * Detect layers that have a color value at a pixel on the viewport, and\r\n   * execute a callback with each matching layer. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   *\r\n   * Note: In maps with more than one layer, this method will typically return pixel data\r\n   * representing the composed image of all layers visible at the given pixel – because layers\r\n   * will generally share the same rendering context.  To force layers to render separately, and\r\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\r\n   * `className` in its constructor.\r\n   *\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\r\n   *     Layer callback. This callback will receive two arguments: first is the\r\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\r\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\r\n   *     that do not currently support this argument. To stop detection, callback\r\n   *     functions can return a truthy value.\r\n   * @param {AtPixelOptions} [opt_options] Configuration options.\r\n   * @return {T|undefined} Callback result, i.e. the return value of last\r\n   * callback execution, or the first truthy callback return value.\r\n   * @template S,T\r\n   * @api\r\n   * @deprecated\r\n   */\r\n  forEachLayerAtPixel(pixel, callback, opt_options) {\r\n    if (!this.frameState_) {\r\n      return;\r\n    }\r\n    const options = opt_options || {};\r\n    const hitTolerance =\r\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\r\n    const layerFilter = options.layerFilter || TRUE;\r\n    return this.renderer_.forEachLayerAtPixel(\r\n      pixel,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      callback,\r\n      layerFilter\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Detect if features intersect a pixel on the viewport. Layers included in the\r\n   * detection can be configured through `opt_layerFilter`.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\r\n   * @param {AtPixelOptions} [opt_options] Optional options.\r\n   * @return {boolean} Is there a feature at the given pixel?\r\n   * @api\r\n   */\r\n  hasFeatureAtPixel(pixel, opt_options) {\r\n    if (!this.frameState_) {\r\n      return false;\r\n    }\r\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\r\n    opt_options = opt_options !== undefined ? opt_options : {};\r\n    const layerFilter =\r\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\r\n    const hitTolerance =\r\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\r\n    const checkWrapped = opt_options.checkWrapped !== false;\r\n    return this.renderer_.hasFeatureAtCoordinate(\r\n      coordinate,\r\n      this.frameState_,\r\n      hitTolerance,\r\n      checkWrapped,\r\n      layerFilter,\r\n      null\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in user projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   * @api\r\n   */\r\n  getEventCoordinate(event) {\r\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate in view projection for a browser event.\r\n   * @param {MouseEvent} event Event.\r\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\r\n   */\r\n  getEventCoordinateInternal(event) {\r\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\r\n  }\r\n\r\n  /**\r\n   * Returns the map pixel position for a browser event relative to the viewport.\r\n   * @param {UIEvent} event Event.\r\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\r\n   * @api\r\n   */\r\n  getEventPixel(event) {\r\n    const viewportPosition = this.viewport_.getBoundingClientRect();\r\n    const eventPosition =\r\n      //FIXME Are we really calling this with a TouchEvent anywhere?\r\n      'changedTouches' in event\r\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\r\n        : /** @type {MouseEvent} */ (event);\r\n\r\n    return [\r\n      eventPosition.clientX - viewportPosition.left,\r\n      eventPosition.clientY - viewportPosition.top,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Get the target in which this map is rendered.\r\n   * Note that this returns what is entered as an option or in setTarget:\r\n   * if that was an element, it returns an element; if a string, it returns that.\r\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\r\n   *     map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getTarget() {\r\n    return /** @type {HTMLElement|string|undefined} */ (\r\n      this.get(MapProperty.TARGET)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the DOM element into which this map is rendered. In contrast to\r\n   * `getTarget` this method always return an `Element`, or `null` if the\r\n   * map has no target.\r\n   * @return {HTMLElement} The element that the map is rendered in.\r\n   * @api\r\n   */\r\n  getTargetElement() {\r\n    const target = this.getTarget();\r\n    if (target !== undefined) {\r\n      return typeof target === 'string'\r\n        ? document.getElementById(target)\r\n        : target;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * user projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   * @api\r\n   */\r\n  getCoordinateFromPixel(pixel) {\r\n    return toUserCoordinate(\r\n      this.getCoordinateFromPixelInternal(pixel),\r\n      this.getView().getProjection()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\r\n   * map view projection.\r\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\r\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\r\n   */\r\n  getCoordinateFromPixelInternal(pixel) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(\r\n        frameState.pixelToCoordinateTransform,\r\n        pixel.slice()\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map controls. Modifying this collection changes the controls\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\r\n   * @api\r\n   */\r\n  getControls() {\r\n    return this.controls;\r\n  }\r\n\r\n  /**\r\n   * Get the map overlays. Modifying this collection changes the overlays\r\n   * associated with the map.\r\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\r\n   * @api\r\n   */\r\n  getOverlays() {\r\n    return this.overlays_;\r\n  }\r\n\r\n  /**\r\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\r\n   * Note that the index treats string and numeric identifiers as the same. So\r\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\r\n   * @param {string|number} id Overlay identifier.\r\n   * @return {import(\"./Overlay.js\").default} Overlay.\r\n   * @api\r\n   */\r\n  getOverlayById(id) {\r\n    const overlay = this.overlayIdIndex_[id.toString()];\r\n    return overlay !== undefined ? overlay : null;\r\n  }\r\n\r\n  /**\r\n   * Get the map interactions. Modifying this collection changes the interactions\r\n   * associated with the map.\r\n   *\r\n   * Interactions are used for e.g. pan, zoom and rotate.\r\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\r\n   * @api\r\n   */\r\n  getInteractions() {\r\n    return this.interactions;\r\n  }\r\n\r\n  /**\r\n   * Get the layergroup associated with this map.\r\n   * @return {LayerGroup} A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getLayerGroup() {\r\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\r\n  }\r\n\r\n  /**\r\n   * Clear any existing layers and add layers to the map.\r\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\r\n   * @api\r\n   */\r\n  setLayers(layers) {\r\n    const group = this.getLayerGroup();\r\n    if (layers instanceof Collection) {\r\n      group.setLayers(layers);\r\n      return;\r\n    }\r\n\r\n    const collection = group.getLayers();\r\n    collection.clear();\r\n    collection.extend(layers);\r\n  }\r\n\r\n  /**\r\n   * Get the collection of layers associated with this map.\r\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\r\n   * @api\r\n   */\r\n  getLayers() {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers;\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Layers have sources that are still loading.\r\n   */\r\n  getLoadingOrNotReady() {\r\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\r\n      const layer = layerStatesArray[i].layer;\r\n      if (!layer.getRenderer().ready) {\r\n        return true;\r\n      }\r\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\r\n        layer\r\n      ).getSource();\r\n      if (source && source.loading) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   * @api\r\n   */\r\n  getPixelFromCoordinate(coordinate) {\r\n    const viewCoordinate = fromUserCoordinate(\r\n      coordinate,\r\n      this.getView().getProjection()\r\n    );\r\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\r\n  }\r\n\r\n  /**\r\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\r\n   * projection and returns the corresponding pixel.\r\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\r\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\r\n   */\r\n  getPixelFromCoordinateInternal(coordinate) {\r\n    const frameState = this.frameState_;\r\n    if (!frameState) {\r\n      return null;\r\n    } else {\r\n      return applyTransform(\r\n        frameState.coordinateToPixelTransform,\r\n        coordinate.slice(0, 2)\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the map renderer.\r\n   * @return {import(\"./renderer/Map.js\").default} Renderer\r\n   */\r\n  getRenderer() {\r\n    return this.renderer_;\r\n  }\r\n\r\n  /**\r\n   * Get the size of this map.\r\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getSize() {\r\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\r\n      this.get(MapProperty.SIZE)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the view associated with this map. A view manages properties such as\r\n   * center and resolution.\r\n   * @return {View} The view that controls this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getView() {\r\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the map viewport.\r\n   * @return {HTMLElement} Viewport.\r\n   * @api\r\n   */\r\n  getViewport() {\r\n    return this.viewport_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as the container for overlays.  Elements added to\r\n   * this container will let mousedown and touchstart events through to the map,\r\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\r\n   * events.\r\n   * @return {!HTMLElement} The map's overlay container.\r\n   */\r\n  getOverlayContainer() {\r\n    return this.overlayContainer_;\r\n  }\r\n\r\n  /**\r\n   * Get the element that serves as a container for overlays that don't allow\r\n   * event propagation. Elements added to this container won't let mousedown and\r\n   * touchstart events through to the map, so clicks and gestures on an overlay\r\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   * @return {!HTMLElement} The map's overlay container that stops events.\r\n   */\r\n  getOverlayContainerStopEvent() {\r\n    return this.overlayContainerStopEvent_;\r\n  }\r\n\r\n  /**\r\n   * @return {!Document} The document where the map is displayed.\r\n   */\r\n  getOwnerDocument() {\r\n    const targetElement = this.getTargetElement();\r\n    return targetElement ? targetElement.ownerDocument : document;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./Tile.js\").default} tile Tile.\r\n   * @param {string} tileSourceKey Tile source key.\r\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\r\n   * @param {number} tileResolution Tile resolution.\r\n   * @return {number} Tile priority.\r\n   */\r\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\r\n    return getTilePriority(\r\n      this.frameState_,\r\n      tile,\r\n      tileSourceKey,\r\n      tileCenter,\r\n      tileResolution\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {UIEvent} browserEvent Browser event.\r\n   * @param {string} [opt_type] Type.\r\n   */\r\n  handleBrowserEvent(browserEvent, opt_type) {\r\n    const type = opt_type || browserEvent.type;\r\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\r\n    this.handleMapBrowserEvent(mapBrowserEvent);\r\n  }\r\n\r\n  /**\r\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\r\n   */\r\n  handleMapBrowserEvent(mapBrowserEvent) {\r\n    if (!this.frameState_) {\r\n      // With no view defined, we cannot translate pixels into geographical\r\n      // coordinates so interactions cannot be used.\r\n      return;\r\n    }\r\n    const originalEvent = /** @type {PointerEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    const eventType = originalEvent.type;\r\n    if (\r\n      eventType === PointerEventType.POINTERDOWN ||\r\n      eventType === EventType.WHEEL ||\r\n      eventType === EventType.KEYDOWN\r\n    ) {\r\n      const doc = this.getOwnerDocument();\r\n      const rootNode = this.viewport_.getRootNode\r\n        ? this.viewport_.getRootNode()\r\n        : doc;\r\n      const target = /** @type {Node} */ (originalEvent.target);\r\n      if (\r\n        // Abort if the target is a child of the container for elements whose events are not meant\r\n        // to be handled by map interactions.\r\n        this.overlayContainerStopEvent_.contains(target) ||\r\n        // Abort if the event target is a child of the container that is no longer in the page.\r\n        // It's possible for the target to no longer be in the page if it has been removed in an\r\n        // event listener, this might happen in a Control that recreates it's content based on\r\n        // user interaction either manually or via a render in something like https://reactjs.org/\r\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\r\n      ) {\r\n        return;\r\n      }\r\n    }\r\n    mapBrowserEvent.frameState = this.frameState_;\r\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\r\n      const interactionsArray = this.getInteractions().getArray().slice();\r\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\r\n        const interaction = interactionsArray[i];\r\n        if (\r\n          interaction.getMap() !== this ||\r\n          !interaction.getActive() ||\r\n          !this.getTargetElement()\r\n        ) {\r\n          continue;\r\n        }\r\n        const cont = interaction.handleEvent(mapBrowserEvent);\r\n        if (!cont || mapBrowserEvent.propagationStopped) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handlePostRender() {\r\n    const frameState = this.frameState_;\r\n\r\n    // Manage the tile queue\r\n    // Image loads are expensive and a limited resource, so try to use them\r\n    // efficiently:\r\n    // * When the view is static we allow a large number of parallel tile loads\r\n    //   to complete the frame as quickly as possible.\r\n    // * When animating or interacting, image loads can cause janks, so we reduce\r\n    //   the maximum number of loads per frame and limit the number of parallel\r\n    //   tile loads to remain reactive to view changes and to reduce the chance of\r\n    //   loading tiles that will quickly disappear from view.\r\n    const tileQueue = this.tileQueue_;\r\n    if (!tileQueue.isEmpty()) {\r\n      let maxTotalLoading = this.maxTilesLoading_;\r\n      let maxNewLoads = maxTotalLoading;\r\n      if (frameState) {\r\n        const hints = frameState.viewHints;\r\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\r\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\r\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\r\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\r\n        }\r\n      }\r\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\r\n        tileQueue.reprioritize(); // FIXME only call if view has changed\r\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\r\n      }\r\n    }\r\n\r\n    if (\r\n      frameState &&\r\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\r\n      !frameState.animate &&\r\n      this.renderComplete_\r\n    ) {\r\n      this.renderer_.dispatchRenderEvent(\r\n        RenderEventType.RENDERCOMPLETE,\r\n        frameState\r\n      );\r\n    }\r\n\r\n    const postRenderFunctions = this.postRenderFunctions_;\r\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\r\n      postRenderFunctions[i](this, frameState);\r\n    }\r\n    postRenderFunctions.length = 0;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleSizeChanged_() {\r\n    if (this.getView() && !this.getView().getAnimating()) {\r\n      this.getView().resolveConstraints(0);\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTargetChanged_() {\r\n    if (this.mapBrowserEventHandler_) {\r\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\r\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\r\n      }\r\n      this.targetChangeHandlerKeys_ = null;\r\n      this.viewport_.removeEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_\r\n      );\r\n      this.viewport_.removeEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_\r\n      );\r\n      this.mapBrowserEventHandler_.dispose();\r\n      this.mapBrowserEventHandler_ = null;\r\n      removeNode(this.viewport_);\r\n    }\r\n\r\n    // target may be undefined, null, a string or an Element.\r\n    // If it's a string we convert it to an Element before proceeding.\r\n    // If it's not now an Element we remove the viewport from the DOM.\r\n    // If it's an Element we append the viewport element to it.\r\n\r\n    const targetElement = this.getTargetElement();\r\n    if (!targetElement) {\r\n      if (this.renderer_) {\r\n        clearTimeout(this.postRenderTimeoutHandle_);\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.postRenderFunctions_.length = 0;\r\n        this.renderer_.dispose();\r\n        this.renderer_ = null;\r\n      }\r\n      if (this.animationDelayKey_) {\r\n        cancelAnimationFrame(this.animationDelayKey_);\r\n        this.animationDelayKey_ = undefined;\r\n      }\r\n    } else {\r\n      targetElement.appendChild(this.viewport_);\r\n      if (!this.renderer_) {\r\n        this.renderer_ = this.createRenderer();\r\n      }\r\n\r\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\r\n        this,\r\n        this.moveTolerance_\r\n      );\r\n      for (const key in MapBrowserEventType) {\r\n        this.mapBrowserEventHandler_.addEventListener(\r\n          MapBrowserEventType[key],\r\n          this.handleMapBrowserEvent.bind(this)\r\n        );\r\n      }\r\n      this.viewport_.addEventListener(\r\n        EventType.CONTEXTMENU,\r\n        this.boundHandleBrowserEvent_,\r\n        false\r\n      );\r\n      this.viewport_.addEventListener(\r\n        EventType.WHEEL,\r\n        this.boundHandleBrowserEvent_,\r\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\r\n      );\r\n\r\n      const defaultView = this.getOwnerDocument().defaultView;\r\n      const keyboardEventTarget = !this.keyboardEventTarget_\r\n        ? targetElement\r\n        : this.keyboardEventTarget_;\r\n      this.targetChangeHandlerKeys_ = [\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYDOWN,\r\n          this.handleBrowserEvent,\r\n          this\r\n        ),\r\n        listen(\r\n          keyboardEventTarget,\r\n          EventType.KEYPRESS,\r\n          this.handleBrowserEvent,\r\n          this\r\n        ),\r\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\r\n      ];\r\n    }\r\n\r\n    this.updateSize();\r\n    // updateSize calls setSize, so no need to call this.render\r\n    // ourselves here.\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleTileChange_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewPropertyChanged_() {\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleViewChanged_() {\r\n    if (this.viewPropertyListenerKey_) {\r\n      unlistenByKey(this.viewPropertyListenerKey_);\r\n      this.viewPropertyListenerKey_ = null;\r\n    }\r\n    if (this.viewChangeListenerKey_) {\r\n      unlistenByKey(this.viewChangeListenerKey_);\r\n      this.viewChangeListenerKey_ = null;\r\n    }\r\n    const view = this.getView();\r\n    if (view) {\r\n      this.updateViewportSize_();\r\n\r\n      this.viewPropertyListenerKey_ = listen(\r\n        view,\r\n        ObjectEventType.PROPERTYCHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this\r\n      );\r\n      this.viewChangeListenerKey_ = listen(\r\n        view,\r\n        EventType.CHANGE,\r\n        this.handleViewPropertyChanged_,\r\n        this\r\n      );\r\n\r\n      view.resolveConstraints(0);\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleLayerGroupChanged_() {\r\n    if (this.layerGroupPropertyListenerKeys_) {\r\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\r\n      this.layerGroupPropertyListenerKeys_ = null;\r\n    }\r\n    const layerGroup = this.getLayerGroup();\r\n    if (layerGroup) {\r\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\r\n      this.layerGroupPropertyListenerKeys_ = [\r\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\r\n        listen(layerGroup, EventType.CHANGE, this.render, this),\r\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\r\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\r\n      ];\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Is rendered.\r\n   */\r\n  isRendered() {\r\n    return !!this.frameState_;\r\n  }\r\n\r\n  /**\r\n   * Requests an immediate render in a synchronous manner.\r\n   * @api\r\n   */\r\n  renderSync() {\r\n    if (this.animationDelayKey_) {\r\n      cancelAnimationFrame(this.animationDelayKey_);\r\n    }\r\n    this.animationDelay_();\r\n  }\r\n\r\n  /**\r\n   * Redraws all text after new fonts have loaded\r\n   */\r\n  redrawText() {\r\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\r\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\r\n      const layer = layerStates[i].layer;\r\n      if (layer.hasRenderer()) {\r\n        layer.getRenderer().handleFontsChanged();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request a map rendering (at the next animation frame).\r\n   * @api\r\n   */\r\n  render() {\r\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\r\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the given control from the map.\r\n   * @param {import(\"./control/Control.js\").default} control Control.\r\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\r\n   *     if the control was not found).\r\n   * @api\r\n   */\r\n  removeControl(control) {\r\n    return this.getControls().remove(control);\r\n  }\r\n\r\n  /**\r\n   * Remove the given interaction from the map.\r\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\r\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\r\n   *     undefined if the interaction was not found).\r\n   * @api\r\n   */\r\n  removeInteraction(interaction) {\r\n    return this.getInteractions().remove(interaction);\r\n  }\r\n\r\n  /**\r\n   * Removes the given layer from the map.\r\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\r\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\r\n   *     layer was not found).\r\n   * @api\r\n   */\r\n  removeLayer(layer) {\r\n    const layers = this.getLayerGroup().getLayers();\r\n    return layers.remove(layer);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\r\n   * @private\r\n   */\r\n  handleLayerRemove_(event) {\r\n    removeLayerMapProperty(event.layer);\r\n  }\r\n\r\n  /**\r\n   * Remove the given overlay from the map.\r\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\r\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\r\n   *     if the overlay was not found).\r\n   * @api\r\n   */\r\n  removeOverlay(overlay) {\r\n    return this.getOverlays().remove(overlay);\r\n  }\r\n\r\n  /**\r\n   * @param {number} time Time.\r\n   * @private\r\n   */\r\n  renderFrame_(time) {\r\n    const size = this.getSize();\r\n    const view = this.getView();\r\n    const previousFrameState = this.frameState_;\r\n    /** @type {?FrameState} */\r\n    let frameState = null;\r\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\r\n      const viewHints = view.getHints(\r\n        this.frameState_ ? this.frameState_.viewHints : undefined\r\n      );\r\n      const viewState = view.getState();\r\n      frameState = {\r\n        animate: false,\r\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\r\n        declutterTree: null,\r\n        extent: getForViewAndSize(\r\n          viewState.center,\r\n          viewState.resolution,\r\n          viewState.rotation,\r\n          size\r\n        ),\r\n        index: this.frameIndex_++,\r\n        layerIndex: 0,\r\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\r\n        pixelRatio: this.pixelRatio_,\r\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\r\n        postRenderFunctions: [],\r\n        size: size,\r\n        tileQueue: this.tileQueue_,\r\n        time: time,\r\n        usedTiles: {},\r\n        viewState: viewState,\r\n        viewHints: viewHints,\r\n        wantedTiles: {},\r\n        mapId: getUid(this),\r\n        renderTargets: {},\r\n      };\r\n      if (viewState.nextCenter && viewState.nextResolution) {\r\n        const rotation = isNaN(viewState.nextRotation)\r\n          ? viewState.rotation\r\n          : viewState.nextRotation;\r\n\r\n        frameState.nextExtent = getForViewAndSize(\r\n          viewState.nextCenter,\r\n          viewState.nextResolution,\r\n          rotation,\r\n          size\r\n        );\r\n      }\r\n    }\r\n\r\n    this.frameState_ = frameState;\r\n    this.renderer_.renderFrame(frameState);\r\n\r\n    if (frameState) {\r\n      if (frameState.animate) {\r\n        this.render();\r\n      }\r\n      Array.prototype.push.apply(\r\n        this.postRenderFunctions_,\r\n        frameState.postRenderFunctions\r\n      );\r\n\r\n      if (previousFrameState) {\r\n        const moveStart =\r\n          !this.previousExtent_ ||\r\n          (!isEmpty(this.previousExtent_) &&\r\n            !equals(frameState.extent, this.previousExtent_));\r\n        if (moveStart) {\r\n          this.dispatchEvent(\r\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\r\n          );\r\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\r\n        }\r\n      }\r\n\r\n      const idle =\r\n        this.previousExtent_ &&\r\n        !frameState.viewHints[ViewHint.ANIMATING] &&\r\n        !frameState.viewHints[ViewHint.INTERACTING] &&\r\n        !equals(frameState.extent, this.previousExtent_);\r\n\r\n      if (idle) {\r\n        this.dispatchEvent(\r\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\r\n        );\r\n        clone(frameState.extent, this.previousExtent_);\r\n      }\r\n    }\r\n\r\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\r\n\r\n    this.renderComplete_ =\r\n      !this.tileQueue_.getTilesLoading() &&\r\n      !this.tileQueue_.getCount() &&\r\n      !this.getLoadingOrNotReady();\r\n\r\n    if (!this.postRenderTimeoutHandle_) {\r\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\r\n        this.postRenderTimeoutHandle_ = undefined;\r\n        this.handlePostRender();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the layergroup of this map.\r\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setLayerGroup(layerGroup) {\r\n    const oldLayerGroup = this.getLayerGroup();\r\n    if (oldLayerGroup) {\r\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\r\n    }\r\n    this.set(MapProperty.LAYERGROUP, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Set the size of this map.\r\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setSize(size) {\r\n    this.set(MapProperty.SIZE, size);\r\n  }\r\n\r\n  /**\r\n   * Set the target element to render this map into.\r\n   * @param {HTMLElement|string} [target] The Element or id of the Element\r\n   *     that the map is rendered in.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setTarget(target) {\r\n    this.set(MapProperty.TARGET, target);\r\n  }\r\n\r\n  /**\r\n   * Set the view for this map.\r\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\r\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\r\n   * alternative allows view properties to be resolved by sources or other components that load\r\n   * view-related metadata.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setView(view) {\r\n    if (!view || view instanceof View) {\r\n      this.set(MapProperty.VIEW, view);\r\n      return;\r\n    }\r\n    this.set(MapProperty.VIEW, new View());\r\n\r\n    const map = this;\r\n    view.then(function (viewOptions) {\r\n      map.setView(new View(viewOptions));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force a recalculation of the map viewport size.  This should be called when\r\n   * third-party code changes the size of the map viewport.\r\n   * @api\r\n   */\r\n  updateSize() {\r\n    const targetElement = this.getTargetElement();\r\n\r\n    let size = undefined;\r\n    if (targetElement) {\r\n      const computedStyle = getComputedStyle(targetElement);\r\n      const width =\r\n        targetElement.offsetWidth -\r\n        parseFloat(computedStyle['borderLeftWidth']) -\r\n        parseFloat(computedStyle['paddingLeft']) -\r\n        parseFloat(computedStyle['paddingRight']) -\r\n        parseFloat(computedStyle['borderRightWidth']);\r\n      const height =\r\n        targetElement.offsetHeight -\r\n        parseFloat(computedStyle['borderTopWidth']) -\r\n        parseFloat(computedStyle['paddingTop']) -\r\n        parseFloat(computedStyle['paddingBottom']) -\r\n        parseFloat(computedStyle['borderBottomWidth']);\r\n      if (!isNaN(width) && !isNaN(height)) {\r\n        size = [width, height];\r\n        if (\r\n          !hasArea(size) &&\r\n          !!(\r\n            targetElement.offsetWidth ||\r\n            targetElement.offsetHeight ||\r\n            targetElement.getClientRects().length\r\n          )\r\n        ) {\r\n          // eslint-disable-next-line\r\n          console.warn(\r\n            \"No map visible because the map container's width or height are 0.\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setSize(size);\r\n    this.updateViewportSize_();\r\n  }\r\n\r\n  /**\r\n   * Recomputes the viewport size and save it on the view object (if any)\r\n   * @private\r\n   */\r\n  updateViewportSize_() {\r\n    const view = this.getView();\r\n    if (view) {\r\n      let size = undefined;\r\n      const computedStyle = getComputedStyle(this.viewport_);\r\n      if (computedStyle.width && computedStyle.height) {\r\n        size = [\r\n          parseInt(computedStyle.width, 10),\r\n          parseInt(computedStyle.height, 10),\r\n        ];\r\n      }\r\n      view.setViewportSize(size);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {MapOptions} options Map options.\r\n * @return {MapOptionsInternal} Internal map options.\r\n */\r\nfunction createOptionsInternal(options) {\r\n  /**\r\n   * @type {HTMLElement|Document}\r\n   */\r\n  let keyboardEventTarget = null;\r\n  if (options.keyboardEventTarget !== undefined) {\r\n    keyboardEventTarget =\r\n      typeof options.keyboardEventTarget === 'string'\r\n        ? document.getElementById(options.keyboardEventTarget)\r\n        : options.keyboardEventTarget;\r\n  }\r\n\r\n  /**\r\n   * @type {Object<string, *>}\r\n   */\r\n  const values = {};\r\n\r\n  const layerGroup =\r\n    options.layers &&\r\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\r\n      ? /** @type {LayerGroup} */ (options.layers)\r\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\r\n  values[MapProperty.LAYERGROUP] = layerGroup;\r\n\r\n  values[MapProperty.TARGET] = options.target;\r\n\r\n  values[MapProperty.VIEW] =\r\n    options.view instanceof View ? options.view : new View();\r\n\r\n  let controls;\r\n  if (options.controls !== undefined) {\r\n    if (Array.isArray(options.controls)) {\r\n      controls = new Collection(options.controls.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\r\n        47\r\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\r\n      controls = /** @type {Collection} */ (options.controls);\r\n    }\r\n  }\r\n\r\n  let interactions;\r\n  if (options.interactions !== undefined) {\r\n    if (Array.isArray(options.interactions)) {\r\n      interactions = new Collection(options.interactions.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\r\n          'function',\r\n        48\r\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\r\n      interactions = /** @type {Collection} */ (options.interactions);\r\n    }\r\n  }\r\n\r\n  let overlays;\r\n  if (options.overlays !== undefined) {\r\n    if (Array.isArray(options.overlays)) {\r\n      overlays = new Collection(options.overlays.slice());\r\n    } else {\r\n      assert(\r\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\r\n        49\r\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\r\n      overlays = options.overlays;\r\n    }\r\n  } else {\r\n    overlays = new Collection();\r\n  }\r\n\r\n  return {\r\n    controls: controls,\r\n    interactions: interactions,\r\n    keyboardEventTarget: keyboardEventTarget,\r\n    overlays: overlays,\r\n    values: values,\r\n  };\r\n}\r\nexport default PluggableMap;\r\n", "/**\r\n * @module ol/control/OverviewMap\r\n */\r\nimport CompositeMapRenderer from '../renderer/Composite.js';\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport MapEventType from '../MapEventType.js';\r\nimport MapProperty from '../MapProperty.js';\r\nimport ObjectEventType from '../ObjectEventType.js';\r\nimport Overlay from '../Overlay.js';\r\nimport OverlayPositioning from '../OverlayPositioning.js';\r\nimport PluggableMap from '../PluggableMap.js';\r\nimport View from '../View.js';\r\nimport ViewProperty from '../ViewProperty.js';\r\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {\r\n  containsExtent,\r\n  equals as equalsExtent,\r\n  getBottomRight,\r\n  getTopLeft,\r\n  scaleFromCenter,\r\n} from '../extent.js';\r\nimport {listen, listenOnce} from '../events.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\nimport {replaceNode} from '../dom.js';\r\n\r\n/**\r\n * Maximum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed out.\r\n * @type {number}\r\n */\r\nconst MAX_RATIO = 0.75;\r\n\r\n/**\r\n * Minimum width and/or height extent ratio that determines when the overview\r\n * map should be zoomed in.\r\n * @type {number}\r\n */\r\nconst MIN_RATIO = 0.1;\r\n\r\nclass ControlledMap extends PluggableMap {\r\n  createRenderer() {\r\n    return new CompositeMapRenderer(this);\r\n  }\r\n}\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-overviewmap'] CSS class name.\r\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\r\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\r\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\r\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\r\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\r\n * Layers for the overview map.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\r\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\r\n * a default view with the same projection as the main map will be used.\r\n */\r\n\r\n/**\r\n * Create a new control with a map acting as an overview map for another\r\n * defined map.\r\n *\r\n * @api\r\n */\r\nclass OverviewMap extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] OverviewMap options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.collapsed_ =\r\n      options.collapsed !== undefined ? options.collapsed : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.collapsible_ =\r\n      options.collapsible !== undefined ? options.collapsible : true;\r\n\r\n    if (!this.collapsible_) {\r\n      this.collapsed_ = false;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotateWithView_ =\r\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../extent.js\").Extent|undefined}\r\n     */\r\n    this.viewExtent_ = undefined;\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-overviewmap';\r\n\r\n    const tipLabel =\r\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\r\n\r\n    const collapseLabel =\r\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\r\n\r\n    if (typeof collapseLabel === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.collapseLabel_ = document.createElement('span');\r\n      this.collapseLabel_.textContent = collapseLabel;\r\n    } else {\r\n      this.collapseLabel_ = collapseLabel;\r\n    }\r\n\r\n    const label = options.label !== undefined ? options.label : '\\u203A';\r\n\r\n    if (typeof label === 'string') {\r\n      /**\r\n       * @private\r\n       * @type {HTMLElement}\r\n       */\r\n      this.label_ = document.createElement('span');\r\n      this.label_.textContent = label;\r\n    } else {\r\n      this.label_ = label;\r\n    }\r\n\r\n    const activeLabel =\r\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(activeLabel);\r\n\r\n    button.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    /**\r\n     * @type {HTMLElement}\r\n     * @private\r\n     */\r\n    this.ovmapDiv_ = document.createElement('div');\r\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\r\n\r\n    /**\r\n     * Explicitly given view to be used instead of a view derived from the main map.\r\n     * @type {View}\r\n     * @private\r\n     */\r\n    this.view_ = options.view;\r\n\r\n    /**\r\n     * @type {ControlledMap}\r\n     * @private\r\n     */\r\n    this.ovmap_ = new ControlledMap({\r\n      view: options.view,\r\n    });\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (options.layers) {\r\n      options.layers.forEach(function (layer) {\r\n        ovmap.addLayer(layer);\r\n      });\r\n    }\r\n\r\n    const box = document.createElement('div');\r\n    box.className = 'ol-overviewmap-box';\r\n    box.style.boxSizing = 'border-box';\r\n\r\n    /**\r\n     * @type {import(\"../Overlay.js\").default}\r\n     * @private\r\n     */\r\n    this.boxOverlay_ = new Overlay({\r\n      position: [0, 0],\r\n      positioning: OverlayPositioning.CENTER_CENTER,\r\n      element: box,\r\n    });\r\n    this.ovmap_.addOverlay(this.boxOverlay_);\r\n\r\n    const cssClasses =\r\n      className +\r\n      ' ' +\r\n      CLASS_UNSELECTABLE +\r\n      ' ' +\r\n      CLASS_CONTROL +\r\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\r\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(this.ovmapDiv_);\r\n    element.appendChild(button);\r\n\r\n    /* Interactive map */\r\n\r\n    const scope = this;\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const overlayBox = this.boxOverlay_.getElement();\r\n\r\n    /* Functions definition */\r\n\r\n    const computeDesiredMousePosition = function (mousePosition) {\r\n      return {\r\n        clientX: mousePosition.clientX,\r\n        clientY: mousePosition.clientY,\r\n      };\r\n    };\r\n\r\n    const move = function (event) {\r\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\r\n      const coordinates = ovmap.getEventCoordinateInternal(\r\n        /** @type {MouseEvent} */ (position)\r\n      );\r\n\r\n      overlay.setPosition(coordinates);\r\n    };\r\n\r\n    const endMoving = function (event) {\r\n      const coordinates = ovmap.getEventCoordinateInternal(event);\r\n\r\n      scope.getMap().getView().setCenterInternal(coordinates);\r\n\r\n      window.removeEventListener('mousemove', move);\r\n      window.removeEventListener('mouseup', endMoving);\r\n    };\r\n\r\n    /* Binding */\r\n\r\n    overlayBox.addEventListener('mousedown', function () {\r\n      window.addEventListener('mousemove', move);\r\n      window.addEventListener('mouseup', endMoving);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const oldMap = this.getMap();\r\n    if (map === oldMap) {\r\n      return;\r\n    }\r\n    if (oldMap) {\r\n      const oldView = oldMap.getView();\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      this.ovmap_.setTarget(null);\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      this.ovmap_.setTarget(this.ovmapDiv_);\r\n      this.listenerKeys.push(\r\n        listen(\r\n          map,\r\n          ObjectEventType.PROPERTYCHANGE,\r\n          this.handleMapPropertyChange_,\r\n          this\r\n        )\r\n      );\r\n\r\n      const view = map.getView();\r\n      if (view) {\r\n        this.bindView_(view);\r\n        if (view.isDef()) {\r\n          this.ovmap_.updateSize();\r\n          this.resetExtent_();\r\n        }\r\n      }\r\n\r\n      if (!this.ovmap_.isRendered()) {\r\n        this.updateBoxAfterOvmapIsRendered_();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle map property changes.  This only deals with changes to the map's view.\r\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\r\n   * @private\r\n   */\r\n  handleMapPropertyChange_(event) {\r\n    if (event.key === MapProperty.VIEW) {\r\n      const oldView = /** @type {import(\"../View.js\").default} */ (\r\n        event.oldValue\r\n      );\r\n      if (oldView) {\r\n        this.unbindView_(oldView);\r\n      }\r\n      const newView = this.getMap().getView();\r\n      this.bindView_(newView);\r\n    } else if (\r\n      !this.ovmap_.isRendered() &&\r\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\r\n    ) {\r\n      this.ovmap_.updateSize();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  bindView_(view) {\r\n    if (!this.view_) {\r\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\r\n      const newView = new View({\r\n        projection: view.getProjection(),\r\n      });\r\n      this.ovmap_.setView(newView);\r\n    }\r\n\r\n    view.addChangeListener(\r\n      ViewProperty.ROTATION,\r\n      this.boundHandleRotationChanged_\r\n    );\r\n    // Sync once with the new view\r\n    this.handleRotationChanged_();\r\n  }\r\n\r\n  /**\r\n   * Unregister listeners for view property changes.\r\n   * @param {import(\"../View.js\").default} view The view.\r\n   * @private\r\n   */\r\n  unbindView_(view) {\r\n    view.removeChangeListener(\r\n      ViewProperty.ROTATION,\r\n      this.boundHandleRotationChanged_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle rotation changes to the main map.\r\n   * @private\r\n   */\r\n  handleRotationChanged_() {\r\n    if (this.rotateWithView_) {\r\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent if the box size (width or\r\n   * height) is less than the size of the overview map size times minRatio\r\n   * or is greater than the size of the overview size times maxRatio.\r\n   *\r\n   * If the map extent was not reset, the box size can fits in the defined\r\n   * ratio sizes. This method then checks if is contained inside the overview\r\n   * map current extent. If not, recenter the overview map to the current\r\n   * main map center location.\r\n   * @private\r\n   */\r\n  validateExtent_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtentInternal(mapSize);\r\n\r\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\r\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\r\n      return;\r\n    }\r\n    this.viewExtent_ = extent;\r\n\r\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\r\n      ovmap.getSize()\r\n    );\r\n\r\n    const ovview = ovmap.getView();\r\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\r\n\r\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\r\n      getTopLeft(extent)\r\n    );\r\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\r\n      getBottomRight(extent)\r\n    );\r\n\r\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\r\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\r\n\r\n    const ovmapWidth = ovmapSize[0];\r\n    const ovmapHeight = ovmapSize[1];\r\n\r\n    if (\r\n      boxWidth < ovmapWidth * MIN_RATIO ||\r\n      boxHeight < ovmapHeight * MIN_RATIO ||\r\n      boxWidth > ovmapWidth * MAX_RATIO ||\r\n      boxHeight > ovmapHeight * MAX_RATIO\r\n    ) {\r\n      this.resetExtent_();\r\n    } else if (!containsExtent(ovextent, extent)) {\r\n      this.recenter_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the overview map extent to half calculated min and max ratio times\r\n   * the extent of the main map.\r\n   * @private\r\n   */\r\n  resetExtent_() {\r\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\r\n      return;\r\n    }\r\n\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n    const extent = view.calculateExtentInternal(mapSize);\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    // get how many times the current map overview could hold different\r\n    // box sizes using the min and max ratio, pick the step in the middle used\r\n    // to calculate the extent from the main map to set it to the overview map,\r\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\r\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\r\n    scaleFromCenter(extent, ratio);\r\n    ovview.fitInternal(polygonFromExtent(extent));\r\n  }\r\n\r\n  /**\r\n   * Set the center of the overview map to the map center without changing its\r\n   * resolution.\r\n   * @private\r\n   */\r\n  recenter_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    ovview.setCenterInternal(view.getCenterInternal());\r\n  }\r\n\r\n  /**\r\n   * Update the box using the main map extent\r\n   * @private\r\n   */\r\n  updateBox_() {\r\n    const map = this.getMap();\r\n    const ovmap = this.ovmap_;\r\n\r\n    if (!map.isRendered() || !ovmap.isRendered()) {\r\n      return;\r\n    }\r\n\r\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\r\n\r\n    const view = map.getView();\r\n\r\n    const ovview = ovmap.getView();\r\n\r\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\r\n\r\n    const overlay = this.boxOverlay_;\r\n    const box = this.boxOverlay_.getElement();\r\n    const center = view.getCenterInternal();\r\n    const resolution = view.getResolution();\r\n    const ovresolution = ovview.getResolution();\r\n    const width = (mapSize[0] * resolution) / ovresolution;\r\n    const height = (mapSize[1] * resolution) / ovresolution;\r\n\r\n    // set position using center coordinates\r\n    overlay.setPosition(center);\r\n\r\n    // set box size calculated from map extent size and overview map resolution\r\n    if (box) {\r\n      box.style.width = width + 'px';\r\n      box.style.height = height + 'px';\r\n      const transform = 'rotate(' + rotation + 'rad)';\r\n      box.style.transform = transform;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateBoxAfterOvmapIsRendered_() {\r\n    if (this.ovmapPostrenderKey_) {\r\n      return;\r\n    }\r\n    this.ovmapPostrenderKey_ = listenOnce(\r\n      this.ovmap_,\r\n      MapEventType.POSTRENDER,\r\n      function (event) {\r\n        delete this.ovmapPostrenderKey_;\r\n        this.updateBox_();\r\n      },\r\n      this\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleToggle_() {\r\n    this.element.classList.toggle(CLASS_COLLAPSED);\r\n    if (this.collapsed_) {\r\n      replaceNode(this.collapseLabel_, this.label_);\r\n    } else {\r\n      replaceNode(this.label_, this.collapseLabel_);\r\n    }\r\n    this.collapsed_ = !this.collapsed_;\r\n\r\n    // manage overview map if it had not been rendered before and control\r\n    // is expanded\r\n    const ovmap = this.ovmap_;\r\n    if (!this.collapsed_) {\r\n      if (ovmap.isRendered()) {\r\n        this.viewExtent_ = undefined;\r\n        ovmap.render();\r\n        return;\r\n      }\r\n      ovmap.updateSize();\r\n      this.resetExtent_();\r\n      this.updateBoxAfterOvmapIsRendered_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the overview map is collapsible, `false` otherwise.\r\n   * @return {boolean} True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  getCollapsible() {\r\n    return this.collapsible_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the overview map should be collapsible.\r\n   * @param {boolean} collapsible True if the widget is collapsible.\r\n   * @api\r\n   */\r\n  setCollapsible(collapsible) {\r\n    if (this.collapsible_ === collapsible) {\r\n      return;\r\n    }\r\n    this.collapsible_ = collapsible;\r\n    this.element.classList.toggle('ol-uncollapsible');\r\n    if (!collapsible && this.collapsed_) {\r\n      this.handleToggle_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Collapse or expand the overview map according to the passed parameter. Will\r\n   * not do anything if the overview map isn't collapsible or if the current\r\n   * collapsed state is already the one requested.\r\n   * @param {boolean} collapsed True if the widget is collapsed.\r\n   * @api\r\n   */\r\n  setCollapsed(collapsed) {\r\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\r\n      return;\r\n    }\r\n    this.handleToggle_();\r\n  }\r\n\r\n  /**\r\n   * Determine if the overview map is collapsed.\r\n   * @return {boolean} The overview map is collapsed.\r\n   * @api\r\n   */\r\n  getCollapsed() {\r\n    return this.collapsed_;\r\n  }\r\n\r\n  /**\r\n   * Return `true` if the overview map view can rotate, `false` otherwise.\r\n   * @return {boolean} True if the control view can rotate.\r\n   * @api\r\n   */\r\n  getRotateWithView() {\r\n    return this.rotateWithView_;\r\n  }\r\n\r\n  /**\r\n   * Set whether the overview map view should rotate with the main map view.\r\n   * @param {boolean} rotateWithView True if the control view should rotate.\r\n   * @api\r\n   */\r\n  setRotateWithView(rotateWithView) {\r\n    if (this.rotateWithView_ === rotateWithView) {\r\n      return;\r\n    }\r\n    this.rotateWithView_ = rotateWithView;\r\n    if (this.getMap().getView().getRotation() !== 0) {\r\n      if (this.rotateWithView_) {\r\n        this.handleRotationChanged_();\r\n      } else {\r\n        this.ovmap_.getView().setRotation(0);\r\n      }\r\n      this.viewExtent_ = undefined;\r\n      this.validateExtent_();\r\n      this.updateBox_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the overview map.\r\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\r\n   * @api\r\n   */\r\n  getOverviewMap() {\r\n    return this.ovmap_;\r\n  }\r\n\r\n  /**\r\n   * Update the overview map element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    this.validateExtent_();\r\n    this.updateBox_();\r\n  }\r\n}\r\n\r\nexport default OverviewMap;\r\n", "/**\r\n * @module ol/control/ScaleLine\r\n */\r\nimport Control from './Control.js';\r\nimport ProjUnits from '../proj/Units.js';\r\nimport {CLASS_UNSELECTABLE} from '../css.js';\r\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\r\nimport {assert} from '../asserts.js';\r\n\r\n/**\r\n * @type {string}\r\n */\r\nconst UNITS_PROP = 'units';\r\n\r\n/**\r\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\r\n * `'nautical'`, `'metric'`, `'us'`.\r\n * @enum {string}\r\n */\r\nexport const Units = {\r\n  DEGREES: 'degrees',\r\n  IMPERIAL: 'imperial',\r\n  NAUTICAL: 'nautical',\r\n  METRIC: 'metric',\r\n  US: 'us',\r\n};\r\n\r\n/**\r\n * @const\r\n * @type {Array<number>}\r\n */\r\nconst LEADING_DIGITS = [1, 2, 5];\r\n\r\n/**\r\n * @const\r\n * @type {number}\r\n */\r\nconst DEFAULT_DPI = 25.4 / 0.28;\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\r\n *     |'change:units', Return>} ScaleLineOnSignature\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-scale-line'] CSS Class name.\r\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\r\n * adjusted to match the dpi used.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\r\n * @property {boolean} [bar=false] Render scalebars instead of a line.\r\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\r\n * for best results. Only applies when `bar` is `true`.\r\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\r\n * when `bar` is `true`.\r\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\r\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A control displaying rough y-axis distances, calculated for the center of the\r\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\r\n * projection in OpenLayers), the scale is valid for all directions.\r\n * No scale line will be shown when the y-axis distance of a pixel at the\r\n * viewport center cannot be calculated in the view projection.\r\n * By default the scale line will show in the bottom left portion of the map,\r\n * but this can be changed by using the css selector `.ol-scale-line`.\r\n * When specifying `bar` as `true`, a scalebar will be rendered instead\r\n * of a scaleline.\r\n *\r\n * @api\r\n */\r\nclass ScaleLine extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Scale line options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const className =\r\n      options.className !== undefined\r\n        ? options.className\r\n        : options.bar\r\n        ? 'ol-scale-bar'\r\n        : 'ol-scale-line';\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n      target: options.target,\r\n    });\r\n\r\n    /***\r\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ScaleLineOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.innerElement_ = document.createElement('div');\r\n    this.innerElement_.className = className + '-inner';\r\n\r\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\r\n    this.element.appendChild(this.innerElement_);\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../View.js\").State}\r\n     */\r\n    this.viewState_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.renderedVisible_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.renderedWidth_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.renderedHTML_ = '';\r\n\r\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\r\n\r\n    this.setUnits(options.units || Units.METRIC);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.scaleBar_ = options.bar || false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.scaleBarSteps_ = options.steps || 4;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.scaleBarText_ = options.text || false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.dpi_ = options.dpi || undefined;\r\n  }\r\n\r\n  /**\r\n   * Return the units to use in the scale line.\r\n   * @return {import(\"./ScaleLine.js\").Units} The units\r\n   * to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  getUnits() {\r\n    return this.get(UNITS_PROP);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  handleUnitsChanged_() {\r\n    this.updateElement_();\r\n  }\r\n\r\n  /**\r\n   * Set the units to use in the scale line.\r\n   * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setUnits(units) {\r\n    this.set(UNITS_PROP, units);\r\n  }\r\n\r\n  /**\r\n   * Specify the dpi of output device such as printer.\r\n   * @param {number|undefined} dpi The dpi of output device.\r\n   * @api\r\n   */\r\n  setDpi(dpi) {\r\n    this.dpi_ = dpi;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateElement_() {\r\n    const viewState = this.viewState_;\r\n\r\n    if (!viewState) {\r\n      if (this.renderedVisible_) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n    const center = viewState.center;\r\n    const projection = viewState.projection;\r\n    const units = this.getUnits();\r\n    const pointResolutionUnits =\r\n      units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\r\n    let pointResolution = getPointResolution(\r\n      projection,\r\n      viewState.resolution,\r\n      center,\r\n      pointResolutionUnits\r\n    );\r\n\r\n    const minWidth =\r\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\r\n\r\n    let nominalCount = minWidth * pointResolution;\r\n    let suffix = '';\r\n    if (units == Units.DEGREES) {\r\n      const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\r\n      nominalCount *= metersPerDegree;\r\n      if (nominalCount < metersPerDegree / 60) {\r\n        suffix = '\\u2033'; // seconds\r\n        pointResolution *= 3600;\r\n      } else if (nominalCount < metersPerDegree) {\r\n        suffix = '\\u2032'; // minutes\r\n        pointResolution *= 60;\r\n      } else {\r\n        suffix = '\\u00b0'; // degrees\r\n      }\r\n    } else if (units == Units.IMPERIAL) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution /= 0.0254;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.3048;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.344;\r\n      }\r\n    } else if (units == Units.NAUTICAL) {\r\n      pointResolution /= 1852;\r\n      suffix = 'nm';\r\n    } else if (units == Units.METRIC) {\r\n      if (nominalCount < 0.001) {\r\n        suffix = 'μm';\r\n        pointResolution *= 1000000;\r\n      } else if (nominalCount < 1) {\r\n        suffix = 'mm';\r\n        pointResolution *= 1000;\r\n      } else if (nominalCount < 1000) {\r\n        suffix = 'm';\r\n      } else {\r\n        suffix = 'km';\r\n        pointResolution /= 1000;\r\n      }\r\n    } else if (units == Units.US) {\r\n      if (nominalCount < 0.9144) {\r\n        suffix = 'in';\r\n        pointResolution *= 39.37;\r\n      } else if (nominalCount < 1609.344) {\r\n        suffix = 'ft';\r\n        pointResolution /= 0.30480061;\r\n      } else {\r\n        suffix = 'mi';\r\n        pointResolution /= 1609.3472;\r\n      }\r\n    } else {\r\n      assert(false, 33); // Invalid units\r\n    }\r\n\r\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\r\n    let count, width, decimalCount;\r\n    while (true) {\r\n      decimalCount = Math.floor(i / 3);\r\n      const decimal = Math.pow(10, decimalCount);\r\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\r\n      width = Math.round(count / pointResolution);\r\n      if (isNaN(width)) {\r\n        this.element.style.display = 'none';\r\n        this.renderedVisible_ = false;\r\n        return;\r\n      } else if (width >= minWidth) {\r\n        break;\r\n      }\r\n      ++i;\r\n    }\r\n    let html;\r\n    if (this.scaleBar_) {\r\n      html = this.createScaleBar(width, count, suffix);\r\n    } else {\r\n      html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\r\n    }\r\n\r\n    if (this.renderedHTML_ != html) {\r\n      this.innerElement_.innerHTML = html;\r\n      this.renderedHTML_ = html;\r\n    }\r\n\r\n    if (this.renderedWidth_ != width) {\r\n      this.innerElement_.style.width = width + 'px';\r\n      this.renderedWidth_ = width;\r\n    }\r\n\r\n    if (!this.renderedVisible_) {\r\n      this.element.style.display = '';\r\n      this.renderedVisible_ = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} width The current width of the scalebar.\r\n   * @param {number} scale The current scale.\r\n   * @param {string} suffix The suffix to append to the scale text.\r\n   * @return {string} The stringified HTML of the scalebar.\r\n   */\r\n  createScaleBar(width, scale, suffix) {\r\n    const mapScale =\r\n      '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\r\n    const scaleSteps = [];\r\n    const stepWidth = width / this.scaleBarSteps_;\r\n    let backgroundColor = '#ffffff';\r\n    for (let i = 0; i < this.scaleBarSteps_; i++) {\r\n      if (i === 0) {\r\n        // create the first marker at position 0\r\n        scaleSteps.push(this.createMarker('absolute', i));\r\n      }\r\n      scaleSteps.push(\r\n        '<div>' +\r\n          '<div ' +\r\n          'class=\"ol-scale-singlebar\" ' +\r\n          'style=' +\r\n          '\"width: ' +\r\n          stepWidth +\r\n          'px;' +\r\n          'background-color: ' +\r\n          backgroundColor +\r\n          ';\"' +\r\n          '>' +\r\n          '</div>' +\r\n          this.createMarker('relative', i) +\r\n          /*render text every second step, except when only 2 steps */\r\n          (i % 2 === 0 || this.scaleBarSteps_ === 2\r\n            ? this.createStepText(i, width, false, scale, suffix)\r\n            : '') +\r\n          '</div>'\r\n      );\r\n      if (i === this.scaleBarSteps_ - 1) {\r\n        {\r\n          /*render text at the end */\r\n        }\r\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\r\n      }\r\n      // switch colors of steps between black and white\r\n      if (backgroundColor === '#ffffff') {\r\n        backgroundColor = '#000000';\r\n      } else {\r\n        backgroundColor = '#ffffff';\r\n      }\r\n    }\r\n\r\n    let scaleBarText;\r\n    if (this.scaleBarText_) {\r\n      scaleBarText =\r\n        '<div ' +\r\n        'class=\"ol-scale-text\" ' +\r\n        'style=\"width: ' +\r\n        width +\r\n        'px;\">' +\r\n        mapScale +\r\n        '</div>';\r\n    } else {\r\n      scaleBarText = '';\r\n    }\r\n    const container =\r\n      '<div ' +\r\n      'style=\"display: flex;\">' +\r\n      scaleBarText +\r\n      scaleSteps.join('') +\r\n      '</div>';\r\n    return container;\r\n  }\r\n\r\n  /**\r\n   * Creates a marker at given position\r\n   * @param {string} position The position, absolute or relative\r\n   * @param {number} i The iterator\r\n   * @return {string} The stringified div containing the marker\r\n   */\r\n  createMarker(position, i) {\r\n    const top = position === 'absolute' ? 3 : -10;\r\n    return (\r\n      '<div ' +\r\n      'class=\"ol-scale-step-marker\" ' +\r\n      'style=\"position: ' +\r\n      position +\r\n      ';' +\r\n      'top: ' +\r\n      top +\r\n      'px;\"' +\r\n      '></div>'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Creates the label for a marker marker at given position\r\n   * @param {number} i The iterator\r\n   * @param {number} width The width the scalebar will currently use\r\n   * @param {boolean} isLast Flag indicating if we add the last step text\r\n   * @param {number} scale The current scale for the whole scalebar\r\n   * @param {string} suffix The suffix for the scale\r\n   * @return {string} The stringified div containing the step text\r\n   */\r\n  createStepText(i, width, isLast, scale, suffix) {\r\n    const length =\r\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\r\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\r\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\r\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\r\n    return (\r\n      '<div ' +\r\n      'class=\"ol-scale-step-text\" ' +\r\n      'style=\"' +\r\n      'margin-left: ' +\r\n      margin +\r\n      'px;' +\r\n      'text-align: ' +\r\n      (i === 0 ? 'left' : 'center') +\r\n      '; ' +\r\n      'min-width: ' +\r\n      minWidth +\r\n      'px;' +\r\n      'left: ' +\r\n      (isLast ? width + 'px' : 'unset') +\r\n      ';\"' +\r\n      '>' +\r\n      lengthString +\r\n      '</div>'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the appropriate scale for the given resolution and units.\r\n   * @return {number} The appropriate scale.\r\n   */\r\n  getScaleForResolution() {\r\n    const resolution = getPointResolution(\r\n      this.viewState_.projection,\r\n      this.viewState_.resolution,\r\n      this.viewState_.center,\r\n      ProjUnits.METERS\r\n    );\r\n    const dpi = this.dpi_ || DEFAULT_DPI;\r\n    const inchesPerMeter = 1000 / 25.4;\r\n    return parseFloat(resolution.toString()) * inchesPerMeter * dpi;\r\n  }\r\n\r\n  /**\r\n   * Update the scale line element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    const frameState = mapEvent.frameState;\r\n    if (!frameState) {\r\n      this.viewState_ = null;\r\n    } else {\r\n      this.viewState_ = frameState.viewState;\r\n    }\r\n    this.updateElement_();\r\n  }\r\n}\r\n\r\nexport default ScaleLine;\r\n", "/**\r\n * @module ol/control/ZoomSlider\r\n */\r\n\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport PointerEventType from '../pointer/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {clamp} from '../math.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\nimport {stopPropagation} from '../events/Event.js';\r\n\r\n/**\r\n * The enum for available directions.\r\n *\r\n * @enum {number}\r\n */\r\nconst Direction = {\r\n  VERTICAL: 0,\r\n  HORIZONTAL: 1,\r\n};\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoomslider'] CSS class name.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\r\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A slider type of control for zooming.\r\n *\r\n * Example:\r\n *\r\n *     map.addControl(new ZoomSlider());\r\n *\r\n * @api\r\n */\r\nclass ZoomSlider extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Zoom slider options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      render: options.render,\r\n    });\r\n\r\n    /**\r\n     * @type {!Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.dragListenerKeys_ = [];\r\n\r\n    /**\r\n     * Will hold the current resolution of the view.\r\n     *\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.currentResolution_ = undefined;\r\n\r\n    /**\r\n     * The direction of the slider. Will be determined from actual display of the\r\n     * container and defaults to Direction.VERTICAL.\r\n     *\r\n     * @type {Direction}\r\n     * @private\r\n     */\r\n    this.direction_ = Direction.VERTICAL;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.dragging_;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.heightLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.widthLimit_ = 0;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startX_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.startY_;\r\n\r\n    /**\r\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\r\n     * is called.\r\n     * @type {import(\"../size.js\").Size}\r\n     * @private\r\n     */\r\n    this.thumbSize_ = null;\r\n\r\n    /**\r\n     * Whether the slider is initialized.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.sliderInitialized_ = false;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoomslider';\r\n    const thumbElement = document.createElement('button');\r\n    thumbElement.setAttribute('type', 'button');\r\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\r\n    const containerElement = this.element;\r\n    containerElement.className =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    containerElement.appendChild(thumbElement);\r\n\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERDOWN,\r\n      this.handleDraggerStart_.bind(this),\r\n      false\r\n    );\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERMOVE,\r\n      this.handleDraggerDrag_.bind(this),\r\n      false\r\n    );\r\n    containerElement.addEventListener(\r\n      PointerEventType.POINTERUP,\r\n      this.handleDraggerEnd_.bind(this),\r\n      false\r\n    );\r\n\r\n    containerElement.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleContainerClick_.bind(this),\r\n      false\r\n    );\r\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\r\n  }\r\n\r\n  /**\r\n   * Remove the control from its current map and attach it to the new map.\r\n   * Pass `null` to just remove the control from the current map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    if (map) {\r\n      map.render();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes the slider element. This will determine and set this controls\r\n   * direction_ and also constrain the dragging of the thumb to always be within\r\n   * the bounds of the container.\r\n   *\r\n   * @return {boolean} Initialization successful\r\n   * @private\r\n   */\r\n  initSlider_() {\r\n    const container = this.element;\r\n    let containerWidth = container.offsetWidth;\r\n    let containerHeight = container.offsetHeight;\r\n    if (containerWidth === 0 && containerHeight === 0) {\r\n      return (this.sliderInitialized_ = false);\r\n    }\r\n\r\n    const containerStyle = getComputedStyle(container);\r\n    containerWidth -=\r\n      parseFloat(containerStyle['paddingRight']) +\r\n      parseFloat(containerStyle['paddingLeft']);\r\n    containerHeight -=\r\n      parseFloat(containerStyle['paddingTop']) +\r\n      parseFloat(containerStyle['paddingBottom']);\r\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\r\n    const thumbStyle = getComputedStyle(thumb);\r\n    const thumbWidth =\r\n      thumb.offsetWidth +\r\n      parseFloat(thumbStyle['marginRight']) +\r\n      parseFloat(thumbStyle['marginLeft']);\r\n    const thumbHeight =\r\n      thumb.offsetHeight +\r\n      parseFloat(thumbStyle['marginTop']) +\r\n      parseFloat(thumbStyle['marginBottom']);\r\n    this.thumbSize_ = [thumbWidth, thumbHeight];\r\n\r\n    if (containerWidth > containerHeight) {\r\n      this.direction_ = Direction.HORIZONTAL;\r\n      this.widthLimit_ = containerWidth - thumbWidth;\r\n    } else {\r\n      this.direction_ = Direction.VERTICAL;\r\n      this.heightLimit_ = containerHeight - thumbHeight;\r\n    }\r\n    return (this.sliderInitialized_ = true);\r\n  }\r\n\r\n  /**\r\n   * @param {PointerEvent} event The browser event to handle.\r\n   * @private\r\n   */\r\n  handleContainerClick_(event) {\r\n    const view = this.getMap().getView();\r\n\r\n    const relativePosition = this.getRelativePosition_(\r\n      event.offsetX - this.thumbSize_[0] / 2,\r\n      event.offsetY - this.thumbSize_[1] / 2\r\n    );\r\n\r\n    const resolution = this.getResolutionForPosition_(relativePosition);\r\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\r\n\r\n    view.animateInternal({\r\n      zoom: zoom,\r\n      duration: this.duration_,\r\n      easing: easeOut,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle dragger start events.\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerStart_(event) {\r\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\r\n      const element = /** @type {HTMLElement} */ (\r\n        this.element.firstElementChild\r\n      );\r\n      this.getMap().getView().beginInteraction();\r\n      this.startX_ = event.clientX - parseFloat(element.style.left);\r\n      this.startY_ = event.clientY - parseFloat(element.style.top);\r\n      this.dragging_ = true;\r\n\r\n      if (this.dragListenerKeys_.length === 0) {\r\n        const drag = this.handleDraggerDrag_;\r\n        const end = this.handleDraggerEnd_;\r\n        const doc = this.getMap().getOwnerDocument();\r\n        this.dragListenerKeys_.push(\r\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\r\n          listen(doc, PointerEventType.POINTERUP, end, this)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger drag events.\r\n   *\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerDrag_(event) {\r\n    if (this.dragging_) {\r\n      const deltaX = event.clientX - this.startX_;\r\n      const deltaY = event.clientY - this.startY_;\r\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\r\n      this.currentResolution_ =\r\n        this.getResolutionForPosition_(relativePosition);\r\n      this.getMap().getView().setResolution(this.currentResolution_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle dragger end events.\r\n   * @param {PointerEvent} event The drag event.\r\n   * @private\r\n   */\r\n  handleDraggerEnd_(event) {\r\n    if (this.dragging_) {\r\n      const view = this.getMap().getView();\r\n      view.endInteraction();\r\n\r\n      this.dragging_ = false;\r\n      this.startX_ = undefined;\r\n      this.startY_ = undefined;\r\n      this.dragListenerKeys_.forEach(unlistenByKey);\r\n      this.dragListenerKeys_.length = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Positions the thumb inside its container according to the given resolution.\r\n   *\r\n   * @param {number} res The res.\r\n   * @private\r\n   */\r\n  setThumbPosition_(res) {\r\n    const position = this.getPositionForResolution_(res);\r\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\r\n\r\n    if (this.direction_ == Direction.HORIZONTAL) {\r\n      thumb.style.left = this.widthLimit_ * position + 'px';\r\n    } else {\r\n      thumb.style.top = this.heightLimit_ * position + 'px';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the relative position of the thumb given x and y offsets.  The\r\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\r\n   * in pixel units within the dragger limits.\r\n   *\r\n   * @param {number} x Pixel position relative to the left of the slider.\r\n   * @param {number} y Pixel position relative to the top of the slider.\r\n   * @return {number} The relative position of the thumb.\r\n   * @private\r\n   */\r\n  getRelativePosition_(x, y) {\r\n    let amount;\r\n    if (this.direction_ === Direction.HORIZONTAL) {\r\n      amount = x / this.widthLimit_;\r\n    } else {\r\n      amount = y / this.heightLimit_;\r\n    }\r\n    return clamp(amount, 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Calculates the corresponding resolution of the thumb given its relative\r\n   * position (where 0 is the minimum and 1 is the maximum).\r\n   *\r\n   * @param {number} position The relative position of the thumb.\r\n   * @return {number} The corresponding resolution.\r\n   * @private\r\n   */\r\n  getResolutionForPosition_(position) {\r\n    const fn = this.getMap().getView().getResolutionForValueFunction();\r\n    return fn(1 - position);\r\n  }\r\n\r\n  /**\r\n   * Determines the relative position of the slider for the given resolution.  A\r\n   * relative position of 0 corresponds to the minimum view resolution.  A\r\n   * relative position of 1 corresponds to the maximum view resolution.\r\n   *\r\n   * @param {number} res The resolution.\r\n   * @return {number} The relative position value (between 0 and 1).\r\n   * @private\r\n   */\r\n  getPositionForResolution_(res) {\r\n    const fn = this.getMap().getView().getValueForResolutionFunction();\r\n    return clamp(1 - fn(res), 0, 1);\r\n  }\r\n\r\n  /**\r\n   * Update the zoomslider element.\r\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\r\n   * @override\r\n   */\r\n  render(mapEvent) {\r\n    if (!mapEvent.frameState) {\r\n      return;\r\n    }\r\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\r\n      return;\r\n    }\r\n    const res = mapEvent.frameState.viewState.resolution;\r\n    this.currentResolution_ = res;\r\n    this.setThumbPosition_(res);\r\n  }\r\n}\r\n\r\nexport default ZoomSlider;\r\n", "/**\r\n * @module ol/control/ZoomToExtent\r\n */\r\nimport Control from './Control.js';\r\nimport EventType from '../events/EventType.js';\r\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-zoom-extent'] Class name.\r\n * @property {HTMLElement|string} [target] Specify a target if you want the control\r\n * to be rendered outside of the map's viewport.\r\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\r\n * Instead of text, also an element (e.g. a `span` element) can be used.\r\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\r\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\r\n * extent of the view projection is used.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * A button control which, when pressed, changes the map view to a specific\r\n * extent. To style this control use the css selector `.ol-zoom-extent`.\r\n *\r\n * @api\r\n */\r\nclass ZoomToExtent extends Control {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      element: document.createElement('div'),\r\n      target: options.target,\r\n    });\r\n\r\n    /**\r\n     * @type {?import(\"../extent.js\").Extent|null}\r\n     * @protected\r\n     */\r\n    this.extent = options.extent ? options.extent : null;\r\n\r\n    const className =\r\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\r\n\r\n    const label = options.label !== undefined ? options.label : 'E';\r\n    const tipLabel =\r\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\r\n    const button = document.createElement('button');\r\n    button.setAttribute('type', 'button');\r\n    button.title = tipLabel;\r\n    button.appendChild(\r\n      typeof label === 'string' ? document.createTextNode(label) : label\r\n    );\r\n\r\n    button.addEventListener(\r\n      EventType.CLICK,\r\n      this.handleClick_.bind(this),\r\n      false\r\n    );\r\n\r\n    const cssClasses =\r\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\r\n    const element = this.element;\r\n    element.className = cssClasses;\r\n    element.appendChild(button);\r\n  }\r\n\r\n  /**\r\n   * @param {MouseEvent} event The event to handle\r\n   * @private\r\n   */\r\n  handleClick_(event) {\r\n    event.preventDefault();\r\n    this.handleZoomToExtent();\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   */\r\n  handleZoomToExtent() {\r\n    const map = this.getMap();\r\n    const view = map.getView();\r\n    const extent = !this.extent\r\n      ? view.getProjection().getExtent()\r\n      : this.extent;\r\n    view.fitInternal(polygonFromExtent(extent));\r\n  }\r\n}\r\n\r\nexport default ZoomToExtent;\r\n", "/**\r\n * @module ol/control\r\n */\r\nimport Attribution from './control/Attribution.js';\r\nimport Collection from './Collection.js';\r\nimport Rotate from './control/Rotate.js';\r\nimport Zoom from './control/Zoom.js';\r\n\r\nexport {default as Attribution} from './control/Attribution.js';\r\nexport {default as Control} from './control/Control.js';\r\nexport {default as FullScreen} from './control/FullScreen.js';\r\nexport {default as MousePosition} from './control/MousePosition.js';\r\nexport {default as OverviewMap} from './control/OverviewMap.js';\r\nexport {default as Rotate} from './control/Rotate.js';\r\nexport {default as ScaleLine} from './control/ScaleLine.js';\r\nexport {default as Zoom} from './control/Zoom.js';\r\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\r\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [attribution=true] Include\r\n * {@link module:ol/control/Attribution~Attribution}.\r\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\r\n * Options for {@link module:ol/control/Attribution~Attribution}.\r\n * @property {boolean} [rotate=true] Include\r\n * {@link module:ol/control/Rotate~Rotate}.\r\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\r\n * for {@link module:ol/control/Rotate~Rotate}.\r\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\r\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\r\n * {@link module:ol/control/Zoom~Zoom}.\r\n * @api\r\n */\r\n\r\n/**\r\n * Set of controls included in maps by default. Unless configured otherwise,\r\n * this returns a collection containing an instance of each of the following\r\n * controls:\r\n * * {@link module:ol/control/Zoom~Zoom}\r\n * * {@link module:ol/control/Rotate~Rotate}\r\n * * {@link module:ol/control/Attribution~Attribution}\r\n *\r\n * @param {DefaultsOptions} [opt_options]\r\n * Defaults options.\r\n * @return {Collection<import(\"./control/Control.js\").default>}\r\n * Controls.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n  const options = opt_options ? opt_options : {};\r\n\r\n  const controls = new Collection();\r\n\r\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\r\n  if (zoomControl) {\r\n    controls.push(new Zoom(options.zoomOptions));\r\n  }\r\n\r\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\r\n  if (rotateControl) {\r\n    controls.push(new Rotate(options.rotateOptions));\r\n  }\r\n\r\n  const attributionControl =\r\n    options.attribution !== undefined ? options.attribution : true;\r\n  if (attributionControl) {\r\n    controls.push(new Attribution(options.attributionOptions));\r\n  }\r\n\r\n  return controls;\r\n}\r\n", "/**\r\n * @module ol/interaction/DoubleClickZoom\r\n */\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [delta=1] The zoom delta applied on each double click.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom by double-clicking on the map.\r\n * @api\r\n */\r\nclass DoubleClickZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\r\n   * doubleclick) and eventually zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\r\n      const browserEvent = /** @type {MouseEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const map = mapBrowserEvent.map;\r\n      const anchor = mapBrowserEvent.coordinate;\r\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\r\n      const view = map.getView();\r\n      zoomByDelta(view, delta, anchor, this.duration_);\r\n      browserEvent.preventDefault();\r\n      stopEvent = true;\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default DoubleClickZoom;\r\n", "/**\r\n * @module ol/interaction/DragPan\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  all,\r\n  focusWithTabindex,\r\n  noModifierKeys,\r\n  primaryAction,\r\n} from '../events/condition.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {\r\n  rotate as rotateCoordinate,\r\n  scale as scaleCoordinate,\r\n} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map by dragging the map.\r\n * @api\r\n */\r\nclass DragPan extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Kinetic.js\").default|undefined}\r\n     */\r\n    this.kinetic_ = options.kinetic;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.lastCentroid = null;\r\n\r\n    /**\r\n     * @type {number}\r\n     */\r\n    this.lastPointersCount_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     */\r\n    this.panning_ = false;\r\n\r\n    const condition = options.condition\r\n      ? options.condition\r\n      : all(noModifierKeys, primaryAction);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.noKinetic_ = false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!this.panning_) {\r\n      this.panning_ = true;\r\n      this.getMap().getView().beginInteraction();\r\n    }\r\n    const targetPointers = this.targetPointers;\r\n    const centroid = centroidFromPointers(targetPointers);\r\n    if (targetPointers.length == this.lastPointersCount_) {\r\n      if (this.kinetic_) {\r\n        this.kinetic_.update(centroid[0], centroid[1]);\r\n      }\r\n      if (this.lastCentroid) {\r\n        const delta = [\r\n          this.lastCentroid[0] - centroid[0],\r\n          centroid[1] - this.lastCentroid[1],\r\n        ];\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        scaleCoordinate(delta, view.getResolution());\r\n        rotateCoordinate(delta, view.getRotation());\r\n        view.adjustCenterInternal(delta);\r\n      }\r\n    } else if (this.kinetic_) {\r\n      // reset so we don't overestimate the kinetic energy after\r\n      // after one finger down, tiny drag, second finger down\r\n      this.kinetic_.begin();\r\n    }\r\n    this.lastCentroid = centroid;\r\n    this.lastPointersCount_ = targetPointers.length;\r\n    mapBrowserEvent.originalEvent.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (this.targetPointers.length === 0) {\r\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\r\n        const distance = this.kinetic_.getDistance();\r\n        const angle = this.kinetic_.getAngle();\r\n        const center = view.getCenterInternal();\r\n        const centerpx = map.getPixelFromCoordinateInternal(center);\r\n        const dest = map.getCoordinateFromPixelInternal([\r\n          centerpx[0] - distance * Math.cos(angle),\r\n          centerpx[1] - distance * Math.sin(angle),\r\n        ]);\r\n        view.animateInternal({\r\n          center: view.getConstrainedCenter(dest),\r\n          duration: 500,\r\n          easing: easeOut,\r\n        });\r\n      }\r\n      if (this.panning_) {\r\n        this.panning_ = false;\r\n        view.endInteraction();\r\n      }\r\n      return false;\r\n    } else {\r\n      if (this.kinetic_) {\r\n        // reset so we don't overestimate the kinetic energy after\r\n        // after one finger up, tiny drag, second finger up\r\n        this.kinetic_.begin();\r\n      }\r\n      this.lastCentroid = null;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      this.lastCentroid = null;\r\n      // stop any current animation\r\n      if (view.getAnimating()) {\r\n        view.cancelAnimations();\r\n      }\r\n      if (this.kinetic_) {\r\n        this.kinetic_.begin();\r\n      }\r\n      // No kinetic as soon as more than one pointer on the screen is\r\n      // detected. This is to prevent nasty pans after pinch.\r\n      this.noKinetic_ = this.targetPointers.length > 1;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragPan;\r\n", "/**\r\n * @module ol/interaction/DragRotate\r\n */\r\nimport PointerInteraction from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {\r\n  altShiftKeysOnly,\r\n  mouseActionButton,\r\n  mouseOnly,\r\n} from '../events/condition.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\r\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the alt and shift keys are held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n * @api\r\n */\r\nclass DragRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      stopDown: FALSE,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = theta - this.lastAngle_;\r\n      view.adjustRotationInternal(-delta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    view.endInteraction(this.duration_);\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      mouseActionButton(mapBrowserEvent) &&\r\n      this.condition_(mapBrowserEvent)\r\n    ) {\r\n      const map = mapBrowserEvent.map;\r\n      map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragRotate;\r\n", "/**\r\n * @module ol/render/Box\r\n */\r\n\r\nimport Disposable from '../Disposable.js';\r\nimport Polygon from '../geom/Polygon.js';\r\n\r\nclass RenderBox extends Disposable {\r\n  /**\r\n   * @param {string} className CSS class name.\r\n   */\r\n  constructor(className) {\r\n    super();\r\n\r\n    /**\r\n     * @type {import(\"../geom/Polygon.js\").default}\r\n     * @private\r\n     */\r\n    this.geometry_ = null;\r\n\r\n    /**\r\n     * @type {HTMLDivElement}\r\n     * @private\r\n     */\r\n    this.element_ = document.createElement('div');\r\n    this.element_.style.position = 'absolute';\r\n    this.element_.style.pointerEvents = 'auto';\r\n    this.element_.className = 'ol-box ' + className;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../PluggableMap.js\").default|null}\r\n     */\r\n    this.map_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     */\r\n    this.endPixel_ = null;\r\n  }\r\n\r\n  /**\r\n   * Clean up.\r\n   */\r\n  disposeInternal() {\r\n    this.setMap(null);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  render_() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const px = 'px';\r\n    const style = this.element_.style;\r\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\r\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\r\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\r\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   */\r\n  setMap(map) {\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().removeChild(this.element_);\r\n      const style = this.element_.style;\r\n      style.left = 'inherit';\r\n      style.top = 'inherit';\r\n      style.width = 'inherit';\r\n      style.height = 'inherit';\r\n    }\r\n    this.map_ = map;\r\n    if (this.map_) {\r\n      this.map_.getOverlayContainer().appendChild(this.element_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\r\n   */\r\n  setPixels(startPixel, endPixel) {\r\n    this.startPixel_ = startPixel;\r\n    this.endPixel_ = endPixel;\r\n    this.createOrUpdateGeometry();\r\n    this.render_();\r\n  }\r\n\r\n  /**\r\n   * Creates or updates the cached geometry.\r\n   */\r\n  createOrUpdateGeometry() {\r\n    const startPixel = this.startPixel_;\r\n    const endPixel = this.endPixel_;\r\n    const pixels = [\r\n      startPixel,\r\n      [startPixel[0], endPixel[1]],\r\n      endPixel,\r\n      [endPixel[0], startPixel[1]],\r\n    ];\r\n    const coordinates = pixels.map(\r\n      this.map_.getCoordinateFromPixelInternal,\r\n      this.map_\r\n    );\r\n    // close the polygon\r\n    coordinates[4] = coordinates[0].slice();\r\n    if (!this.geometry_) {\r\n      this.geometry_ = new Polygon([coordinates]);\r\n    } else {\r\n      this.geometry_.setCoordinates([coordinates]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   */\r\n  getGeometry() {\r\n    return this.geometry_;\r\n  }\r\n}\r\n\r\nexport default RenderBox;\r\n", "/**\r\n * @module ol/interaction/DragBox\r\n */\r\n// FIXME draw drag box\r\nimport Event from '../events/Event.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RenderBox from '../render/Box.js';\r\nimport {mouseActionButton} from '../events/condition.js';\r\n\r\n/**\r\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\r\n * true should be returned.\r\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\r\n * to indicate whether that event should be handled.\r\n * Default is {@link ol/events/condition~mouseActionButton}.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\r\n * `boxEndCondition` function.\r\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\r\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\r\n * Default is `true` if the area of the box is bigger than the `minArea` option.\r\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\r\n * before `boxend` is fired.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragBoxEventType = {\r\n  /**\r\n   * Triggered upon drag box start.\r\n   * @event DragBoxEvent#boxstart\r\n   * @api\r\n   */\r\n  BOXSTART: 'boxstart',\r\n\r\n  /**\r\n   * Triggered on drag when box is active.\r\n   * @event DragBoxEvent#boxdrag\r\n   * @api\r\n   */\r\n  BOXDRAG: 'boxdrag',\r\n\r\n  /**\r\n   * Triggered upon drag box end.\r\n   * @event DragBoxEvent#boxend\r\n   * @api\r\n   */\r\n  BOXEND: 'boxend',\r\n\r\n  /**\r\n   * Triggered upon drag box canceled.\r\n   * @event DragBoxEvent#boxcancel\r\n   * @api\r\n   */\r\n  BOXCANCEL: 'boxcancel',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\r\n * this type.\r\n */\r\nexport class DragBoxEvent extends Event {\r\n  /**\r\n   * @param {string} type The event type.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\r\n   */\r\n  constructor(type, coordinate, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The coordinate of the drag event.\r\n     * @const\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @api\r\n     */\r\n    this.coordinate = coordinate;\r\n\r\n    /**\r\n     * @const\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when the shift or other key is held down. This is used, for example,\r\n * for zooming to a specific area of the map\r\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\r\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\r\n *\r\n * @fires DragBoxEvent\r\n * @api\r\n */\r\nclass DragBox extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DragBoxOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @type {import(\"../render/Box.js\").default}\r\n     * @private\r\n     */\r\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\r\n\r\n    if (options.onBoxEnd) {\r\n      this.onBoxEnd = options.onBoxEnd;\r\n    }\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.startPixel_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\r\n\r\n    /**\r\n     * @private\r\n     * @type {EndCondition}\r\n     */\r\n    this.boxEndCondition_ = options.boxEndCondition\r\n      ? options.boxEndCondition\r\n      : this.defaultBoxEndCondition;\r\n  }\r\n\r\n  /**\r\n   * The default condition for determining whether the boxend event\r\n   * should fire.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\r\n   *     leading to the box end.\r\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\r\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\r\n   * @return {boolean} Whether or not the boxend condition should be fired.\r\n   */\r\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\r\n    const width = endPixel[0] - startPixel[0];\r\n    const height = endPixel[1] - startPixel[1];\r\n    return width * width + height * height >= this.minArea_;\r\n  }\r\n\r\n  /**\r\n   * Returns geometry of last drawn box.\r\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\r\n   * @api\r\n   */\r\n  getGeometry() {\r\n    return this.box_.getGeometry();\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\r\n\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        DragBoxEventType.BOXDRAG,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.box_.setMap(null);\r\n\r\n    const completeBox = this.boxEndCondition_(\r\n      mapBrowserEvent,\r\n      this.startPixel_,\r\n      mapBrowserEvent.pixel\r\n    );\r\n    if (completeBox) {\r\n      this.onBoxEnd(mapBrowserEvent);\r\n    }\r\n    this.dispatchEvent(\r\n      new DragBoxEvent(\r\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\r\n        mapBrowserEvent.coordinate,\r\n        mapBrowserEvent\r\n      )\r\n    );\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      this.startPixel_ = mapBrowserEvent.pixel;\r\n      this.box_.setMap(mapBrowserEvent.map);\r\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\r\n      this.dispatchEvent(\r\n        new DragBoxEvent(\r\n          DragBoxEventType.BOXSTART,\r\n          mapBrowserEvent.coordinate,\r\n          mapBrowserEvent\r\n        )\r\n      );\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {}\r\n}\r\n\r\nexport default DragBox;\r\n", "/**\r\n * @module ol/interaction/DragZoom\r\n */\r\nimport DragBox from './DragBox.js';\r\nimport {easeOut} from '../easing.js';\r\nimport {shiftKeyOnly} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\r\n * box.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\r\n * @property {number} [duration=200] Animation duration in milliseconds.\r\n * @property {boolean} [out=false] Use interaction for zooming out.\r\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\r\n * `boxEndCondition` function.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by clicking and dragging on the map,\r\n * normally combined with an {@link module:ol/events/condition} that limits\r\n * it to when a key, shift by default, is held down.\r\n *\r\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\r\n * your custom one configured with `className`.\r\n * @api\r\n */\r\nclass DragZoom extends DragBox {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const condition = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    super({\r\n      condition: condition,\r\n      className: options.className || 'ol-dragzoom',\r\n      minArea: options.minArea,\r\n    });\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.out_ = options.out !== undefined ? options.out : false;\r\n  }\r\n\r\n  /**\r\n   * Function to execute just before `onboxend` is fired\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   */\r\n  onBoxEnd(event) {\r\n    const map = this.getMap();\r\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\r\n    let geometry = this.getGeometry();\r\n\r\n    if (this.out_) {\r\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\r\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\r\n      const factor = view.getResolution() / resolution;\r\n      geometry = geometry.clone();\r\n      geometry.scale(factor * factor);\r\n    }\r\n\r\n    view.fitInternal(geometry, {\r\n      duration: this.duration_,\r\n      easing: easeOut,\r\n    });\r\n  }\r\n}\r\n\r\nexport default DragZoom;\r\n", "/**\r\n * @module ol/events/KeyCode\r\n */\r\n\r\n/**\r\n * @enum {number}\r\n * @const\r\n */\r\nexport default {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n};\r\n", "/**\r\n * @module ol/interaction/KeyboardPan\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {pan} from './Interaction.js';\r\nimport KeyCode from '../events/KeyCode.js';\r\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\r\nimport {rotate as rotateCoordinate} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.noModifierKeys} and\r\n * {@link module:ol/events/condition.targetNotEditable}.\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\r\n * press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to pan the map using keyboard arrows.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\r\n * @api\r\n */\r\nclass KeyboardPan extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options || {};\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultCondition_ = function (mapBrowserEvent) {\r\n      return (\r\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\r\n      );\r\n    };\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ =\r\n      options.condition !== undefined\r\n        ? options.condition\r\n        : this.defaultCondition_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.pixelDelta_ =\r\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\r\n   * pressed).\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @this {KeyboardPan}\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const keyCode = keyEvent.keyCode;\r\n      if (\r\n        this.condition_(mapBrowserEvent) &&\r\n        (keyCode == KeyCode.DOWN ||\r\n          keyCode == KeyCode.LEFT ||\r\n          keyCode == KeyCode.RIGHT ||\r\n          keyCode == KeyCode.UP)\r\n      ) {\r\n        const map = mapBrowserEvent.map;\r\n        const view = map.getView();\r\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\r\n        let deltaX = 0,\r\n          deltaY = 0;\r\n        if (keyCode == KeyCode.DOWN) {\r\n          deltaY = -mapUnitsDelta;\r\n        } else if (keyCode == KeyCode.LEFT) {\r\n          deltaX = -mapUnitsDelta;\r\n        } else if (keyCode == KeyCode.RIGHT) {\r\n          deltaX = mapUnitsDelta;\r\n        } else {\r\n          deltaY = mapUnitsDelta;\r\n        }\r\n        const delta = [deltaX, deltaY];\r\n        rotateCoordinate(delta, view.getRotation());\r\n        pan(view, delta, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardPan;\r\n", "/**\r\n * @module ol/interaction/KeyboardZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {targetNotEditable} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=100] Animation duration in milliseconds.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.targetNotEditable}.\r\n * @property {number} [delta=1] The zoom level delta on each key press.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map using keyboard + and -.\r\n * Note that, although this interaction is by default included in maps,\r\n * the keys can only be used when browser focus is on the element to which\r\n * the keyboard events are attached. By default, this is the map div,\r\n * though you can change this with the `keyboardEventTarget` in\r\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\r\n * element, focus will have to be on, and returned to, this element if the keys\r\n * are to function.\r\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\r\n * @api\r\n */\r\nclass KeyboardZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delta_ = options.delta ? options.delta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\r\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\r\n   * key pressed was '+' or '-').\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @this {KeyboardZoom}\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    let stopEvent = false;\r\n    if (\r\n      mapBrowserEvent.type == EventType.KEYDOWN ||\r\n      mapBrowserEvent.type == EventType.KEYPRESS\r\n    ) {\r\n      const keyEvent = /** @type {KeyboardEvent} */ (\r\n        mapBrowserEvent.originalEvent\r\n      );\r\n      const charCode = keyEvent.charCode;\r\n      if (\r\n        this.condition_(mapBrowserEvent) &&\r\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\r\n      ) {\r\n        const map = mapBrowserEvent.map;\r\n        const delta =\r\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\r\n        const view = map.getView();\r\n        zoomByDelta(view, delta, undefined, this.duration_);\r\n        keyEvent.preventDefault();\r\n        stopEvent = true;\r\n      }\r\n    }\r\n    return !stopEvent;\r\n  }\r\n}\r\n\r\nexport default KeyboardZoom;\r\n", "/**\r\n * @module ol/Kinetic\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Implementation of inertial deceleration for map movement.\r\n *\r\n * @api\r\n */\r\nclass Kinetic {\r\n  /**\r\n   * @param {number} decay Rate of decay (must be negative).\r\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\r\n   * @param {number} delay Delay to consider to calculate the kinetic\r\n   *     initial values (milliseconds).\r\n   */\r\n  constructor(decay, minVelocity, delay) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.decay_ = decay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.minVelocity_ = minVelocity;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.delay_ = delay;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.points_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.angle_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * FIXME empty description for jsdoc\r\n   */\r\n  begin() {\r\n    this.points_.length = 0;\r\n    this.angle_ = 0;\r\n    this.initialVelocity_ = 0;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   */\r\n  update(x, y) {\r\n    this.points_.push(x, y, Date.now());\r\n  }\r\n\r\n  /**\r\n   * @return {boolean} Whether we should do kinetic animation.\r\n   */\r\n  end() {\r\n    if (this.points_.length < 6) {\r\n      // at least 2 points are required (i.e. there must be at least 6 elements\r\n      // in the array)\r\n      return false;\r\n    }\r\n    const delay = Date.now() - this.delay_;\r\n    const lastIndex = this.points_.length - 3;\r\n    if (this.points_[lastIndex + 2] < delay) {\r\n      // the last tracked point is too old, which means that the user stopped\r\n      // panning before releasing the map\r\n      return false;\r\n    }\r\n\r\n    // get the first point which still falls into the delay time\r\n    let firstIndex = lastIndex - 3;\r\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\r\n      firstIndex -= 3;\r\n    }\r\n\r\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\r\n    // we don't want a duration of 0 (divide by zero)\r\n    // we also make sure the user panned for a duration of at least one frame\r\n    // (1/60s) to compute sane displacement values\r\n    if (duration < 1000 / 60) {\r\n      return false;\r\n    }\r\n\r\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\r\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\r\n    this.angle_ = Math.atan2(dy, dx);\r\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\r\n    return this.initialVelocity_ > this.minVelocity_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Total distance travelled (pixels).\r\n   */\r\n  getDistance() {\r\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\r\n  }\r\n\r\n  /**\r\n   * @return {number} Angle of the kinetic panning animation (radians).\r\n   */\r\n  getAngle() {\r\n    return this.angle_;\r\n  }\r\n}\r\n\r\nexport default Kinetic;\r\n", "/**\r\n * @module ol/interaction/MouseWheelZoom\r\n */\r\nimport EventType from '../events/EventType.js';\r\nimport Interaction, {zoomByDelta} from './Interaction.js';\r\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\r\nimport {all, always, focusWithTabindex} from '../events/condition.js';\r\nimport {clamp} from '../math.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nexport const Mode = {\r\n  TRACKPAD: 'trackpad',\r\n  WHEEL: 'wheel',\r\n};\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. Default is\r\n * {@link module:ol/events/condition.always}.\r\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\r\n * the interaction will only handle events when the map has the focus.\r\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\r\n * @property {number} [duration=250] Animation duration in milliseconds.\r\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\r\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\r\n * location as the anchor. When set to `false`, zooming in and out will zoom to\r\n * the center of the screen instead of zooming on the mouse's location.\r\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\r\n * event will always animate to the closest zoom level after an interaction;\r\n * false means intermediary zoom levels are allowed.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by scrolling the mouse wheel.\r\n * @api\r\n */\r\nclass MouseWheelZoom extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(\r\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.totalDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.useAnchor_ =\r\n      options.useAnchor !== undefined ? options.useAnchor : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.constrainResolution_ =\r\n      options.constrainResolution !== undefined\r\n        ? options.constrainResolution\r\n        : false;\r\n\r\n    const condition = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.onFocusOnly\r\n      ? all(focusWithTabindex, condition)\r\n      : condition;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.lastAnchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.startTime_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?}\r\n     */\r\n    this.timeoutId_;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Mode|undefined}\r\n     */\r\n    this.mode_ = undefined;\r\n\r\n    /**\r\n     * Trackpad events separated by this delay will be considered separate\r\n     * interactions.\r\n     * @type {number}\r\n     */\r\n    this.trackpadEventGap_ = 400;\r\n\r\n    /**\r\n     * @type {?}\r\n     */\r\n    this.trackpadTimeoutId_;\r\n\r\n    /**\r\n     * The number of delta values per zoom level\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.deltaPerZoom_ = 300;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  endInteraction_() {\r\n    this.trackpadTimeoutId_ = undefined;\r\n    const view = this.getMap().getView();\r\n    view.endInteraction(\r\n      undefined,\r\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\r\n      this.lastAnchor_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\r\n   * zooms the map.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const type = mapBrowserEvent.type;\r\n    if (type !== EventType.WHEEL) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const wheelEvent = /** @type {WheelEvent} */ (\r\n      mapBrowserEvent.originalEvent\r\n    );\r\n    wheelEvent.preventDefault();\r\n\r\n    if (this.useAnchor_) {\r\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\r\n    }\r\n\r\n    // Delta normalisation inspired by\r\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\r\n    let delta;\r\n    if (mapBrowserEvent.type == EventType.WHEEL) {\r\n      delta = wheelEvent.deltaY;\r\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\r\n        delta /= DEVICE_PIXEL_RATIO;\r\n      }\r\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\r\n        delta *= 40;\r\n      }\r\n    }\r\n\r\n    if (delta === 0) {\r\n      return false;\r\n    } else {\r\n      this.lastDelta_ = delta;\r\n    }\r\n\r\n    const now = Date.now();\r\n\r\n    if (this.startTime_ === undefined) {\r\n      this.startTime_ = now;\r\n    }\r\n\r\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\r\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\r\n    }\r\n\r\n    const view = map.getView();\r\n    if (\r\n      this.mode_ === Mode.TRACKPAD &&\r\n      !(view.getConstrainResolution() || this.constrainResolution_)\r\n    ) {\r\n      if (this.trackpadTimeoutId_) {\r\n        clearTimeout(this.trackpadTimeoutId_);\r\n      } else {\r\n        if (view.getAnimating()) {\r\n          view.cancelAnimations();\r\n        }\r\n        view.beginInteraction();\r\n      }\r\n      this.trackpadTimeoutId_ = setTimeout(\r\n        this.endInteraction_.bind(this),\r\n        this.timeout_\r\n      );\r\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\r\n      this.startTime_ = now;\r\n      return false;\r\n    }\r\n\r\n    this.totalDelta_ += delta;\r\n\r\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\r\n\r\n    clearTimeout(this.timeoutId_);\r\n    this.timeoutId_ = setTimeout(\r\n      this.handleWheelZoom_.bind(this, map),\r\n      timeLeft\r\n    );\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  handleWheelZoom_(map) {\r\n    const view = map.getView();\r\n    if (view.getAnimating()) {\r\n      view.cancelAnimations();\r\n    }\r\n    let delta =\r\n      -clamp(\r\n        this.totalDelta_,\r\n        -this.maxDelta_ * this.deltaPerZoom_,\r\n        this.maxDelta_ * this.deltaPerZoom_\r\n      ) / this.deltaPerZoom_;\r\n    if (view.getConstrainResolution() || this.constrainResolution_) {\r\n      // view has a zoom constraint, zoom by 1\r\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\r\n    }\r\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\r\n\r\n    this.mode_ = undefined;\r\n    this.totalDelta_ = 0;\r\n    this.lastAnchor_ = null;\r\n    this.startTime_ = undefined;\r\n    this.timeoutId_ = undefined;\r\n  }\r\n\r\n  /**\r\n   * Enable or disable using the mouse's location as an anchor when zooming\r\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\r\n   * to zoom to the center of the map\r\n   * @api\r\n   */\r\n  setMouseAnchor(useAnchor) {\r\n    this.useAnchor_ = useAnchor;\r\n    if (!useAnchor) {\r\n      this.lastAnchor_ = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default MouseWheelZoom;\r\n", "/**\r\n * @module ol/interaction/PinchRotate\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\nimport {disable} from '../rotationconstraint.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=250] The duration of the animation in\r\n * milliseconds.\r\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to rotate the map by twisting with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchRotate extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.rotating_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.rotationDelta_ = 0.0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let rotationDelta = 0.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n\r\n    // angle between touches\r\n    const angle = Math.atan2(\r\n      touch1.clientY - touch0.clientY,\r\n      touch1.clientX - touch0.clientX\r\n    );\r\n\r\n    if (this.lastAngle_ !== undefined) {\r\n      const delta = angle - this.lastAngle_;\r\n      this.rotationDelta_ += delta;\r\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\r\n        this.rotating_ = true;\r\n      }\r\n      rotationDelta = delta;\r\n    }\r\n    this.lastAngle_ = angle;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    if (view.getConstraints().rotation === disable) {\r\n      return;\r\n    }\r\n\r\n    // rotate anchor point.\r\n    // FIXME: should be the intersection point between the lines:\r\n    //     touch0,touch1 and previousTouch0,previousTouch1\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\r\n\r\n    // rotate\r\n    if (this.rotating_) {\r\n      map.render();\r\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      view.endInteraction(this.duration_);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastAngle_ = undefined;\r\n      this.rotating_ = false;\r\n      this.rotationDelta_ = 0.0;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchRotate;\r\n", "/**\r\n * @module ol/interaction/PinchZoom\r\n */\r\nimport PointerInteraction, {\r\n  centroid as centroidFromPointers,\r\n} from './Pointer.js';\r\nimport {FALSE} from '../functions.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom the map by pinching with two fingers\r\n * on a touch screen.\r\n * @api\r\n */\r\nclass PinchZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.anchor_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastDistance_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 1;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    let scaleDelta = 1.0;\r\n\r\n    const touch0 = this.targetPointers[0];\r\n    const touch1 = this.targetPointers[1];\r\n    const dx = touch0.clientX - touch1.clientX;\r\n    const dy = touch0.clientY - touch1.clientY;\r\n\r\n    // distance between touches\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n    if (this.lastDistance_ !== undefined) {\r\n      scaleDelta = this.lastDistance_ / distance;\r\n    }\r\n    this.lastDistance_ = distance;\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n\r\n    if (scaleDelta != 1.0) {\r\n      this.lastScaleDelta_ = scaleDelta;\r\n    }\r\n\r\n    // scale anchor point.\r\n    const viewportPosition = map.getViewport().getBoundingClientRect();\r\n    const centroid = centroidFromPointers(this.targetPointers);\r\n    centroid[0] -= viewportPosition.left;\r\n    centroid[1] -= viewportPosition.top;\r\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\r\n\r\n    // scale, bypass the resolution constraint\r\n    map.render();\r\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length < 2) {\r\n      const map = mapBrowserEvent.map;\r\n      const view = map.getView();\r\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n      view.endInteraction(this.duration_, direction);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (this.targetPointers.length >= 2) {\r\n      const map = mapBrowserEvent.map;\r\n      this.anchor_ = null;\r\n      this.lastDistance_ = undefined;\r\n      this.lastScaleDelta_ = 1;\r\n      if (!this.handlingDownUpSequence) {\r\n        map.getView().beginInteraction();\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default PinchZoom;\r\n", "/**\r\n * @module ol/interaction/DragAndDrop\r\n */\r\n// FIXME should handle all geo-referenced data, not just vector data\r\n\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport FormatType from '../format/FormatType.js';\r\nimport Interaction from './Interaction.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {get as getProjection} from '../proj.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\r\n * (and/or formats pre-constructed with options).\r\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\r\n * all existing features will be removed and new features will be added when\r\n * they are dropped on the target.  If you want to add features to a vector\r\n * source without removing the existing features (append only), instead of\r\n * providing the source option listen for the \"addfeatures\" event.\r\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\r\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DragAndDropEventType = {\r\n  /**\r\n   * Triggered when features are added\r\n   * @event DragAndDropEvent#addfeatures\r\n   * @api\r\n   */\r\n  ADD_FEATURES: 'addfeatures',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\r\n * of this type.\r\n */\r\nexport class DragAndDropEvent extends Event {\r\n  /**\r\n   * @param {DragAndDropEventType} type Type.\r\n   * @param {File} file File.\r\n   * @param {Array<import(\"../Feature.js\").default>} [opt_features] Features.\r\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\r\n   */\r\n  constructor(type, file, opt_features, opt_projection) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features parsed from dropped data.\r\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\r\n     * @api\r\n     */\r\n    this.features = opt_features;\r\n\r\n    /**\r\n     * The dropped file.\r\n     * @type {File}\r\n     * @api\r\n     */\r\n    this.file = file;\r\n\r\n    /**\r\n     * The feature projection.\r\n     * @type {import(\"../proj/Projection.js\").default|undefined}\r\n     * @api\r\n     */\r\n    this.projection = opt_projection;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Handles input of vector data by drag and drop.\r\n *\r\n * Note that the DragAndDrop interaction uses the TextDecoder() constructor if the supplied\r\n * combination of formats read both text string and ArrayBuffer sources. Older browsers such\r\n * as IE which do not support this will need a TextDecoder polyfill to be loaded before use.\r\n *\r\n * @api\r\n *\r\n * @fires DragAndDropEvent\r\n */\r\nclass DragAndDrop extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super({\r\n      handleEvent: TRUE,\r\n    });\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DragAndDropOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.readAsBuffer_ = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<import(\"../format/Feature.js\").default>}\r\n     */\r\n    this.formats_ = [];\r\n    const formatConstructors = options.formatConstructors\r\n      ? options.formatConstructors\r\n      : [];\r\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\r\n      let format = formatConstructors[i];\r\n      if (typeof format === 'function') {\r\n        format = new format();\r\n      }\r\n      this.formats_.push(format);\r\n      this.readAsBuffer_ =\r\n        this.readAsBuffer_ || format.getType() === FormatType.ARRAY_BUFFER;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../proj/Projection.js\").default}\r\n     */\r\n    this.projection_ = options.projection\r\n      ? getProjection(options.projection)\r\n      : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {?Array<import(\"../events.js\").EventsKey>}\r\n     */\r\n    this.dropListenKeys_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../source/Vector.js\").default}\r\n     */\r\n    this.source_ = options.source || null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement|null}\r\n     */\r\n    this.target = options.target ? options.target : null;\r\n  }\r\n\r\n  /**\r\n   * @param {File} file File.\r\n   * @param {Event} event Load event.\r\n   * @private\r\n   */\r\n  handleResult_(file, event) {\r\n    const result = event.target.result;\r\n    const map = this.getMap();\r\n    let projection = this.projection_;\r\n    if (!projection) {\r\n      const view = map.getView();\r\n      projection = view.getProjection();\r\n    }\r\n\r\n    let text;\r\n    const formats = this.formats_;\r\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\r\n      const format = formats[i];\r\n      let input = result;\r\n      if (this.readAsBuffer_ && format.getType() !== FormatType.ARRAY_BUFFER) {\r\n        if (text === undefined) {\r\n          text = new TextDecoder().decode(result);\r\n        }\r\n        input = text;\r\n      }\r\n      const features = this.tryReadFeatures_(format, input, {\r\n        featureProjection: projection,\r\n      });\r\n      if (features && features.length > 0) {\r\n        if (this.source_) {\r\n          this.source_.clear();\r\n          this.source_.addFeatures(features);\r\n        }\r\n        this.dispatchEvent(\r\n          new DragAndDropEvent(\r\n            DragAndDropEventType.ADD_FEATURES,\r\n            file,\r\n            features,\r\n            projection\r\n          )\r\n        );\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  registerListeners_() {\r\n    const map = this.getMap();\r\n    if (map) {\r\n      const dropArea = this.target ? this.target : map.getViewport();\r\n      this.dropListenKeys_ = [\r\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\r\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\r\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\r\n        listen(dropArea, EventType.DROP, this.handleStop, this),\r\n      ];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    if (!this.getActive() && active) {\r\n      this.registerListeners_();\r\n    }\r\n    if (this.getActive() && !active) {\r\n      this.unregisterListeners_();\r\n    }\r\n    super.setActive(active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.unregisterListeners_();\r\n    super.setMap(map);\r\n    if (this.getActive()) {\r\n      this.registerListeners_();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../format/Feature.js\").default} format Format.\r\n   * @param {string} text Text.\r\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\r\n   * @private\r\n   * @return {Array<import(\"../Feature.js\").default>} Features.\r\n   */\r\n  tryReadFeatures_(format, text, options) {\r\n    try {\r\n      return (\r\n        /** @type {Array<import(\"../Feature.js\").default>} */\r\n        (format.readFeatures(text, options))\r\n      );\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  unregisterListeners_() {\r\n    if (this.dropListenKeys_) {\r\n      this.dropListenKeys_.forEach(unlistenByKey);\r\n      this.dropListenKeys_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {DragEvent} event Event.\r\n   */\r\n  handleDrop(event) {\r\n    const files = event.dataTransfer.files;\r\n    for (let i = 0, ii = files.length; i < ii; ++i) {\r\n      const file = files.item(i);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\r\n        EventType.LOAD,\r\n        this.handleResult_.bind(this, file)\r\n      );\r\n      if (this.readAsBuffer_) {\r\n        reader.readAsArrayBuffer(file);\r\n      } else {\r\n        reader.readAsText(file);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {DragEvent} event Event.\r\n   */\r\n  handleStop(event) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'copy';\r\n  }\r\n}\r\n\r\nexport default DragAndDrop;\r\n", "/**\r\n * @module ol/interaction/DragRotateAndZoom\r\n */\r\nimport PointerInteraction from './Pointer.js';\r\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\r\n * @property {number} [duration=400] Animation duration in milliseconds.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to zoom and rotate the map by clicking and dragging\r\n * on the map.  By default, this interaction is limited to when the shift\r\n * key is held down.\r\n *\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * And this interaction is not included in the default interactions.\r\n * @api\r\n */\r\nclass DragRotateAndZoom extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastAngle_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number|undefined}\r\n     */\r\n    this.lastMagnitude_ = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.lastScaleDelta_ = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const size = map.getSize();\r\n    const offset = mapBrowserEvent.pixel;\r\n    const deltaX = offset[0] - size[0] / 2;\r\n    const deltaY = size[1] / 2 - offset[1];\r\n    const theta = Math.atan2(deltaY, deltaX);\r\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n    const view = map.getView();\r\n    if (this.lastAngle_ !== undefined) {\r\n      const angleDelta = this.lastAngle_ - theta;\r\n      view.adjustRotationInternal(angleDelta);\r\n    }\r\n    this.lastAngle_ = theta;\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\r\n    }\r\n    if (this.lastMagnitude_ !== undefined) {\r\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\r\n    }\r\n    this.lastMagnitude_ = magnitude;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n\r\n    const map = mapBrowserEvent.map;\r\n    const view = map.getView();\r\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\r\n    view.endInteraction(this.duration_, direction);\r\n    this.lastScaleDelta_ = 0;\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    if (!mouseOnly(mapBrowserEvent)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.condition_(mapBrowserEvent)) {\r\n      mapBrowserEvent.map.getView().beginInteraction();\r\n      this.lastAngle_ = undefined;\r\n      this.lastMagnitude_ = undefined;\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default DragRotateAndZoom;\r\n", "/**\r\n * @module ol/geom/Circle\r\n */\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\r\nimport {deflateCoordinate} from './flat/deflate.js';\r\nimport {rotate, translate} from './flat/transform.js';\r\n\r\n/**\r\n * @classdesc\r\n * Circle geometry.\r\n *\r\n * @api\r\n */\r\nclass Circle extends SimpleGeometry {\r\n  /**\r\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\r\n   *     `opt_radius` are also accepted.\r\n   * @param {number} [opt_radius] Radius.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   */\r\n  constructor(center, opt_radius, opt_layout) {\r\n    super();\r\n    if (opt_layout !== undefined && opt_radius === undefined) {\r\n      this.setFlatCoordinates(opt_layout, center);\r\n    } else {\r\n      const radius = opt_radius ? opt_radius : 0;\r\n      this.setCenterAndRadius(center, radius, opt_layout);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!Circle} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const circle = new Circle(\r\n      this.flatCoordinates.slice(),\r\n      undefined,\r\n      this.layout\r\n    );\r\n    circle.applyProperties(this);\r\n    return circle;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const dx = x - flatCoordinates[0];\r\n    const dy = y - flatCoordinates[1];\r\n    const squaredDistance = dx * dx + dy * dy;\r\n    if (squaredDistance < minSquaredDistance) {\r\n      if (squaredDistance === 0) {\r\n        for (let i = 0; i < this.stride; ++i) {\r\n          closestPoint[i] = flatCoordinates[i];\r\n        }\r\n      } else {\r\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\r\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\r\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\r\n        for (let i = 2; i < this.stride; ++i) {\r\n          closestPoint[i] = flatCoordinates[i];\r\n        }\r\n      }\r\n      closestPoint.length = this.stride;\r\n      return squaredDistance;\r\n    } else {\r\n      return minSquaredDistance;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  containsXY(x, y) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const dx = x - flatCoordinates[0];\r\n    const dy = y - flatCoordinates[1];\r\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\r\n  }\r\n\r\n  /**\r\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\r\n   * @api\r\n   */\r\n  getCenter() {\r\n    return this.flatCoordinates.slice(0, this.stride);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @protected\r\n   * @return {import(\"../extent.js\").Extent} extent Extent.\r\n   */\r\n  computeExtent(extent) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\r\n    return createOrUpdate(\r\n      flatCoordinates[0] - radius,\r\n      flatCoordinates[1] - radius,\r\n      flatCoordinates[0] + radius,\r\n      flatCoordinates[1] + radius,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the radius of the circle.\r\n   * @return {number} Radius.\r\n   * @api\r\n   */\r\n  getRadius() {\r\n    return Math.sqrt(this.getRadiusSquared_());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {number} Radius squared.\r\n   */\r\n  getRadiusSquared_() {\r\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\r\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\r\n    return dx * dx + dy * dy;\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.CIRCLE;\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const circleExtent = this.getExtent();\r\n    if (intersects(extent, circleExtent)) {\r\n      const center = this.getCenter();\r\n\r\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\r\n        return true;\r\n      }\r\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\r\n        return true;\r\n      }\r\n\r\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\r\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @api\r\n   */\r\n  setCenter(center) {\r\n    const stride = this.stride;\r\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\r\n    const flatCoordinates = center.slice();\r\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\r\n    for (let i = 1; i < stride; ++i) {\r\n      flatCoordinates[stride + i] = center[i];\r\n    }\r\n    this.setFlatCoordinates(this.layout, flatCoordinates);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\r\n   * number) of the circle.\r\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\r\n   * @param {number} radius Radius.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @api\r\n   */\r\n  setCenterAndRadius(center, radius, opt_layout) {\r\n    this.setLayout(opt_layout, center, 0);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    /** @type {Array<number>} */\r\n    const flatCoordinates = this.flatCoordinates;\r\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\r\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\r\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\r\n      flatCoordinates[offset++] = flatCoordinates[i];\r\n    }\r\n    flatCoordinates.length = offset;\r\n    this.changed();\r\n  }\r\n\r\n  getCoordinates() {\r\n    return null;\r\n  }\r\n\r\n  setCoordinates(coordinates, opt_layout) {}\r\n\r\n  /**\r\n   * Set the radius of the circle. The radius is in the units of the projection.\r\n   * @param {number} radius Radius.\r\n   * @api\r\n   */\r\n  setRadius(radius) {\r\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Rotate the geometry around a given coordinate. This modifies the geometry\r\n   * coordinates in place.\r\n   * @param {number} angle Rotation angle in counter-clockwise radians.\r\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\r\n   * @api\r\n   */\r\n  rotate(angle, anchor) {\r\n    const center = this.getCenter();\r\n    const stride = this.getStride();\r\n    this.setCenter(\r\n      rotate(center, 0, center.length, stride, angle, anchor, center)\r\n    );\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\r\n   * instead you want a new geometry, first `clone()` this geometry.\r\n   * @param {number} deltaX Delta X.\r\n   * @param {number} deltaY Delta Y.\r\n   * @api\r\n   */\r\n  translate(deltaX, deltaY) {\r\n    const center = this.getCenter();\r\n    const stride = this.getStride();\r\n    this.setCenter(\r\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\r\n    );\r\n    this.changed();\r\n  }\r\n}\r\n\r\n/**\r\n * Transform each coordinate of the circle from one coordinate reference system\r\n * to another. The geometry is modified in place.\r\n * If you do not want the geometry modified in place, first clone() it and\r\n * then use this function on the clone.\r\n *\r\n * Internally a circle is currently represented by two points: the center of\r\n * the circle `[cx, cy]`, and the point to the right of the circle\r\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\r\n * So the resulting geometry is also a circle, and that circle does not\r\n * correspond to the shape that would be obtained by transforming every point\r\n * of the original circle.\r\n *\r\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\r\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\r\n * @return {Circle} This geometry.  Note that original geometry is\r\n *     modified in place.\r\n * @function\r\n * @api\r\n */\r\nCircle.prototype.transform;\r\nexport default Circle;\r\n", "/**\r\n * @module ol/geom/flat/interpolate\r\n */\r\nimport {binarySearch} from '../../array.js';\r\nimport {lerp} from '../../math.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} fraction Fraction.\r\n * @param {Array<number>} [opt_dest] Destination.\r\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\r\n * @return {Array<number>} Destination.\r\n */\r\nexport function interpolatePoint(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  fraction,\r\n  opt_dest,\r\n  opt_dimension\r\n) {\r\n  let o, t;\r\n  const n = (end - offset) / stride;\r\n  if (n === 1) {\r\n    o = offset;\r\n  } else if (n === 2) {\r\n    o = offset;\r\n    t = fraction;\r\n  } else if (n !== 0) {\r\n    let x1 = flatCoordinates[offset];\r\n    let y1 = flatCoordinates[offset + 1];\r\n    let length = 0;\r\n    const cumulativeLengths = [0];\r\n    for (let i = offset + stride; i < end; i += stride) {\r\n      const x2 = flatCoordinates[i];\r\n      const y2 = flatCoordinates[i + 1];\r\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n      cumulativeLengths.push(length);\r\n      x1 = x2;\r\n      y1 = y2;\r\n    }\r\n    const target = fraction * length;\r\n    const index = binarySearch(cumulativeLengths, target);\r\n    if (index < 0) {\r\n      t =\r\n        (target - cumulativeLengths[-index - 2]) /\r\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\r\n      o = offset + (-index - 2) * stride;\r\n    } else {\r\n      o = offset + index * stride;\r\n    }\r\n  }\r\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\r\n  const dest = opt_dest ? opt_dest : new Array(dimension);\r\n  for (let i = 0; i < dimension; ++i) {\r\n    dest[i] =\r\n      o === undefined\r\n        ? NaN\r\n        : t === undefined\r\n        ? flatCoordinates[o + i]\r\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\r\n  }\r\n  return dest;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {number} end End.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\r\n */\r\nexport function lineStringCoordinateAtM(\r\n  flatCoordinates,\r\n  offset,\r\n  end,\r\n  stride,\r\n  m,\r\n  extrapolate\r\n) {\r\n  if (end == offset) {\r\n    return null;\r\n  }\r\n  let coordinate;\r\n  if (m < flatCoordinates[offset + stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(offset, offset + stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  } else if (flatCoordinates[end - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(end - stride, end);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  // FIXME use O(1) search\r\n  if (m == flatCoordinates[offset + stride - 1]) {\r\n    return flatCoordinates.slice(offset, offset + stride);\r\n  }\r\n  let lo = offset / stride;\r\n  let hi = end / stride;\r\n  while (lo < hi) {\r\n    const mid = (lo + hi) >> 1;\r\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\r\n      hi = mid;\r\n    } else {\r\n      lo = mid + 1;\r\n    }\r\n  }\r\n  const m0 = flatCoordinates[lo * stride - 1];\r\n  if (m == m0) {\r\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\r\n  }\r\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\r\n  const t = (m - m0) / (m1 - m0);\r\n  coordinate = [];\r\n  for (let i = 0; i < stride - 1; ++i) {\r\n    coordinate.push(\r\n      lerp(\r\n        flatCoordinates[(lo - 1) * stride + i],\r\n        flatCoordinates[lo * stride + i],\r\n        t\r\n      )\r\n    );\r\n  }\r\n  coordinate.push(m);\r\n  return coordinate;\r\n}\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<number>} ends Ends.\r\n * @param {number} stride Stride.\r\n * @param {number} m M.\r\n * @param {boolean} extrapolate Extrapolate.\r\n * @param {boolean} interpolate Interpolate.\r\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\r\n */\r\nexport function lineStringsCoordinateAtM(\r\n  flatCoordinates,\r\n  offset,\r\n  ends,\r\n  stride,\r\n  m,\r\n  extrapolate,\r\n  interpolate\r\n) {\r\n  if (interpolate) {\r\n    return lineStringCoordinateAtM(\r\n      flatCoordinates,\r\n      offset,\r\n      ends[ends.length - 1],\r\n      stride,\r\n      m,\r\n      extrapolate\r\n    );\r\n  }\r\n  let coordinate;\r\n  if (m < flatCoordinates[stride - 1]) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(0, stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\r\n    if (extrapolate) {\r\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\r\n      coordinate[stride - 1] = m;\r\n      return coordinate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n    const end = ends[i];\r\n    if (offset == end) {\r\n      continue;\r\n    }\r\n    if (m < flatCoordinates[offset + stride - 1]) {\r\n      return null;\r\n    } else if (m <= flatCoordinates[end - 1]) {\r\n      return lineStringCoordinateAtM(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        m,\r\n        false\r\n      );\r\n    }\r\n    offset = end;\r\n  }\r\n  return null;\r\n}\r\n", "/**\r\n * @module ol/geom/LineString\r\n */\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {douglasPeucker} from './flat/simplify.js';\r\nimport {extend} from '../array.js';\r\nimport {forEach as forEachSegment} from './flat/segments.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\r\nimport {intersectsLineString} from './flat/intersectsextent.js';\r\nimport {lineStringLength} from './flat/length.js';\r\n\r\n/**\r\n * @classdesc\r\n * Linestring geometry.\r\n *\r\n * @api\r\n */\r\nclass LineString extends SimpleGeometry {\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     */\r\n    this.flatMidpoint_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatMidpointRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(\r\n        opt_layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n    } else {\r\n      this.setCoordinates(\r\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\r\n          coordinates\r\n        ),\r\n        opt_layout\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed coordinate to the coordinates of the linestring.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @api\r\n   */\r\n  appendCoordinate(coordinate) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = coordinate.slice();\r\n    } else {\r\n      extend(this.flatCoordinates, coordinate);\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!LineString} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const lineString = new LineString(\r\n      this.flatCoordinates.slice(),\r\n      this.layout\r\n    );\r\n    lineString.applyProperties(this);\r\n    return lineString;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(\r\n        maxSquaredDelta(\r\n          this.flatCoordinates,\r\n          0,\r\n          this.flatCoordinates.length,\r\n          this.stride,\r\n          0\r\n        )\r\n      );\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestPoint(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      this.maxDelta_,\r\n      false,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Iterate over each segment, calling the provided callback.\r\n   * If the callback returns a truthy value the function returns that\r\n   * value immediately. Otherwise the function returns `false`.\r\n   *\r\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\r\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\r\n   * @return {T|boolean} Value.\r\n   * @template T,S\r\n   * @api\r\n   */\r\n  forEachSegment(callback) {\r\n    return forEachSegment(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      callback\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\r\n   * @api\r\n   */\r\n  getCoordinateAtM(m, opt_extrapolate) {\r\n    if (\r\n      this.layout != GeometryLayout.XYM &&\r\n      this.layout != GeometryLayout.XYZM\r\n    ) {\r\n      return null;\r\n    }\r\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    return lineStringCoordinateAtM(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      m,\r\n      extrapolate\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the linestring.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the coordinate at the provided fraction along the linestring.\r\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\r\n   * linestring and 1 is the end.\r\n   * @param {number} fraction Fraction.\r\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\r\n   *     be modified. If not provided, a new coordinate will be returned.\r\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\r\n   * @api\r\n   */\r\n  getCoordinateAt(fraction, opt_dest) {\r\n    return interpolatePoint(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      fraction,\r\n      opt_dest,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the length of the linestring on projected plane.\r\n   * @return {number} Length (on projected plane).\r\n   * @api\r\n   */\r\n  getLength() {\r\n    return lineStringLength(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoint.\r\n   */\r\n  getFlatMidpoint() {\r\n    if (this.flatMidpointRevision_ != this.getRevision()) {\r\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\r\n      this.flatMidpointRevision_ = this.getRevision();\r\n    }\r\n    return this.flatMidpoint_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {LineString} Simplified LineString.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    simplifiedFlatCoordinates.length = douglasPeucker(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      0\r\n    );\r\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.LINE_STRING;\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLineString(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the linestring.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride\r\n    );\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default LineString;\r\n", "/**\r\n * @module ol/geom/MultiLineString\r\n */\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport LineString from './LineString.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport {deflateCoordinatesArray} from './flat/deflate.js';\r\nimport {douglasPeuckerArray} from './flat/simplify.js';\r\nimport {extend} from '../array.js';\r\nimport {inflateCoordinatesArray} from './flat/inflate.js';\r\nimport {\r\n  interpolatePoint,\r\n  lineStringsCoordinateAtM,\r\n} from './flat/interpolate.js';\r\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-linestring geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiLineString extends SimpleGeometry {\r\n  /**\r\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\r\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\r\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\r\n   */\r\n  constructor(coordinates, opt_layout, opt_ends) {\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<number>}\r\n     * @private\r\n     */\r\n    this.ends_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    if (Array.isArray(coordinates[0])) {\r\n      this.setCoordinates(\r\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\r\n          coordinates\r\n        ),\r\n        opt_layout\r\n      );\r\n    } else if (opt_layout !== undefined && opt_ends) {\r\n      this.setFlatCoordinates(\r\n        opt_layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n      this.ends_ = opt_ends;\r\n    } else {\r\n      let layout = this.getLayout();\r\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\r\n      const flatCoordinates = [];\r\n      const ends = [];\r\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\r\n        const lineString = lineStrings[i];\r\n        if (i === 0) {\r\n          layout = lineString.getLayout();\r\n        }\r\n        extend(flatCoordinates, lineString.getFlatCoordinates());\r\n        ends.push(flatCoordinates.length);\r\n      }\r\n      this.setFlatCoordinates(layout, flatCoordinates);\r\n      this.ends_ = ends;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed linestring to the multilinestring.\r\n   * @param {LineString} lineString LineString.\r\n   * @api\r\n   */\r\n  appendLineString(lineString) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\r\n    }\r\n    this.ends_.push(this.flatCoordinates.length);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiLineString} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const multiLineString = new MultiLineString(\r\n      this.flatCoordinates.slice(),\r\n      this.layout,\r\n      this.ends_.slice()\r\n    );\r\n    multiLineString.applyProperties(this);\r\n    return multiLineString;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(\r\n        arrayMaxSquaredDelta(\r\n          this.flatCoordinates,\r\n          0,\r\n          this.ends_,\r\n          this.stride,\r\n          0\r\n        )\r\n      );\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestArrayPoint(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      this.maxDelta_,\r\n      false,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\r\n   * such coordinate exists.\r\n   *\r\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\r\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\r\n   * M will return the first coordinate and Ms greater than the last M will\r\n   * return the last coordinate.\r\n   *\r\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\r\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\r\n   * will be linearly interpolated between the last coordinate of one LineString\r\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\r\n   * `false` then the function will return `null` for Ms falling between\r\n   * LineStrings.\r\n   *\r\n   * @param {number} m M.\r\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\r\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\r\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\r\n   * @api\r\n   */\r\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\r\n    if (\r\n      (this.layout != GeometryLayout.XYM &&\r\n        this.layout != GeometryLayout.XYZM) ||\r\n      this.flatCoordinates.length === 0\r\n    ) {\r\n      return null;\r\n    }\r\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\r\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\r\n    return lineStringsCoordinateAtM(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      m,\r\n      extrapolate,\r\n      interpolate\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the multilinestring.\r\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinatesArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Ends.\r\n   */\r\n  getEnds() {\r\n    return this.ends_;\r\n  }\r\n\r\n  /**\r\n   * Return the linestring at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {LineString} LineString.\r\n   * @api\r\n   */\r\n  getLineString(index) {\r\n    if (index < 0 || this.ends_.length <= index) {\r\n      return null;\r\n    }\r\n    return new LineString(\r\n      this.flatCoordinates.slice(\r\n        index === 0 ? 0 : this.ends_[index - 1],\r\n        this.ends_[index]\r\n      ),\r\n      this.layout\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the linestrings of this multilinestring.\r\n   * @return {Array<LineString>} LineStrings.\r\n   * @api\r\n   */\r\n  getLineStrings() {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const ends = this.ends_;\r\n    const layout = this.layout;\r\n    /** @type {Array<LineString>} */\r\n    const lineStrings = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const lineString = new LineString(\r\n        flatCoordinates.slice(offset, end),\r\n        layout\r\n      );\r\n      lineStrings.push(lineString);\r\n      offset = end;\r\n    }\r\n    return lineStrings;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat midpoints.\r\n   */\r\n  getFlatMidpoints() {\r\n    const midpoints = [];\r\n    const flatCoordinates = this.flatCoordinates;\r\n    let offset = 0;\r\n    const ends = this.ends_;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n      const end = ends[i];\r\n      const midpoint = interpolatePoint(\r\n        flatCoordinates,\r\n        offset,\r\n        end,\r\n        stride,\r\n        0.5\r\n      );\r\n      extend(midpoints, midpoint);\r\n      offset = end;\r\n    }\r\n    return midpoints;\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {MultiLineString} Simplified MultiLineString.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEnds = [];\r\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      squaredTolerance,\r\n      simplifiedFlatCoordinates,\r\n      0,\r\n      simplifiedEnds\r\n    );\r\n    return new MultiLineString(\r\n      simplifiedFlatCoordinates,\r\n      GeometryLayout.XY,\r\n      simplifiedEnds\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_LINE_STRING;\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLineStringArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.ends_,\r\n      this.stride,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multilinestring.\r\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\r\n   * @param {GeometryLayout} [opt_layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 2);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const ends = deflateCoordinatesArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride,\r\n      this.ends_\r\n    );\r\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default MultiLineString;\r\n", "/**\r\n * @module ol/geom/MultiPoint\r\n */\r\nimport GeometryType from './GeometryType.js';\r\nimport Point from './Point.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\r\nimport {deflateCoordinates} from './flat/deflate.js';\r\nimport {extend} from '../array.js';\r\nimport {inflateCoordinates} from './flat/inflate.js';\r\nimport {squaredDistance as squaredDx} from '../math.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-point geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPoint extends SimpleGeometry {\r\n  /**\r\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   */\r\n  constructor(coordinates, opt_layout) {\r\n    super();\r\n    if (opt_layout && !Array.isArray(coordinates[0])) {\r\n      this.setFlatCoordinates(\r\n        opt_layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n    } else {\r\n      this.setCoordinates(\r\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\r\n          coordinates\r\n        ),\r\n        opt_layout\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed point to this multipoint.\r\n   * @param {Point} point Point.\r\n   * @api\r\n   */\r\n  appendPoint(point) {\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = point.getFlatCoordinates().slice();\r\n    } else {\r\n      extend(this.flatCoordinates, point.getFlatCoordinates());\r\n    }\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPoint} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const multiPoint = new MultiPoint(\r\n      this.flatCoordinates.slice(),\r\n      this.layout\r\n    );\r\n    multiPoint.applyProperties(this);\r\n    return multiPoint;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const squaredDistance = squaredDx(\r\n        x,\r\n        y,\r\n        flatCoordinates[i],\r\n        flatCoordinates[i + 1]\r\n      );\r\n      if (squaredDistance < minSquaredDistance) {\r\n        minSquaredDistance = squaredDistance;\r\n        for (let j = 0; j < stride; ++j) {\r\n          closestPoint[j] = flatCoordinates[i + j];\r\n        }\r\n        closestPoint.length = stride;\r\n      }\r\n    }\r\n    return minSquaredDistance;\r\n  }\r\n\r\n  /**\r\n   * Return the coordinates of the multipoint.\r\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates() {\r\n    return inflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.flatCoordinates.length,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the point at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Point} Point.\r\n   * @api\r\n   */\r\n  getPoint(index) {\r\n    const n = !this.flatCoordinates\r\n      ? 0\r\n      : this.flatCoordinates.length / this.stride;\r\n    if (index < 0 || n <= index) {\r\n      return null;\r\n    }\r\n    return new Point(\r\n      this.flatCoordinates.slice(\r\n        index * this.stride,\r\n        (index + 1) * this.stride\r\n      ),\r\n      this.layout\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the points of this multipoint.\r\n   * @return {Array<Point>} Points.\r\n   * @api\r\n   */\r\n  getPoints() {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const layout = this.layout;\r\n    const stride = this.stride;\r\n    /** @type {Array<Point>} */\r\n    const points = [];\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\r\n      points.push(point);\r\n    }\r\n    return points;\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POINT;\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const stride = this.stride;\r\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\r\n      const x = flatCoordinates[i];\r\n      const y = flatCoordinates[i + 1];\r\n      if (containsXY(extent, x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipoint.\r\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 1);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    this.flatCoordinates.length = deflateCoordinates(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride\r\n    );\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default MultiPoint;\r\n", "/**\r\n * @module ol/geom/flat/center\r\n */\r\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\r\n\r\n/**\r\n * @param {Array<number>} flatCoordinates Flat coordinates.\r\n * @param {number} offset Offset.\r\n * @param {Array<Array<number>>} endss Endss.\r\n * @param {number} stride Stride.\r\n * @return {Array<number>} Flat centers.\r\n */\r\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\r\n  const flatCenters = [];\r\n  let extent = createEmpty();\r\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n    const ends = endss[i];\r\n    extent = createOrUpdateFromFlatCoordinates(\r\n      flatCoordinates,\r\n      offset,\r\n      ends[0],\r\n      stride\r\n    );\r\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\r\n    offset = ends[ends.length - 1];\r\n  }\r\n  return flatCenters;\r\n}\r\n", "/**\r\n * @module ol/geom/MultiPolygon\r\n */\r\nimport GeometryLayout from './GeometryLayout.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport MultiPoint from './MultiPoint.js';\r\nimport Polygon from './Polygon.js';\r\nimport SimpleGeometry from './SimpleGeometry.js';\r\nimport {\r\n  assignClosestMultiArrayPoint,\r\n  multiArrayMaxSquaredDelta,\r\n} from './flat/closest.js';\r\nimport {closestSquaredDistanceXY} from '../extent.js';\r\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\r\nimport {extend} from '../array.js';\r\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\r\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\r\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\r\nimport {\r\n  linearRingssAreOriented,\r\n  orientLinearRingsArray,\r\n} from './flat/orient.js';\r\nimport {linearRingss as linearRingssArea} from './flat/area.js';\r\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\r\nimport {linearRingssContainsXY} from './flat/contains.js';\r\nimport {quantizeMultiArray} from './flat/simplify.js';\r\n\r\n/**\r\n * @classdesc\r\n * Multi-polygon geometry.\r\n *\r\n * @api\r\n */\r\nclass MultiPolygon extends SimpleGeometry {\r\n  /**\r\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\r\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\r\n   */\r\n  constructor(coordinates, opt_layout, opt_endss) {\r\n    super();\r\n\r\n    /**\r\n     * @type {Array<Array<number>>}\r\n     * @private\r\n     */\r\n    this.endss_ = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.flatInteriorPointsRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.flatInteriorPoints_ = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDelta_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.maxDeltaRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.orientedRevision_ = -1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.orientedFlatCoordinates_ = null;\r\n\r\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\r\n      let layout = this.getLayout();\r\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\r\n      const flatCoordinates = [];\r\n      const endss = [];\r\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\r\n        const polygon = polygons[i];\r\n        if (i === 0) {\r\n          layout = polygon.getLayout();\r\n        }\r\n        const offset = flatCoordinates.length;\r\n        const ends = polygon.getEnds();\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] += offset;\r\n        }\r\n        extend(flatCoordinates, polygon.getFlatCoordinates());\r\n        endss.push(ends);\r\n      }\r\n      opt_layout = layout;\r\n      coordinates = flatCoordinates;\r\n      opt_endss = endss;\r\n    }\r\n    if (opt_layout !== undefined && opt_endss) {\r\n      this.setFlatCoordinates(\r\n        opt_layout,\r\n        /** @type {Array<number>} */ (coordinates)\r\n      );\r\n      this.endss_ = opt_endss;\r\n    } else {\r\n      this.setCoordinates(\r\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\r\n          coordinates\r\n        ),\r\n        opt_layout\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append the passed polygon to this multipolygon.\r\n   * @param {Polygon} polygon Polygon.\r\n   * @api\r\n   */\r\n  appendPolygon(polygon) {\r\n    /** @type {Array<number>} */\r\n    let ends;\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\r\n      ends = polygon.getEnds().slice();\r\n      this.endss_.push();\r\n    } else {\r\n      const offset = this.flatCoordinates.length;\r\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\r\n      ends = polygon.getEnds().slice();\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] += offset;\r\n      }\r\n    }\r\n    this.endss_.push(ends);\r\n    this.changed();\r\n  }\r\n\r\n  /**\r\n   * Make a complete copy of the geometry.\r\n   * @return {!MultiPolygon} Clone.\r\n   * @api\r\n   */\r\n  clone() {\r\n    const len = this.endss_.length;\r\n    const newEndss = new Array(len);\r\n    for (let i = 0; i < len; ++i) {\r\n      newEndss[i] = this.endss_[i].slice();\r\n    }\r\n\r\n    const multiPolygon = new MultiPolygon(\r\n      this.flatCoordinates.slice(),\r\n      this.layout,\r\n      newEndss\r\n    );\r\n    multiPolygon.applyProperties(this);\r\n\r\n    return multiPolygon;\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\r\n   * @param {number} minSquaredDistance Minimum squared distance.\r\n   * @return {number} Minimum squared distance.\r\n   */\r\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\r\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\r\n      return minSquaredDistance;\r\n    }\r\n    if (this.maxDeltaRevision_ != this.getRevision()) {\r\n      this.maxDelta_ = Math.sqrt(\r\n        multiArrayMaxSquaredDelta(\r\n          this.flatCoordinates,\r\n          0,\r\n          this.endss_,\r\n          this.stride,\r\n          0\r\n        )\r\n      );\r\n      this.maxDeltaRevision_ = this.getRevision();\r\n    }\r\n    return assignClosestMultiArrayPoint(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.endss_,\r\n      this.stride,\r\n      this.maxDelta_,\r\n      true,\r\n      x,\r\n      y,\r\n      closestPoint,\r\n      minSquaredDistance\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {number} x X.\r\n   * @param {number} y Y.\r\n   * @return {boolean} Contains (x, y).\r\n   */\r\n  containsXY(x, y) {\r\n    return linearRingssContainsXY(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.endss_,\r\n      this.stride,\r\n      x,\r\n      y\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the area of the multipolygon on projected plane.\r\n   * @return {number} Area (on projected plane).\r\n   * @api\r\n   */\r\n  getArea() {\r\n    return linearRingssArea(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.endss_,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the coordinate array for this geometry.  This array has the structure\r\n   * of a GeoJSON coordinate array for multi-polygons.\r\n   *\r\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\r\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\r\n   *     If `false`, coordinates will be oriented according to the left-hand rule\r\n   *     (clockwise for exterior and counter-clockwise for interior rings).\r\n   *     By default, coordinate orientation will depend on how the geometry was\r\n   *     constructed.\r\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\r\n   * @api\r\n   */\r\n  getCoordinates(opt_right) {\r\n    let flatCoordinates;\r\n    if (opt_right !== undefined) {\r\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\r\n      orientLinearRingsArray(\r\n        flatCoordinates,\r\n        0,\r\n        this.endss_,\r\n        this.stride,\r\n        opt_right\r\n      );\r\n    } else {\r\n      flatCoordinates = this.flatCoordinates;\r\n    }\r\n\r\n    return inflateMultiCoordinatesArray(\r\n      flatCoordinates,\r\n      0,\r\n      this.endss_,\r\n      this.stride\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Array<Array<number>>} Endss.\r\n   */\r\n  getEndss() {\r\n    return this.endss_;\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Flat interior points.\r\n   */\r\n  getFlatInteriorPoints() {\r\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\r\n      const flatCenters = linearRingssCenter(\r\n        this.flatCoordinates,\r\n        0,\r\n        this.endss_,\r\n        this.stride\r\n      );\r\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\r\n        this.getOrientedFlatCoordinates(),\r\n        0,\r\n        this.endss_,\r\n        this.stride,\r\n        flatCenters\r\n      );\r\n      this.flatInteriorPointsRevision_ = this.getRevision();\r\n    }\r\n    return this.flatInteriorPoints_;\r\n  }\r\n\r\n  /**\r\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\r\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\r\n   * the length of the horizontal intersection that the point belongs to.\r\n   * @api\r\n   */\r\n  getInteriorPoints() {\r\n    return new MultiPoint(\r\n      this.getFlatInteriorPoints().slice(),\r\n      GeometryLayout.XYM\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @return {Array<number>} Oriented flat coordinates.\r\n   */\r\n  getOrientedFlatCoordinates() {\r\n    if (this.orientedRevision_ != this.getRevision()) {\r\n      const flatCoordinates = this.flatCoordinates;\r\n      if (\r\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\r\n      ) {\r\n        this.orientedFlatCoordinates_ = flatCoordinates;\r\n      } else {\r\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\r\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\r\n          this.orientedFlatCoordinates_,\r\n          0,\r\n          this.endss_,\r\n          this.stride\r\n        );\r\n      }\r\n      this.orientedRevision_ = this.getRevision();\r\n    }\r\n    return this.orientedFlatCoordinates_;\r\n  }\r\n\r\n  /**\r\n   * @param {number} squaredTolerance Squared tolerance.\r\n   * @return {MultiPolygon} Simplified MultiPolygon.\r\n   * @protected\r\n   */\r\n  getSimplifiedGeometryInternal(squaredTolerance) {\r\n    const simplifiedFlatCoordinates = [];\r\n    const simplifiedEndss = [];\r\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      this.endss_,\r\n      this.stride,\r\n      Math.sqrt(squaredTolerance),\r\n      simplifiedFlatCoordinates,\r\n      0,\r\n      simplifiedEndss\r\n    );\r\n    return new MultiPolygon(\r\n      simplifiedFlatCoordinates,\r\n      GeometryLayout.XY,\r\n      simplifiedEndss\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the polygon at the specified index.\r\n   * @param {number} index Index.\r\n   * @return {Polygon} Polygon.\r\n   * @api\r\n   */\r\n  getPolygon(index) {\r\n    if (index < 0 || this.endss_.length <= index) {\r\n      return null;\r\n    }\r\n    let offset;\r\n    if (index === 0) {\r\n      offset = 0;\r\n    } else {\r\n      const prevEnds = this.endss_[index - 1];\r\n      offset = prevEnds[prevEnds.length - 1];\r\n    }\r\n    const ends = this.endss_[index].slice();\r\n    const end = ends[ends.length - 1];\r\n    if (offset !== 0) {\r\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\r\n        ends[i] -= offset;\r\n      }\r\n    }\r\n    return new Polygon(\r\n      this.flatCoordinates.slice(offset, end),\r\n      this.layout,\r\n      ends\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Return the polygons of this multipolygon.\r\n   * @return {Array<Polygon>} Polygons.\r\n   * @api\r\n   */\r\n  getPolygons() {\r\n    const layout = this.layout;\r\n    const flatCoordinates = this.flatCoordinates;\r\n    const endss = this.endss_;\r\n    const polygons = [];\r\n    let offset = 0;\r\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\r\n      const ends = endss[i].slice();\r\n      const end = ends[ends.length - 1];\r\n      if (offset !== 0) {\r\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\r\n          ends[j] -= offset;\r\n        }\r\n      }\r\n      const polygon = new Polygon(\r\n        flatCoordinates.slice(offset, end),\r\n        layout,\r\n        ends\r\n      );\r\n      polygons.push(polygon);\r\n      offset = end;\r\n    }\r\n    return polygons;\r\n  }\r\n\r\n  /**\r\n   * Get the type of this geometry.\r\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\r\n   * @api\r\n   */\r\n  getType() {\r\n    return GeometryType.MULTI_POLYGON;\r\n  }\r\n\r\n  /**\r\n   * Test if the geometry and the passed extent intersect.\r\n   * @param {import(\"../extent.js\").Extent} extent Extent.\r\n   * @return {boolean} `true` if the geometry and the extent intersect.\r\n   * @api\r\n   */\r\n  intersectsExtent(extent) {\r\n    return intersectsLinearRingMultiArray(\r\n      this.getOrientedFlatCoordinates(),\r\n      0,\r\n      this.endss_,\r\n      this.stride,\r\n      extent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the coordinates of the multipolygon.\r\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\r\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\r\n   * @api\r\n   */\r\n  setCoordinates(coordinates, opt_layout) {\r\n    this.setLayout(opt_layout, coordinates, 3);\r\n    if (!this.flatCoordinates) {\r\n      this.flatCoordinates = [];\r\n    }\r\n    const endss = deflateMultiCoordinatesArray(\r\n      this.flatCoordinates,\r\n      0,\r\n      coordinates,\r\n      this.stride,\r\n      this.endss_\r\n    );\r\n    if (endss.length === 0) {\r\n      this.flatCoordinates.length = 0;\r\n    } else {\r\n      const lastEnds = endss[endss.length - 1];\r\n      this.flatCoordinates.length =\r\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\r\n    }\r\n    this.changed();\r\n  }\r\n}\r\n\r\nexport default MultiPolygon;\r\n", "/**\r\n * @module ol/interaction/Draw\r\n */\r\nimport Circle from '../geom/Circle.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport InteractionProperty from './Property.js';\r\nimport LineString from '../geom/LineString.js';\r\nimport MapBrowserEvent from '../MapBrowserEvent.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport MultiLineString from '../geom/MultiLineString.js';\r\nimport MultiPoint from '../geom/MultiPoint.js';\r\nimport MultiPolygon from '../geom/MultiPolygon.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {FALSE, TRUE} from '../functions.js';\r\nimport {always, noModifierKeys, shiftKeyOnly} from '../events/condition.js';\r\nimport {\r\n  boundingExtent,\r\n  getBottomLeft,\r\n  getBottomRight,\r\n  getTopLeft,\r\n  getTopRight,\r\n} from '../extent.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {fromUserCoordinate, getUserProjection} from '../proj.js';\r\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../geom/GeometryType.js\").default} type Geometry type of\r\n * the geometries being drawn with this instance.\r\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\r\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\r\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\r\n * was chosen for the draw interaction to behave correctly on mouse as well as\r\n * on touch devices.\r\n * @property {import(\"../Collection.js\").default<Feature>} [features]\r\n * Destination collection for the drawn features.\r\n * @property {VectorSource} [source] Destination source for\r\n * the drawn features.\r\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\r\n * before the current vertex can be dragged to its exact position.\r\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\r\n * drawing finish. Must be greater than `0`.\r\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\r\n * doubleclick events from firing during drawing.\r\n * @property {number} [maxPoints] The number of points that can be drawn before\r\n * a polygon ring or line string is finished. By default there is no\r\n * restriction.\r\n * @property {number} [minPoints] The number of points that must be drawn\r\n * before a polygon ring or line string can be finished. Default is `3` for\r\n * polygon rings and `2` for line strings.\r\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether the drawing can be finished. Not used when drawing\r\n * POINT or MULTI_POINT geometries.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style for sketch features.\r\n * @property {GeometryFunction} [geometryFunction]\r\n * Function that is called when a geometry's coordinates are updated.\r\n * @property {string} [geometryName] Geometry name to use for features created\r\n * by the draw interaction.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default {@link module:ol/events/condition.noModifierKeys}, i.e. a click,\r\n * adds a vertex or deactivates freehand drawing.\r\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\r\n * polygons, and circles.  This makes the interaction always operate in freehand\r\n * mode and takes precedence over any `freehandCondition` option.\r\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\r\n * Condition that activates freehand drawing for lines and polygons. This\r\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether that event should be handled. The\r\n * default is {@link module:ol/events/condition.shiftKeyOnly}, meaning that the\r\n * Shift key activates freehand drawing.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n */\r\n\r\n/**\r\n * Coordinate type when drawing points.\r\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\r\n */\r\n\r\n/**\r\n * Coordinate type when drawing lines.\r\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\r\n */\r\n\r\n/**\r\n * Coordinate type when drawing polygons.\r\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\r\n */\r\n\r\n/**\r\n * Types used for drawing coordinates.\r\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\r\n */\r\n\r\n/**\r\n * Function that takes an array of coordinates and an optional existing geometry\r\n * and a projection as arguments, and returns a geometry. The optional existing\r\n * geometry is the geometry that is returned when the function is called without\r\n * a second argument.\r\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default,\r\n *     import(\"../proj/Projection.js\").default):\r\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\r\n */\r\n\r\n/**\r\n * Draw mode.  This collapses multi-part geometry types with their single-part\r\n * cousins.\r\n * @enum {string}\r\n */\r\nconst Mode = {\r\n  POINT: 'Point',\r\n  LINE_STRING: 'LineString',\r\n  POLYGON: 'Polygon',\r\n  CIRCLE: 'Circle',\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst DrawEventType = {\r\n  /**\r\n   * Triggered upon feature draw start\r\n   * @event DrawEvent#drawstart\r\n   * @api\r\n   */\r\n  DRAWSTART: 'drawstart',\r\n  /**\r\n   * Triggered upon feature draw end\r\n   * @event DrawEvent#drawend\r\n   * @api\r\n   */\r\n  DRAWEND: 'drawend',\r\n  /**\r\n   * Triggered upon feature draw abortion\r\n   * @event DrawEvent#drawabort\r\n   * @api\r\n   */\r\n  DRAWABORT: 'drawabort',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\r\n * instances of this type.\r\n */\r\nexport class DrawEvent extends Event {\r\n  /**\r\n   * @param {DrawEventType} type Type.\r\n   * @param {Feature} feature The feature drawn.\r\n   */\r\n  constructor(type, feature) {\r\n    super(type);\r\n\r\n    /**\r\n     * The feature being drawn.\r\n     * @type {Feature}\r\n     * @api\r\n     */\r\n    this.feature = feature;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'drawabort'|'drawend'|'drawstart', DrawEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'drawabort'|'drawend'|'drawstart', Return>} DrawOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for drawing feature geometries.\r\n *\r\n * @fires DrawEvent\r\n * @api\r\n */\r\nclass Draw extends PointerInteraction {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /***\r\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {DrawOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {DrawOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.shouldHandle_ = false;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.downPx_ = null;\r\n\r\n    /**\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    this.downTimeout_;\r\n\r\n    /**\r\n     * @type {number|undefined}\r\n     * @private\r\n     */\r\n    this.lastDragTime_;\r\n\r\n    /**\r\n     * Pointer type of the last pointermove event\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    this.pointerType_;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.freehand_ = false;\r\n\r\n    /**\r\n     * Target source for drawn features.\r\n     * @type {VectorSource|null}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * Target collection for drawn features.\r\n     * @type {import(\"../Collection.js\").default<Feature>|null}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * Pixel distance for snapping.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\r\n\r\n    /**\r\n     * Geometry type.\r\n     * @type {import(\"../geom/GeometryType.js\").default}\r\n     * @private\r\n     */\r\n    this.type_ = /** @type {import(\"../geom/GeometryType.js\").default} */ (\r\n      options.type\r\n    );\r\n\r\n    /**\r\n     * Drawing mode (derived from geometry type.\r\n     * @type {Mode}\r\n     * @private\r\n     */\r\n    this.mode_ = getMode(this.type_);\r\n\r\n    /**\r\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\r\n     * Default is `false`.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.stopClick_ = !!options.stopClick;\r\n\r\n    /**\r\n     * The number of points that must be drawn before a polygon ring or line\r\n     * string can be finished.  The default is 3 for polygon rings and 2 for\r\n     * line strings.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.minPoints_ = options.minPoints\r\n      ? options.minPoints\r\n      : this.mode_ === Mode.POLYGON\r\n      ? 3\r\n      : 2;\r\n\r\n    /**\r\n     * The number of points that can be drawn before a polygon ring or line string\r\n     * is finished. The default is no restriction.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.maxPoints_ =\r\n      this.mode_ === Mode.CIRCLE\r\n        ? 2\r\n        : options.maxPoints\r\n        ? options.maxPoints\r\n        : Infinity;\r\n\r\n    /**\r\n     * A function to decide if a potential finish coordinate is permissible\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.finishCondition_ = options.finishCondition\r\n      ? options.finishCondition\r\n      : TRUE;\r\n\r\n    let geometryFunction = options.geometryFunction;\r\n    if (!geometryFunction) {\r\n      const mode = this.mode_;\r\n      if (mode === Mode.CIRCLE) {\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\r\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function (coordinates, geometry, projection) {\r\n          const circle = geometry\r\n            ? /** @type {Circle} */ (geometry)\r\n            : new Circle([NaN, NaN]);\r\n          const center = fromUserCoordinate(coordinates[0], projection);\r\n          const squaredLength = squaredCoordinateDistance(\r\n            center,\r\n            fromUserCoordinate(coordinates[coordinates.length - 1], projection)\r\n          );\r\n          circle.setCenterAndRadius(center, Math.sqrt(squaredLength));\r\n          const userProjection = getUserProjection();\r\n          if (userProjection) {\r\n            circle.transform(projection, userProjection);\r\n          }\r\n          return circle;\r\n        };\r\n      } else {\r\n        let Constructor;\r\n        if (mode === Mode.POINT) {\r\n          Constructor = Point;\r\n        } else if (mode === Mode.LINE_STRING) {\r\n          Constructor = LineString;\r\n        } else if (mode === Mode.POLYGON) {\r\n          Constructor = Polygon;\r\n        }\r\n        /**\r\n         * @param {!LineCoordType} coordinates The coordinates.\r\n         * @param {import(\"../geom/SimpleGeometry.js\").default|undefined} geometry Optional geometry.\r\n         * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\r\n         */\r\n        geometryFunction = function (coordinates, geometry, projection) {\r\n          if (geometry) {\r\n            if (mode === Mode.POLYGON) {\r\n              if (coordinates[0].length) {\r\n                // Add a closing coordinate to match the first\r\n                geometry.setCoordinates([\r\n                  coordinates[0].concat([coordinates[0][0]]),\r\n                ]);\r\n              } else {\r\n                geometry.setCoordinates([]);\r\n              }\r\n            } else {\r\n              geometry.setCoordinates(coordinates);\r\n            }\r\n          } else {\r\n            geometry = new Constructor(coordinates);\r\n          }\r\n          return geometry;\r\n        };\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @type {GeometryFunction}\r\n     * @private\r\n     */\r\n    this.geometryFunction_ = geometryFunction;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.dragVertexDelay_ =\r\n      options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\r\n\r\n    /**\r\n     * Finish coordinate for the feature (first point for polygons, last point for\r\n     * linestrings).\r\n     * @type {import(\"../coordinate.js\").Coordinate}\r\n     * @private\r\n     */\r\n    this.finishCoordinate_ = null;\r\n\r\n    /**\r\n     * Sketch feature.\r\n     * @type {Feature<import('../geom/SimpleGeometry.js').default>}\r\n     * @private\r\n     */\r\n    this.sketchFeature_ = null;\r\n\r\n    /**\r\n     * Sketch point.\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.sketchPoint_ = null;\r\n\r\n    /**\r\n     * Sketch coordinates. Used when drawing a line or polygon.\r\n     * @type {SketchCoordType}\r\n     * @private\r\n     */\r\n    this.sketchCoords_ = null;\r\n\r\n    /**\r\n     * Sketch line. Used when drawing polygon.\r\n     * @type {Feature<LineString>}\r\n     * @private\r\n     */\r\n    this.sketchLine_ = null;\r\n\r\n    /**\r\n     * Sketch line coordinates. Used when drawing a polygon or circle.\r\n     * @type {LineCoordType}\r\n     * @private\r\n     */\r\n    this.sketchLineCoords_ = null;\r\n\r\n    /**\r\n     * Squared tolerance for handling up events.  If the squared distance\r\n     * between a down and up event is greater than this tolerance, up events\r\n     * will not be handled.\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.squaredClickTolerance_ = options.clickTolerance\r\n      ? options.clickTolerance * options.clickTolerance\r\n      : 36;\r\n\r\n    /**\r\n     * Draw overlay where our sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: options.wrapX ? options.wrapX : false,\r\n      }),\r\n      style: options.style ? options.style : getDefaultStyleFunction(),\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    /**\r\n     * Name of the geometry attribute for newly created features.\r\n     * @type {string|undefined}\r\n     * @private\r\n     */\r\n    this.geometryName_ = options.geometryName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.freehandCondition_;\r\n    if (options.freehand) {\r\n      this.freehandCondition_ = always;\r\n    } else {\r\n      this.freehandCondition_ = options.freehandCondition\r\n        ? options.freehandCondition\r\n        : shiftKeyOnly;\r\n    }\r\n\r\n    this.addChangeListener(InteractionProperty.ACTIVE, this.updateState_);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    super.setMap(map);\r\n    this.updateState_();\r\n  }\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders sketch features to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  getOverlay() {\r\n    return this.overlay_;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may actually draw or finish the drawing.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @api\r\n   */\r\n  handleEvent(event) {\r\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\r\n      // Avoid context menu for long taps when drawing on mobile\r\n      event.originalEvent.preventDefault();\r\n    }\r\n    this.freehand_ =\r\n      this.mode_ !== Mode.POINT && this.freehandCondition_(event);\r\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\r\n    let pass = true;\r\n    if (\r\n      !this.freehand_ &&\r\n      this.lastDragTime_ &&\r\n      event.type === MapBrowserEventType.POINTERDRAG\r\n    ) {\r\n      const now = Date.now();\r\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\r\n        this.downPx_ = event.pixel;\r\n        this.shouldHandle_ = !this.freehand_;\r\n        move = true;\r\n      } else {\r\n        this.lastDragTime_ = undefined;\r\n      }\r\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\r\n        clearTimeout(this.downTimeout_);\r\n        this.downTimeout_ = undefined;\r\n      }\r\n    }\r\n    if (\r\n      this.freehand_ &&\r\n      event.type === MapBrowserEventType.POINTERDRAG &&\r\n      this.sketchFeature_ !== null\r\n    ) {\r\n      this.addToDrawing_(event.coordinate);\r\n      pass = false;\r\n    } else if (\r\n      this.freehand_ &&\r\n      event.type === MapBrowserEventType.POINTERDOWN\r\n    ) {\r\n      pass = false;\r\n    } else if (move && this.getPointerCount() < 2) {\r\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\r\n      if (pass && this.freehand_) {\r\n        this.handlePointerMove_(event);\r\n        if (this.shouldHandle_) {\r\n          // Avoid page scrolling when freehand drawing on mobile\r\n          event.originalEvent.preventDefault();\r\n        }\r\n      } else if (\r\n        event.originalEvent.pointerType === 'mouse' ||\r\n        (event.type === MapBrowserEventType.POINTERDRAG &&\r\n          this.downTimeout_ === undefined)\r\n      ) {\r\n        this.handlePointerMove_(event);\r\n      }\r\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\r\n      pass = false;\r\n    }\r\n\r\n    return super.handleEvent(event) && pass;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(event) {\r\n    this.shouldHandle_ = !this.freehand_;\r\n\r\n    if (this.freehand_) {\r\n      this.downPx_ = event.pixel;\r\n      if (!this.finishCoordinate_) {\r\n        this.startDrawing_(event.coordinate);\r\n      }\r\n      return true;\r\n    } else if (this.condition_(event)) {\r\n      this.lastDragTime_ = Date.now();\r\n      this.downTimeout_ = setTimeout(\r\n        function () {\r\n          this.handlePointerMove_(\r\n            new MapBrowserEvent(\r\n              MapBrowserEventType.POINTERMOVE,\r\n              event.map,\r\n              event.originalEvent,\r\n              false,\r\n              event.frameState\r\n            )\r\n          );\r\n        }.bind(this),\r\n        this.dragVertexDelay_\r\n      );\r\n      this.downPx_ = event.pixel;\r\n      return true;\r\n    } else {\r\n      this.lastDragTime_ = undefined;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(event) {\r\n    let pass = true;\r\n\r\n    if (this.getPointerCount() === 0) {\r\n      if (this.downTimeout_) {\r\n        clearTimeout(this.downTimeout_);\r\n        this.downTimeout_ = undefined;\r\n      }\r\n\r\n      this.handlePointerMove_(event);\r\n\r\n      if (this.shouldHandle_) {\r\n        const startingToDraw = !this.finishCoordinate_;\r\n        if (startingToDraw) {\r\n          this.startDrawing_(event.coordinate);\r\n        }\r\n        if (!startingToDraw && this.freehand_) {\r\n          this.finishDrawing();\r\n        } else if (\r\n          !this.freehand_ &&\r\n          (!startingToDraw || this.mode_ === Mode.POINT)\r\n        ) {\r\n          if (this.atFinish_(event.pixel)) {\r\n            if (this.finishCondition_(event)) {\r\n              this.finishDrawing();\r\n            }\r\n          } else {\r\n            this.addToDrawing_(event.coordinate);\r\n          }\r\n        }\r\n        pass = false;\r\n      } else if (this.freehand_) {\r\n        this.abortDrawing();\r\n      }\r\n    }\r\n\r\n    if (!pass && this.stopClick_) {\r\n      event.preventDefault();\r\n    }\r\n    return pass;\r\n  }\r\n\r\n  /**\r\n   * Handle move events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(event) {\r\n    this.pointerType_ = event.originalEvent.pointerType;\r\n    if (\r\n      this.downPx_ &&\r\n      ((!this.freehand_ && this.shouldHandle_) ||\r\n        (this.freehand_ && !this.shouldHandle_))\r\n    ) {\r\n      const downPx = this.downPx_;\r\n      const clickPx = event.pixel;\r\n      const dx = downPx[0] - clickPx[0];\r\n      const dy = downPx[1] - clickPx[1];\r\n      const squaredDistance = dx * dx + dy * dy;\r\n      this.shouldHandle_ = this.freehand_\r\n        ? squaredDistance > this.squaredClickTolerance_\r\n        : squaredDistance <= this.squaredClickTolerance_;\r\n      if (!this.shouldHandle_) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (this.finishCoordinate_) {\r\n      this.modifyDrawing_(event.coordinate);\r\n    } else {\r\n      this.createOrUpdateSketchPoint_(event.coordinate.slice());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Determine if an event is within the snapping tolerance of the start coord.\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\r\n   * @return {boolean} The event is within the snapping tolerance of the start.\r\n   * @private\r\n   */\r\n  atFinish_(pixel) {\r\n    let at = false;\r\n    if (this.sketchFeature_) {\r\n      let potentiallyDone = false;\r\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\r\n      const mode = this.mode_;\r\n      if (mode === Mode.POINT) {\r\n        at = true;\r\n      } else if (mode === Mode.CIRCLE) {\r\n        at = this.sketchCoords_.length === 2;\r\n      } else if (mode === Mode.LINE_STRING) {\r\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\r\n      } else if (mode === Mode.POLYGON) {\r\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\r\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\r\n        potentiallyFinishCoordinates = [\r\n          sketchCoords[0][0],\r\n          sketchCoords[0][sketchCoords[0].length - 2],\r\n        ];\r\n      }\r\n      if (potentiallyDone) {\r\n        const map = this.getMap();\r\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\r\n          const finishCoordinate = potentiallyFinishCoordinates[i];\r\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\r\n          const dx = pixel[0] - finishPixel[0];\r\n          const dy = pixel[1] - finishPixel[1];\r\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\r\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\r\n          if (at) {\r\n            this.finishCoordinate_ = finishCoordinate;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return at;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate\").Coordinate} coordinates Coordinate.\r\n   * @private\r\n   */\r\n  createOrUpdateSketchPoint_(coordinates) {\r\n    if (!this.sketchPoint_) {\r\n      this.sketchPoint_ = new Feature(new Point(coordinates));\r\n      this.updateSketchFeatures_();\r\n    } else {\r\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\r\n      sketchPointGeom.setCoordinates(coordinates);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\r\n   * @private\r\n   */\r\n  createOrUpdateCustomSketchLine_(geometry) {\r\n    if (!this.sketchLine_) {\r\n      this.sketchLine_ = new Feature();\r\n    }\r\n    const ring = geometry.getLinearRing(0);\r\n    let sketchLineGeom = this.sketchLine_.getGeometry();\r\n    if (!sketchLineGeom) {\r\n      sketchLineGeom = new LineString(\r\n        ring.getFlatCoordinates(),\r\n        ring.getLayout()\r\n      );\r\n      this.sketchLine_.setGeometry(sketchLineGeom);\r\n    } else {\r\n      sketchLineGeom.setFlatCoordinates(\r\n        ring.getLayout(),\r\n        ring.getFlatCoordinates()\r\n      );\r\n      sketchLineGeom.changed();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the drawing.\r\n   * @param {import(\"../coordinate.js\").Coordinate} start Start coordinate.\r\n   * @private\r\n   */\r\n  startDrawing_(start) {\r\n    const projection = this.getMap().getView().getProjection();\r\n    this.finishCoordinate_ = start;\r\n    if (this.mode_ === Mode.POINT) {\r\n      this.sketchCoords_ = start.slice();\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\r\n      this.sketchLineCoords_ = this.sketchCoords_[0];\r\n    } else {\r\n      this.sketchCoords_ = [start.slice(), start.slice()];\r\n    }\r\n    if (this.sketchLineCoords_) {\r\n      this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\r\n    }\r\n    const geometry = this.geometryFunction_(\r\n      this.sketchCoords_,\r\n      undefined,\r\n      projection\r\n    );\r\n    this.sketchFeature_ = new Feature();\r\n    if (this.geometryName_) {\r\n      this.sketchFeature_.setGeometryName(this.geometryName_);\r\n    }\r\n    this.sketchFeature_.setGeometry(geometry);\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(\r\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Modify the drawing.\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\r\n   * @private\r\n   */\r\n  modifyDrawing_(coordinate) {\r\n    const map = this.getMap();\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    const projection = map.getView().getProjection();\r\n    let coordinates, last;\r\n    if (this.mode_ === Mode.POINT) {\r\n      last = this.sketchCoords_;\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      last = coordinates[coordinates.length - 1];\r\n      if (this.atFinish_(map.getPixelFromCoordinate(coordinate))) {\r\n        // snap to finish\r\n        coordinate = this.finishCoordinate_.slice();\r\n      }\r\n    } else {\r\n      coordinates = this.sketchCoords_;\r\n      last = coordinates[coordinates.length - 1];\r\n    }\r\n    last[0] = coordinate[0];\r\n    last[1] = coordinate[1];\r\n    this.geometryFunction_(\r\n      /** @type {!LineCoordType} */ (this.sketchCoords_),\r\n      geometry,\r\n      projection\r\n    );\r\n    if (this.sketchPoint_) {\r\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\r\n      sketchPointGeom.setCoordinates(coordinate);\r\n    }\r\n    if (\r\n      geometry.getType() === GeometryType.POLYGON &&\r\n      this.mode_ !== Mode.POLYGON\r\n    ) {\r\n      this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\r\n    } else if (this.sketchLineCoords_) {\r\n      const sketchLineGeom = this.sketchLine_.getGeometry();\r\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\r\n    }\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Add a new coordinate to the drawing.\r\n   * @param {!PointCoordType} coordinate Coordinate\r\n   * @private\r\n   */\r\n  addToDrawing_(coordinate) {\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    const projection = this.getMap().getView().getProjection();\r\n    let done;\r\n    let coordinates;\r\n    const mode = this.mode_;\r\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\r\n      this.finishCoordinate_ = coordinate.slice();\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      this.geometryFunction_(coordinates, geometry, projection);\r\n    } else if (mode === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      if (coordinates.length >= this.maxPoints_) {\r\n        if (this.freehand_) {\r\n          coordinates.pop();\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      coordinates.push(coordinate.slice());\r\n      if (done) {\r\n        this.finishCoordinate_ = coordinates[0];\r\n      }\r\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\r\n    }\r\n    this.createOrUpdateSketchPoint_(coordinate.slice());\r\n    this.updateSketchFeatures_();\r\n    if (done) {\r\n      this.finishDrawing();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove last point of the feature currently being drawn. Does not do anything when\r\n   * drawing POINT or MULTI_POINT geometries.\r\n   * @api\r\n   */\r\n  removeLastPoint() {\r\n    if (!this.sketchFeature_) {\r\n      return;\r\n    }\r\n    const geometry = this.sketchFeature_.getGeometry();\r\n    const projection = this.getMap().getView().getProjection();\r\n    let coordinates;\r\n    const mode = this.mode_;\r\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\r\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n      coordinates.splice(-2, 1);\r\n      if (coordinates.length >= 2) {\r\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\r\n        const finishCoordinate = this.finishCoordinate_.slice();\r\n        coordinates[coordinates.length - 1] = finishCoordinate;\r\n        this.createOrUpdateSketchPoint_(finishCoordinate);\r\n      }\r\n      this.geometryFunction_(coordinates, geometry, projection);\r\n      if (geometry.getType() === GeometryType.POLYGON && this.sketchLine_) {\r\n        this.createOrUpdateCustomSketchLine_(/** @type {Polygon} */ (geometry));\r\n      }\r\n    } else if (mode === Mode.POLYGON) {\r\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\r\n      coordinates.splice(-2, 1);\r\n      const sketchLineGeom = this.sketchLine_.getGeometry();\r\n      if (coordinates.length >= 2) {\r\n        const finishCoordinate = coordinates[coordinates.length - 2].slice();\r\n        coordinates[coordinates.length - 1] = finishCoordinate;\r\n        this.createOrUpdateSketchPoint_(finishCoordinate);\r\n      }\r\n      sketchLineGeom.setCoordinates(coordinates);\r\n      this.geometryFunction_(this.sketchCoords_, geometry, projection);\r\n    }\r\n\r\n    if (coordinates.length === 1) {\r\n      this.abortDrawing();\r\n    }\r\n\r\n    this.updateSketchFeatures_();\r\n  }\r\n\r\n  /**\r\n   * Stop drawing and add the sketch feature to the target layer.\r\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\r\n   * dispatched before inserting the feature.\r\n   * @api\r\n   */\r\n  finishDrawing() {\r\n    const sketchFeature = this.abortDrawing_();\r\n    if (!sketchFeature) {\r\n      return;\r\n    }\r\n    let coordinates = this.sketchCoords_;\r\n    const geometry = sketchFeature.getGeometry();\r\n    const projection = this.getMap().getView().getProjection();\r\n    if (this.mode_ === Mode.LINE_STRING) {\r\n      // remove the redundant last point\r\n      coordinates.pop();\r\n      this.geometryFunction_(coordinates, geometry, projection);\r\n    } else if (this.mode_ === Mode.POLYGON) {\r\n      // remove the redundant last point in ring\r\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\r\n      this.geometryFunction_(coordinates, geometry, projection);\r\n      coordinates = geometry.getCoordinates();\r\n    }\r\n\r\n    // cast multi-part geometries\r\n    if (this.type_ === GeometryType.MULTI_POINT) {\r\n      sketchFeature.setGeometry(\r\n        new MultiPoint([/** @type {PointCoordType} */ (coordinates)])\r\n      );\r\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\r\n      sketchFeature.setGeometry(\r\n        new MultiLineString([/** @type {LineCoordType} */ (coordinates)])\r\n      );\r\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\r\n      sketchFeature.setGeometry(\r\n        new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)])\r\n      );\r\n    }\r\n\r\n    // First dispatch event to allow full set up of feature\r\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\r\n\r\n    // Then insert feature\r\n    if (this.features_) {\r\n      this.features_.push(sketchFeature);\r\n    }\r\n    if (this.source_) {\r\n      this.source_.addFeature(sketchFeature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop drawing without adding the sketch feature to the target layer.\r\n   * @return {Feature<import(\"../geom/SimpleGeometry.js\").default>|null} The sketch feature (or null if none).\r\n   * @private\r\n   */\r\n  abortDrawing_() {\r\n    this.finishCoordinate_ = null;\r\n    const sketchFeature = this.sketchFeature_;\r\n    this.sketchFeature_ = null;\r\n    this.sketchPoint_ = null;\r\n    this.sketchLine_ = null;\r\n    this.overlay_.getSource().clear(true);\r\n    return sketchFeature;\r\n  }\r\n\r\n  /**\r\n   * Stop drawing without adding the sketch feature to the target layer.\r\n   * @api\r\n   */\r\n  abortDrawing() {\r\n    const sketchFeature = this.abortDrawing_();\r\n    if (sketchFeature) {\r\n      this.dispatchEvent(new DrawEvent(DrawEventType.DRAWABORT, sketchFeature));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append coordinates to the end of the geometry that is currently being drawn.\r\n   * This can be used when drawing LineStrings or Polygons. Coordinates will\r\n   * either be appended to the current LineString or the outer ring of the current\r\n   * Polygon. If no geometry is being drawn, a new one will be created.\r\n   * @param {!LineCoordType} coordinates Linear coordinates to be appended to\r\n   * the coordinate array.\r\n   * @api\r\n   */\r\n  appendCoordinates(coordinates) {\r\n    const mode = this.mode_;\r\n    const newDrawing = !this.sketchFeature_;\r\n    if (newDrawing) {\r\n      this.startDrawing_(coordinates[0]);\r\n    }\r\n    /** @type {LineCoordType} */\r\n    let sketchCoords;\r\n    if (mode === Mode.LINE_STRING || mode === Mode.CIRCLE) {\r\n      sketchCoords = /** @type {LineCoordType} */ (this.sketchCoords_);\r\n    } else if (mode === Mode.POLYGON) {\r\n      sketchCoords =\r\n        this.sketchCoords_ && this.sketchCoords_.length\r\n          ? /** @type {PolyCoordType} */ (this.sketchCoords_)[0]\r\n          : [];\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (newDrawing) {\r\n      sketchCoords.shift();\r\n    }\r\n\r\n    // Remove last coordinate from sketch drawing (this coordinate follows cursor position)\r\n    sketchCoords.pop();\r\n\r\n    // Append coordinate list\r\n    for (let i = 0; i < coordinates.length; i++) {\r\n      this.addToDrawing_(coordinates[i]);\r\n    }\r\n\r\n    const ending = coordinates[coordinates.length - 1];\r\n    // Duplicate last coordinate for sketch drawing (cursor position)\r\n    this.addToDrawing_(ending);\r\n    this.modifyDrawing_(ending);\r\n  }\r\n\r\n  /**\r\n   * Initiate draw mode by starting from an existing geometry which will\r\n   * receive new additional points. This only works on features with\r\n   * `LineString` geometries, where the interaction will extend lines by adding\r\n   * points to the end of the coordinates array.\r\n   * This will change the original feature, instead of drawing a copy.\r\n   *\r\n   * The function will dispatch a `drawstart` event.\r\n   *\r\n   * @param {!Feature<LineString>} feature Feature to be extended.\r\n   * @api\r\n   */\r\n  extend(feature) {\r\n    const geometry = feature.getGeometry();\r\n    const lineString = geometry;\r\n    this.sketchFeature_ = feature;\r\n    this.sketchCoords_ = lineString.getCoordinates();\r\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\r\n    this.finishCoordinate_ = last.slice();\r\n    this.sketchCoords_.push(last.slice());\r\n    this.sketchPoint_ = new Feature(new Point(last));\r\n    this.updateSketchFeatures_();\r\n    this.dispatchEvent(\r\n      new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Redraw the sketch features.\r\n   * @private\r\n   */\r\n  updateSketchFeatures_() {\r\n    const sketchFeatures = [];\r\n    if (this.sketchFeature_) {\r\n      sketchFeatures.push(this.sketchFeature_);\r\n    }\r\n    if (this.sketchLine_) {\r\n      sketchFeatures.push(this.sketchLine_);\r\n    }\r\n    if (this.sketchPoint_) {\r\n      sketchFeatures.push(this.sketchPoint_);\r\n    }\r\n    const overlaySource = this.overlay_.getSource();\r\n    overlaySource.clear(true);\r\n    overlaySource.addFeatures(sketchFeatures);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  updateState_() {\r\n    const map = this.getMap();\r\n    const active = this.getActive();\r\n    if (!map || !active) {\r\n      this.abortDrawing();\r\n    }\r\n    this.overlay_.setMap(active ? map : null);\r\n  }\r\n}\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\n/**\r\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\r\n * polygon with a user specified number of sides and start angle instead of a\r\n * {@link import(\"../geom/Circle.js\").Circle} geometry.\r\n * @param {number} [opt_sides] Number of sides of the regular polygon.\r\n *     Default is 32.\r\n * @param {number} [opt_angle] Angle of the first point in counter-clockwise\r\n *     radians. 0 means East.\r\n *     Default is the angle defined by the heading from the center of the\r\n *     regular polygon to the current pointer position.\r\n * @return {GeometryFunction} Function that draws a polygon.\r\n * @api\r\n */\r\nexport function createRegularPolygon(opt_sides, opt_angle) {\r\n  return function (coordinates, opt_geometry, projection) {\r\n    const center = fromUserCoordinate(\r\n      /** @type {LineCoordType} */ (coordinates)[0],\r\n      projection\r\n    );\r\n    const end = fromUserCoordinate(\r\n      /** @type {LineCoordType} */ (coordinates)[coordinates.length - 1],\r\n      projection\r\n    );\r\n    const radius = Math.sqrt(squaredCoordinateDistance(center, end));\r\n    const geometry = opt_geometry\r\n      ? /** @type {Polygon} */ (opt_geometry)\r\n      : fromCircle(new Circle(center), opt_sides);\r\n\r\n    let angle = opt_angle;\r\n    if (!opt_angle && opt_angle !== 0) {\r\n      const x = end[0] - center[0];\r\n      const y = end[1] - center[1];\r\n      angle = Math.atan2(y, x);\r\n    }\r\n    makeRegular(geometry, center, radius, angle);\r\n\r\n    const userProjection = getUserProjection();\r\n    if (userProjection) {\r\n      geometry.transform(projection, userProjection);\r\n    }\r\n    return geometry;\r\n  };\r\n}\r\n\r\n/**\r\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\r\n * with the coordinate system axes).  Use this with the draw interaction and\r\n * `type: 'Circle'` to return a box instead of a circle geometry.\r\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\r\n * @api\r\n */\r\nexport function createBox() {\r\n  return function (coordinates, opt_geometry, projection) {\r\n    const extent = boundingExtent(\r\n      /** @type {LineCoordType} */ ([\r\n        coordinates[0],\r\n        coordinates[coordinates.length - 1],\r\n      ]).map(function (coordinate) {\r\n        return fromUserCoordinate(coordinate, projection);\r\n      })\r\n    );\r\n    const boxCoordinates = [\r\n      [\r\n        getBottomLeft(extent),\r\n        getBottomRight(extent),\r\n        getTopRight(extent),\r\n        getTopLeft(extent),\r\n        getBottomLeft(extent),\r\n      ],\r\n    ];\r\n    let geometry = opt_geometry;\r\n    if (geometry) {\r\n      geometry.setCoordinates(boxCoordinates);\r\n    } else {\r\n      geometry = new Polygon(boxCoordinates);\r\n    }\r\n    const userProjection = getUserProjection();\r\n    if (userProjection) {\r\n      geometry.transform(projection, userProjection);\r\n    }\r\n    return geometry;\r\n  };\r\n}\r\n\r\n/**\r\n * Get the drawing mode.  The mode for multi-part geometries is the same as for\r\n * their single-part cousins.\r\n * @param {import(\"../geom/GeometryType.js\").default} type Geometry type.\r\n * @return {Mode} Drawing mode.\r\n */\r\nfunction getMode(type) {\r\n  switch (type) {\r\n    case GeometryType.POINT:\r\n    case GeometryType.MULTI_POINT:\r\n      return Mode.POINT;\r\n    case GeometryType.LINE_STRING:\r\n    case GeometryType.MULTI_LINE_STRING:\r\n      return Mode.LINE_STRING;\r\n    case GeometryType.POLYGON:\r\n    case GeometryType.MULTI_POLYGON:\r\n      return Mode.POLYGON;\r\n    case GeometryType.CIRCLE:\r\n      return Mode.CIRCLE;\r\n    default:\r\n      throw new Error('Invalid type: ' + type);\r\n  }\r\n}\r\n\r\nexport default Draw;\r\n", "/**\r\n * @module ol/interaction/Extent\r\n */\r\nimport Event from '../events/Event.js';\r\nimport Feature from '../Feature.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {always} from '../events/condition.js';\r\nimport {boundingExtent, getArea} from '../extent.js';\r\nimport {\r\n  closestOnSegment,\r\n  distance as coordinateDistance,\r\n  squaredDistance as squaredCoordinateDistance,\r\n  squaredDistanceToSegment,\r\n} from '../coordinate.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\r\nimport {toUserExtent} from '../proj.js';\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * Default is {@link module:ol/events/condition.always}.\r\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\r\n * initial extent.\r\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\r\n * Style for the drawn extent box. Defaults to the `Polygon` editing style\r\n * documented in {@link module:ol/style/Style~Style}\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\r\n * Style for the cursor used to draw the extent. Defaults to the `Point` editing style\r\n * documented in {@link module:ol/style/Style~Style}\r\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\r\n * in the X direction? Only affects visuals, not functionality.\r\n */\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ExtentEventType = {\r\n  /**\r\n   * Triggered after the extent is changed\r\n   * @event ExtentEvent#extentchanged\r\n   * @api\r\n   */\r\n  EXTENTCHANGED: 'extentchanged',\r\n};\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\r\n * instances of this type.\r\n */\r\nexport class ExtentEvent extends Event {\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent the new extent\r\n   */\r\n  constructor(extent) {\r\n    super(ExtentEventType.EXTENTCHANGED);\r\n\r\n    /**\r\n     * The current extent.\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @api\r\n     */\r\n    this.extent = extent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'extentchanged', ExtentEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'extentchanged', Return>} ExtentOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Allows the user to draw a vector box by clicking and dragging on the map.\r\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\r\n * This interaction is only supported for mouse devices.\r\n *\r\n * @fires ExtentEvent\r\n * @api\r\n */\r\nclass Extent extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options || {};\r\n\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ExtentOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /**\r\n     * Condition\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.condition_ = options.condition ? options.condition : always;\r\n\r\n    /**\r\n     * Extent of the drawn box\r\n     * @type {import(\"../extent.js\").Extent}\r\n     * @private\r\n     */\r\n    this.extent_ = null;\r\n\r\n    /**\r\n     * Handler for pointer move events\r\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\r\n     * @private\r\n     */\r\n    this.pointerHandler_ = null;\r\n\r\n    /**\r\n     * Pixel threshold to snap to extent\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ =\r\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Is the pointer snapped to an extent vertex\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Feature for displaying the visible extent\r\n     * @type {Feature}\r\n     * @private\r\n     */\r\n    this.extentFeature_ = null;\r\n\r\n    /**\r\n     * Feature for displaying the visible pointer\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    if (!opt_options) {\r\n      opt_options = {};\r\n    }\r\n\r\n    /**\r\n     * Layer for the extentFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.extentOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX,\r\n      }),\r\n      style: opt_options.boxStyle\r\n        ? opt_options.boxStyle\r\n        : getDefaultExtentStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    /**\r\n     * Layer for the vertexFeature\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.vertexOverlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!opt_options.wrapX,\r\n      }),\r\n      style: opt_options.pointerStyle\r\n        ? opt_options.pointerStyle\r\n        : getDefaultPointerStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    if (opt_options.extent) {\r\n      this.setExtent(opt_options.extent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\r\n   * @param {import(\"../PluggableMap.js\").default} map map\r\n   * @return {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\r\n   * @private\r\n   */\r\n  snapToVertex_(pixel, map) {\r\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\r\n    const sortByDistance = function (a, b) {\r\n      return (\r\n        squaredDistanceToSegment(pixelCoordinate, a) -\r\n        squaredDistanceToSegment(pixelCoordinate, b)\r\n      );\r\n    };\r\n    const extent = this.getExtentInternal();\r\n    if (extent) {\r\n      //convert extents to line segments and find the segment closest to pixelCoordinate\r\n      const segments = getSegments(extent);\r\n      segments.sort(sortByDistance);\r\n      const closestSegment = segments[0];\r\n\r\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\r\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\r\n\r\n      //if the distance is within tolerance, snap to the segment\r\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n        //test if we should further snap to a vertex\r\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\r\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\r\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n        if (this.snappedToVertex_) {\r\n          vertex =\r\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n        }\r\n        return vertex;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\r\n   * @private\r\n   */\r\n  handlePointerMove_(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n    if (!vertex) {\r\n      vertex = map.getCoordinateFromPixelInternal(pixel);\r\n    }\r\n    this.createOrUpdatePointerFeature_(vertex);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../extent.js\").Extent} extent extent\r\n   * @return {Feature} extent as featrue\r\n   * @private\r\n   */\r\n  createOrUpdateExtentFeature_(extent) {\r\n    let extentFeature = this.extentFeature_;\r\n\r\n    if (!extentFeature) {\r\n      if (!extent) {\r\n        extentFeature = new Feature({});\r\n      } else {\r\n        extentFeature = new Feature(polygonFromExtent(extent));\r\n      }\r\n      this.extentFeature_ = extentFeature;\r\n      this.extentOverlay_.getSource().addFeature(extentFeature);\r\n    } else {\r\n      if (!extent) {\r\n        extentFeature.setGeometry(undefined);\r\n      } else {\r\n        extentFeature.setGeometry(polygonFromExtent(extent));\r\n      }\r\n    }\r\n    return extentFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\r\n   * @return {Feature} vertex as feature\r\n   * @private\r\n   */\r\n  createOrUpdatePointerFeature_(vertex) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(vertex));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = vertexFeature.getGeometry();\r\n      geometry.setCoordinates(vertex);\r\n    }\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    //display pointer (if not dragging)\r\n    if (\r\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n      !this.handlingDownUpSequence\r\n    ) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    //call pointer to determine up/down/drag\r\n    super.handleEvent(mapBrowserEvent);\r\n    //return false to stop propagation\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(mapBrowserEvent) {\r\n    const pixel = mapBrowserEvent.pixel;\r\n    const map = mapBrowserEvent.map;\r\n\r\n    const extent = this.getExtentInternal();\r\n    let vertex = this.snapToVertex_(pixel, map);\r\n\r\n    //find the extent corner opposite the passed corner\r\n    const getOpposingPoint = function (point) {\r\n      let x_ = null;\r\n      let y_ = null;\r\n      if (point[0] == extent[0]) {\r\n        x_ = extent[2];\r\n      } else if (point[0] == extent[2]) {\r\n        x_ = extent[0];\r\n      }\r\n      if (point[1] == extent[1]) {\r\n        y_ = extent[3];\r\n      } else if (point[1] == extent[3]) {\r\n        y_ = extent[1];\r\n      }\r\n      if (x_ !== null && y_ !== null) {\r\n        return [x_, y_];\r\n      }\r\n      return null;\r\n    };\r\n    if (vertex && extent) {\r\n      const x =\r\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\r\n      const y =\r\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\r\n\r\n      //snap to point\r\n      if (x !== null && y !== null) {\r\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\r\n        //snap to edge\r\n      } else if (x !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([x, extent[1]]),\r\n          getOpposingPoint([x, extent[3]])\r\n        );\r\n      } else if (y !== null) {\r\n        this.pointerHandler_ = getEdgeHandler(\r\n          getOpposingPoint([extent[0], y]),\r\n          getOpposingPoint([extent[2], y])\r\n        );\r\n      }\r\n      //no snap - new bbox\r\n    } else {\r\n      vertex = map.getCoordinateFromPixelInternal(pixel);\r\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\r\n      this.pointerHandler_ = getPointHandler(vertex);\r\n    }\r\n    return true; //event handled; start downup sequence\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   */\r\n  handleDragEvent(mapBrowserEvent) {\r\n    if (this.pointerHandler_) {\r\n      const pixelCoordinate = mapBrowserEvent.coordinate;\r\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\r\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(mapBrowserEvent) {\r\n    this.pointerHandler_ = null;\r\n    //If bbox is zero area, set to null;\r\n    const extent = this.getExtentInternal();\r\n    if (!extent || getArea(extent) === 0) {\r\n      this.setExtent(null);\r\n    }\r\n    return false; //Stop handling downup sequence\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.extentOverlay_.setMap(map);\r\n    this.vertexOverlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection (or user projection if set)\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  getExtent() {\r\n    return toUserExtent(\r\n      this.getExtentInternal(),\r\n      this.getMap().getView().getProjection()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the current drawn extent in the view projection\r\n   *\r\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\r\n   * @api\r\n   */\r\n  getExtentInternal() {\r\n    return this.extent_;\r\n  }\r\n\r\n  /**\r\n   * Manually sets the drawn extent, using the view projection.\r\n   *\r\n   * @param {import(\"../extent.js\").Extent} extent Extent\r\n   * @api\r\n   */\r\n  setExtent(extent) {\r\n    //Null extent means no bbox\r\n    this.extent_ = extent ? extent : null;\r\n    this.createOrUpdateExtentFeature_(extent);\r\n    this.dispatchEvent(new ExtentEvent(this.extent_));\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the default style for the drawn bbox\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\r\n */\r\nfunction getDefaultExtentStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return style[GeometryType.POLYGON];\r\n  };\r\n}\r\n\r\n/**\r\n * Returns the default style for the pointer\r\n *\r\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\r\n */\r\nfunction getDefaultPointerStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\r\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\r\n */\r\nfunction getPointHandler(fixedPoint) {\r\n  return function (point) {\r\n    return boundingExtent([fixedPoint, point]);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\r\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\r\n * @return {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\r\n */\r\nfunction getEdgeHandler(fixedP1, fixedP2) {\r\n  if (fixedP1[0] == fixedP2[0]) {\r\n    return function (point) {\r\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\r\n    };\r\n  } else if (fixedP1[1] == fixedP2[1]) {\r\n    return function (point) {\r\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\r\n    };\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @param {import(\"../extent.js\").Extent} extent extent\r\n * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\r\n */\r\nfunction getSegments(extent) {\r\n  return [\r\n    [\r\n      [extent[0], extent[1]],\r\n      [extent[0], extent[3]],\r\n    ],\r\n    [\r\n      [extent[0], extent[3]],\r\n      [extent[2], extent[3]],\r\n    ],\r\n    [\r\n      [extent[2], extent[3]],\r\n      [extent[2], extent[1]],\r\n    ],\r\n    [\r\n      [extent[2], extent[1]],\r\n      [extent[0], extent[1]],\r\n    ],\r\n  ];\r\n}\r\n\r\nexport default Extent;\r\n", "/**\r\n * @module ol/interaction/Modify\r\n */\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport EventType from '../events/EventType.js';\r\nimport Feature from '../Feature.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport MapBrowserEventType from '../MapBrowserEventType.js';\r\nimport Point from '../geom/Point.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport VectorSource from '../source/Vector.js';\r\nimport {\r\n  altKeyOnly,\r\n  always,\r\n  primaryAction,\r\n  singleClick,\r\n} from '../events/condition.js';\r\nimport {\r\n  boundingExtent,\r\n  buffer as bufferExtent,\r\n  createOrUpdateFromCoordinate as createExtent,\r\n} from '../extent.js';\r\nimport {\r\n  closestOnSegment,\r\n  distance as coordinateDistance,\r\n  equals as coordinatesEqual,\r\n  squaredDistance as squaredCoordinateDistance,\r\n  squaredDistanceToSegment,\r\n} from '../coordinate.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {equals, includes} from '../array.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport {\r\n  fromUserCoordinate,\r\n  fromUserExtent,\r\n  getUserProjection,\r\n  toUserCoordinate,\r\n  toUserExtent,\r\n} from '../proj.js';\r\nimport {getUid} from '../util.js';\r\n\r\n/**\r\n * The segment index assigned to a circle's center when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CENTER_INDEX = 0;\r\n\r\n/**\r\n * The segment index assigned to a circle's circumference when\r\n * breaking up a circle into ModifySegmentDataType segments.\r\n * @type {number}\r\n */\r\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\r\n\r\nconst tempExtent = [0, 0, 0, 0];\r\nconst tempSegment = [];\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst ModifyEventType = {\r\n  /**\r\n   * Triggered upon feature modification start\r\n   * @event ModifyEvent#modifystart\r\n   * @api\r\n   */\r\n  MODIFYSTART: 'modifystart',\r\n  /**\r\n   * Triggered upon feature modification end\r\n   * @event ModifyEvent#modifyend\r\n   * @api\r\n   */\r\n  MODIFYEND: 'modifyend',\r\n};\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {Array<number>} [depth] Depth.\r\n * @property {import(\"../Feature\").FeatureLike} feature Feature.\r\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n * @property {number} [index] Index.\r\n * @property {Array<Array<number>>} segment Segment.\r\n * @property {Array<SegmentData>} [featureSegments] FeatureSegments.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event will be considered to add or move a\r\n * vertex to the sketch. Default is\r\n * {@link module:ol/events/condition.primaryAction}.\r\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. By default,\r\n * {@link module:ol/events/condition.singleClick} with\r\n * {@link module:ol/events/condition.altKeyOnly} results in a vertex deletion.\r\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\r\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\r\n * returns a boolean to indicate whether a new vertex should be added to the sketch\r\n * features. Default is {@link module:ol/events/condition.always}.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\r\n * pointer close enough to a segment or vertex for editing.\r\n * @property {import(\"../style/Style.js\").StyleLike} [style]\r\n * Style used for the modification point or vertex. For linestrings and polygons, this will\r\n * be the affected vertex, for circles a point along the circle, and for points the actual\r\n * point. If not configured, the default edit style is used (see {@link module:ol/style/Style~Style}).\r\n * When using a style function, the point feature passed to the function will have a `features`\r\n * property - an array whose entries are the features that are being modified, and a `geometries`\r\n * property - an array whose entries are the geometries that are being modified. Both arrays are\r\n * in the same order. The `geometries` are only useful when modifying geometry collections, where\r\n * the geometry will be the particular geometry from the collection that is being modified.\r\n * @property {VectorSource} [source] The vector source with\r\n * features to modify.  If a vector source is not provided, a feature collection\r\n * must be provided with the `features` option.\r\n * @property {boolean|import(\"../layer/BaseVector\").default} [hitDetection] When configured, point\r\n * features will be considered for modification based on their visual appearance, instead of being within\r\n * the `pixelTolerance` from the pointer location. When a {@link module:ol/layer/BaseVector~BaseVectorLayer} is\r\n * provided, only the rendered representation of the features on that layer will be considered.\r\n * @property {Collection<Feature>} [features]\r\n * The features the interaction works on.  If a feature collection is not\r\n * provided, a vector source must be provided with the `source` option.\r\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\r\n * overlay.\r\n * @property {boolean} [snapToPointer=!hitDetection] The vertex, point or segment being modified snaps to the\r\n * pointer coordinate when clicked within the `pixelTolerance`.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\r\n * instances of this type.\r\n */\r\nexport class ModifyEvent extends Event {\r\n  /**\r\n   * @param {ModifyEventType} type Type.\r\n   * @param {Collection<import(\"../Feature\").FeatureLike>} features\r\n   * The features modified.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent\r\n   * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   */\r\n  constructor(type, features, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * The features being modified.\r\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\r\n     * @api\r\n     */\r\n    this.features = features;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'modifyend'|'modifystart', ModifyEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'modifyend'|'modifystart', Return>} ModifyOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for modifying feature geometries.  To modify features that have\r\n * been added to an existing source, construct the modify interaction with the\r\n * `source` option.  If you want to modify features in a collection (for example,\r\n * the collection used by a select interaction), construct the interaction with\r\n * the `features` option.  The interaction must be constructed with either a\r\n * `source` or `features` option.\r\n *\r\n * Cartesian distance from the pointer is used to determine the features that\r\n * will be modified. This means that geometries will only be considered for\r\n * modification when they are within the configured `pixelTolerance`. For point\r\n * geometries, the `hitDetection` option can be used to match their visual\r\n * appearance.\r\n *\r\n * By default, the interaction will allow deletion of vertices when the `alt`\r\n * key is pressed.  To configure the interaction with a different condition\r\n * for deletion, use the `deleteCondition` option.\r\n * @fires ModifyEvent\r\n * @api\r\n */\r\nclass Modify extends PointerInteraction {\r\n  /**\r\n   * @param {Options} options Options.\r\n   */\r\n  constructor(options) {\r\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\r\n\r\n    /***\r\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {ModifyOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {ModifyOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    /** @private */\r\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : primaryAction;\r\n\r\n    /**\r\n     * @private\r\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\r\n     * @return {boolean} Combined condition result.\r\n     */\r\n    this.defaultDeleteCondition_ = function (mapBrowserEvent) {\r\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\r\n    };\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.deleteCondition_ = options.deleteCondition\r\n      ? options.deleteCondition\r\n      : this.defaultDeleteCondition_;\r\n\r\n    /**\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     * @private\r\n     */\r\n    this.insertVertexCondition_ = options.insertVertexCondition\r\n      ? options.insertVertexCondition\r\n      : always;\r\n\r\n    /**\r\n     * Editing vertex.\r\n     * @type {Feature<Point>}\r\n     * @private\r\n     */\r\n    this.vertexFeature_ = null;\r\n\r\n    /**\r\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\r\n     * @type {Object<string, boolean>}\r\n     * @private\r\n     */\r\n    this.vertexSegments_ = null;\r\n\r\n    /**\r\n     * @type {import(\"../pixel.js\").Pixel}\r\n     * @private\r\n     */\r\n    this.lastPixel_ = [0, 0];\r\n\r\n    /**\r\n     * Tracks if the next `singleclick` event should be ignored to prevent\r\n     * accidental deletion right after vertex creation.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.ignoreNextSingleClick_ = false;\r\n\r\n    /**\r\n     * @type {Collection<import(\"../Feature\").FeatureLike>}\r\n     * @private\r\n     */\r\n    this.featuresBeingModified_ = null;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {RBush<SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ =\r\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.snappedToVertex_ = false;\r\n\r\n    /**\r\n     * Indicate whether the interaction is currently changing a feature's\r\n     * coordinates.\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    this.changingFeature_ = false;\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dragSegments_ = [];\r\n\r\n    /**\r\n     * Draw overlay where sketch features are drawn.\r\n     * @type {VectorLayer}\r\n     * @private\r\n     */\r\n    this.overlay_ = new VectorLayer({\r\n      source: new VectorSource({\r\n        useSpatialIndex: false,\r\n        wrapX: !!options.wrapX,\r\n      }),\r\n      style: options.style ? options.style : getDefaultStyleFunction(),\r\n      updateWhileAnimating: true,\r\n      updateWhileInteracting: true,\r\n    });\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\r\n     */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_.bind(this),\r\n      'LineString': this.writeLineStringGeometry_.bind(this),\r\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\r\n      'Polygon': this.writePolygonGeometry_.bind(this),\r\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\r\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\r\n      'Circle': this.writeCircleGeometry_.bind(this),\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\r\n    };\r\n\r\n    /**\r\n     * @type {VectorSource}\r\n     * @private\r\n     */\r\n    this.source_ = null;\r\n\r\n    /**\r\n     * @type {boolean|import(\"../layer/BaseVector\").default}\r\n     */\r\n    this.hitDetection_ = null;\r\n\r\n    let features;\r\n    if (options.features) {\r\n      features = options.features;\r\n    } else if (options.source) {\r\n      this.source_ = options.source;\r\n      features = new Collection(this.source_.getFeatures());\r\n      this.source_.addEventListener(\r\n        VectorEventType.ADDFEATURE,\r\n        this.handleSourceAdd_.bind(this)\r\n      );\r\n      this.source_.addEventListener(\r\n        VectorEventType.REMOVEFEATURE,\r\n        this.handleSourceRemove_.bind(this)\r\n      );\r\n    }\r\n    if (!features) {\r\n      throw new Error(\r\n        'The modify interaction requires features, a source or a layer'\r\n      );\r\n    }\r\n    if (options.hitDetection) {\r\n      this.hitDetection_ = options.hitDetection;\r\n    }\r\n\r\n    /**\r\n     * @type {Collection<import(\"../Feature.js\").FeatureLike>}\r\n     * @private\r\n     */\r\n    this.features_ = features;\r\n\r\n    this.features_.forEach(this.addFeature_.bind(this));\r\n    this.features_.addEventListener(\r\n      CollectionEventType.ADD,\r\n      this.handleFeatureAdd_.bind(this)\r\n    );\r\n    this.features_.addEventListener(\r\n      CollectionEventType.REMOVE,\r\n      this.handleFeatureRemove_.bind(this)\r\n    );\r\n\r\n    /**\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @private\r\n     */\r\n    this.lastPointerEvent_ = null;\r\n\r\n    /**\r\n     * Delta (x, y in map units) between matched rtree vertex and pointer vertex.\r\n     * @type {Array<number>}\r\n     */\r\n    this.delta_ = [0, 0];\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.snapToPointer_ =\r\n      options.snapToPointer === undefined\r\n        ? !this.hitDetection_\r\n        : options.snapToPointer;\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  addFeature_(feature) {\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      if (writer) {\r\n        writer(feature, geometry);\r\n      }\r\n    }\r\n    const map = this.getMap();\r\n    if (map && map.isRendered() && this.getActive()) {\r\n      this.handlePointerAtPixel_(this.lastPixel_, map);\r\n    }\r\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\r\n   * @param {Array<Array<SegmentData>>} segments The segments subject to modification.\r\n   * @private\r\n   */\r\n  willModifyFeatures_(evt, segments) {\r\n    if (!this.featuresBeingModified_) {\r\n      this.featuresBeingModified_ = new Collection();\r\n      const features = this.featuresBeingModified_.getArray();\r\n      for (let i = 0, ii = segments.length; i < ii; ++i) {\r\n        const segment = segments[i];\r\n        for (let s = 0, ss = segment.length; s < ss; ++s) {\r\n          const feature = segment[s].feature;\r\n          if (feature && features.indexOf(feature) === -1) {\r\n            this.featuresBeingModified_.push(feature);\r\n          }\r\n        }\r\n      }\r\n      if (this.featuresBeingModified_.getLength() === 0) {\r\n        this.featuresBeingModified_ = null;\r\n      } else {\r\n        this.dispatchEvent(\r\n          new ModifyEvent(\r\n            ModifyEventType.MODIFYSTART,\r\n            this.featuresBeingModified_,\r\n            evt\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeature_(feature) {\r\n    this.removeFeatureSegmentData_(feature);\r\n    // Remove the vertex feature if the collection of candidate features is empty.\r\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    feature.removeEventListener(\r\n      EventType.CHANGE,\r\n      this.boundHandleFeatureChange_\r\n    );\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureSegmentData_(feature) {\r\n    const rBush = this.rBush_;\r\n    /** @type {Array<SegmentData>} */\r\n    const nodesToRemove = [];\r\n    rBush.forEach(\r\n      /**\r\n       * @param {SegmentData} node RTree node.\r\n       */\r\n      function (node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      }\r\n    );\r\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n      const nodeToRemove = nodesToRemove[i];\r\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\r\n        if (this.dragSegments_[j][0] === nodeToRemove) {\r\n          this.dragSegments_.splice(j, 1);\r\n        }\r\n      }\r\n      rBush.remove(nodeToRemove);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the interaction.\r\n   * @param {boolean} active Active.\r\n   * @observable\r\n   * @api\r\n   */\r\n  setActive(active) {\r\n    if (this.vertexFeature_ && !active) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n    super.setActive(active);\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    this.overlay_.setMap(map);\r\n    super.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Get the overlay layer that this interaction renders the modification point or vertex to.\r\n   * @return {VectorLayer} Overlay layer.\r\n   * @api\r\n   */\r\n  getOverlay() {\r\n    return this.overlay_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceAdd_(event) {\r\n    if (event.feature) {\r\n      this.features_.push(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\r\n   * @private\r\n   */\r\n  handleSourceRemove_(event) {\r\n    if (event.feature) {\r\n      this.features_.remove(event.feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    this.addFeature_(/** @type {Feature} */ (evt.element));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    if (!this.changingFeature_) {\r\n      const feature = /** @type {Feature} */ (evt.target);\r\n      this.removeFeature_(feature);\r\n      this.addFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = /** @type {Feature} */ (evt.element);\r\n    this.removeFeature_(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {Point} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n\r\n    /** @type {SegmentData} */\r\n    const segmentData = {\r\n      feature: feature,\r\n      geometry: geometry,\r\n      segment: [coordinates, coordinates],\r\n    };\r\n\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n\r\n      /** @type {SegmentData} */\r\n      const segmentData = {\r\n        feature: feature,\r\n        geometry: geometry,\r\n        depth: [i],\r\n        index: i,\r\n        segment: [coordinates, coordinates],\r\n      };\r\n\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n\r\n      /** @type {SegmentData} */\r\n      const segmentData = {\r\n        feature: feature,\r\n        geometry: geometry,\r\n        index: i,\r\n        segment: segment,\r\n      };\r\n\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n\r\n        /** @type {SegmentData} */\r\n        const segmentData = {\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment,\r\n        };\r\n\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n\r\n        /** @type {SegmentData} */\r\n        const segmentData = {\r\n          feature: feature,\r\n          geometry: geometry,\r\n          depth: [j],\r\n          index: i,\r\n          segment: segment,\r\n        };\r\n\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n\r\n          /** @type {SegmentData} */\r\n          const segmentData = {\r\n            feature: feature,\r\n            geometry: geometry,\r\n            depth: [j, k],\r\n            index: i,\r\n            segment: segment,\r\n          };\r\n\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We convert a circle into two segments.  The segment at index\r\n   * {@link CIRCLE_CENTER_INDEX} is the\r\n   * circle's center (a point).  The segment at index\r\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\r\n   * the circumference, and is not a line segment.\r\n   *\r\n   * @param {Feature} feature Feature.\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCenter();\r\n\r\n    /** @type {SegmentData} */\r\n    const centerSegmentData = {\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CENTER_INDEX,\r\n      segment: [coordinates, coordinates],\r\n    };\r\n\r\n    /** @type {SegmentData} */\r\n    const circumferenceSegmentData = {\r\n      feature: feature,\r\n      geometry: geometry,\r\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\r\n      segment: [coordinates, coordinates],\r\n    };\r\n\r\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\r\n    centerSegmentData.featureSegments = featureSegments;\r\n    circumferenceSegmentData.featureSegments = featureSegments;\r\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\r\n    let circleGeometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\r\n      geometry\r\n    );\r\n    const userProjection = getUserProjection();\r\n    if (userProjection && this.getMap()) {\r\n      const projection = this.getMap().getView().getProjection();\r\n      circleGeometry = circleGeometry\r\n        .clone()\r\n        .transform(userProjection, projection);\r\n      circleGeometry = fromCircle(\r\n        /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\r\n      ).transform(projection, userProjection);\r\n    }\r\n    this.rBush_.insert(circleGeometry.getExtent(), circumferenceSegmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {Feature} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      const geometry = geometries[i];\r\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      writer(feature, geometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\r\n   * @param {Array<import(\"../Feature\").FeatureLike>} features The features being modified.\r\n   * @param {Array<import(\"../geom/SimpleGeometry.js\").default>} geometries The geometries being modified.\r\n   * @return {Feature} Vertex feature.\r\n   * @private\r\n   */\r\n  createOrUpdateVertexFeature_(coordinates, features, geometries) {\r\n    let vertexFeature = this.vertexFeature_;\r\n    if (!vertexFeature) {\r\n      vertexFeature = new Feature(new Point(coordinates));\r\n      this.vertexFeature_ = vertexFeature;\r\n      this.overlay_.getSource().addFeature(vertexFeature);\r\n    } else {\r\n      const geometry = vertexFeature.getGeometry();\r\n      geometry.setCoordinates(coordinates);\r\n    }\r\n    vertexFeature.set('features', features);\r\n    vertexFeature.set('geometries', geometries);\r\n    return vertexFeature;\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may modify the geometry.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!mapBrowserEvent.originalEvent) {\r\n      return true;\r\n    }\r\n    this.lastPointerEvent_ = mapBrowserEvent;\r\n\r\n    let handled;\r\n    if (\r\n      !mapBrowserEvent.map.getView().getInteracting() &&\r\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\r\n      !this.handlingDownUpSequence\r\n    ) {\r\n      this.handlePointerMove_(mapBrowserEvent);\r\n    }\r\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\r\n      if (\r\n        mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK ||\r\n        !this.ignoreNextSingleClick_\r\n      ) {\r\n        handled = this.removePoint();\r\n      } else {\r\n        handled = true;\r\n      }\r\n    }\r\n\r\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\r\n      this.ignoreNextSingleClick_ = false;\r\n    }\r\n\r\n    return super.handleEvent(mapBrowserEvent) && !handled;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer drag events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   */\r\n  handleDragEvent(evt) {\r\n    this.ignoreNextSingleClick_ = false;\r\n    this.willModifyFeatures_(evt, this.dragSegments_);\r\n\r\n    const vertex = [\r\n      evt.coordinate[0] + this.delta_[0],\r\n      evt.coordinate[1] + this.delta_[1],\r\n    ];\r\n    const features = [];\r\n    const geometries = [];\r\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\r\n      const dragSegment = this.dragSegments_[i];\r\n      const segmentData = dragSegment[0];\r\n      const feature = segmentData.feature;\r\n      if (features.indexOf(feature) === -1) {\r\n        features.push(feature);\r\n      }\r\n      const geometry = segmentData.geometry;\r\n      if (geometries.indexOf(geometry) === -1) {\r\n        geometries.push(geometry);\r\n      }\r\n      const depth = segmentData.depth;\r\n      let coordinates;\r\n      const segment = segmentData.segment;\r\n      const index = dragSegment[1];\r\n\r\n      while (vertex.length < geometry.getStride()) {\r\n        vertex.push(segment[index][vertex.length]);\r\n      }\r\n\r\n      switch (geometry.getType()) {\r\n        case GeometryType.POINT:\r\n          coordinates = vertex;\r\n          segment[0] = vertex;\r\n          segment[1] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POINT:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index] = vertex;\r\n          segment[0] = vertex;\r\n          segment[1] = vertex;\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          coordinates = geometry.getCoordinates();\r\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\r\n          segment[index] = vertex;\r\n          break;\r\n        case GeometryType.CIRCLE:\r\n          segment[0] = vertex;\r\n          segment[1] = vertex;\r\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\r\n            this.changingFeature_ = true;\r\n            geometry.setCenter(vertex);\r\n            this.changingFeature_ = false;\r\n          } else {\r\n            // We're dragging the circle's circumference:\r\n            this.changingFeature_ = true;\r\n            const projection = evt.map.getView().getProjection();\r\n            let radius = coordinateDistance(\r\n              fromUserCoordinate(geometry.getCenter(), projection),\r\n              fromUserCoordinate(vertex, projection)\r\n            );\r\n            const userProjection = getUserProjection();\r\n            if (userProjection) {\r\n              const circleGeometry = geometry\r\n                .clone()\r\n                .transform(userProjection, projection);\r\n              circleGeometry.setRadius(radius);\r\n              radius = circleGeometry\r\n                .transform(projection, userProjection)\r\n                .getRadius();\r\n            }\r\n            geometry.setRadius(radius);\r\n            this.changingFeature_ = false;\r\n          }\r\n          break;\r\n        default:\r\n        // pass\r\n      }\r\n\r\n      if (coordinates) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n      }\r\n    }\r\n    this.createOrUpdateVertexFeature_(vertex, features, geometries);\r\n  }\r\n\r\n  /**\r\n   * Handle pointer down events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleDownEvent(evt) {\r\n    if (!this.condition_(evt)) {\r\n      return false;\r\n    }\r\n    const pixelCoordinate = evt.coordinate;\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map, pixelCoordinate);\r\n    this.dragSegments_.length = 0;\r\n    this.featuresBeingModified_ = null;\r\n    const vertexFeature = this.vertexFeature_;\r\n    if (vertexFeature) {\r\n      const projection = evt.map.getView().getProjection();\r\n      const insertVertices = [];\r\n      const vertex = vertexFeature.getGeometry().getCoordinates();\r\n      const vertexExtent = boundingExtent([vertex]);\r\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\r\n      const componentSegments = {};\r\n      segmentDataMatches.sort(compareIndexes);\r\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\r\n        const segmentDataMatch = segmentDataMatches[i];\r\n        const segment = segmentDataMatch.segment;\r\n        let uid = getUid(segmentDataMatch.geometry);\r\n        const depth = segmentDataMatch.depth;\r\n        if (depth) {\r\n          uid += '-' + depth.join('-'); // separate feature components\r\n        }\r\n        if (!componentSegments[uid]) {\r\n          componentSegments[uid] = new Array(2);\r\n        }\r\n\r\n        if (\r\n          segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\r\n          segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX\r\n        ) {\r\n          const closestVertex = closestOnSegmentData(\r\n            pixelCoordinate,\r\n            segmentDataMatch,\r\n            projection\r\n          );\r\n          if (\r\n            coordinatesEqual(closestVertex, vertex) &&\r\n            !componentSegments[uid][0]\r\n          ) {\r\n            this.dragSegments_.push([segmentDataMatch, 0]);\r\n            componentSegments[uid][0] = segmentDataMatch;\r\n          }\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          coordinatesEqual(segment[0], vertex) &&\r\n          !componentSegments[uid][0]\r\n        ) {\r\n          this.dragSegments_.push([segmentDataMatch, 0]);\r\n          componentSegments[uid][0] = segmentDataMatch;\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          coordinatesEqual(segment[1], vertex) &&\r\n          !componentSegments[uid][1]\r\n        ) {\r\n          // prevent dragging closed linestrings by the connecting node\r\n          if (\r\n            (segmentDataMatch.geometry.getType() === GeometryType.LINE_STRING ||\r\n              segmentDataMatch.geometry.getType() ===\r\n                GeometryType.MULTI_LINE_STRING) &&\r\n            componentSegments[uid][0] &&\r\n            componentSegments[uid][0].index === 0\r\n          ) {\r\n            continue;\r\n          }\r\n\r\n          this.dragSegments_.push([segmentDataMatch, 1]);\r\n          componentSegments[uid][1] = segmentDataMatch;\r\n          continue;\r\n        }\r\n\r\n        if (\r\n          getUid(segment) in this.vertexSegments_ &&\r\n          !componentSegments[uid][0] &&\r\n          !componentSegments[uid][1] &&\r\n          this.insertVertexCondition_(evt)\r\n        ) {\r\n          insertVertices.push(segmentDataMatch);\r\n        }\r\n      }\r\n\r\n      if (insertVertices.length) {\r\n        this.willModifyFeatures_(evt, [insertVertices]);\r\n      }\r\n\r\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\r\n        this.insertVertex_(insertVertices[j], vertex);\r\n      }\r\n    }\r\n    return !!this.vertexFeature_;\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(evt) {\r\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\r\n      const segmentData = this.dragSegments_[i][0];\r\n      const geometry = segmentData.geometry;\r\n      if (geometry.getType() === GeometryType.CIRCLE) {\r\n        // Update a circle object in the R* bush:\r\n        const coordinates = geometry.getCenter();\r\n        const centerSegmentData = segmentData.featureSegments[0];\r\n        const circumferenceSegmentData = segmentData.featureSegments[1];\r\n        centerSegmentData.segment[0] = coordinates;\r\n        centerSegmentData.segment[1] = coordinates;\r\n        circumferenceSegmentData.segment[0] = coordinates;\r\n        circumferenceSegmentData.segment[1] = coordinates;\r\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\r\n        let circleGeometry = geometry;\r\n        const userProjection = getUserProjection();\r\n        if (userProjection) {\r\n          const projection = evt.map.getView().getProjection();\r\n          circleGeometry = circleGeometry\r\n            .clone()\r\n            .transform(userProjection, projection);\r\n          circleGeometry = fromCircle(circleGeometry).transform(\r\n            projection,\r\n            userProjection\r\n          );\r\n        }\r\n        this.rBush_.update(\r\n          circleGeometry.getExtent(),\r\n          circumferenceSegmentData\r\n        );\r\n      } else {\r\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\r\n      }\r\n    }\r\n    if (this.featuresBeingModified_) {\r\n      this.dispatchEvent(\r\n        new ModifyEvent(\r\n          ModifyEventType.MODIFYEND,\r\n          this.featuresBeingModified_,\r\n          evt\r\n        )\r\n      );\r\n      this.featuresBeingModified_ = null;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handlePointerMove_(evt) {\r\n    this.lastPixel_ = evt.pixel;\r\n    this.handlePointerAtPixel_(evt.pixel, evt.map, evt.coordinate);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_coordinate] The pixel Coordinate.\r\n   * @private\r\n   */\r\n  handlePointerAtPixel_(pixel, map, opt_coordinate) {\r\n    const pixelCoordinate = opt_coordinate || map.getCoordinateFromPixel(pixel);\r\n    const projection = map.getView().getProjection();\r\n    const sortByDistance = function (a, b) {\r\n      return (\r\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\r\n        projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection)\r\n      );\r\n    };\r\n\r\n    /** @type {Array<SegmentData>|undefined} */\r\n    let nodes;\r\n    let hitPointGeometry;\r\n    if (this.hitDetection_) {\r\n      const layerFilter =\r\n        typeof this.hitDetection_ === 'object'\r\n          ? (layer) => layer === this.hitDetection_\r\n          : undefined;\r\n      map.forEachFeatureAtPixel(\r\n        pixel,\r\n        (feature, layer, geometry) => {\r\n          geometry =\r\n            geometry ||\r\n            /** @type {import(\"../geom/SimpleGeometry\").default} */ (\r\n              feature.getGeometry()\r\n            );\r\n          if (\r\n            geometry.getType() === GeometryType.POINT &&\r\n            includes(this.features_.getArray(), feature)\r\n          ) {\r\n            hitPointGeometry = geometry;\r\n            const coordinate = geometry.getFlatCoordinates().slice(0, 2);\r\n            nodes = [\r\n              {\r\n                feature,\r\n                geometry,\r\n                segment: [coordinate, coordinate],\r\n              },\r\n            ];\r\n          }\r\n          return true;\r\n        },\r\n        {layerFilter}\r\n      );\r\n    }\r\n    if (!nodes) {\r\n      const viewExtent = fromUserExtent(\r\n        createExtent(pixelCoordinate, tempExtent),\r\n        projection\r\n      );\r\n      const buffer = map.getView().getResolution() * this.pixelTolerance_;\r\n      const box = toUserExtent(\r\n        bufferExtent(viewExtent, buffer, tempExtent),\r\n        projection\r\n      );\r\n      nodes = this.rBush_.getInExtent(box);\r\n    }\r\n\r\n    if (nodes && nodes.length > 0) {\r\n      const node = nodes.sort(sortByDistance)[0];\r\n      const closestSegment = node.segment;\r\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\r\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\r\n      let dist = coordinateDistance(pixel, vertexPixel);\r\n      if (hitPointGeometry || dist <= this.pixelTolerance_) {\r\n        /** @type {Object<string, boolean>} */\r\n        const vertexSegments = {};\r\n        vertexSegments[getUid(closestSegment)] = true;\r\n\r\n        if (!this.snapToPointer_) {\r\n          this.delta_[0] = vertex[0] - pixelCoordinate[0];\r\n          this.delta_[1] = vertex[1] - pixelCoordinate[1];\r\n        }\r\n        if (\r\n          node.geometry.getType() === GeometryType.CIRCLE &&\r\n          node.index === CIRCLE_CIRCUMFERENCE_INDEX\r\n        ) {\r\n          this.snappedToVertex_ = true;\r\n          this.createOrUpdateVertexFeature_(\r\n            vertex,\r\n            [node.feature],\r\n            [node.geometry]\r\n          );\r\n        } else {\r\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\r\n          if (this.snappedToVertex_) {\r\n            vertex =\r\n              squaredDist1 > squaredDist2\r\n                ? closestSegment[1]\r\n                : closestSegment[0];\r\n          }\r\n          this.createOrUpdateVertexFeature_(\r\n            vertex,\r\n            [node.feature],\r\n            [node.geometry]\r\n          );\r\n          const geometries = {};\r\n          geometries[getUid(node.geometry)] = true;\r\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\r\n            const segment = nodes[i].segment;\r\n            if (\r\n              (coordinatesEqual(closestSegment[0], segment[0]) &&\r\n                coordinatesEqual(closestSegment[1], segment[1])) ||\r\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\r\n                coordinatesEqual(closestSegment[1], segment[0]))\r\n            ) {\r\n              const geometryUid = getUid(nodes[i].geometry);\r\n              if (!(geometryUid in geometries)) {\r\n                geometries[geometryUid] = true;\r\n                vertexSegments[getUid(segment)] = true;\r\n              }\r\n            } else {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        this.vertexSegments_ = vertexSegments;\r\n        return;\r\n      }\r\n    }\r\n    if (this.vertexFeature_) {\r\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n      this.vertexFeature_ = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {SegmentData} segmentData Segment data.\r\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\r\n   * @private\r\n   */\r\n  insertVertex_(segmentData, vertex) {\r\n    const segment = segmentData.segment;\r\n    const feature = segmentData.feature;\r\n    const geometry = segmentData.geometry;\r\n    const depth = segmentData.depth;\r\n    const index = segmentData.index;\r\n    let coordinates;\r\n\r\n    while (vertex.length < geometry.getStride()) {\r\n      vertex.push(0);\r\n    }\r\n\r\n    switch (geometry.getType()) {\r\n      case GeometryType.MULTI_LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.MULTI_POLYGON:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\r\n        break;\r\n      case GeometryType.LINE_STRING:\r\n        coordinates = geometry.getCoordinates();\r\n        coordinates.splice(index + 1, 0, vertex);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    this.setGeometryCoordinates_(geometry, coordinates);\r\n    const rTree = this.rBush_;\r\n    rTree.remove(segmentData);\r\n    this.updateSegmentIndices_(geometry, index, depth, 1);\r\n\r\n    /** @type {SegmentData} */\r\n    const newSegmentData = {\r\n      segment: [segment[0], vertex],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index,\r\n    };\r\n\r\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\r\n    this.dragSegments_.push([newSegmentData, 1]);\r\n\r\n    /** @type {SegmentData} */\r\n    const newSegmentData2 = {\r\n      segment: [vertex, segment[1]],\r\n      feature: feature,\r\n      geometry: geometry,\r\n      depth: depth,\r\n      index: index + 1,\r\n    };\r\n\r\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\r\n    this.dragSegments_.push([newSegmentData2, 0]);\r\n    this.ignoreNextSingleClick_ = true;\r\n  }\r\n\r\n  /**\r\n   * Removes the vertex currently being pointed.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @api\r\n   */\r\n  removePoint() {\r\n    if (\r\n      this.lastPointerEvent_ &&\r\n      this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG\r\n    ) {\r\n      const evt = this.lastPointerEvent_;\r\n      this.willModifyFeatures_(evt, this.dragSegments_);\r\n      const removed = this.removeVertex_();\r\n      if (this.featuresBeingModified_) {\r\n        this.dispatchEvent(\r\n          new ModifyEvent(\r\n            ModifyEventType.MODIFYEND,\r\n            this.featuresBeingModified_,\r\n            evt\r\n          )\r\n        );\r\n      }\r\n\r\n      this.featuresBeingModified_ = null;\r\n      return removed;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Removes a vertex from all matching features.\r\n   * @return {boolean} True when a vertex was removed.\r\n   * @private\r\n   */\r\n  removeVertex_() {\r\n    const dragSegments = this.dragSegments_;\r\n    const segmentsByFeature = {};\r\n    let deleted = false;\r\n    let component, coordinates, dragSegment, geometry, i, index, left;\r\n    let newIndex, right, segmentData, uid;\r\n    for (i = dragSegments.length - 1; i >= 0; --i) {\r\n      dragSegment = dragSegments[i];\r\n      segmentData = dragSegment[0];\r\n      uid = getUid(segmentData.feature);\r\n      if (segmentData.depth) {\r\n        // separate feature components\r\n        uid += '-' + segmentData.depth.join('-');\r\n      }\r\n      if (!(uid in segmentsByFeature)) {\r\n        segmentsByFeature[uid] = {};\r\n      }\r\n      if (dragSegment[1] === 0) {\r\n        segmentsByFeature[uid].right = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index;\r\n      } else if (dragSegment[1] == 1) {\r\n        segmentsByFeature[uid].left = segmentData;\r\n        segmentsByFeature[uid].index = segmentData.index + 1;\r\n      }\r\n    }\r\n    for (uid in segmentsByFeature) {\r\n      right = segmentsByFeature[uid].right;\r\n      left = segmentsByFeature[uid].left;\r\n      index = segmentsByFeature[uid].index;\r\n      newIndex = index - 1;\r\n      if (left !== undefined) {\r\n        segmentData = left;\r\n      } else {\r\n        segmentData = right;\r\n      }\r\n      if (newIndex < 0) {\r\n        newIndex = 0;\r\n      }\r\n      geometry = segmentData.geometry;\r\n      coordinates = geometry.getCoordinates();\r\n      component = coordinates;\r\n      deleted = false;\r\n      switch (geometry.getType()) {\r\n        case GeometryType.MULTI_LINE_STRING:\r\n          if (coordinates[segmentData.depth[0]].length > 2) {\r\n            coordinates[segmentData.depth[0]].splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.LINE_STRING:\r\n          if (coordinates.length > 2) {\r\n            coordinates.splice(index, 1);\r\n            deleted = true;\r\n          }\r\n          break;\r\n        case GeometryType.MULTI_POLYGON:\r\n          component = component[segmentData.depth[1]];\r\n        /* falls through */\r\n        case GeometryType.POLYGON:\r\n          component = component[segmentData.depth[0]];\r\n          if (component.length > 4) {\r\n            if (index == component.length - 1) {\r\n              index = 0;\r\n            }\r\n            component.splice(index, 1);\r\n            deleted = true;\r\n            if (index === 0) {\r\n              // close the ring again\r\n              component.pop();\r\n              component.push(component[0]);\r\n              newIndex = component.length - 1;\r\n            }\r\n          }\r\n          break;\r\n        default:\r\n        // pass\r\n      }\r\n\r\n      if (deleted) {\r\n        this.setGeometryCoordinates_(geometry, coordinates);\r\n        const segments = [];\r\n        if (left !== undefined) {\r\n          this.rBush_.remove(left);\r\n          segments.push(left.segment[0]);\r\n        }\r\n        if (right !== undefined) {\r\n          this.rBush_.remove(right);\r\n          segments.push(right.segment[1]);\r\n        }\r\n        if (left !== undefined && right !== undefined) {\r\n          /** @type {SegmentData} */\r\n          const newSegmentData = {\r\n            depth: segmentData.depth,\r\n            feature: segmentData.feature,\r\n            geometry: segmentData.geometry,\r\n            index: newIndex,\r\n            segment: segments,\r\n          };\r\n\r\n          this.rBush_.insert(\r\n            boundingExtent(newSegmentData.segment),\r\n            newSegmentData\r\n          );\r\n        }\r\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\r\n        if (this.vertexFeature_) {\r\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\r\n          this.vertexFeature_ = null;\r\n        }\r\n        dragSegments.length = 0;\r\n      }\r\n    }\r\n    return deleted;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {Array} coordinates Coordinates.\r\n   * @private\r\n   */\r\n  setGeometryCoordinates_(geometry, coordinates) {\r\n    this.changingFeature_ = true;\r\n    geometry.setCoordinates(coordinates);\r\n    this.changingFeature_ = false;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\r\n   * @param {number} index Index.\r\n   * @param {Array<number>|undefined} depth Depth.\r\n   * @param {number} delta Delta (1 or -1).\r\n   * @private\r\n   */\r\n  updateSegmentIndices_(geometry, index, depth, delta) {\r\n    this.rBush_.forEachInExtent(\r\n      geometry.getExtent(),\r\n      function (segmentDataMatch) {\r\n        if (\r\n          segmentDataMatch.geometry === geometry &&\r\n          (depth === undefined ||\r\n            segmentDataMatch.depth === undefined ||\r\n            equals(segmentDataMatch.depth, depth)) &&\r\n          segmentDataMatch.index > index\r\n        ) {\r\n          segmentDataMatch.index += delta;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * @param {SegmentData} a The first segment data.\r\n * @param {SegmentData} b The second segment data.\r\n * @return {number} The difference in indexes.\r\n */\r\nfunction compareIndexes(a, b) {\r\n  return a.index - b.index;\r\n}\r\n\r\n/**\r\n * Returns the distance from a point to a line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\r\n *        which to calculate the distance.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment we are calculating the distance to.\r\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n * @return {number} The square of the distance between a point and a line segment.\r\n */\r\nfunction projectedDistanceToSegmentDataSquared(\r\n  pointCoordinates,\r\n  segmentData,\r\n  projection\r\n) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (geometry.getType() === GeometryType.CIRCLE) {\r\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\r\n      geometry\r\n    );\r\n\r\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\r\n      const userProjection = getUserProjection();\r\n      if (userProjection) {\r\n        circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\r\n          circleGeometry.clone().transform(userProjection, projection)\r\n        );\r\n      }\r\n      const distanceToCenterSquared = squaredCoordinateDistance(\r\n        circleGeometry.getCenter(),\r\n        fromUserCoordinate(pointCoordinates, projection)\r\n      );\r\n      const distanceToCircumference =\r\n        Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\r\n      return distanceToCircumference * distanceToCircumference;\r\n    }\r\n  }\r\n\r\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\r\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\r\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\r\n  return squaredDistanceToSegment(coordinate, tempSegment);\r\n}\r\n\r\n/**\r\n * Returns the point closest to a given line segment.\r\n *\r\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\r\n *        should be found.\r\n * @param {SegmentData} segmentData The object describing the line\r\n *        segment which should contain the closest point.\r\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\r\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\r\n */\r\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\r\n  const geometry = segmentData.geometry;\r\n\r\n  if (\r\n    geometry.getType() === GeometryType.CIRCLE &&\r\n    segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX\r\n  ) {\r\n    let circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\r\n      geometry\r\n    );\r\n    const userProjection = getUserProjection();\r\n    if (userProjection) {\r\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\r\n        circleGeometry.clone().transform(userProjection, projection)\r\n      );\r\n    }\r\n    return toUserCoordinate(\r\n      circleGeometry.getClosestPoint(\r\n        fromUserCoordinate(pointCoordinates, projection)\r\n      ),\r\n      projection\r\n    );\r\n  }\r\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\r\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\r\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\r\n  return toUserCoordinate(\r\n    closestOnSegment(coordinate, tempSegment),\r\n    projection\r\n  );\r\n}\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const style = createEditingStyle();\r\n  return function (feature, resolution) {\r\n    return style[GeometryType.POINT];\r\n  };\r\n}\r\n\r\nexport default Modify;\r\n", "/**\r\n * @module ol/interaction/Select\r\n */\r\nimport Collection from '../Collection.js';\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport Event from '../events/Event.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport Interaction from './Interaction.js';\r\nimport VectorLayer from '../layer/Vector.js';\r\nimport {TRUE} from '../functions.js';\r\nimport {clear} from '../obj.js';\r\nimport {createEditingStyle} from '../style/Style.js';\r\nimport {extend, includes} from '../array.js';\r\nimport {getUid} from '../util.js';\r\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nconst SelectEventType = {\r\n  /**\r\n   * Triggered when feature(s) has been (de)selected.\r\n   * @event SelectEvent#select\r\n   * @api\r\n   */\r\n  SELECT: 'select',\r\n};\r\n\r\n/**\r\n * A function that takes an {@link module:ol/Feature~Feature} or\r\n * {@link module:ol/render/Feature~RenderFeature} and an\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\r\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is the event\r\n * for the selected features as a whole. By default, this is\r\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\r\n * feature and removes any that were in the selection. Clicking outside any\r\n * feature removes all from the selection.\r\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\r\n * from the selection.\r\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\r\n * A list of layers from which features should be selected. Alternatively, a\r\n * filter function can be provided. The function will be called for each layer\r\n * in the map and should return `true` for layers that you want to be\r\n * selectable. If the option is absent, all visible layers will be considered\r\n * selectable.\r\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\r\n * Style for the selected features. By default the default edit style is used\r\n * (see {@link module:ol/style/Style~Style}). Set to `null` if this interaction should not apply\r\n * any style changes for selected features.\r\n * If set to a falsey value, the selected feature's style will not change.\r\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled.\r\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\r\n * want to use different events for add and remove instead of `toggle`.\r\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\r\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\r\n * boolean to indicate whether that event should be handled. This is in addition\r\n * to the `condition` event. By default,\r\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\r\n * well as the `condition` event, adds that feature to the current selection if\r\n * it is not currently selected, and removes it if it is. See `add` and `remove`\r\n * if you want to use different events instead of a toggle.\r\n * @property {boolean} [multi=false] A boolean that determines if the default\r\n * behaviour should select only single features or all (overlapping) features at\r\n * the clicked map position. The default of `false` means single select.\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\r\n * Collection where the interaction will place selected features. Optional. If\r\n * not set the interaction will create a collection. In any case the collection\r\n * used by the interaction is returned by\r\n * {@link module:ol/interaction/Select~Select#getFeatures}.\r\n * @property {FilterFunction} [filter] A function\r\n * that takes an {@link module:ol/Feature~Feature} and an\r\n * {@link module:ol/layer/Layer~Layer} and returns `true` if the feature may be\r\n * selected or `false` otherwise.\r\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\r\n * the radius around the given position will be checked for features.\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\r\n * this type.\r\n */\r\nexport class SelectEvent extends Event {\r\n  /**\r\n   * @param {SelectEventType} type The event type.\r\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\r\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\r\n   *     {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n   */\r\n  constructor(type, selected, deselected, mapBrowserEvent) {\r\n    super(type);\r\n\r\n    /**\r\n     * Selected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.selected = selected;\r\n\r\n    /**\r\n     * Deselected features array.\r\n     * @type {Array<import(\"../Feature.js\").default>}\r\n     * @api\r\n     */\r\n    this.deselected = deselected;\r\n\r\n    /**\r\n     * Associated {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\r\n     * @type {import(\"../MapBrowserEvent.js\").default}\r\n     * @api\r\n     */\r\n    this.mapBrowserEvent = mapBrowserEvent;\r\n  }\r\n}\r\n\r\n/**\r\n * Original feature styles to reset to when features are no longer selected.\r\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\r\n */\r\nconst originalFeatureStyles = {};\r\n\r\n/***\r\n * @template Return\r\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\r\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\r\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\r\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\r\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\r\n *     'change:active'|'select', Return>} SelectOnSignature\r\n */\r\n\r\n/**\r\n * @classdesc\r\n * Interaction for selecting vector features. By default, selected features are\r\n * styled differently, so this interaction can be used for visual highlighting,\r\n * as well as selecting features for other actions, such as modification or\r\n * output. There are three ways of controlling which features are selected:\r\n * using the browser event as defined by the `condition` and optionally the\r\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\r\n * further feature filter using the `filter` option.\r\n *\r\n * @fires SelectEvent\r\n * @api\r\n */\r\nclass Select extends Interaction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    super();\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.on;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\r\n     */\r\n    this.once;\r\n\r\n    /***\r\n     * @type {SelectOnSignature<void>}\r\n     */\r\n    this.un;\r\n\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundAddFeature_ = this.addFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.condition_ = options.condition ? options.condition : singleClick;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.removeCondition_ = options.removeCondition\r\n      ? options.removeCondition\r\n      : never;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../events/condition.js\").Condition}\r\n     */\r\n    this.toggleCondition_ = options.toggleCondition\r\n      ? options.toggleCondition\r\n      : shiftKeyOnly;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.multi_ = options.multi ? options.multi : false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FilterFunction}\r\n     */\r\n    this.filter_ = options.filter ? options.filter : TRUE;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\r\n     */\r\n    this.style_ =\r\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\r\n\r\n    /**\r\n     * @private\r\n     * @type {import(\"../Collection.js\").default}\r\n     */\r\n    this.features_ = options.features || new Collection();\r\n\r\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\r\n    let layerFilter;\r\n    if (options.layers) {\r\n      if (typeof options.layers === 'function') {\r\n        layerFilter = options.layers;\r\n      } else {\r\n        const layers = options.layers;\r\n        layerFilter = function (layer) {\r\n          return includes(layers, layer);\r\n        };\r\n      }\r\n    } else {\r\n      layerFilter = TRUE;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\r\n     */\r\n    this.layerFilter_ = layerFilter;\r\n\r\n    /**\r\n     * An association between selected feature (key)\r\n     * and layer (value)\r\n     * @private\r\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\r\n     */\r\n    this.featureLayerAssociation_ = {};\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n   * @private\r\n   */\r\n  addFeatureLayerAssociation_(feature, layer) {\r\n    this.featureLayerAssociation_[getUid(feature)] = layer;\r\n  }\r\n\r\n  /**\r\n   * Get the selected features.\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\r\n   * @api\r\n   */\r\n  getFeatures() {\r\n    return this.features_;\r\n  }\r\n\r\n  /**\r\n   * Returns the Hit-detection tolerance.\r\n   * @return {number} Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  getHitTolerance() {\r\n    return this.hitTolerance_;\r\n  }\r\n\r\n  /**\r\n   * Returns the associated {@link module:ol/layer/Vector~VectorLayer vector layer} of\r\n   * a selected feature.\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\r\n   * @return {import('../layer/Vector.js').default} Layer.\r\n   * @api\r\n   */\r\n  getLayer(feature) {\r\n    return /** @type {import('../layer/Vector.js').default} */ (\r\n      this.featureLayerAssociation_[getUid(feature)]\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Hit-detection tolerance. Pixels inside the radius around the given position\r\n   * will be checked for features.\r\n   * @param {number} hitTolerance Hit tolerance in pixels.\r\n   * @api\r\n   */\r\n  setHitTolerance(hitTolerance) {\r\n    this.hitTolerance_ = hitTolerance;\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map, if any,  and attach it to a new\r\n   * map, if any. Pass `null` to just remove the interaction from the current map.\r\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\r\n   * @api\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    if (currentMap && this.style_) {\r\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n    if (map) {\r\n      this.features_.addEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_\r\n      );\r\n      this.features_.addEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_\r\n      );\r\n\r\n      if (this.style_) {\r\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\r\n      }\r\n    } else {\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.ADD,\r\n        this.boundAddFeature_\r\n      );\r\n      this.features_.removeEventListener(\r\n        CollectionEventType.REMOVE,\r\n        this.boundRemoveFeature_\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  addFeature_(evt) {\r\n    const feature = evt.element;\r\n    if (this.style_) {\r\n      this.applySelectedStyle_(feature);\r\n    }\r\n    if (!this.getLayer(feature)) {\r\n      const layer = /** @type {VectorLayer} */ (\r\n        this.getMap()\r\n          .getAllLayers()\r\n          .find(function (layer) {\r\n            if (\r\n              layer instanceof VectorLayer &&\r\n              layer.getSource() &&\r\n              layer.getSource().hasFeature(feature)\r\n            ) {\r\n              return layer;\r\n            }\r\n          })\r\n      );\r\n      if (layer) {\r\n        this.addFeatureLayerAssociation_(feature, layer);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  removeFeature_(evt) {\r\n    const feature = evt.element;\r\n    if (this.style_) {\r\n      this.restorePreviousStyle_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\r\n   */\r\n  getStyle() {\r\n    return this.style_;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  applySelectedStyle_(feature) {\r\n    const key = getUid(feature);\r\n    if (!(key in originalFeatureStyles)) {\r\n      originalFeatureStyles[key] = feature.getStyle();\r\n    }\r\n    feature.setStyle(this.style_);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  restorePreviousStyle_(feature) {\r\n    const interactions = this.getMap().getInteractions().getArray();\r\n    for (let i = interactions.length - 1; i >= 0; --i) {\r\n      const interaction = interactions[i];\r\n      if (\r\n        interaction !== this &&\r\n        interaction instanceof Select &&\r\n        interaction.getStyle() &&\r\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\r\n      ) {\r\n        feature.setStyle(interaction.getStyle());\r\n        return;\r\n      }\r\n    }\r\n\r\n    const key = getUid(feature);\r\n    feature.setStyle(originalFeatureStyles[key]);\r\n    delete originalFeatureStyles[key];\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n   * @private\r\n   */\r\n  removeFeatureLayerAssociation_(feature) {\r\n    delete this.featureLayerAssociation_[getUid(feature)];\r\n  }\r\n\r\n  /**\r\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may change the\r\n   * selected state of features.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   * @this {Select}\r\n   */\r\n  handleEvent(mapBrowserEvent) {\r\n    if (!this.condition_(mapBrowserEvent)) {\r\n      return true;\r\n    }\r\n    const add = this.addCondition_(mapBrowserEvent);\r\n    const remove = this.removeCondition_(mapBrowserEvent);\r\n    const toggle = this.toggleCondition_(mapBrowserEvent);\r\n    const set = !add && !remove && !toggle;\r\n    const map = mapBrowserEvent.map;\r\n    const features = this.getFeatures();\r\n    const deselected = [];\r\n    const selected = [];\r\n    if (set) {\r\n      // Replace the currently selected feature(s) with the feature(s) at the\r\n      // pixel, or clear the selected feature(s) if there is no feature at\r\n      // the pixel.\r\n      clear(this.featureLayerAssociation_);\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function (feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            this.addFeatureLayerAssociation_(feature, layer);\r\n            selected.push(feature);\r\n            return !this.multi_;\r\n          }\r\n        }.bind(this),\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        }\r\n      );\r\n      for (let i = features.getLength() - 1; i >= 0; --i) {\r\n        const feature = features.item(i);\r\n        const index = selected.indexOf(feature);\r\n        if (index > -1) {\r\n          // feature is already selected\r\n          selected.splice(index, 1);\r\n        } else {\r\n          features.remove(feature);\r\n          deselected.push(feature);\r\n        }\r\n      }\r\n      if (selected.length !== 0) {\r\n        features.extend(selected);\r\n      }\r\n    } else {\r\n      // Modify the currently selected feature(s).\r\n      map.forEachFeatureAtPixel(\r\n        mapBrowserEvent.pixel,\r\n        /**\r\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\r\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\r\n         * @return {boolean|undefined} Continue to iterate over the features.\r\n         */\r\n        function (feature, layer) {\r\n          if (this.filter_(feature, layer)) {\r\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\r\n              this.addFeatureLayerAssociation_(feature, layer);\r\n              selected.push(feature);\r\n            } else if (\r\n              (remove || toggle) &&\r\n              includes(features.getArray(), feature)\r\n            ) {\r\n              deselected.push(feature);\r\n              this.removeFeatureLayerAssociation_(feature);\r\n            }\r\n            return !this.multi_;\r\n          }\r\n        }.bind(this),\r\n        {\r\n          layerFilter: this.layerFilter_,\r\n          hitTolerance: this.hitTolerance_,\r\n        }\r\n      );\r\n      for (let j = deselected.length - 1; j >= 0; --j) {\r\n        features.remove(deselected[j]);\r\n      }\r\n      features.extend(selected);\r\n    }\r\n    if (selected.length > 0 || deselected.length > 0) {\r\n      this.dispatchEvent(\r\n        new SelectEvent(\r\n          SelectEventType.SELECT,\r\n          selected,\r\n          deselected,\r\n          mapBrowserEvent\r\n        )\r\n      );\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\r\n */\r\nfunction getDefaultStyleFunction() {\r\n  const styles = createEditingStyle();\r\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\r\n  extend(\r\n    styles[GeometryType.GEOMETRY_COLLECTION],\r\n    styles[GeometryType.LINE_STRING]\r\n  );\r\n\r\n  return function (feature) {\r\n    if (!feature.getGeometry()) {\r\n      return null;\r\n    }\r\n    return styles[feature.getGeometry().getType()];\r\n  };\r\n}\r\n\r\nexport default Select;\r\n", "/**\r\n * @module ol/interaction/Snap\r\n */\r\nimport CollectionEventType from '../CollectionEventType.js';\r\nimport EventType from '../events/EventType.js';\r\nimport GeometryType from '../geom/GeometryType.js';\r\nimport PointerInteraction from './Pointer.js';\r\nimport RBush from '../structs/RBush.js';\r\nimport VectorEventType from '../source/VectorEventType.js';\r\nimport {FALSE, TRUE} from '../functions.js';\r\nimport {boundingExtent, createEmpty} from '../extent.js';\r\nimport {\r\n  closestOnCircle,\r\n  closestOnSegment,\r\n  distance as coordinateDistance,\r\n  squaredDistance as squaredCoordinateDistance,\r\n  squaredDistanceToSegment,\r\n} from '../coordinate.js';\r\nimport {fromCircle} from '../geom/Polygon.js';\r\nimport {\r\n  fromUserCoordinate,\r\n  getUserProjection,\r\n  toUserCoordinate,\r\n} from '../proj.js';\r\nimport {getUid} from '../util.js';\r\nimport {getValues} from '../obj.js';\r\nimport {listen, unlistenByKey} from '../events.js';\r\n\r\n/**\r\n * @typedef {Object} Result\r\n * @property {boolean} snapped Snapped.\r\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex Vertex.\r\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel VertexPixel.\r\n */\r\n\r\n/**\r\n * @typedef {Object} SegmentData\r\n * @property {import(\"../Feature.js\").default} feature Feature.\r\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment Segment.\r\n */\r\n\r\n/**\r\n * @typedef {Object} Options\r\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\r\n * @property {boolean} [edge=true] Snap to edges.\r\n * @property {boolean} [vertex=true] Snap to vertices.\r\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\r\n * vertex for snapping.\r\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\r\n */\r\n\r\n/**\r\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n * @return {import(\"../Feature.js\").default} Feature.\r\n */\r\nfunction getFeatureFromEvent(evt) {\r\n  if (\r\n    /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature\r\n  ) {\r\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt)\r\n      .feature;\r\n  } else if (\r\n    /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\r\n  ) {\r\n    return /** @type {import(\"../Feature.js\").default} */ (\r\n      /** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element\r\n    );\r\n  }\r\n}\r\n\r\nconst tempSegment = [];\r\n\r\n/**\r\n * @classdesc\r\n * Handles snapping of vector features while modifying or drawing them.  The\r\n * features can come from a {@link module:ol/source/Vector~VectorSource} or {@link module:ol/Collection~Collection}\r\n * Any interaction object that allows the user to interact\r\n * with the features using the mouse can benefit from the snapping, as long\r\n * as it is added before.\r\n *\r\n * The snap interaction modifies map browser event `coordinate` and `pixel`\r\n * properties to force the snap to occur to any interaction that them.\r\n *\r\n * Example:\r\n *\r\n *     import Snap from 'ol/interaction/Snap';\r\n *\r\n *     const snap = new Snap({\r\n *       source: source\r\n *     });\r\n *\r\n *     map.addInteraction(snap);\r\n *\r\n * @api\r\n */\r\nclass Snap extends PointerInteraction {\r\n  /**\r\n   * @param {Options} [opt_options] Options.\r\n   */\r\n  constructor(opt_options) {\r\n    const options = opt_options ? opt_options : {};\r\n\r\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\r\n      options\r\n    );\r\n\r\n    if (!pointerOptions.handleDownEvent) {\r\n      pointerOptions.handleDownEvent = TRUE;\r\n    }\r\n\r\n    if (!pointerOptions.stopDown) {\r\n      pointerOptions.stopDown = FALSE;\r\n    }\r\n\r\n    super(pointerOptions);\r\n\r\n    /**\r\n     * @type {import(\"../source/Vector.js\").default|null}\r\n     * @private\r\n     */\r\n    this.source_ = options.source ? options.source : null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.edge_ = options.edge !== undefined ? options.edge : true;\r\n\r\n    /**\r\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|null}\r\n     * @private\r\n     */\r\n    this.features_ = options.features ? options.features : null;\r\n\r\n    /**\r\n     * @type {Array<import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featuresListenerKeys_ = [];\r\n\r\n    /**\r\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\r\n     * @private\r\n     */\r\n    this.featureChangeListenerKeys_ = {};\r\n\r\n    /**\r\n     * Extents are preserved so indexed segment can be quickly removed\r\n     * when its feature geometry changes\r\n     * @type {Object<string, import(\"../extent.js\").Extent>}\r\n     * @private\r\n     */\r\n    this.indexedFeaturesExtents_ = {};\r\n\r\n    /**\r\n     * If a feature geometry changes while a pointer drag|move event occurs, the\r\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\r\n     * event fired.\r\n     * @type {!Object<string, import(\"../Feature.js\").default>}\r\n     * @private\r\n     */\r\n    this.pendingFeatures_ = {};\r\n\r\n    /**\r\n     * @type {number}\r\n     * @private\r\n     */\r\n    this.pixelTolerance_ =\r\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\r\n\r\n    /**\r\n     * Segment RTree for each layer\r\n     * @type {import(\"../structs/RBush.js\").default<SegmentData>}\r\n     * @private\r\n     */\r\n    this.rBush_ = new RBush();\r\n\r\n    /**\r\n     * @const\r\n     * @private\r\n     * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\r\n     */\r\n    this.SEGMENT_WRITERS_ = {\r\n      'Point': this.writePointGeometry_.bind(this),\r\n      'LineString': this.writeLineStringGeometry_.bind(this),\r\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\r\n      'Polygon': this.writePolygonGeometry_.bind(this),\r\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\r\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\r\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\r\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\r\n      'Circle': this.writeCircleGeometry_.bind(this),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @param {boolean} [opt_listen] Whether to listen to the feature change or not\r\n   *     Defaults to `true`.\r\n   * @api\r\n   */\r\n  addFeature(feature, opt_listen) {\r\n    const register = opt_listen !== undefined ? opt_listen : true;\r\n    const feature_uid = getUid(feature);\r\n    const geometry = feature.getGeometry();\r\n    if (geometry) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\r\n      if (segmentWriter) {\r\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(\r\n          createEmpty()\r\n        );\r\n        segmentWriter(feature, geometry);\r\n      }\r\n    }\r\n\r\n    if (register) {\r\n      this.featureChangeListenerKeys_[feature_uid] = listen(\r\n        feature,\r\n        EventType.CHANGE,\r\n        this.handleFeatureChange_,\r\n        this\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureAdd_(feature) {\r\n    this.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature.\r\n   * @private\r\n   */\r\n  forEachFeatureRemove_(feature) {\r\n    this.removeFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\r\n   * @private\r\n   */\r\n  getFeatures_() {\r\n    let features;\r\n    if (this.features_) {\r\n      features = this.features_;\r\n    } else if (this.source_) {\r\n      features = this.source_.getFeatures();\r\n    }\r\n    return features;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Map browser event.\r\n   * @return {boolean} `false` to stop event propagation.\r\n   */\r\n  handleEvent(evt) {\r\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\r\n    if (result.snapped) {\r\n      evt.coordinate = result.vertex.slice(0, 2);\r\n      evt.pixel = result.vertexPixel;\r\n    }\r\n    return super.handleEvent(evt);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureAdd_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    this.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureRemove_(evt) {\r\n    const feature = getFeatureFromEvent(evt);\r\n    this.removeFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../events/Event.js\").default} evt Event.\r\n   * @private\r\n   */\r\n  handleFeatureChange_(evt) {\r\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\r\n    if (this.handlingDownUpSequence) {\r\n      const uid = getUid(feature);\r\n      if (!(uid in this.pendingFeatures_)) {\r\n        this.pendingFeatures_[uid] = feature;\r\n      }\r\n    } else {\r\n      this.updateFeature_(feature);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle pointer up events.\r\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\r\n   * @return {boolean} If the event was consumed.\r\n   */\r\n  handleUpEvent(evt) {\r\n    const featuresToUpdate = getValues(this.pendingFeatures_);\r\n    if (featuresToUpdate.length) {\r\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\r\n      this.pendingFeatures_ = {};\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Remove a feature from the collection of features that we may snap to.\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {boolean} [opt_unlisten] Whether to unlisten to the feature change\r\n   *     or not. Defaults to `true`.\r\n   * @api\r\n   */\r\n  removeFeature(feature, opt_unlisten) {\r\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\r\n    const feature_uid = getUid(feature);\r\n    const extent = this.indexedFeaturesExtents_[feature_uid];\r\n    if (extent) {\r\n      const rBush = this.rBush_;\r\n      const nodesToRemove = [];\r\n      rBush.forEachInExtent(extent, function (node) {\r\n        if (feature === node.feature) {\r\n          nodesToRemove.push(node);\r\n        }\r\n      });\r\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\r\n        rBush.remove(nodesToRemove[i]);\r\n      }\r\n    }\r\n\r\n    if (unregister) {\r\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\r\n      delete this.featureChangeListenerKeys_[feature_uid];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the interaction from its current map and attach it to the new map.\r\n   * Subclasses may set up event handlers to get notified about changes to\r\n   * the map here.\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   */\r\n  setMap(map) {\r\n    const currentMap = this.getMap();\r\n    const keys = this.featuresListenerKeys_;\r\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (\r\n      this.getFeatures_()\r\n    );\r\n\r\n    if (currentMap) {\r\n      keys.forEach(unlistenByKey);\r\n      keys.length = 0;\r\n      features.forEach(this.forEachFeatureRemove_.bind(this));\r\n    }\r\n    super.setMap(map);\r\n\r\n    if (map) {\r\n      if (this.features_) {\r\n        keys.push(\r\n          listen(\r\n            this.features_,\r\n            CollectionEventType.ADD,\r\n            this.handleFeatureAdd_,\r\n            this\r\n          ),\r\n          listen(\r\n            this.features_,\r\n            CollectionEventType.REMOVE,\r\n            this.handleFeatureRemove_,\r\n            this\r\n          )\r\n        );\r\n      } else if (this.source_) {\r\n        keys.push(\r\n          listen(\r\n            this.source_,\r\n            VectorEventType.ADDFEATURE,\r\n            this.handleFeatureAdd_,\r\n            this\r\n          ),\r\n          listen(\r\n            this.source_,\r\n            VectorEventType.REMOVEFEATURE,\r\n            this.handleFeatureRemove_,\r\n            this\r\n          )\r\n        );\r\n      }\r\n      features.forEach(this.forEachFeatureAdd_.bind(this));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\r\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\r\n   * @param {import(\"../PluggableMap.js\").default} map Map.\r\n   * @return {Result} Snap result\r\n   */\r\n  snapTo(pixel, pixelCoordinate, map) {\r\n    const lowerLeft = map.getCoordinateFromPixel([\r\n      pixel[0] - this.pixelTolerance_,\r\n      pixel[1] + this.pixelTolerance_,\r\n    ]);\r\n    const upperRight = map.getCoordinateFromPixel([\r\n      pixel[0] + this.pixelTolerance_,\r\n      pixel[1] - this.pixelTolerance_,\r\n    ]);\r\n    const box = boundingExtent([lowerLeft, upperRight]);\r\n\r\n    let segments = this.rBush_.getInExtent(box);\r\n\r\n    // If snapping on vertices only, don't consider circles\r\n    if (this.vertex_ && !this.edge_) {\r\n      segments = segments.filter(function (segment) {\r\n        return segment.feature.getGeometry().getType() !== GeometryType.CIRCLE;\r\n      });\r\n    }\r\n\r\n    let snapped = false;\r\n    let vertex = null;\r\n    let vertexPixel = null;\r\n\r\n    if (segments.length === 0) {\r\n      return {\r\n        snapped: snapped,\r\n        vertex: vertex,\r\n        vertexPixel: vertexPixel,\r\n      };\r\n    }\r\n\r\n    const projection = map.getView().getProjection();\r\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\r\n\r\n    let closestSegmentData;\r\n    let minSquaredDistance = Infinity;\r\n    for (let i = 0; i < segments.length; ++i) {\r\n      const segmentData = segments[i];\r\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\r\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\r\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\r\n      if (delta < minSquaredDistance) {\r\n        closestSegmentData = segmentData;\r\n        minSquaredDistance = delta;\r\n      }\r\n    }\r\n    const closestSegment = closestSegmentData.segment;\r\n\r\n    if (this.vertex_ && !this.edge_) {\r\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\r\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\r\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n      if (dist <= this.pixelTolerance_) {\r\n        snapped = true;\r\n        vertex =\r\n          squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\r\n        vertexPixel = map.getPixelFromCoordinate(vertex);\r\n      }\r\n    } else if (this.edge_) {\r\n      const isCircle =\r\n        closestSegmentData.feature.getGeometry().getType() ===\r\n        GeometryType.CIRCLE;\r\n      if (isCircle) {\r\n        let circleGeometry = closestSegmentData.feature.getGeometry();\r\n        const userProjection = getUserProjection();\r\n        if (userProjection) {\r\n          circleGeometry = circleGeometry\r\n            .clone()\r\n            .transform(userProjection, projection);\r\n        }\r\n        vertex = toUserCoordinate(\r\n          closestOnCircle(\r\n            projectedCoordinate,\r\n            /** @type {import(\"../geom/Circle.js\").default} */ (circleGeometry)\r\n          ),\r\n          projection\r\n        );\r\n      } else {\r\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\r\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\r\n        vertex = toUserCoordinate(\r\n          closestOnSegment(projectedCoordinate, tempSegment),\r\n          projection\r\n        );\r\n      }\r\n      vertexPixel = map.getPixelFromCoordinate(vertex);\r\n\r\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\r\n        snapped = true;\r\n        if (this.vertex_ && !isCircle) {\r\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\r\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\r\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\r\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\r\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\r\n          if (dist <= this.pixelTolerance_) {\r\n            vertex =\r\n              squaredDist1 > squaredDist2\r\n                ? closestSegment[1]\r\n                : closestSegment[0];\r\n            vertexPixel = map.getPixelFromCoordinate(vertex);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (snapped) {\r\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\r\n    }\r\n\r\n    return {\r\n      snapped: snapped,\r\n      vertex: vertex,\r\n      vertexPixel: vertexPixel,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @private\r\n   */\r\n  updateFeature_(feature) {\r\n    this.removeFeature(feature, false);\r\n    this.addFeature(feature, false);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeCircleGeometry_(feature, geometry) {\r\n    const projection = this.getMap().getView().getProjection();\r\n    let circleGeometry = geometry;\r\n    const userProjection = getUserProjection();\r\n    if (userProjection) {\r\n      circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (\r\n        circleGeometry.clone().transform(userProjection, projection)\r\n      );\r\n    }\r\n    const polygon = fromCircle(circleGeometry);\r\n    if (userProjection) {\r\n      polygon.transform(projection, userProjection);\r\n    }\r\n    const coordinates = polygon.getCoordinates()[0];\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: segment,\r\n      };\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeGeometryCollectionGeometry_(feature, geometry) {\r\n    const geometries = geometry.getGeometriesArray();\r\n    for (let i = 0; i < geometries.length; ++i) {\r\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\r\n      if (segmentWriter) {\r\n        segmentWriter(feature, geometries[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeLineStringGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n      const segment = coordinates.slice(i, i + 2);\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: segment,\r\n      };\r\n      this.rBush_.insert(boundingExtent(segment), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiLineStringGeometry_(feature, geometry) {\r\n    const lines = geometry.getCoordinates();\r\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\r\n      const coordinates = lines[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = {\r\n          feature: feature,\r\n          segment: segment,\r\n        };\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPointGeometry_(feature, geometry) {\r\n    const points = geometry.getCoordinates();\r\n    for (let i = 0, ii = points.length; i < ii; ++i) {\r\n      const coordinates = points[i];\r\n      const segmentData = {\r\n        feature: feature,\r\n        segment: [coordinates, coordinates],\r\n      };\r\n      this.rBush_.insert(geometry.getExtent(), segmentData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writeMultiPolygonGeometry_(feature, geometry) {\r\n    const polygons = geometry.getCoordinates();\r\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\r\n      const rings = polygons[k];\r\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n        const coordinates = rings[j];\r\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n          const segment = coordinates.slice(i, i + 2);\r\n          const segmentData = {\r\n            feature: feature,\r\n            segment: segment,\r\n          };\r\n          this.rBush_.insert(boundingExtent(segment), segmentData);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePointGeometry_(feature, geometry) {\r\n    const coordinates = geometry.getCoordinates();\r\n    const segmentData = {\r\n      feature: feature,\r\n      segment: [coordinates, coordinates],\r\n    };\r\n    this.rBush_.insert(geometry.getExtent(), segmentData);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../Feature.js\").default} feature Feature\r\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\r\n   * @private\r\n   */\r\n  writePolygonGeometry_(feature, geometry) {\r\n    const rings = geometry.getCoordinates();\r\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\r\n      const coordinates = rings[j];\r\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\r\n        const segment = coordinates.slice(i, i + 2);\r\n        const segmentData = {\r\n          feature: feature,\r\n          segment: segment,\r\n        };\r\n        this.rBush_.insert(boundingExtent(segment), segmentData);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Snap;\r\n", "/**\r\n * @module ol/interaction\r\n */\r\nimport Collection from './Collection.js';\r\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\r\nimport DragPan from './interaction/DragPan.js';\r\nimport DragRotate from './interaction/DragRotate.js';\r\nimport DragZoom from './interaction/DragZoom.js';\r\nimport KeyboardPan from './interaction/KeyboardPan.js';\r\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\r\nimport Kinetic from './Kinetic.js';\r\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\r\nimport PinchRotate from './interaction/PinchRotate.js';\r\nimport PinchZoom from './interaction/PinchZoom.js';\r\n\r\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\r\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\r\nexport {default as DragBox} from './interaction/DragBox.js';\r\nexport {default as DragPan} from './interaction/DragPan.js';\r\nexport {default as DragRotate} from './interaction/DragRotate.js';\r\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\r\nexport {default as DragZoom} from './interaction/DragZoom.js';\r\nexport {default as Draw} from './interaction/Draw.js';\r\nexport {default as Extent} from './interaction/Extent.js';\r\nexport {default as Interaction} from './interaction/Interaction.js';\r\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\r\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\r\nexport {default as Modify} from './interaction/Modify.js';\r\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\r\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\r\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\r\nexport {default as Pointer} from './interaction/Pointer.js';\r\nexport {default as Select} from './interaction/Select.js';\r\nexport {default as Snap} from './interaction/Snap.js';\r\nexport {default as Translate} from './interaction/Translate.js';\r\n\r\n/**\r\n * @typedef {Object} DefaultsOptions\r\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\r\n * desired.\r\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\r\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\r\n * useful when page scroll is desired for maps that do not have the browser's\r\n * focus.\r\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\r\n * desired.\r\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\r\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\r\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\r\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\r\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\r\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\r\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\r\n * @property {number} [zoomDuration] Duration of the zoom animation in\r\n * milliseconds.\r\n */\r\n\r\n/**\r\n * Set of interactions included in maps by default. Specific interactions can be\r\n * excluded by setting the appropriate option to false in the constructor\r\n * options, but the order of the interactions is fixed.  If you want to specify\r\n * a different order for interactions, you will need to create your own\r\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\r\n * them into a {@link module:ol/Collection~Collection} in the order you want\r\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\r\n * be of interest if the event propagation needs to be stopped at a point.\r\n * The default set of interactions, in sequence, is:\r\n * * {@link module:ol/interaction/DragRotate~DragRotate}\r\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\r\n * * {@link module:ol/interaction/DragPan~DragPan}\r\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\r\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\r\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\r\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\r\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\r\n * * {@link module:ol/interaction/DragZoom~DragZoom}\r\n *\r\n * @param {DefaultsOptions} [opt_options] Defaults options.\r\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\r\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\r\n * constructor's `interactions` option.\r\n * @api\r\n */\r\nexport function defaults(opt_options) {\r\n  const options = opt_options ? opt_options : {};\r\n\r\n  const interactions = new Collection();\r\n\r\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\r\n\r\n  const altShiftDragRotate =\r\n    options.altShiftDragRotate !== undefined\r\n      ? options.altShiftDragRotate\r\n      : true;\r\n  if (altShiftDragRotate) {\r\n    interactions.push(new DragRotate());\r\n  }\r\n\r\n  const doubleClickZoom =\r\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\r\n  if (doubleClickZoom) {\r\n    interactions.push(\r\n      new DoubleClickZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\r\n  if (dragPan) {\r\n    interactions.push(\r\n      new DragPan({\r\n        onFocusOnly: options.onFocusOnly,\r\n        kinetic: kinetic,\r\n      })\r\n    );\r\n  }\r\n\r\n  const pinchRotate =\r\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\r\n  if (pinchRotate) {\r\n    interactions.push(new PinchRotate());\r\n  }\r\n\r\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\r\n  if (pinchZoom) {\r\n    interactions.push(\r\n      new PinchZoom({\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\r\n  if (keyboard) {\r\n    interactions.push(new KeyboardPan());\r\n    interactions.push(\r\n      new KeyboardZoom({\r\n        delta: options.zoomDelta,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const mouseWheelZoom =\r\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\r\n  if (mouseWheelZoom) {\r\n    interactions.push(\r\n      new MouseWheelZoom({\r\n        onFocusOnly: options.onFocusOnly,\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  const shiftDragZoom =\r\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\r\n  if (shiftDragZoom) {\r\n    interactions.push(\r\n      new DragZoom({\r\n        duration: options.zoomDuration,\r\n      })\r\n    );\r\n  }\r\n\r\n  return interactions;\r\n}\r\n", "/**\r\n * @module ol/Map\r\n */\r\nimport CompositeMapRenderer from './renderer/Composite.js';\r\nimport PluggableMap from './PluggableMap.js';\r\nimport {assign} from './obj.js';\r\nimport {defaults as defaultControls} from './control.js';\r\nimport {defaults as defaultInteractions} from './interaction.js';\r\n\r\n/**\r\n * @classdesc\r\n * The map is the core component of OpenLayers. For a map to render, a view,\r\n * one or more layers, and a target container are needed:\r\n *\r\n *     import Map from 'ol/Map';\r\n *     import View from 'ol/View';\r\n *     import TileLayer from 'ol/layer/Tile';\r\n *     import OSM from 'ol/source/OSM';\r\n *\r\n *     var map = new Map({\r\n *       view: new View({\r\n *         center: [0, 0],\r\n *         zoom: 1\r\n *       }),\r\n *       layers: [\r\n *         new TileLayer({\r\n *           source: new OSM()\r\n *         })\r\n *       ],\r\n *       target: 'map'\r\n *     });\r\n *\r\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\r\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\r\n * element with the id `map`.\r\n *\r\n * The constructor places a viewport container (with CSS class name\r\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\r\n * further elements within the viewport: one with CSS class name\r\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\r\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\r\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\r\n * itself is placed in a further element within the viewport.\r\n *\r\n * Layers are stored as a {@link module:ol/Collection~Collection} in\r\n * layerGroups. A top-level group is provided by the library. This is what is\r\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\r\n * options are added to this group, and `addLayer` and `removeLayer` change the\r\n * layer collection in the group. `getLayers` is a convenience function for\r\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\r\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\r\n * options or added with `addLayer` can be groups, which can contain further\r\n * groups, and so on.\r\n *\r\n * @api\r\n */\r\nclass Map extends PluggableMap {\r\n  /**\r\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\r\n   */\r\n  constructor(options) {\r\n    options = assign({}, options);\r\n    if (!options.controls) {\r\n      options.controls = defaultControls();\r\n    }\r\n    if (!options.interactions) {\r\n      options.interactions = defaultInteractions({\r\n        onFocusOnly: true,\r\n      });\r\n    }\r\n\r\n    super(options);\r\n  }\r\n\r\n  createRenderer() {\r\n    return new CompositeMapRenderer(this);\r\n  }\r\n}\r\n\r\nexport default Map;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { defaults as defaultControls } from 'ol/control';\r\nimport { defaults as defaultInteractions } from 'ol/interaction';\r\nimport OpenLayersMap from 'ol/Map.js';\r\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\r\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ResizeMixin\r\n * @mixes FocusMixin\r\n */\r\nexport const MapMixin = (superClass) =>\r\n  class extends FocusMixin(ResizeMixin(superClass)) {\r\n    constructor() {\r\n      super();\r\n      // Create map container element and initialize OL map instance\r\n      this._mapTarget = document.createElement('div');\r\n      this._mapTarget.id = 'map';\r\n      // Ensure accessible keyboard controls are enabled\r\n      this._mapTarget.setAttribute('tabindex', '0');\r\n      const options = {\r\n        // Override default controls to remove default labels, which is required to\r\n        // correctly display icons through pseudo-element\r\n        controls: defaultControls({\r\n          rotate: false,\r\n          zoomOptions: { zoomInLabel: '', zoomOutLabel: '' },\r\n        }),\r\n        // Override default interactions to allow mouse-wheel zoom + drag-pan when not focused\r\n        interactions: defaultInteractions({ onFocusOnly: false }),\r\n        target: this._mapTarget,\r\n      };\r\n      this._configuration = new OpenLayersMap(options);\r\n    }\r\n\r\n    /**\r\n     * The internal OpenLayers map instance used to configure the map.\r\n     * See the OpenLayers [API](https://openlayers.org/en/latest/apidoc/) and\r\n     * [examples](https://openlayers.org/en/latest/examples/) for further information.\r\n     * @returns {*}\r\n     */\r\n    get configuration() {\r\n      return this._configuration;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n      // Add map container to shadow root, trigger OL resize calculation\r\n      this.shadowRoot.appendChild(this._mapTarget);\r\n      this.__addMapFocusListeners();\r\n    }\r\n\r\n    /**\r\n     * Implements resize callback from ResizeMixin to update size of OL map instance\r\n     * @override\r\n     * @protected\r\n     */\r\n    _onResize(_contentRect) {\r\n      this._configuration.updateSize();\r\n    }\r\n\r\n    /**\r\n     * Registers focus listeners on the map container to manually manage focus in\r\n     * FocusMixin. FocusMixin currently assumes that the focusable element will\r\n     * be in the light DOM and is available as event target.\r\n     * The map container however is in the shadow DOM and thus focus events will\r\n     * always have the host element as target.\r\n     * @private\r\n     */\r\n    __addMapFocusListeners() {\r\n      this._mapTarget.addEventListener('focusin', (e) => {\r\n        if (e.target === this._mapTarget) {\r\n          this._setFocused(true);\r\n        }\r\n      });\r\n      this._mapTarget.addEventListener('focusout', () => {\r\n        this._setFocused(false);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Overrides method from `FocusMixin` to disable automatic focus management.\r\n     * See custom logic in __addMapFocusListeners\r\n     *\r\n     * @param {FocusEvent} _event\r\n     * @return {boolean}\r\n     * @override\r\n     * @protected\r\n     */\r\n    _shouldSetFocus(_event) {\r\n      return false;\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const mapStyles = css`\r\n  :host {\r\n    display: block;\r\n    height: 400px;\r\n    flex: 1 1 auto;\r\n    align-self: stretch;\r\n    overflow: hidden;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  #map {\r\n    width: 100%;\r\n    height: 100%;\r\n    outline: none;\r\n  }\r\n\r\n  #map,\r\n  .ol-viewport,\r\n  .ol-layers {\r\n    border-radius: inherit;\r\n    overflow: hidden;\r\n  }\r\n\r\n  #map:fullscreen {\r\n    border-radius: 0;\r\n  }\r\n\r\n  #map:-webkit-full-screen {\r\n    border-radius: 0;\r\n  }\r\n\r\n  /* Functional styles, copied from 'ol/ol.css' */\r\n\r\n  .ol-box {\r\n    box-sizing: border-box;\r\n    border-radius: 2px;\r\n    border: 1px solid rgba(0, 0, 0, 0.5);\r\n    background-color: rgba(255, 255, 255, 0.2);\r\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5);\r\n  }\r\n\r\n  .ol-unsupported {\r\n    display: none;\r\n  }\r\n\r\n  .ol-viewport,\r\n  .ol-unselectable {\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  .ol-viewport canvas {\r\n    all: unset;\r\n  }\r\n\r\n  .ol-selectable {\r\n    -webkit-touch-callout: default;\r\n    -webkit-user-select: text;\r\n    user-select: text;\r\n  }\r\n\r\n  .ol-grabbing {\r\n    cursor: grabbing;\r\n  }\r\n\r\n  .ol-grab {\r\n    cursor: move;\r\n    cursor: grab;\r\n  }\r\n\r\n  /* Control positioning and styling */\r\n\r\n  .ol-overlaycontainer-stopevent {\r\n    /* stylelint-disable declaration-block-no-redundant-longhand-properties */\r\n    display: grid;\r\n    grid-template-columns: min-content 1fr min-content;\r\n    grid-template-rows: min-content 1fr min-content min-content min-content min-content;\r\n    padding: var(--vaadin-map-controls-inset, 0.25em);\r\n    box-sizing: border-box;\r\n    grid-template-areas:\r\n      'scale mouse-position fullscreen'\r\n      'overview-map . zoom-extent'\r\n      'overview-map . compass'\r\n      'overview-map . zoom-slider'\r\n      'overview-map . zoom'\r\n      'overview-map attribution attribution';\r\n  }\r\n\r\n  .ol-mouse-position {\r\n    grid-area: mouse-position;\r\n    align-self: start;\r\n    text-align: center;\r\n    font-size: 0.625em;\r\n    color: #000;\r\n    filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\r\n  }\r\n\r\n  .ol-scale-line,\r\n  .ol-scale-bar {\r\n    grid-area: scale;\r\n    position: relative;\r\n    pointer-events: none !important;\r\n    color: #000;\r\n  }\r\n\r\n  .ol-scale-line-inner {\r\n    border: 1px solid rgba(0, 0, 0, 0.5);\r\n    border-top: none;\r\n    font-size: 0.625em;\r\n    text-align: center;\r\n    will-change: contents, width, filter;\r\n    transition: all 0.25s;\r\n    filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\r\n  }\r\n\r\n  .ol-scale-bar-inner {\r\n    border: 1px solid rgba(0, 0, 0, 0.5);\r\n    box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5);\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ol-scale-step-marker {\r\n    display: none;\r\n  }\r\n\r\n  .ol-scale-step-text {\r\n    position: absolute;\r\n    top: 0.75em;\r\n    font-size: 0.625em;\r\n    color: #000;\r\n    filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .ol-scale-text {\r\n    position: absolute;\r\n    font-size: 0.625em;\r\n    top: 2em;\r\n    color: #000;\r\n    white-space: nowrap;\r\n    filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\r\n  }\r\n\r\n  .ol-scale-singlebar {\r\n    height: 0.25em;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .ol-control {\r\n    margin: 0.25em;\r\n  }\r\n\r\n  .ol-control button {\r\n    -webkit-appearance: none;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    background: #fff;\r\n    font: inherit;\r\n    color: inherit;\r\n    width: 1.5em;\r\n    height: 1.5em;\r\n  }\r\n\r\n  .ol-control button::-moz-focus-inner {\r\n    border: none;\r\n    padding: 0;\r\n  }\r\n\r\n  .ol-compass {\r\n    grid-area: compass;\r\n    display: block;\r\n    will-change: transform;\r\n  }\r\n\r\n  .ol-zoom {\r\n    grid-area: zoom;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .ol-zoom-in:empty::before {\r\n    content: var(--vaadin-map-icon-zoom-in, '+');\r\n  }\r\n\r\n  .ol-zoom-out:empty::before {\r\n    content: var(--vaadin-map-icon-zoom-out, '\\\\2013');\r\n  }\r\n\r\n  .ol-attribution {\r\n    grid-area: attribution;\r\n    margin-inline-start: auto !important;\r\n    display: flex;\r\n    flex-flow: row-reverse;\r\n  }\r\n\r\n  .ol-attribution.ol-uncollapsible {\r\n    margin-inline-end: calc(var(--vaadin-map-controls-inset, 0.25em) * -1);\r\n    margin-block-end: calc(var(--vaadin-map-controls-inset, 0.25em) * -1);\r\n  }\r\n\r\n  .ol-attribution button span:empty::before {\r\n    content: var(--vaadin-map-icon-attribution-collapse, '\\\\25B8');\r\n  }\r\n\r\n  .ol-attribution.ol-collapsed button span:empty::before {\r\n    content: var(--vaadin-map-icon-attribution-expand, '\\\\2139');\r\n  }\r\n\r\n  .ol-attribution ul {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1em;\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0.25em 0.5em;\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  .ol-attribution.ol-collapsed ul {\r\n    display: none;\r\n  }\r\n\r\n  .ol-attribution.ol-uncollapsible button {\r\n    display: none;\r\n  }\r\n\r\n  .ol-rotate {\r\n    grid-area: compass;\r\n  }\r\n\r\n  .ol-compass:empty::before {\r\n    content: var(--vaadin-map-icon-compass, '\\\\2191');\r\n  }\r\n\r\n  .ol-full-screen {\r\n    grid-area: fullscreen;\r\n  }\r\n\r\n  .ol-full-screen button:empty::before {\r\n    content: var(--vaadin-map-icon-fullscreen, '\\\\2922');\r\n  }\r\n\r\n  .ol-full-screen .ol-full-screen-true:empty::before {\r\n    content: var(--vaadin-map-icon-close, '\\\\00D7');\r\n  }\r\n\r\n  .ol-overviewmap {\r\n    grid-area: overview-map;\r\n    align-self: end;\r\n    width: max-content;\r\n  }\r\n\r\n  .ol-overviewmap button span:empty::before {\r\n    content: var(--vaadin-map-icon-overview-map-collapse, '\\\\25BE');\r\n  }\r\n\r\n  .ol-overviewmap.ol-collapsed button span:empty::before {\r\n    content: var(--vaadin-map-icon-overview-map-expand, '\\\\25B4');\r\n  }\r\n\r\n  .ol-overviewmap-map {\r\n    height: 10em;\r\n    width: 10em;\r\n    border: 1px solid rgba(0, 0, 0, 0.5);\r\n  }\r\n\r\n  .ol-overviewmap.ol-collapsed .ol-overviewmap-map,\r\n  .ol-overviewmap.ol-uncollapsible button {\r\n    display: none;\r\n  }\r\n\r\n  .ol-overviewmap-box {\r\n    border: 1px dashed rgba(0, 0, 0, 0.5);\r\n    filter: drop-shadow(0 0 1px #fff) drop-shadow(0 0 1px #fff);\r\n    will-change: filter;\r\n    cursor: move;\r\n  }\r\n\r\n  .ol-zoomslider {\r\n    grid-area: zoom-slider;\r\n    height: 8em;\r\n  }\r\n\r\n  .ol-zoomslider button {\r\n    position: relative;\r\n    height: 0.5em;\r\n    display: block;\r\n    border-radius: inherit;\r\n  }\r\n\r\n  .ol-zoom-extent {\r\n    grid-area: zoom-extent;\r\n    align-self: end;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { MapMixin } from './vaadin-map-mixin.js';\r\nimport { mapStyles } from './vaadin-map-styles.js';\r\n\r\nregisterStyles('vaadin-map', mapStyles, { moduleId: 'vaadin-map-styles' });\r\n\r\n/**\r\n * `vaadin-map` is a web component for displaying web maps.\r\n *\r\n * The component is a light-weight wrapper around the OpenLayers mapping library.\r\n *\r\n * ### Basic Usage\r\n *\r\n * Add a `<vaadin-map>` element to your HTML:\r\n *\r\n * ```html\r\n * <vaadin-map></vaadin-map>\r\n * ```\r\n *\r\n * Then use the exposed OpenLayers API to configure it:\r\n * ```html\r\n * <script type=\"module\">\r\n *   import \"@vaadin/map\";\r\n *   import TileLayer from \"ol/layer/Tile\";\r\n *   import OSM from \"ol/source/OSM\";\r\n *   import View from \"ol/View\";\r\n *\r\n *   const map = document.querySelector(\"vaadin-map\");\r\n *   customElements.whenDefined(\"vaadin-map\").then(() => {\r\n *     map.configuration.addLayer(new TileLayer({\r\n *       source: new OSM()\r\n *     }));\r\n *     map.configuration.setView(new View({\r\n *       center: [0, 0],\r\n *       zoom: 3\r\n *     }));\r\n *   });\r\n * </script>\r\n * ```\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes MapMixin\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n */\r\nclass Map extends MapMixin(ThemableMixin(ElementMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-map';\r\n  }\r\n\r\n  static get cvdlName() {\r\n    return 'vaadin-map';\r\n  }\r\n\r\n  static get template() {\r\n    return html``;\r\n  }\r\n}\r\n\r\ndefineCustomElement(Map);\r\n\r\nexport { Map };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;AAAA,EACE;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6KA,EAAE,UAAU,WAAW;AACzB;;;AC3L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",
  "names": ["Control", "__extends", "Attribution", "__extends", "Rotate", "__extends", "Zoom", "__extends", "FullScreen", "EventType_default", "__extends", "MousePosition", "EventType_default", "html", "__extends", "MapRenderer", "layer", "i", "__extends", "CompositeMapRenderer", "Event_default", "EventType_default", "__extends", "Overlay", "__extends", "GroupEvent", "Property", "__extends", "LayerGroup", "__extends", "MapEvent", "__extends", "MapBrowserEvent", "__extends", "MapBrowserEventHandler", "EventType_default", "newEvent", "PriorityQueue", "__extends", "TileQueue", "__extends", "PluggableMap", "EventType_default", "equals", "__extends", "ControlledMap", "OverviewMap", "equals", "__extends", "ScaleLine", "html", "scale", "__extends", "ZoomSlider", "EventType_default", "__extends", "ZoomToExtent", "__extends", "DoubleClickZoom", "__extends", "DragPan", "centroid", "distance", "__extends", "DragRotate", "__extends", "RenderBox", "__extends", "DragBoxEvent", "__extends", "DragBox", "__extends", "DragZoom", "__extends", "KeyboardPan", "__extends", "KeyboardZoom", "Kinetic", "__extends", "MouseWheelZoom", "__extends", "PinchRotate", "centroid", "__extends", "PinchZoom", "distance", "centroid", "__extends", "DragAndDropEvent", "__extends", "DragAndDrop", "__extends", "DragRotateAndZoom", "__extends", "Circle", "squaredDistance", "rotate", "__extends", "LineString", "__extends", "MultiLineString", "__extends", "MultiPoint", "squaredDistance", "linearRingss", "__extends", "MultiPolygon", "linearRingss", "Mode", "__extends", "DrawEvent", "__extends", "Draw", "Mode", "squaredDistance", "Vector_default", "Mode", "__extends", "ExtentEvent", "__extends", "Extent", "Vector_default", "squaredDistance", "__extends", "ModifyEvent", "__extends", "Modify", "Vector_default", "getDefaultStyleFunction", "equals", "buffer", "squaredDistance", "__extends", "SelectEvent", "__extends", "Select", "getDefaultStyleFunction", "layer", "feature", "tempSegment", "__extends", "Snap", "squaredDistance", "defaults", "__extends", "Map", "defaults", "Map_default", "defaults", "Map_default", "Map"]
}
