{
  "version": 3,
  "sources": ["../../@vaadin/time-picker/src/vaadin-time-picker-helper.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2018 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\n/**\r\n * A function to format given `Object` as time string.\r\n * Object is in the format `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`\r\n * @param {object} time\r\n * @return {string}\r\n */\r\nexport function formatISOTime(time) {\r\n  if (!time) {\r\n    return '';\r\n  }\r\n\r\n  const pad = (num = 0, fmt = '00') => (fmt + num).substr((fmt + num).length - fmt.length);\r\n  // Always display hour and minute\r\n  let timeString = `${pad(time.hours)}:${pad(time.minutes)}`;\r\n  // Adding second and millisecond depends on resolution\r\n  if (time.seconds !== undefined) {\r\n    timeString += `:${pad(time.seconds)}`;\r\n  }\r\n  if (time.milliseconds !== undefined) {\r\n    timeString += `.${pad(time.milliseconds, '000')}`;\r\n  }\r\n  return timeString;\r\n}\r\n\r\nconst MATCH_HOURS = '(\\\\d|[0-1]\\\\d|2[0-3])';\r\nconst MATCH_MINUTES = '(\\\\d|[0-5]\\\\d)';\r\nconst MATCH_SECONDS = MATCH_MINUTES;\r\nconst MATCH_MILLISECONDS = '(\\\\d{1,3})';\r\nconst re = new RegExp(`^${MATCH_HOURS}(?::${MATCH_MINUTES}(?::${MATCH_SECONDS}(?:\\\\.${MATCH_MILLISECONDS})?)?)?$`, 'u');\r\n\r\n/**\r\n * A function to parse the given string to an `Object` in the format\r\n * `{ hours: ..., minutes: ..., seconds: ..., milliseconds: ... }`.\r\n *\r\n * @param {string} timeString\r\n * @return {object | undefined}\r\n */\r\nexport function parseISOTime(timeString) {\r\n  // Parsing with RegExp to ensure correct format\r\n  const parts = re.exec(timeString);\r\n  if (parts) {\r\n    // Allows setting the milliseconds with hundreds and tens precision\r\n    if (parts[4]) {\r\n      while (parts[4].length < 3) {\r\n        parts[4] += '0';\r\n      }\r\n    }\r\n    return { hours: parts[1], minutes: parts[2], seconds: parts[3], milliseconds: parts[4] };\r\n  }\r\n}\r\n\r\nfunction getStepSegment(stepValue) {\r\n  const step = stepValue == null ? 60 : parseFloat(stepValue);\r\n  if (step % 3600 === 0) {\r\n    // Accept hours\r\n    return 1;\r\n  } else if (step % 60 === 0 || !step) {\r\n    // Accept minutes\r\n    return 2;\r\n  } else if (step % 1 === 0) {\r\n    // Accept seconds\r\n    return 3;\r\n  } else if (step < 1) {\r\n    // Accept milliseconds\r\n    return 4;\r\n  }\r\n}\r\n\r\n/**\r\n * A function to validate the time object based on the given step.\r\n *\r\n * @param {object} timeObject\r\n * @param {number} step\r\n * @return {object | undefined}\r\n */\r\nexport function validateTime(timeObject, step) {\r\n  if (timeObject) {\r\n    const stepSegment = getStepSegment(step);\r\n    timeObject.hours = parseInt(timeObject.hours);\r\n    timeObject.minutes = parseInt(timeObject.minutes || 0);\r\n    timeObject.seconds = stepSegment < 3 ? undefined : parseInt(timeObject.seconds || 0);\r\n    timeObject.milliseconds = stepSegment < 4 ? undefined : parseInt(timeObject.milliseconds || 0);\r\n  }\r\n  return timeObject;\r\n}\r\n"],
  "mappings": ";AAYO,SAAS,cAAc,MAAM;AAClC,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AAEA,QAAM,MAAM,CAAC,MAAM,GAAG,MAAM,UAAU,MAAM,KAAK,QAAQ,MAAM,KAAK,SAAS,IAAI,MAAM;AAEvF,MAAI,aAAa,GAAG,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,OAAO,CAAC;AAExD,MAAI,KAAK,YAAY,QAAW;AAC9B,kBAAc,IAAI,IAAI,KAAK,OAAO,CAAC;AAAA,EACrC;AACA,MAAI,KAAK,iBAAiB,QAAW;AACnC,kBAAc,IAAI,IAAI,KAAK,cAAc,KAAK,CAAC;AAAA,EACjD;AACA,SAAO;AACT;AAEA,IAAM,cAAc;AACpB,IAAM,gBAAgB;AACtB,IAAM,gBAAgB;AACtB,IAAM,qBAAqB;AAC3B,IAAM,KAAK,IAAI,OAAO,IAAI,WAAW,OAAO,aAAa,OAAO,aAAa,SAAS,kBAAkB,WAAW,GAAG;AAS/G,SAAS,aAAa,YAAY;AAEvC,QAAM,QAAQ,GAAG,KAAK,UAAU;AAChC,MAAI,OAAO;AAET,QAAI,MAAM,CAAC,GAAG;AACZ,aAAO,MAAM,CAAC,EAAE,SAAS,GAAG;AAC1B,cAAM,CAAC,KAAK;AAAA,MACd;AAAA,IACF;AACA,WAAO,EAAE,OAAO,MAAM,CAAC,GAAG,SAAS,MAAM,CAAC,GAAG,SAAS,MAAM,CAAC,GAAG,cAAc,MAAM,CAAC,EAAE;AAAA,EACzF;AACF;AAEA,SAAS,eAAe,WAAW;AACjC,QAAM,OAAO,aAAa,OAAO,KAAK,WAAW,SAAS;AAC1D,MAAI,OAAO,SAAS,GAAG;AAErB,WAAO;AAAA,EACT,WAAW,OAAO,OAAO,KAAK,CAAC,MAAM;AAEnC,WAAO;AAAA,EACT,WAAW,OAAO,MAAM,GAAG;AAEzB,WAAO;AAAA,EACT,WAAW,OAAO,GAAG;AAEnB,WAAO;AAAA,EACT;AACF;AASO,SAAS,aAAa,YAAY,MAAM;AAC7C,MAAI,YAAY;AACd,UAAM,cAAc,eAAe,IAAI;AACvC,eAAW,QAAQ,SAAS,WAAW,KAAK;AAC5C,eAAW,UAAU,SAAS,WAAW,WAAW,CAAC;AACrD,eAAW,UAAU,cAAc,IAAI,SAAY,SAAS,WAAW,WAAW,CAAC;AACnF,eAAW,eAAe,cAAc,IAAI,SAAY,SAAS,WAAW,gBAAgB,CAAC;AAAA,EAC/F;AACA,SAAO;AACT;",
  "names": []
}
