{
  "version": 3,
  "sources": ["../../@vaadin/crud/theme/lumo/vaadin-crud-styles.js", "../../@vaadin/crud/src/vaadin-crud-styles.js", "../../@vaadin/crud/src/vaadin-crud-dialog.js", "../../@vaadin/crud/src/vaadin-crud-include-mixin.js", "../../@vaadin/crud/src/vaadin-crud-grid-mixin.js", "../../@vaadin/crud/src/vaadin-crud-grid.js", "../../@vaadin/crud/src/vaadin-crud-form.js", "../../@vaadin/crud/src/vaadin-crud-controllers.js", "../../@vaadin/crud/src/vaadin-crud-mixin.js", "../../@vaadin/crud/src/vaadin-crud.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { dialogOverlay } from '@vaadin/dialog/theme/lumo/vaadin-dialog-styles.js';\r\nimport { overlay } from '@vaadin/vaadin-lumo-styles/mixins/overlay.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-crud-edit',\r\n  css`\r\n    :host {\r\n      min-width: auto;\r\n      margin: 0;\r\n      font-family: 'lumo-icons', var(--lumo-font-family);\r\n      font-size: var(--lumo-icon-size-m);\r\n      line-height: 1;\r\n      position: relative;\r\n      width: var(--lumo-size-s);\r\n      height: var(--lumo-size-s);\r\n      outline: none;\r\n    }\r\n\r\n    [part='icon']::before {\r\n      content: var(--lumo-icons-edit);\r\n      width: var(--lumo-size-m);\r\n      height: var(--lumo-size-m);\r\n      line-height: var(--lumo-size-m);\r\n      text-align: center;\r\n      position: absolute;\r\n      top: calc((var(--lumo-size-m) - var(--lumo-size-s)) / -2);\r\n      left: calc((var(--lumo-size-m) - var(--lumo-size-s)) / -2);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-crud-grid-edit' },\r\n);\r\n\r\n/**\r\n * Shared styles used for the CRUD editor content and buttons regardless of `editorPosition`.\r\n * They are applied to both `vaadin-crud` and `vaadin-crud-dialog-overlay` components.\r\n */\r\nconst editorStyles = css`\r\n  [part='header'] ::slotted(h3) {\r\n    margin-top: 0 !important;\r\n  }\r\n\r\n  :host(:not([dir='rtl'])) ::slotted([slot='delete-button']) {\r\n    margin-right: auto;\r\n  }\r\n\r\n  :host([dir='rtl']) ::slotted([slot='delete-button']) {\r\n    margin-left: auto;\r\n  }\r\n`;\r\n\r\nregisterStyles(\r\n  'vaadin-crud',\r\n  [\r\n    editorStyles,\r\n    css`\r\n      :host {\r\n        font-family: var(--lumo-font-family);\r\n        --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n        --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n      }\r\n\r\n      [part='scroller'] {\r\n        padding: var(--lumo-space-l);\r\n      }\r\n\r\n      [part='toolbar'] {\r\n        padding: var(--lumo-space-s) var(--lumo-space-m);\r\n        background-color: var(--lumo-contrast-5pct);\r\n        border: 1px solid var(--lumo-contrast-10pct);\r\n        border-top: none;\r\n      }\r\n\r\n      :host(:not([dir='rtl'])) [part='toolbar'] ::slotted(*:not(:first-child)) {\r\n        margin-left: var(--lumo-space-s);\r\n      }\r\n\r\n      :host([dir='rtl']) [part='toolbar'] ::slotted(*:not(:first-child)) {\r\n        margin-right: var(--lumo-space-s);\r\n      }\r\n\r\n      :host([theme~='no-border']) [part='toolbar'] {\r\n        border: 0;\r\n      }\r\n\r\n      [part='footer'] {\r\n        background-color: var(--lumo-contrast-5pct);\r\n        padding: var(--lumo-space-s);\r\n      }\r\n\r\n      [part='footer'] ::slotted(*) {\r\n        margin-left: var(--lumo-space-s);\r\n        margin-right: var(--lumo-space-s);\r\n      }\r\n\r\n      [part='editor'] {\r\n        background: var(--lumo-base-color);\r\n        box-sizing: border-box;\r\n        position: relative;\r\n      }\r\n\r\n      [part='editor']:focus::before {\r\n        position: absolute;\r\n        inset: 0;\r\n        content: '';\r\n        box-shadow: inset 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n        pointer-events: none;\r\n      }\r\n\r\n      :host(:not([editor-position=''])) [part='editor']:not([hidden]) {\r\n        box-shadow: var(--lumo-box-shadow-m);\r\n      }\r\n\r\n      :host(:not([theme~='no-border']):not([editor-position=''])) [part='editor']:not([hidden]) {\r\n        border: 1px solid var(--lumo-contrast-20pct);\r\n      }\r\n\r\n      :host(:not([theme~='no-border'])[editor-position='bottom']) [part='editor']:not([hidden]) {\r\n        border-top: 0;\r\n      }\r\n\r\n      :host(:not([dir='rtl'])[editor-position='aside']) [part='editor']:not([hidden]) {\r\n        border-left: 0;\r\n      }\r\n\r\n      :host([dir='rtl']:not([theme~='no-border'])[editor-position='aside']) [part='editor']:not([hidden]) {\r\n        border-right: 0;\r\n      }\r\n    `,\r\n  ],\r\n  { moduleId: 'lumo-crud' },\r\n);\r\n\r\nregisterStyles(\r\n  'vaadin-crud-dialog-overlay',\r\n  [\r\n    overlay,\r\n    dialogOverlay,\r\n    editorStyles,\r\n    css`\r\n      [part='header'] ::slotted(h3) {\r\n        margin-top: 0 !important;\r\n        margin-bottom: 0 !important;\r\n        margin-inline-start: var(--lumo-space-s);\r\n      }\r\n    `,\r\n  ],\r\n  {\r\n    moduleId: 'lumo-crud-dialog-overlay',\r\n  },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nexport const crudStyles = css`\r\n  :host {\r\n    width: 100%;\r\n    height: 400px;\r\n    --vaadin-crud-editor-max-height: 40%;\r\n    --vaadin-crud-editor-max-width: 40%;\r\n  }\r\n\r\n  :host,\r\n  #main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-self: stretch;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  #main {\r\n    flex: 1 1 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  :host([hidden]),\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n\r\n  [part='toolbar'] {\r\n    display: flex;\r\n    flex-shrink: 0;\r\n    align-items: baseline;\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  :host([no-toolbar]) [part='toolbar'] {\r\n    display: none;\r\n  }\r\n\r\n  #container {\r\n    display: flex;\r\n    height: 100%;\r\n  }\r\n\r\n  :host([editor-position='bottom']) #container {\r\n    flex-direction: column;\r\n  }\r\n\r\n  [part='editor'] {\r\n    z-index: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    outline: none;\r\n  }\r\n\r\n  :host(:not([editor-position=''])[editor-opened]:not([fullscreen])) [part='editor'] {\r\n    flex: 1 0 100%;\r\n  }\r\n\r\n  :host([editor-position='bottom'][editor-opened]:not([fullscreen])) [part='editor'] {\r\n    max-height: var(--vaadin-crud-editor-max-height);\r\n  }\r\n\r\n  :host([editor-position='aside'][editor-opened]:not([fullscreen])) [part='editor'] {\r\n    min-width: 300px;\r\n    max-width: var(--vaadin-crud-editor-max-width);\r\n  }\r\n\r\n  [part='scroller'] {\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: auto;\r\n    flex: auto;\r\n  }\r\n\r\n  [part='footer'] {\r\n    display: flex;\r\n    flex: none;\r\n    flex-direction: row-reverse;\r\n  }\r\n`;\r\n\r\nexport const crudDialogOverlayStyles = css`\r\n  [part='overlay'] {\r\n    max-width: 54em;\r\n    min-width: 20em;\r\n  }\r\n\r\n  [part='footer'] {\r\n    justify-content: flex-start;\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  /* Make buttons clickable */\r\n  [part='footer'] ::slotted(:not([disabled])) {\r\n    pointer-events: all;\r\n  }\r\n\r\n  :host([fullscreen]) {\r\n    inset: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  :host([fullscreen]) [part='overlay'] {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    border-radius: 0 !important;\r\n  }\r\n\r\n  :host([fullscreen]) [part='content'] {\r\n    flex: 1;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\r\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\r\nimport { DialogBaseMixin } from '@vaadin/dialog/src/vaadin-dialog-base-mixin.js';\r\nimport { dialogOverlay, resizableOverlay } from '@vaadin/dialog/src/vaadin-dialog-styles.js';\r\nimport { OverlayMixin } from '@vaadin/overlay/src/vaadin-overlay-mixin.js';\r\nimport { overlayStyles } from '@vaadin/overlay/src/vaadin-overlay-styles.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\r\nimport { crudDialogOverlayStyles } from './vaadin-crud-styles.js';\r\n\r\nregisterStyles(\r\n  'vaadin-crud-dialog-overlay',\r\n  [overlayStyles, dialogOverlay, resizableOverlay, crudDialogOverlayStyles],\r\n  {\r\n    moduleId: 'vaadin-crud-dialog-overlay-styles',\r\n  },\r\n);\r\n\r\n/**\r\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes DirMixin\r\n * @mixes OverlayMixin\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass CrudDialogOverlay extends OverlayMixin(DirMixin(ThemableMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-crud-dialog-overlay';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <div part=\"backdrop\" id=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\r\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\r\n        <section id=\"resizerContainer\" class=\"resizer-container\">\r\n          <header part=\"header\"><slot name=\"header\"></slot></header>\r\n          <div part=\"content\" id=\"content\">\r\n            <slot name=\"form\"></slot>\r\n          </div>\r\n          <footer part=\"footer\" role=\"toolbar\">\r\n            <slot name=\"save-button\"></slot>\r\n            <slot name=\"cancel-button\"></slot>\r\n            <slot name=\"delete-button\"></slot>\r\n          </footer>\r\n        </section>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  ready() {\r\n    super.ready();\r\n\r\n    // CRUD has header and footer but does not use renderers\r\n    this.setAttribute('has-header', '');\r\n    this.setAttribute('has-footer', '');\r\n  }\r\n}\r\n\r\ndefineCustomElement(CrudDialogOverlay);\r\n\r\n/**\r\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\r\n * @private\r\n */\r\nclass CrudDialog extends DialogBaseMixin(OverlayClassMixin(ThemePropertyMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-crud-dialog';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      ariaLabel: {\r\n        type: String,\r\n      },\r\n\r\n      fullscreen: {\r\n        type: Boolean,\r\n      },\r\n    };\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: none;\r\n        }\r\n      </style>\r\n\r\n      <vaadin-crud-dialog-overlay\r\n        id=\"overlay\"\r\n        opened=\"[[opened]]\"\r\n        aria-label$=\"[[ariaLabel]]\"\r\n        on-opened-changed=\"_onOverlayOpened\"\r\n        on-mousedown=\"_bringOverlayToFront\"\r\n        on-touchstart=\"_bringOverlayToFront\"\r\n        theme$=\"[[_theme]]\"\r\n        modeless=\"[[modeless]]\"\r\n        with-backdrop=\"[[!modeless]]\"\r\n        resizable$=\"[[resizable]]\"\r\n        fullscreen$=\"[[fullscreen]]\"\r\n        role=\"dialog\"\r\n        focus-trap\r\n      ></vaadin-crud-dialog-overlay>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(CrudDialog);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { setProperty } from './vaadin-crud-helpers.js';\r\n\r\n/**\r\n * @polymerMixin\r\n */\r\nexport const IncludedMixin = (superClass) =>\r\n  class IncludedMixin extends superClass {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * A list of item fields that should not be mapped to form fields.\r\n         *\r\n         * When [`include`](#/elements/vaadin-crud-form#property-include) is defined, this property is ignored.\r\n         *\r\n         * Default is to exclude any private property.\r\n         *\r\n         * @type {string | RegExp}\r\n         */\r\n        exclude: {\r\n          value: '^_',\r\n          observer: '__onExcludeChange',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * A list of item properties that should be mapped to form fields.\r\n         *\r\n         * When it is defined [`exclude`](#/elements/vaadin-crud-form#property-exclude) is ignored.\r\n         *\r\n         * @type {string | !Array<string> | undefined}\r\n         */\r\n        include: {\r\n          observer: '__onIncludeChange',\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @private */\r\n    __onExcludeChange(exclude) {\r\n      if (typeof exclude === 'string') {\r\n        this.exclude = exclude ? RegExp(exclude.replace(/, */gu, '|'), 'iu') : undefined;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onIncludeChange(include) {\r\n      if (typeof include === 'string') {\r\n        this.include = include ? include.split(/, */u) : undefined;\r\n      } else if (!this._fields && Array.isArray(include)) {\r\n        const item = {};\r\n        this.include.forEach((path) => {\r\n          setProperty(path, null, item);\r\n        });\r\n        this._configure(item);\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { capitalize, getProperty } from './vaadin-crud-helpers.js';\r\nimport { IncludedMixin } from './vaadin-crud-include-mixin.js';\r\n\r\n/**\r\n * A mixin providing common crud-grid functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes IncludedMixin\r\n */\r\nexport const CrudGridMixin = (superClass) =>\r\n  class extends IncludedMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Disable filtering in the generated columns.\r\n         * @attr {boolean} no-filter\r\n         */\r\n        noFilter: Boolean,\r\n\r\n        /**\r\n         * Disable sorting in the generated columns.\r\n         * @attr {boolean} no-sort\r\n         */\r\n        noSort: Boolean,\r\n\r\n        /**\r\n         * Do not add headers to columns.\r\n         * @attr {boolean} no-head\r\n         */\r\n        noHead: Boolean,\r\n\r\n        /**\r\n         * Determines whether the edit column should be hidden.\r\n         * @attr {boolean} hide-edit-column\r\n         */\r\n        hideEditColumn: {\r\n          type: Boolean,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__onItemsChange(items)', '__onHideEditColumnChange(hideEditColumn)'];\r\n    }\r\n\r\n    /** @private */\r\n    __onItemsChange(items) {\r\n      if ((!this.dataProvider || this.dataProvider === this._arrayDataProvider) && !this.include && items && items[0]) {\r\n        this._configure(items[0]);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onHideEditColumnChange() {\r\n      if (this.firstChild) {\r\n        this.__toggleEditColumn();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __toggleEditColumn() {\r\n      let editColumn = this.querySelector('vaadin-crud-edit-column');\r\n      if (this.hideEditColumn) {\r\n        if (editColumn) {\r\n          this.removeChild(editColumn);\r\n        }\r\n      } else if (!editColumn) {\r\n        editColumn = document.createElement('vaadin-crud-edit-column');\r\n        editColumn.frozenToEnd = true;\r\n        this.appendChild(editColumn);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __dataProviderWrapper(params, callback) {\r\n      this.__dataProvider(params, (items, size) => {\r\n        if (this.innerHTML === '' && !this.include && items[0]) {\r\n          this._configure(items[0]);\r\n        }\r\n        callback(items, size);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @private\r\n     */\r\n    _dataProviderChanged(dataProvider, oldDataProvider) {\r\n      if (this._arrayDataProvider === dataProvider) {\r\n        super._dataProviderChanged(dataProvider, oldDataProvider);\r\n      } else if (this.__dataProviderWrapper !== dataProvider) {\r\n        this.innerHTML = '';\r\n        this.__dataProvider = dataProvider;\r\n        this.dataProvider = this.__dataProviderWrapper;\r\n        super._dataProviderChanged(this.__dataProviderWrapper, oldDataProvider);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Auto-generate grid columns based on the JSON structure of the object provided.\r\n     *\r\n     * Method will be executed when items or dataProvider is assigned.\r\n     * @private\r\n     */\r\n    _configure(item) {\r\n      this.innerHTML = '';\r\n      this.__createColumns(this, item, undefined, this.__getPropertyDepth(item));\r\n      this.__toggleEditColumn();\r\n    }\r\n\r\n    /**\r\n     * Return the deepest property depth of the object\r\n     * @private\r\n     */\r\n    __getPropertyDepth(object) {\r\n      if (!object || typeof object !== 'object') {\r\n        return 0;\r\n      }\r\n\r\n      return Object.keys(object).reduce((deepest, prop) => {\r\n        if (this.exclude && this.exclude.test(prop)) {\r\n          return deepest;\r\n        }\r\n        return Math.max(deepest, 1 + this.__getPropertyDepth(object[prop]));\r\n      }, 0);\r\n    }\r\n\r\n    /**\r\n     * Parse the camelCase column names into sentence case headers.\r\n     * @param {string} path\r\n     * @return {string}\r\n     * @protected\r\n     */\r\n    _generateHeader(path) {\r\n      return path\r\n        .substr(path.lastIndexOf('.') + 1)\r\n        .replace(/([A-Z])/gu, '-$1')\r\n        .toLowerCase()\r\n        .replace(/-/gu, ' ')\r\n        .replace(/^./u, (match) => match.toUpperCase());\r\n    }\r\n\r\n    /** @private */\r\n    __createColumn(parent, path) {\r\n      let col;\r\n      if (!this.noFilter && !this.noSort && !parent.__sortColumnGroup) {\r\n        // This crud-grid has both a sorter and a filter, but neither has yet been\r\n        // created => col should become the sorter group column\r\n        col = this.__createGroup(parent);\r\n        col.__sortColumnGroup = true;\r\n        // Create the filter column under this sorter group column\r\n        this.__createColumn(col, path);\r\n      } else {\r\n        // In all other cases, col should be a regular column with a renderer\r\n        col = document.createElement('vaadin-grid-column');\r\n        parent.appendChild(col);\r\n        col.renderer = (root, _column, model) => {\r\n          root.textContent = path ? getProperty(path, model.item) : model.item;\r\n        };\r\n      }\r\n\r\n      if (!this.noHead && path) {\r\n        // Create a header renderer for the column (or column group)\r\n        col.headerRenderer = (root) => {\r\n          if (root.firstElementChild) {\r\n            return;\r\n          }\r\n\r\n          const label = this._generateHeader(path);\r\n\r\n          if (col.__sortColumnGroup || (this.noFilter && !this.noSort)) {\r\n            // The column is either the sorter group column or the root level\r\n            // sort column (in case a filter isn't used at all) => add the sort indicator\r\n            const sorter = document.createElement('vaadin-grid-sorter');\r\n            sorter.setAttribute('path', path);\r\n            // TODO: Localize aria labels\r\n            sorter.setAttribute('aria-label', `Sort by ${label}`);\r\n            sorter.textContent = label;\r\n            root.appendChild(sorter);\r\n          } else if (!this.noFilter) {\r\n            // Filtering is enabled in this crud-grid, create the filter element\r\n            const filter = document.createElement('vaadin-grid-filter');\r\n            filter.setAttribute('path', path);\r\n            // TODO: Localize aria labels\r\n            filter.setAttribute('aria-label', `Filter by ${label}`);\r\n            filter.style.display = 'flex';\r\n\r\n            const textField = window.document.createElement('vaadin-text-field');\r\n            textField.setAttribute('theme', 'small');\r\n            textField.setAttribute('focus-target', true);\r\n            textField.style.width = '100%';\r\n            if (this.noSort) {\r\n              textField.placeholder = label;\r\n            }\r\n            textField.addEventListener('value-changed', (event) => {\r\n              filter.value = event.detail.value;\r\n            });\r\n\r\n            filter.appendChild(textField);\r\n            root.appendChild(filter);\r\n          } else if (this.noSort && this.noFilter) {\r\n            // Neither sorter nor filter are enabled, just add the label\r\n            root.textContent = label;\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Creates the column structure for the (sub)object.\r\n     *\r\n     * @param {HTMLElement} parent May be the crud-grid or a column group.\r\n     * @param {Object} object The object to create the sub-columns for.\r\n     * @param {string} path The property path from the root item to the object.\r\n     * @param {number} depth The depth of the object in the object hierarchy.\r\n     * @private\r\n     */\r\n    __createColumns(parent, object, path, depth) {\r\n      if (object && typeof object === 'object') {\r\n        // Iterate over the object properties\r\n        Object.keys(object).forEach((prop) => {\r\n          if (!this.include && this.exclude && this.exclude.test(prop)) {\r\n            return;\r\n          }\r\n          // Sub-object of the current object\r\n          const subObject = object[prop];\r\n          // Full path to the sub-object\r\n          const subObjectPath = path ? `${path}.${prop}` : prop;\r\n\r\n          // The column element for the sub-object\r\n          let subObjectColumn = parent;\r\n          if (!this.noHead && depth > 1) {\r\n            const isSubObject = subObject && typeof subObject === 'object';\r\n            // If the sub-object is an actual object, create a column group with the property\r\n            // name as the header text, otherwise create a group without a header\r\n            subObjectColumn = this.__createGroup(parent, isSubObject ? prop : undefined);\r\n          }\r\n\r\n          // Run recursively for the sub-object level\r\n          this.__createColumns(subObjectColumn, subObject, subObjectPath, depth - 1);\r\n        });\r\n      } else if (depth > 1) {\r\n        // The object has been fully traversed, but empty wrapping column\r\n        // groups are still needed to complete the full object depth\r\n        this.__createColumns(this.__createGroup(parent), undefined, path, depth - 1);\r\n      } else {\r\n        // The column group depth is complete, create the actual leaf column\r\n        this.__createColumn(parent, path);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __createGroup(parent, header) {\r\n      const grp = document.createElement('vaadin-grid-column-group');\r\n      if (header) {\r\n        grp.header = capitalize(header);\r\n      }\r\n      parent.appendChild(grp);\r\n      return grp;\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport '@vaadin/grid/src/vaadin-grid-column-group.js';\r\nimport '@vaadin/grid/src/vaadin-grid-column.js';\r\nimport '@vaadin/grid/src/vaadin-grid-filter.js';\r\nimport '@vaadin/grid/src/vaadin-grid-sorter.js';\r\nimport './vaadin-crud-edit-column.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { Grid } from '@vaadin/grid/src/vaadin-grid.js';\r\nimport { CrudGridMixin } from './vaadin-crud-grid-mixin.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\r\n *\r\n * @extends Grid\r\n * @mixes CrudGridMixin\r\n * @private\r\n */\r\nclass CrudGrid extends CrudGridMixin(Grid) {\r\n  static get is() {\r\n    return 'vaadin-crud-grid';\r\n  }\r\n}\r\n\r\ndefineCustomElement(CrudGrid);\r\n\r\nexport { CrudGrid };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport '@vaadin/text-field/src/vaadin-text-field.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { FormLayout } from '@vaadin/form-layout/src/vaadin-form-layout.js';\r\nimport { createField, createFields } from './vaadin-crud-helpers.js';\r\nimport { IncludedMixin } from './vaadin-crud-include-mixin.js';\r\n\r\n/**\r\n * An element used internally by `<vaadin-crud>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends FormLayout\r\n * @mixes IncludedMixin\r\n * @private\r\n */\r\nclass CrudForm extends IncludedMixin(FormLayout) {\r\n  static get is() {\r\n    return 'vaadin-crud-form';\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * The item being edited.\r\n       * @type {unknown}\r\n       */\r\n      item: Object,\r\n    };\r\n  }\r\n\r\n  static get observers() {\r\n    return ['__onItemChange(item)'];\r\n  }\r\n\r\n  /**\r\n   * Auto-generate form fields based on the JSON structure of the object provided.\r\n   *\r\n   * If not called, the method will be executed the first time an item is assigned.\r\n   * @param {unknown} object\r\n   * @protected\r\n   */\r\n  _configure(object) {\r\n    this.innerHTML = '';\r\n    this._fields = [];\r\n    this.__createFields(this, object);\r\n    this._updateLayout();\r\n  }\r\n\r\n  /** @private */\r\n  __onItemChange(item) {\r\n    if (!this._fields) {\r\n      this._configure(item);\r\n    }\r\n  }\r\n\r\n  /** @private */\r\n  __createField(parent, path) {\r\n    return createField(this, parent, path);\r\n  }\r\n\r\n  /** @private */\r\n  __createFields(parent, object, path) {\r\n    return createFields(this, parent, object, path);\r\n  }\r\n}\r\n\r\ndefineCustomElement(CrudForm);\r\n\r\nexport { CrudForm };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\n\r\n/**\r\n * A controller for initializing slotted button.\r\n * @protected\r\n */\r\nexport class ButtonSlotController extends SlotController {\r\n  constructor(host, type, theme, noDefaultNode) {\r\n    super(host, `${type}-button`, noDefaultNode ? null : 'vaadin-button');\r\n\r\n    this.type = type;\r\n    this.theme = theme;\r\n  }\r\n\r\n  /**\r\n   * Override method inherited from `SlotController`\r\n   * to mark custom slotted button as the default.\r\n   *\r\n   * @param {Node} node\r\n   * @protected\r\n   * @override\r\n   */\r\n  initNode(node) {\r\n    // Prevent errors when the `noDefaultNode` flag is set\r\n    if (!node) {\r\n      return;\r\n    }\r\n\r\n    // Needed by Flow counterpart to apply i18n to custom button\r\n    if (node._isDefault) {\r\n      this.defaultNode = node;\r\n    }\r\n\r\n    // Respect default theme attribute set by the Flow counterpart\r\n    if (node === this.defaultNode && !node.hasAttribute('theme')) {\r\n      node.setAttribute('theme', this.theme);\r\n    }\r\n\r\n    const { host, type } = this;\r\n    const property = `_${type}Button`;\r\n    const listener = `__${type}`;\r\n\r\n    // TODO: restore default button when a corresponding slotted button is removed.\r\n    // This would require us to detect where to insert a button after teleporting it,\r\n    // which happens after opening a dialog and closing it (default editor position).\r\n    if (host[property] && host[property] !== node) {\r\n      host[property].remove();\r\n    }\r\n\r\n    node.addEventListener('click', host[listener]);\r\n    host[property] = node;\r\n  }\r\n}\r\n\r\n/**\r\n * A controller for initializing slotted form.\r\n * @protected\r\n */\r\nexport class FormSlotController extends SlotController {\r\n  constructor(host) {\r\n    super(host, 'form', 'vaadin-crud-form');\r\n  }\r\n\r\n  /**\r\n   * Override method inherited from `SlotController`\r\n   * to move slotted form to the overlay if needed.\r\n   *\r\n   * @param {Node} node\r\n   * @protected\r\n   * @override\r\n   */\r\n  initNode(node) {\r\n    this.host._form = node;\r\n\r\n    if (this.host.editorOpened) {\r\n      this.host.__ensureChildren();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * A controller for initializing slotted grid.\r\n * @protected\r\n */\r\nexport class GridSlotController extends SlotController {\r\n  constructor(host) {\r\n    super(host, 'grid', 'vaadin-crud-grid');\r\n  }\r\n\r\n  /**\r\n   * Override method inherited from `SlotController`\r\n   * to initialize `active-item-changed` listener.\r\n   *\r\n   * @param {Node} node\r\n   * @protected\r\n   * @override\r\n   */\r\n  initNode(node) {\r\n    const { host } = this;\r\n\r\n    // Wait for all the properties e.g. `noFilter` and `noSort`\r\n    // to be set, to ensure columns are configured correctly.\r\n    queueMicrotask(() => {\r\n      // Force to remove listener on previous grid first\r\n      host.__editOnClickChanged(false, host._grid);\r\n      host._grid = node;\r\n      host.__editOnClickChanged(host.editOnClick, host._grid);\r\n    });\r\n  }\r\n}\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport { afterNextRender } from '@polymer/polymer/lib/utils/render-status.js';\r\nimport { FocusRestorationController } from '@vaadin/a11y-base/src/focus-restoration-controller.js';\r\nimport { I18nMixin } from '@vaadin/component-base/src/i18n-mixin.js';\r\nimport { MediaQueryController } from '@vaadin/component-base/src/media-query-controller.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\nimport { ButtonSlotController, FormSlotController, GridSlotController } from './vaadin-crud-controllers.js';\r\nimport { getProperty, isValidEditorPosition, setProperty } from './vaadin-crud-helpers.js';\r\n\r\nconst DEFAULT_I18N = {\r\n  newItem: 'New item',\r\n  editItem: 'Edit item',\r\n  saveItem: 'Save',\r\n  cancel: 'Cancel',\r\n  deleteItem: 'Delete...',\r\n  editLabel: 'Edit',\r\n  confirm: {\r\n    delete: {\r\n      title: 'Delete item',\r\n      content: 'Are you sure you want to delete this item? This action cannot be undone.',\r\n      button: {\r\n        confirm: 'Delete',\r\n        dismiss: 'Cancel',\r\n      },\r\n    },\r\n    cancel: {\r\n      title: 'Discard changes',\r\n      content: 'There are unsaved changes to this item.',\r\n      button: {\r\n        confirm: 'Discard',\r\n        dismiss: 'Cancel',\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * A mixin providing common crud functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes I18nMixin\r\n */\r\nexport const CrudMixin = (superClass) =>\r\n  class extends I18nMixin(DEFAULT_I18N, superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * A reference to the grid used for displaying the item list\r\n         * @private\r\n         */\r\n        _grid: {\r\n          type: Object,\r\n          observer: '__gridChanged',\r\n        },\r\n\r\n        /**\r\n         * A reference to the editor component which will be teleported to the dialog\r\n         * @private\r\n         */\r\n        _form: {\r\n          type: Object,\r\n          observer: '__formChanged',\r\n        },\r\n\r\n        /**\r\n         * A reference to the save button which will be teleported to the dialog\r\n         * @private\r\n         */\r\n        _saveButton: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * A reference to the delete button which will be teleported to the dialog\r\n         * @private\r\n         */\r\n        _deleteButton: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * A reference to the cancel button which will be teleported to the dialog\r\n         * @private\r\n         */\r\n        _cancelButton: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * A reference to the default editor header element created by the CRUD\r\n         * @private\r\n         */\r\n        _defaultHeader: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * A reference to the \"New item\" button\r\n         * @private\r\n         */\r\n        _newButton: {\r\n          type: Object,\r\n        },\r\n\r\n        /**\r\n         * An array containing the items which will be stamped to the column template instances.\r\n         * @type {Array<unknown> | undefined}\r\n         */\r\n        items: {\r\n          type: Array,\r\n          notify: true,\r\n          observer: '__itemsChanged',\r\n        },\r\n\r\n        /**\r\n         * The item being edited in the dialog.\r\n         * @type {unknown}\r\n         */\r\n        editedItem: {\r\n          type: Object,\r\n          observer: '__editedItemChanged',\r\n          notify: true,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Sets how editor will be presented on desktop screen.\r\n         *\r\n         * Accepted values are:\r\n         *   - `` (default) - form will open as overlay\r\n         *   - `bottom` - form will open below the grid\r\n         *   - `aside` - form will open on the grid side (_right_, if lft and _left_ if rtl)\r\n         * @attr {bottom|aside} editor-position\r\n         * @type {!CrudEditorPosition}\r\n         */\r\n        editorPosition: {\r\n          type: String,\r\n          value: '',\r\n          reflectToAttribute: true,\r\n          observer: '__editorPositionChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Enables user to click on row to edit it.\r\n         * Note: When enabled, auto-generated grid won't show the edit column.\r\n         * @attr {boolean} edit-on-click\r\n         * @type {boolean}\r\n         */\r\n        editOnClick: {\r\n          type: Boolean,\r\n          value: false,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Function that provides items lazily. Receives arguments `params`, `callback`\r\n         *\r\n         * `params.page` Requested page index\r\n         * `params.pageSize` Current page size\r\n         * `params.filters` Currently applied filters\r\n         * `params.sortOrders` Currently applied sorting orders\r\n         *\r\n         * `callback(items, size)` Callback function with arguments:\r\n         *   - `items` Current page of items\r\n         *   - `size` Total number of items\r\n         * @type {CrudDataProvider | undefined}\r\n         */\r\n        dataProvider: {\r\n          type: Function,\r\n          observer: '__dataProviderChanged',\r\n        },\r\n\r\n        /**\r\n         * Disable filtering when grid is autoconfigured.\r\n         * @attr {boolean} no-filter\r\n         */\r\n        noFilter: Boolean,\r\n\r\n        /**\r\n         * Disable sorting when grid is autoconfigured.\r\n         * @attr {boolean} no-sort\r\n         */\r\n        noSort: Boolean,\r\n\r\n        /**\r\n         * Remove grid headers when it is autoconfigured.\r\n         * @attr {boolean} no-head\r\n         */\r\n        noHead: Boolean,\r\n\r\n        /**\r\n         * A comma-separated list of fields to include in the generated grid and the generated editor.\r\n         *\r\n         * It can be used to explicitly define the field order.\r\n         *\r\n         * When it is defined [`exclude`](#/elements/vaadin-crud#property-exclude) is ignored.\r\n         *\r\n         * Default is undefined meaning that all properties in the object should be mapped to fields.\r\n         */\r\n        include: String,\r\n\r\n        /**\r\n         * A comma-separated list of fields to be excluded from the generated grid and the generated editor.\r\n         *\r\n         * When [`include`](#/elements/vaadin-crud#property-include) is defined, this parameter is ignored.\r\n         *\r\n         * Default is to exclude all private fields (those properties starting with underscore)\r\n         */\r\n        exclude: String,\r\n\r\n        /**\r\n         * Reflects the opened status of the editor.\r\n         */\r\n        editorOpened: {\r\n          type: Boolean,\r\n          reflectToAttribute: true,\r\n          notify: true,\r\n          observer: '__editorOpenedChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Number of items in the data set which is reported by the grid.\r\n         * Typically it reflects the number of filtered items displayed in the grid.\r\n         *\r\n         * Note: As with `<vaadin-grid>`, this property updates automatically only\r\n         * if `items` is used for data.\r\n         */\r\n        size: {\r\n          type: Number,\r\n          readOnly: true,\r\n          notify: true,\r\n        },\r\n\r\n        /**\r\n         * Controls visibility state of toolbar.\r\n         * When set to false toolbar is hidden and shown when set to true.\r\n         * @attr {boolean} no-toolbar\r\n         */\r\n        noToolbar: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        __dialogAriaLabel: String,\r\n\r\n        /** @private */\r\n        __isDirty: {\r\n          type: Boolean,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        __isNew: Boolean,\r\n\r\n        /**\r\n         * @type {boolean}\r\n         * @protected\r\n         */\r\n        _fullscreen: {\r\n          type: Boolean,\r\n          observer: '__fullscreenChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * @type {string}\r\n         * @protected\r\n         */\r\n        _fullscreenMediaQuery: {\r\n          value: '(max-width: 600px), (max-height: 600px)',\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '__headerPropsChanged(_defaultHeader, __isNew, __effectiveI18n)',\r\n        '__formPropsChanged(_form, _theme, include, exclude)',\r\n        '__gridPropsChanged(_grid, _theme, include, exclude, noFilter, noHead, noSort, items)',\r\n        '__i18nChanged(__effectiveI18n, _grid)',\r\n        '__editOnClickChanged(editOnClick, _grid)',\r\n        '__saveButtonPropsChanged(_saveButton, __effectiveI18n, __isDirty)',\r\n        '__cancelButtonPropsChanged(_cancelButton, __effectiveI18n)',\r\n        '__deleteButtonPropsChanged(_deleteButton, __effectiveI18n, __isNew)',\r\n        '__newButtonPropsChanged(_newButton, __effectiveI18n)',\r\n      ];\r\n    }\r\n\r\n    /**\r\n     * The object used to localize this component. To change the default\r\n     * localization, replace this with an object that provides all properties, or\r\n     * just the individual properties you want to change.\r\n     *\r\n     * The object has the following JSON structure and default values:\r\n     *\r\n     * ```\r\n     * {\r\n     *   newItem: 'New item',\r\n     *   editItem: 'Edit item',\r\n     *   saveItem: 'Save',\r\n     *   cancel: 'Cancel',\r\n     *   deleteItem: 'Delete...',\r\n     *   editLabel: 'Edit',\r\n     *   confirm: {\r\n     *     delete: {\r\n     *       title: 'Confirm delete',\r\n     *       content: 'Are you sure you want to delete the selected item? This action cannot be undone.',\r\n     *       button: {\r\n     *         confirm: 'Delete',\r\n     *         dismiss: 'Cancel'\r\n     *       }\r\n     *     },\r\n     *     cancel: {\r\n     *       title: 'Unsaved changes',\r\n     *       content: 'There are unsaved modifications to the item.',\r\n     *       button: {\r\n     *         confirm: 'Discard',\r\n     *         dismiss: 'Continue editing'\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     * @return {!CrudI18n}\r\n     */\r\n    get i18n() {\r\n      return super.i18n;\r\n    }\r\n\r\n    set i18n(value) {\r\n      super.i18n = value;\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this.__cancel = this.__cancel.bind(this);\r\n      this.__delete = this.__delete.bind(this);\r\n      this.__save = this.__save.bind(this);\r\n      this.__new = this.__new.bind(this);\r\n      this.__onFormChange = this.__onFormChange.bind(this);\r\n      this.__onGridEdit = this.__onGridEdit.bind(this);\r\n      this.__onGridSizeChanged = this.__onGridSizeChanged.bind(this);\r\n      this.__onGridActiveItemChanged = this.__onGridActiveItemChanged.bind(this);\r\n\r\n      this.__focusRestorationController = new FocusRestorationController();\r\n    }\r\n\r\n    /** @protected */\r\n    get _headerNode() {\r\n      return this._headerController && this._headerController.node;\r\n    }\r\n\r\n    /**\r\n     * A reference to all fields inside the [`_form`](#/elements/vaadin-crud#property-_form) element\r\n     * @return {!Array<!HTMLElement>}\r\n     * @protected\r\n     */\r\n    get _fields() {\r\n      if (!this.__fields || !this.__fields.length) {\r\n        this.__fields = Array.from(this._form.querySelectorAll('*')).filter((e) => e.validate || e.checkValidity);\r\n      }\r\n      return this.__fields;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this.$.dialog.$.overlay.addEventListener('vaadin-overlay-outside-click', this.__cancel);\r\n      this.$.dialog.$.overlay.addEventListener('vaadin-overlay-escape-press', this.__cancel);\r\n\r\n      this._headerController = new SlotController(this, 'header', 'h3', {\r\n        initializer: (node) => {\r\n          this._defaultHeader = node;\r\n        },\r\n      });\r\n      this.addController(this._headerController);\r\n\r\n      this._gridController = new GridSlotController(this);\r\n      this.addController(this._gridController);\r\n\r\n      this.addController(new FormSlotController(this));\r\n\r\n      // Init controllers in `ready()` (not constructor) so that Flow can set `_noDefaultButtons`\r\n      this._newButtonController = new ButtonSlotController(this, 'new', 'primary', this._noDefaultButtons);\r\n      this._saveButtonController = new ButtonSlotController(this, 'save', 'primary', this._noDefaultButtons);\r\n      this._cancelButtonController = new ButtonSlotController(this, 'cancel', 'tertiary', this._noDefaultButtons);\r\n      this._deleteButtonController = new ButtonSlotController(this, 'delete', 'tertiary error', this._noDefaultButtons);\r\n\r\n      this.addController(this._newButtonController);\r\n\r\n      // NOTE: order in which buttons are added should match the order of slots in template\r\n      this.addController(this._saveButtonController);\r\n      this.addController(this._cancelButtonController);\r\n      this.addController(this._deleteButtonController);\r\n\r\n      this.addController(\r\n        new MediaQueryController(this._fullscreenMediaQuery, (matches) => {\r\n          this._fullscreen = matches;\r\n        }),\r\n      );\r\n\r\n      this.addController(this.__focusRestorationController);\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} isDirty\r\n     * @private\r\n     */\r\n    __isSaveBtnDisabled(isDirty) {\r\n      // Used instead of isDirty property binding in order to enable overriding of the behavior\r\n      // by overriding the method (i.e. from Flow component)\r\n      return !isDirty;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} headerNode\r\n     * @param {boolean} isNew\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @private\r\n     */\r\n    __headerPropsChanged(headerNode, isNew, effectiveI18n) {\r\n      if (headerNode) {\r\n        headerNode.textContent = isNew ? effectiveI18n.newItem : effectiveI18n.editItem;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @param {CrudGrid | Grid} grid\r\n     * @private\r\n     */\r\n    __i18nChanged(effectiveI18n, grid) {\r\n      if (!grid) {\r\n        return;\r\n      }\r\n\r\n      afterNextRender(grid, () => {\r\n        Array.from(grid.querySelectorAll('vaadin-crud-edit-column')).forEach((column) => {\r\n          column.ariaLabel = effectiveI18n.editLabel;\r\n        });\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __editorPositionChanged(editorPosition) {\r\n      if (isValidEditorPosition(editorPosition)) {\r\n        return;\r\n      }\r\n      this.editorPosition = '';\r\n    }\r\n\r\n    /** @private */\r\n    __editorOpenedChanged(opened, oldOpened) {\r\n      if (!opened && oldOpened) {\r\n        this.__closeEditor();\r\n      } else {\r\n        this.__formChanged(this._form);\r\n      }\r\n\r\n      if (opened) {\r\n        this.__ensureChildren();\r\n\r\n        // When using bottom / aside editor position,\r\n        // auto-focus the editor element on open.\r\n        if (this._form.parentElement === this) {\r\n          this.$.editor.setAttribute('tabindex', '0');\r\n          this.$.editor.focus();\r\n        } else {\r\n          this.$.editor.removeAttribute('tabindex');\r\n        }\r\n      }\r\n\r\n      this.__toggleToolbar();\r\n\r\n      // Make sure to reset scroll position\r\n      this.$.scroller.scrollTop = 0;\r\n    }\r\n\r\n    /** @private */\r\n    __fullscreenChanged(fullscreen, oldFullscreen) {\r\n      if (fullscreen || oldFullscreen) {\r\n        this.__toggleToolbar();\r\n\r\n        this.__ensureChildren();\r\n\r\n        this.toggleAttribute('fullscreen', fullscreen);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __toggleToolbar() {\r\n      // Hide toolbar to give more room for the editor when it's positioned below the grid\r\n      if (this.editorPosition === 'bottom' && !this._fullscreen) {\r\n        this.$.toolbar.style.display = this.editorOpened ? 'none' : '';\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __moveChildNodes(target) {\r\n      const nodes = [this._headerNode, this._form];\r\n      const buttons = [this._saveButton, this._cancelButton, this._deleteButton].filter(Boolean);\r\n      if (!nodes.every((node) => node instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n\r\n      // Teleport header node, form, and the buttons to corresponding slots.\r\n      // NOTE: order in which buttons are moved matches the order of slots.\r\n      [...nodes, ...buttons].forEach((node) => {\r\n        target.appendChild(node);\r\n      });\r\n\r\n      // Wait to set label until slotted element has been moved.\r\n      setTimeout(() => {\r\n        this.__dialogAriaLabel = this._headerNode.textContent.trim();\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    __shouldOpenDialog(fullscreen, editorPosition) {\r\n      return editorPosition === '' || fullscreen;\r\n    }\r\n\r\n    /** @private */\r\n    __ensureChildren() {\r\n      if (this.__shouldOpenDialog(this._fullscreen, this.editorPosition)) {\r\n        // Move form to dialog\r\n        this.__moveChildNodes(this.$.dialog.$.overlay);\r\n      } else {\r\n        // Move form to crud\r\n        this.__moveChildNodes(this);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __computeDialogOpened(opened, fullscreen, editorPosition) {\r\n      // Only open dialog when editorPosition is \"\" or fullscreen is set\r\n      return this.__shouldOpenDialog(fullscreen, editorPosition) ? opened : false;\r\n    }\r\n\r\n    /** @private */\r\n    __computeEditorHidden(opened, fullscreen, editorPosition) {\r\n      // Only show editor when editorPosition is \"bottom\" or \"aside\"\r\n      if (['aside', 'bottom'].includes(editorPosition) && !fullscreen) {\r\n        return !opened;\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    /** @private */\r\n    __onDialogOpened(event) {\r\n      this.editorOpened = event.detail.value;\r\n    }\r\n\r\n    /** @private */\r\n    __onGridEdit(event) {\r\n      event.stopPropagation();\r\n      this.__confirmBeforeChangingEditedItem(event.detail.item);\r\n    }\r\n\r\n    /** @private */\r\n    __onFormChange() {\r\n      this.__isDirty = true;\r\n    }\r\n\r\n    /** @private */\r\n    __onGridSizeChanged() {\r\n      this._setSize(this._grid.size);\r\n    }\r\n\r\n    /**\r\n     * @param {CrudGrid | Grid} grid\r\n     * @param {CrudGrid | Grid | undefined} oldGrid\r\n     * @private\r\n     */\r\n    __gridChanged(grid, oldGrid) {\r\n      if (oldGrid) {\r\n        oldGrid.removeEventListener('edit', this.__onGridEdit);\r\n        oldGrid.removeEventListener('size-changed', this.__onGridSizeChanged);\r\n      }\r\n      if (this.dataProvider) {\r\n        this.__dataProviderChanged(this.dataProvider);\r\n      }\r\n      if (this.editedItem) {\r\n        this.__editedItemChanged(this.editedItem);\r\n      }\r\n      grid.addEventListener('edit', this.__onGridEdit);\r\n      grid.addEventListener('size-changed', this.__onGridSizeChanged);\r\n      this.__onGridSizeChanged();\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined | null} form\r\n     * @param {HTMLElement | undefined | null} oldForm\r\n     * @private\r\n     */\r\n    __formChanged(form, oldForm) {\r\n      if (oldForm && oldForm.parentElement) {\r\n        oldForm.parentElement.removeChild(oldForm);\r\n        oldForm.removeEventListener('change', this.__onFormChange);\r\n        oldForm.removeEventListener('input', this.__onFormChange);\r\n      }\r\n      if (!form) {\r\n        return;\r\n      }\r\n      if (this.items) {\r\n        this.__itemsChanged(this.items);\r\n      }\r\n      if (this.editedItem) {\r\n        this.__editedItemChanged(this.editedItem);\r\n      }\r\n      form.addEventListener('change', this.__onFormChange);\r\n      form.addEventListener('input', this.__onFormChange);\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} form\r\n     * @param {string} theme\r\n     * @param {string | string[] | undefined} include\r\n     * @param {string | RegExp} exclude\r\n     * @private\r\n     */\r\n    __formPropsChanged(form, theme, include, exclude) {\r\n      if (form) {\r\n        form.include = include;\r\n        form.exclude = exclude;\r\n\r\n        if (theme) {\r\n          form.setAttribute('theme', theme);\r\n        } else {\r\n          form.removeAttribute('theme');\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} grid\r\n     * @param {string} theme\r\n     * @param {string | string[] | undefined} include\r\n     * @param {string | RegExp} exclude\r\n     * @param {boolean} noFilter\r\n     * @param {boolean} noHead\r\n     * @param {boolean} noSort\r\n     * @param {Array<unknown> | undefined} items\r\n     * @private\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/max-params\r\n    __gridPropsChanged(grid, theme, include, exclude, noFilter, noHead, noSort, items) {\r\n      if (!grid) {\r\n        return;\r\n      }\r\n\r\n      if (grid === this._gridController.defaultNode) {\r\n        grid.noFilter = noFilter;\r\n        grid.noHead = noHead;\r\n        grid.noSort = noSort;\r\n        grid.include = include;\r\n        grid.exclude = exclude;\r\n\r\n        if (theme) {\r\n          grid.setAttribute('theme', theme);\r\n        } else {\r\n          grid.removeAttribute('theme');\r\n        }\r\n      }\r\n\r\n      grid.items = items;\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} saveButton\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @param {boolean} isDirty\r\n     * @private\r\n     */\r\n    __saveButtonPropsChanged(saveButton, effectiveI18n, isDirty) {\r\n      if (saveButton) {\r\n        saveButton.toggleAttribute('disabled', this.__isSaveBtnDisabled(isDirty));\r\n\r\n        if (saveButton === this._saveButtonController.defaultNode) {\r\n          saveButton.textContent = effectiveI18n.saveItem;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} deleteButton\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @param {boolean} isNew\r\n     * @private\r\n     */\r\n    __deleteButtonPropsChanged(deleteButton, effectiveI18n, isNew) {\r\n      if (deleteButton) {\r\n        deleteButton.toggleAttribute('hidden', isNew);\r\n\r\n        if (deleteButton === this._deleteButtonController.defaultNode) {\r\n          deleteButton.textContent = effectiveI18n.deleteItem;\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} cancelButton\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @private\r\n     */\r\n    __cancelButtonPropsChanged(cancelButton, effectiveI18n) {\r\n      if (cancelButton && cancelButton === this._cancelButtonController.defaultNode) {\r\n        cancelButton.textContent = effectiveI18n.cancel;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @param {HTMLElement | undefined} newButton\r\n     * @param {CrudI18n} effectiveI18n\r\n     * @private\r\n     */\r\n    __newButtonPropsChanged(newButton, effectiveI18n) {\r\n      if (newButton && newButton === this._newButtonController.defaultNode) {\r\n        newButton.textContent = effectiveI18n.newItem;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __dataProviderChanged(dataProvider) {\r\n      if (this._grid) {\r\n        this._grid.dataProvider = this.__createDataProviderProxy(dataProvider);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __editOnClickChanged(editOnClick, grid) {\r\n      if (!grid) {\r\n        return;\r\n      }\r\n\r\n      grid.hideEditColumn = editOnClick;\r\n\r\n      if (editOnClick) {\r\n        grid.addEventListener('active-item-changed', this.__onGridActiveItemChanged);\r\n      } else {\r\n        grid.removeEventListener('active-item-changed', this.__onGridActiveItemChanged);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __onGridActiveItemChanged(event) {\r\n      const item = event.detail.value;\r\n      if (this.editorOpened && this.__isDirty) {\r\n        this.__confirmBeforeChangingEditedItem(item);\r\n        return;\r\n      }\r\n      if (item) {\r\n        this.__edit(item);\r\n      } else if (!this.__keepOpened) {\r\n        this.__closeEditor();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __confirmBeforeChangingEditedItem(item, keepOpened) {\r\n      if (\r\n        this.editorOpened && // Editor opened\r\n        this.__isDirty && // Form change has been made\r\n        this.editedItem !== item // Item is different\r\n      ) {\r\n        this.$.confirmCancel.opened = true;\r\n        this.addEventListener(\r\n          'cancel',\r\n          (event) => {\r\n            event.preventDefault(); // Prevent closing the editor\r\n            if (item || keepOpened) {\r\n              this.__edit(item);\r\n              this.__clearItemAndKeepEditorOpened(item, keepOpened);\r\n            } else {\r\n              this.__closeEditor();\r\n            }\r\n          },\r\n          { once: true },\r\n        );\r\n      } else {\r\n        this.__edit(item);\r\n        this.__clearItemAndKeepEditorOpened(item, keepOpened);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __clearItemAndKeepEditorOpened(item, keepOpened) {\r\n      if (!item) {\r\n        setTimeout(() => {\r\n          this.__keepOpened = keepOpened;\r\n          this.editedItem = this._grid.activeItem = undefined;\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __createDataProviderProxy(dataProvider) {\r\n      return (params, callback) => {\r\n        const callbackProxy = (chunk, size) => {\r\n          if (chunk && chunk[0]) {\r\n            this.__model = chunk[0];\r\n          }\r\n\r\n          callback(chunk, size);\r\n        };\r\n\r\n        dataProvider(params, callbackProxy);\r\n      };\r\n    }\r\n\r\n    /** @private */\r\n    __itemsChanged(items) {\r\n      if (this.items && this.items[0]) {\r\n        this.__model = items[0];\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __editedItemChanged(item) {\r\n      if (!this._form) {\r\n        return;\r\n      }\r\n      if (item) {\r\n        if (!this._fields.length && this._form._configure) {\r\n          if (this.__model) {\r\n            this._form._configure(this.__model);\r\n          } else {\r\n            console.warn(\r\n              '<vaadin-crud> Unable to autoconfigure form because the data structure is unknown. ' +\r\n                'Either specify `include` or ensure at least one item is available beforehand.',\r\n            );\r\n          }\r\n        }\r\n        this._form.item = item;\r\n        this._fields.forEach((e) => {\r\n          const path = e.path || e.getAttribute('path');\r\n          if (path) {\r\n            e.value = getProperty(path, item);\r\n          }\r\n        });\r\n\r\n        this.__isNew = !!(this.__isNew || (this.items && this.items.indexOf(item) < 0));\r\n        this.editorOpened = true;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __validate() {\r\n      return this._fields.every((e) => (e.validate || e.checkValidity).call(e));\r\n    }\r\n\r\n    /** @private */\r\n    __setHighlightedItem(item) {\r\n      if (this._grid === this._gridController.defaultNode) {\r\n        this._grid.selectedItems = item ? [item] : [];\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __closeEditor() {\r\n      this.editorOpened = false;\r\n      this.__isDirty = false;\r\n      this.__setHighlightedItem(null);\r\n\r\n      // Delay changing the item in order not to modify editor while closing\r\n      setTimeout(() => this.__clearItemAndKeepEditorOpened(null, false));\r\n    }\r\n\r\n    /** @private */\r\n    __new() {\r\n      this.__confirmBeforeChangingEditedItem(null, true);\r\n    }\r\n\r\n    /** @private */\r\n    __edit(item) {\r\n      if (this.editedItem === item) {\r\n        return;\r\n      }\r\n      this.__setHighlightedItem(item);\r\n      this.__openEditor(item);\r\n    }\r\n\r\n    /** @private */\r\n    __fireEvent(type, item) {\r\n      const event = new CustomEvent(type, { detail: { item }, cancelable: true });\r\n      this.dispatchEvent(event);\r\n      return event.defaultPrevented === false;\r\n    }\r\n\r\n    /** @private */\r\n    __openEditor(item) {\r\n      this.__focusRestorationController.saveFocus();\r\n\r\n      this.__isDirty = false;\r\n      this.__isNew = !item;\r\n      const result = this.__fireEvent(this.__isNew ? 'new' : 'edit', item);\r\n      if (result) {\r\n        this.editedItem = item || {};\r\n      } else {\r\n        this.editorOpened = true;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __restoreFocusOnDelete() {\r\n      if (this._grid._flatSize === 1) {\r\n        this._newButton.focus();\r\n      } else {\r\n        this._grid._focusFirstVisibleRow();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __restoreFocusOnSaveOrCancel() {\r\n      const focusNode = this.__focusRestorationController.focusNode;\r\n      const row = this._grid._getRowContainingNode(focusNode);\r\n      if (!row) {\r\n        this.__focusRestorationController.restoreFocus();\r\n        return;\r\n      }\r\n\r\n      if (this._grid._isItemAssignedToRow(this.editedItem, row) && this._grid._isInViewport(row)) {\r\n        this.__focusRestorationController.restoreFocus();\r\n      } else {\r\n        this._grid._focusFirstVisibleRow();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __save() {\r\n      if (!this.__validate()) {\r\n        return;\r\n      }\r\n\r\n      const item = { ...this.editedItem };\r\n      this._fields.forEach((e) => {\r\n        const path = e.path || e.getAttribute('path');\r\n        if (path) {\r\n          setProperty(path, e.value, item);\r\n        }\r\n      });\r\n      const result = this.__fireEvent('save', item);\r\n      if (result) {\r\n        if (this.__isNew && !this.dataProvider) {\r\n          if (!this.items) {\r\n            this.items = [item];\r\n          } else {\r\n            this.items.push(item);\r\n          }\r\n        } else {\r\n          if (!this.editedItem) {\r\n            this.editedItem = {};\r\n          }\r\n          Object.assign(this.editedItem, item);\r\n        }\r\n\r\n        this.__restoreFocusOnSaveOrCancel();\r\n        this._grid.clearCache();\r\n        this.__closeEditor();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __cancel() {\r\n      if (this.__isDirty) {\r\n        this.$.confirmCancel.opened = true;\r\n      } else {\r\n        this.__confirmCancel();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __confirmCancel() {\r\n      const result = this.__fireEvent('cancel', this.editedItem);\r\n      if (result) {\r\n        this.__restoreFocusOnSaveOrCancel();\r\n        this.__closeEditor();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __delete() {\r\n      this.$.confirmDelete.opened = true;\r\n    }\r\n\r\n    /** @private */\r\n    __confirmDelete() {\r\n      const result = this.__fireEvent('delete', this.editedItem);\r\n      if (result) {\r\n        if (this.items && this.items.indexOf(this.editedItem) >= 0) {\r\n          this.items.splice(this.items.indexOf(this.editedItem), 1);\r\n        }\r\n\r\n        this.__restoreFocusOnDelete();\r\n        this._grid.clearCache();\r\n        this.__closeEditor();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fired when user wants to edit an existing item. If the default is prevented, then\r\n     * a new item is not assigned to the form, giving that responsibility to the app, though\r\n     * dialog is always opened.\r\n     *\r\n     * @event edit\r\n     * @param {Object} detail.item the item to edit\r\n     */\r\n\r\n    /**\r\n     * Fired when user wants to create a new item.\r\n     *\r\n     * @event new\r\n     */\r\n\r\n    /**\r\n     * Fired when user wants to delete item. If the default is prevented, then\r\n     * no action is performed, items array is not modified nor dialog closed\r\n     *\r\n     * @event delete\r\n     * @param {Object} detail.item the item to delete\r\n     */\r\n\r\n    /**\r\n     * Fired when user discards edition. If the default is prevented, then\r\n     * no action is performed, user is responsible to close dialog and reset\r\n     * item and grid.\r\n     *\r\n     * @event cancel\r\n     * @param {Object} detail.item the item to delete\r\n     */\r\n\r\n    /**\r\n     * Fired when user wants to save a new or an existing item. If the default is prevented, then\r\n     * no action is performed, items array is not modified nor dialog closed\r\n     *\r\n     * @event save\r\n     * @param {Object} detail.item the item to save\r\n     * @param {Object} detail.new whether the item is a new one\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2000 - 2025 Vaadin Ltd.\r\n *\r\n * This program is available under Vaadin Commercial License and Service Terms.\r\n *\r\n *\r\n * See https://vaadin.com/commercial-license-and-service-terms for the full\r\n * license.\r\n */\r\nimport '@vaadin/button/src/vaadin-button.js';\r\nimport '@vaadin/confirm-dialog/src/vaadin-confirm-dialog.js';\r\nimport './vaadin-crud-dialog.js';\r\nimport './vaadin-crud-grid.js';\r\nimport './vaadin-crud-form.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { CrudMixin } from './vaadin-crud-mixin.js';\r\nimport { crudStyles } from './vaadin-crud-styles.js';\r\n\r\nregisterStyles('vaadin-crud', crudStyles, { moduleId: 'vaadin-crud-styles' });\r\n\r\n/**\r\n * `<vaadin-crud>` is a Web Component for [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations.\r\n *\r\n * ### Quick Start\r\n *\r\n * Assign an array to the [`items`](#/elements/vaadin-crud#property-items) property.\r\n *\r\n * A grid and an editor will be automatically generated and configured based on the data structure provided.\r\n *\r\n * ```html\r\n * <vaadin-crud></vaadin-crud>\r\n * ```\r\n *\r\n * ```js\r\n * const crud = document.querySelector('vaadin-crud');\r\n *\r\n * crud.items = [\r\n *   { name: 'John', surname: 'Lennon', role: 'singer' },\r\n *   { name: 'Ringo', surname: 'Starr', role: 'drums' },\r\n *   // ... more items\r\n * ];\r\n * ```\r\n *\r\n * ### Data Provider Function\r\n *\r\n * Otherwise, you can provide a [`dataProvider`](#/elements/vaadin-crud#property-dataProvider) function.\r\n *\r\n * ```js\r\n * const crud = document.querySelector('vaadin-crud');\r\n *\r\n * const users = [\r\n *   { name: 'John', surname: 'Lennon', role: 'singer' },\r\n *   { name: 'Ringo', surname: 'Starr', role: 'drums' },\r\n *   // ... more items\r\n * ];\r\n *\r\n * crud.dataProvider = (params, callback) => {\r\n *   const chunk = users.slice(params.page * params.pageSize, params.page * params.pageSize + params.pageSize);\r\n *   callback(chunk, people.length);\r\n * };\r\n * ```\r\n *\r\n * NOTE: The auto-generated editor only supports string types. If you need to handle special cases\r\n * customizing the editor is discussed below.\r\n *\r\n * ### Customization\r\n *\r\n * Alternatively you can fully configure the component by using `slot` names.\r\n *\r\n * Slot name      | Description\r\n * ---------------|----------------\r\n * `grid`         | To replace the auto-generated grid with a custom one.\r\n * `form`         | To replace the auto-generated form.\r\n * `save-button`  | To replace the \"Save\" button.\r\n * `cancel-button`| To replace the \"Cancel\" button.\r\n * `delete-button`| To replace the \"Delete\" button.\r\n * `toolbar`      | To provide the toolbar content (by default, it's empty).\r\n * `new-button`   | To replace the \"New item\" button.\r\n *\r\n * #### Example:\r\n *\r\n * ```html\r\n * <vaadin-crud id=\"crud\">\r\n *   <vaadin-grid slot=\"grid\">\r\n *     <vaadin-crud-edit-column></vaadin-crud-edit-column>\r\n *     <vaadin-grid-column id=\"column1\"></vaadin-grid-column>\r\n *     <vaadin-grid-column id=\"column2\"></vaadin-grid-column>\r\n *   </vaadin-grid>\r\n *\r\n *   <vaadin-form-layout slot=\"form\">\r\n *     <vaadin-text-field label=\"First\" path=\"name\"></vaadin-text-field>\r\n *     <vaadin-text-field label=\"Surname\" path=\"surname\"></vaadin-text-field>\r\n *   </vaadin-form-layout>\r\n *\r\n *   <div slot=\"toolbar\">Total singers: 2</div>\r\n *   <button slot=\"new-button\">New singer</button>\r\n *\r\n *   <button slot=\"save-button\">Save changes</button>\r\n *   <button slot=\"cancel-button\">Discard changes</button>\r\n *   <button slot=\"delete-button\">Delete singer</button>\r\n * </vaadin-crud>\r\n * ```\r\n * ```js\r\n * const crud = document.querySelector('#crud');\r\n *\r\n * const column1 = document.querySelector('#column1');\r\n * column1.headerRenderer = (root, column) => {\r\n *   root.textContent = 'Name';\r\n * };\r\n * column1.renderer = (root, column, model) => {\r\n *   root.textContent = model.item.name;\r\n * };\r\n *\r\n * const column2 = document.querySelector('#column2');\r\n * column2.headerRenderer = (root, column) => {\r\n *   root.textContent = 'Surname';\r\n * };\r\n * column2.renderer = (root, column, model) => {\r\n *   root.textContent = model.item.surname;\r\n * };\r\n *\r\n * crud.items = [\r\n *   { name: 'John', surname: 'Lennon', role: 'singer' },\r\n *   { name: 'Ringo', surname: 'Starr', role: 'drums' },\r\n *   // ... more items\r\n * ];\r\n * ```\r\n *\r\n * ### Helpers\r\n *\r\n * The following elements are used to auto-configure the grid and the editor\r\n * - [`<vaadin-crud-edit-column>`](#/elements/vaadin-crud-edit-column)\r\n * - `<vaadin-crud-grid>` - can be replaced with custom [`<vaadin-grid>`](#/elements/vaadin-grid)\r\n * - `<vaadin-crud-form>` - can be replaced with custom [`<vaadin-form-layout>`](#/elements/vaadin-form-layout)\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------------|----------------\r\n * `toolbar` | Toolbar container at the bottom. By default it contains the the `new` button\r\n *\r\n * The following custom properties are available:\r\n *\r\n * Custom Property | Description | Default\r\n * ----------------|----------------\r\n * --vaadin-crud-editor-max-height | max height of editor when opened on the bottom | 40%\r\n * --vaadin-crud-editor-max-width | max width of editor when opened on the side | 40%\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @fires {CustomEvent} editor-opened-changed - Fired when the `editorOpened` property changes.\r\n * @fires {CustomEvent} edited-item-changed - Fired when `editedItem` property changes.\r\n * @fires {CustomEvent} items-changed - Fired when the `items` property changes.\r\n * @fires {CustomEvent} size-changed - Fired when the `size` property changes.\r\n * @fires {CustomEvent} new - Fired when user wants to create a new item.\r\n * @fires {CustomEvent} edit - Fired when user wants to edit an existing item.\r\n * @fires {CustomEvent} delete - Fired when user wants to delete item.\r\n * @fires {CustomEvent} save - Fired when user wants to save a new or an existing item.\r\n * @fires {CustomEvent} cancel - Fired when user discards edition.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ControllerMixin\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @mixes CrudMixin\r\n */\r\nclass Crud extends CrudMixin(ControllerMixin(ElementMixin(ThemableMixin(PolymerElement)))) {\r\n  static get template() {\r\n    return html`\r\n      <div id=\"container\">\r\n        <div id=\"main\">\r\n          <slot name=\"grid\"></slot>\r\n\r\n          <div id=\"toolbar\" part=\"toolbar\">\r\n            <slot name=\"toolbar\"></slot>\r\n            <slot name=\"new-button\"></slot>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          part=\"editor\"\r\n          id=\"editor\"\r\n          role=\"group\"\r\n          aria-labelledby=\"header\"\r\n          hidden$=\"[[__computeEditorHidden(editorOpened, _fullscreen, editorPosition)]]\"\r\n        >\r\n          <div part=\"scroller\" id=\"scroller\">\r\n            <div part=\"header\" id=\"header\">\r\n              <slot name=\"header\"></slot>\r\n            </div>\r\n            <slot name=\"form\"></slot>\r\n          </div>\r\n\r\n          <div part=\"footer\" role=\"toolbar\">\r\n            <slot name=\"save-button\"></slot>\r\n            <slot name=\"cancel-button\"></slot>\r\n            <slot name=\"delete-button\"></slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <vaadin-crud-dialog\r\n        id=\"dialog\"\r\n        opened=\"[[__computeDialogOpened(editorOpened, _fullscreen, editorPosition)]]\"\r\n        fullscreen=\"[[_fullscreen]]\"\r\n        aria-label=\"[[__dialogAriaLabel]]\"\r\n        no-close-on-outside-click=\"[[__isDirty]]\"\r\n        no-close-on-esc=\"[[__isDirty]]\"\r\n        theme$=\"[[_theme]]\"\r\n        on-opened-changed=\"__onDialogOpened\"\r\n      ></vaadin-crud-dialog>\r\n\r\n      <vaadin-confirm-dialog\r\n        theme$=\"[[_theme]]\"\r\n        id=\"confirmCancel\"\r\n        on-confirm=\"__confirmCancel\"\r\n        cancel-button-visible\r\n        confirm-text=\"[[__effectiveI18n.confirm.cancel.button.confirm]]\"\r\n        cancel-text=\"[[__effectiveI18n.confirm.cancel.button.dismiss]]\"\r\n        header=\"[[__effectiveI18n.confirm.cancel.title]]\"\r\n        message=\"[[__effectiveI18n.confirm.cancel.content]]\"\r\n        confirm-theme=\"primary\"\r\n      ></vaadin-confirm-dialog>\r\n\r\n      <vaadin-confirm-dialog\r\n        theme$=\"[[_theme]]\"\r\n        id=\"confirmDelete\"\r\n        on-confirm=\"__confirmDelete\"\r\n        cancel-button-visible\r\n        confirm-text=\"[[__effectiveI18n.confirm.delete.button.confirm]]\"\r\n        cancel-text=\"[[__effectiveI18n.confirm.delete.button.dismiss]]\"\r\n        header=\"[[__effectiveI18n.confirm.delete.title]]\"\r\n        message=\"[[__effectiveI18n.confirm.delete.content]]\"\r\n        confirm-theme=\"primary error\"\r\n      ></vaadin-confirm-dialog>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-crud';\r\n  }\r\n\r\n  static get cvdlName() {\r\n    return 'vaadin-crud';\r\n  }\r\n}\r\n\r\ndefineCustomElement(Crud);\r\n\r\nexport { Crud };\r\n"],
  "mappings": "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",
  "names": ["dialogOverlay"]
}
