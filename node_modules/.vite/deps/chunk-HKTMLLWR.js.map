{
  "version": 3,
  "sources": ["../../@vaadin/input-container/theme/lumo/vaadin-input-container-styles.js", "../../@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-input-container',\r\n  css`\r\n    :host {\r\n      background: var(--_background);\r\n      padding: 0 calc(0.375em + var(--_input-container-radius) / 4 - 1px);\r\n      font-weight: var(--vaadin-input-field-value-font-weight, 500);\r\n      line-height: 1;\r\n      position: relative;\r\n      cursor: text;\r\n      box-sizing: border-box;\r\n      border-radius:\r\n        /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius#syntax */\r\n        var(--vaadin-input-field-top-start-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-top-end-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-bottom-end-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-bottom-start-radius, var(--_input-container-radius));\r\n      /* Fallback */\r\n      --_input-container-radius: var(--vaadin-input-field-border-radius, var(--lumo-border-radius-m));\r\n      --_input-height: var(--lumo-text-field-size, var(--lumo-size-m));\r\n      /* Default values */\r\n      --_background: var(--vaadin-input-field-background, var(--lumo-contrast-10pct));\r\n      --_hover-highlight: var(--vaadin-input-field-hover-highlight, var(--lumo-contrast-50pct));\r\n      --_input-border-color: var(--vaadin-input-field-border-color, var(--lumo-contrast-50pct));\r\n      --_icon-color: var(--vaadin-input-field-icon-color, var(--lumo-contrast-60pct));\r\n      --_icon-size: var(--vaadin-input-field-icon-size, var(--lumo-icon-size-m));\r\n      --_invalid-background: var(--vaadin-input-field-invalid-background, var(--lumo-error-color-10pct));\r\n      --_invalid-hover-highlight: var(--vaadin-input-field-invalid-hover-highlight, var(--lumo-error-color-50pct));\r\n      --_disabled-background: var(--vaadin-input-field-disabled-background, var(--lumo-contrast-5pct));\r\n      --_disabled-value-color: var(--vaadin-input-field-disabled-value-color, var(--lumo-disabled-text-color));\r\n    }\r\n\r\n    :host([dir='rtl']) {\r\n      border-radius:\r\n        /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\r\n        var(--vaadin-input-field-top-end-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-top-start-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-bottom-start-radius, var(--_input-container-radius))\r\n        var(--vaadin-input-field-bottom-end-radius, var(--_input-container-radius));\r\n    }\r\n\r\n    /* Used for hover and activation effects */\r\n    :host::after {\r\n      content: '';\r\n      position: absolute;\r\n      inset: 0;\r\n      border-radius: inherit;\r\n      pointer-events: none;\r\n      background: var(--_hover-highlight);\r\n      opacity: 0;\r\n      transition:\r\n        transform 0.15s,\r\n        opacity 0.2s;\r\n      transform-origin: 100% 0;\r\n    }\r\n\r\n    ::slotted(:not([slot$='fix'])) {\r\n      cursor: inherit;\r\n      min-height: var(--vaadin-input-field-height, var(--_input-height));\r\n      padding: 0 0.25em;\r\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\r\n      -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\r\n      mask-image: var(--_lumo-text-field-overflow-mask-image);\r\n    }\r\n\r\n    /* Read-only */\r\n    :host([readonly]) {\r\n      color: var(--lumo-secondary-text-color);\r\n      background-color: transparent;\r\n      cursor: default;\r\n    }\r\n\r\n    :host([readonly])::after {\r\n      background-color: transparent;\r\n      opacity: 1;\r\n      border: var(--vaadin-input-field-readonly-border, 1px dashed var(--lumo-contrast-30pct));\r\n    }\r\n\r\n    /* Disabled */\r\n    :host([disabled]) {\r\n      background: var(--_disabled-background);\r\n    }\r\n\r\n    :host([disabled]) ::slotted(:not([slot$='fix'])) {\r\n      -webkit-text-fill-color: var(--_disabled-value-color);\r\n      color: var(--_disabled-value-color);\r\n    }\r\n\r\n    /* Invalid */\r\n    :host([invalid]) {\r\n      background: var(--_invalid-background);\r\n    }\r\n\r\n    :host([invalid]:not([readonly]))::after {\r\n      background: var(--_invalid-hover-highlight);\r\n    }\r\n\r\n    /* Slotted icons */\r\n    ::slotted(vaadin-icon) {\r\n      color: var(--_icon-color);\r\n      width: var(--_icon-size);\r\n      height: var(--_icon-size);\r\n    }\r\n\r\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\r\n    ::slotted(vaadin-icon[icon^='vaadin:']) {\r\n      padding: 0.25em;\r\n      box-sizing: border-box !important;\r\n    }\r\n\r\n    /* Text align */\r\n    :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent, #000 1.25em);\r\n    }\r\n\r\n    @-moz-document url-prefix() {\r\n      :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n        mask-image: var(--_lumo-text-field-overflow-mask-image);\r\n      }\r\n    }\r\n\r\n    :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\r\n      text-align: start;\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    :host([theme~='align-center']) ::slotted(:not([slot$='fix'])) {\r\n      text-align: center;\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\r\n      text-align: end;\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    @-moz-document url-prefix() {\r\n      /* Firefox is smart enough to align overflowing text to right */\r\n      :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\r\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\r\n      }\r\n    }\r\n\r\n    @-moz-document url-prefix() {\r\n      /* Firefox is smart enough to align overflowing text to right */\r\n      :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\r\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\r\n      }\r\n    }\r\n\r\n    /* RTL specific styles */\r\n    :host([dir='rtl'])::after {\r\n      transform-origin: 0% 0;\r\n    }\r\n\r\n    :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    :host([theme~='align-center'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n      --_lumo-text-field-overflow-mask-image: none;\r\n    }\r\n\r\n    @-moz-document url-prefix() {\r\n      /* Firefox is smart enough to align overflowing text to right */\r\n      :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\r\n      }\r\n    }\r\n\r\n    @-moz-document url-prefix() {\r\n      /* Firefox is smart enough to align overflowing text to right */\r\n      :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\r\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\r\n      }\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-input-container' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '../color.js';\r\nimport '../font-icons.js';\r\nimport '../sizing.js';\r\nimport '../spacing.js';\r\nimport '../style.js';\r\nimport '../typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { fieldButton } from './field-button.js';\r\nimport { helper } from './helper.js';\r\nimport { requiredField } from './required-field.js';\r\n\r\nconst inputField = css`\r\n  :host {\r\n    --lumo-text-field-size: var(--lumo-size-m);\r\n    color: var(--vaadin-input-field-value-color, var(--lumo-body-text-color));\r\n    font-size: var(--vaadin-input-field-value-font-size, var(--lumo-font-size-m));\r\n    font-family: var(--lumo-font-family);\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: transparent;\r\n    padding: var(--lumo-space-xs) 0;\r\n    --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n    --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n    --_input-height: var(--vaadin-input-field-height, var(--lumo-text-field-size));\r\n    --_disabled-value-color: var(--vaadin-input-field-disabled-value-color, var(--lumo-disabled-text-color));\r\n  }\r\n\r\n  :host::before {\r\n    height: var(--_input-height);\r\n    box-sizing: border-box;\r\n    display: inline-flex;\r\n    align-items: center;\r\n  }\r\n\r\n  :host([focused]) [part='input-field'] ::slotted(:is(input, textarea)) {\r\n    -webkit-mask-image: none;\r\n    mask-image: none;\r\n  }\r\n\r\n  ::slotted(:is(input, textarea):placeholder-shown) {\r\n    color: var(--vaadin-input-field-placeholder-color, var(--lumo-secondary-text-color));\r\n  }\r\n\r\n  /* Hover */\r\n  :host(:hover:not([readonly]):not([focused]):not([disabled])) [part='input-field']::after {\r\n    opacity: var(--vaadin-input-field-hover-highlight-opacity, 0.1);\r\n  }\r\n\r\n  /* Touch device adjustment */\r\n  @media (pointer: coarse) {\r\n    :host(:hover:not([readonly]):not([focused]):not([disabled])) [part='input-field']::after {\r\n      opacity: 0;\r\n    }\r\n\r\n    :host(:active:not([readonly]):not([focused]):not([disabled])) [part='input-field']::after {\r\n      opacity: 0.2;\r\n    }\r\n  }\r\n\r\n  /* Trigger when not focusing using the keyboard */\r\n  :host([focused]:not([focus-ring]):not([readonly])) [part='input-field']::after {\r\n    transform: scaleX(0);\r\n    transition-duration: 0.15s, 1s;\r\n  }\r\n\r\n  /* Opt-in focus-ring when using pointer devices */\r\n  /* This applies a focus-ring as box-shadow when the element is focused, but\r\n     the ring is only visible / has a width when the respective CSS property is\r\n     \"enabled\" using a value of 1 */\r\n  :host([focused]) [part='input-field'] {\r\n    /* Borders are implemented using box-shadows as well. To avoid overriding \r\n       the border on focus, even if the pointer focus-ring is disabled, we need to:\r\n       - Duplicate the border box shadow for this rule\r\n       - Remove the border (by using width of 0) when the focus-ring is visible,\r\n         which is the same behavior as for the keyboard focus-ring below\r\n       - Apply the border when the focus ring is not visible\r\n    */\r\n    --_pointer-focus-visible: clamp(0, var(--lumo-input-field-pointer-focus-visible, 0), 1);\r\n    --_conditional-border-width: calc(calc(1 - var(--_pointer-focus-visible)) * var(--_input-border-width));\r\n    --_conditional-focus-ring-width: calc(var(--_pointer-focus-visible) * var(--_focus-ring-width));\r\n    box-shadow:\r\n      inset 0 0 0 var(--_conditional-border-width) var(--_input-border-color),\r\n      0 0 0 var(--_conditional-focus-ring-width) var(--_focus-ring-color);\r\n  }\r\n\r\n  /* Focus-ring when using keyboard navigation */\r\n  :host([focus-ring]) [part='input-field'] {\r\n    box-shadow: 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n  }\r\n\r\n  /* Read-only and disabled */\r\n  :host(:is([readonly], [disabled])) ::slotted(:is(input, textarea):placeholder-shown) {\r\n    opacity: 0;\r\n  }\r\n\r\n  /* Read-only style */\r\n  :host([readonly]) {\r\n    --vaadin-input-field-border-color: transparent;\r\n  }\r\n\r\n  /* Disabled style */\r\n  :host([disabled]) {\r\n    pointer-events: none;\r\n    --vaadin-input-field-border-color: var(--lumo-contrast-20pct);\r\n  }\r\n\r\n  :host([disabled]) [part='label'],\r\n  :host([disabled]) [part='input-field'] ::slotted([slot$='fix']) {\r\n    color: var(--lumo-disabled-text-color);\r\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\r\n  }\r\n\r\n  :host([disabled]) [part='input-field'] ::slotted(:not([slot$='fix'])) {\r\n    color: var(--_disabled-value-color);\r\n    -webkit-text-fill-color: var(--_disabled-value-color);\r\n  }\r\n\r\n  /* Invalid style */\r\n  :host([invalid]) {\r\n    --vaadin-input-field-border-color: var(--lumo-error-color);\r\n    --_focus-ring-color: var(--lumo-error-color-50pct);\r\n  }\r\n\r\n  :host([input-prevented]) [part='input-field'] {\r\n    animation: shake 0.15s infinite;\r\n  }\r\n\r\n  @keyframes shake {\r\n    25% {\r\n      transform: translateX(4px);\r\n    }\r\n    75% {\r\n      transform: translateX(-4px);\r\n    }\r\n  }\r\n\r\n  /* Small theme */\r\n  :host([theme~='small']) {\r\n    font-size: var(--lumo-font-size-s);\r\n    --lumo-text-field-size: var(--lumo-size-s);\r\n  }\r\n\r\n  :host([theme~='small']) [part='label'] {\r\n    font-size: var(--lumo-font-size-xs);\r\n  }\r\n\r\n  :host([theme~='small']) [part='error-message'] {\r\n    font-size: var(--lumo-font-size-xxs);\r\n  }\r\n\r\n  /* Slotted content */\r\n  [part='input-field'] ::slotted(:not(vaadin-icon):not(input):not(textarea)) {\r\n    color: var(--lumo-secondary-text-color);\r\n    font-weight: 400;\r\n  }\r\n\r\n  [part='clear-button']::before {\r\n    content: var(--lumo-icons-cross);\r\n  }\r\n`;\r\n\r\nconst inputFieldShared = [requiredField, fieldButton, helper, inputField];\r\n\r\nregisterStyles('', inputFieldShared, {\r\n  moduleId: 'lumo-input-field-shared-styles',\r\n});\r\n\r\nexport { inputField, inputFieldShared };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;AAMA;AAAA,EACE;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmLA,EAAE,UAAU,uBAAuB;AACrC;;;AC5KA,IAAM,aAAasJnB,IAAM,mBAAmB,CAAC,eAAe,aAAa,QAAQ,UAAU;AAExE,eAAe,IAAI,kBAAkB;AAAA,EACnC,UAAU;AACZ,CAAC;",
  "names": []
}
