{
  "version": 3,
  "sources": ["../../@vaadin/message-input/theme/lumo/vaadin-message-input-styles.js", "../../@vaadin/message-input/src/vaadin-message-input-mixin.js", "../../@vaadin/message-input/src/vaadin-message-input.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-message-input',\r\n  css`\r\n    :host {\r\n      padding: var(--lumo-space-s) var(--lumo-space-m);\r\n    }\r\n\r\n    ::slotted([slot='textarea']) {\r\n      margin-inline-end: var(--lumo-space-s);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-message-input' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ControllerMixin\r\n */\r\nexport const MessageInputMixin = (superClass) =>\r\n  class MessageInputMixinClass extends ControllerMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Current content of the text input field\r\n         */\r\n        value: {\r\n          type: String,\r\n          value: '',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * The object used to localize this component.\r\n         * For changing the default localization, change the entire\r\n         * `i18n` object.\r\n         *\r\n         * The object has the following JSON structure and default values:\r\n         *\r\n         * ```\r\n         * {\r\n         *   // Used as the button label\r\n         *   send: 'Send',\r\n         *\r\n         *   // Used as the input field's placeholder and aria-label\r\n         *   message: 'Message'\r\n         * }\r\n         * ```\r\n         *\r\n         * @type {!MessageInputI18n}\r\n         * @default {English}\r\n         */\r\n        i18n: {\r\n          type: Object,\r\n          sync: true,\r\n          value: () => ({\r\n            send: 'Send',\r\n            message: 'Message',\r\n          }),\r\n        },\r\n\r\n        /**\r\n         * Set to true to disable this element.\r\n         * @type {boolean}\r\n         */\r\n        disabled: {\r\n          type: Boolean,\r\n          value: false,\r\n          reflectToAttribute: true,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _button: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n\r\n        /** @private */\r\n        _textArea: {\r\n          type: Object,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return [\r\n        '__buttonPropsChanged(_button, disabled, i18n)',\r\n        '__textAreaPropsChanged(_textArea, disabled, i18n, value)',\r\n      ];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._buttonController = new SlotController(this, 'button', 'vaadin-button', {\r\n        initializer: (btn) => {\r\n          btn.setAttribute('theme', 'primary contained');\r\n\r\n          btn.addEventListener('click', () => {\r\n            this.__submit();\r\n          });\r\n\r\n          this._button = btn;\r\n        },\r\n      });\r\n      this.addController(this._buttonController);\r\n\r\n      this._textAreaController = new SlotController(this, 'textarea', 'vaadin-text-area', {\r\n        initializer: (textarea) => {\r\n          textarea.addEventListener('value-changed', (event) => {\r\n            this.value = event.detail.value;\r\n          });\r\n\r\n          textarea.addEventListener('keydown', (event) => {\r\n            if (event.key === 'Enter' && !event.shiftKey) {\r\n              event.preventDefault();\r\n              event.stopImmediatePropagation();\r\n              this.__submit();\r\n            }\r\n          });\r\n\r\n          textarea.minRows = 1;\r\n\r\n          this._textArea = textarea;\r\n        },\r\n      });\r\n      this.addController(this._textAreaController);\r\n\r\n      this._tooltipController = new TooltipController(this);\r\n      this.addController(this._tooltipController);\r\n    }\r\n\r\n    focus() {\r\n      if (this._textArea) {\r\n        this._textArea.focus();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __buttonPropsChanged(button, disabled, i18n) {\r\n      if (button) {\r\n        button.disabled = disabled;\r\n        button.textContent = i18n.send;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __textAreaPropsChanged(textArea, disabled, i18n, value) {\r\n      if (textArea) {\r\n        textArea.disabled = disabled;\r\n        textArea.value = value;\r\n\r\n        const message = i18n.message;\r\n        textArea.placeholder = message;\r\n        textArea.accessibleName = message;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Submits the current value as an custom event named 'submit'.\r\n     * It also clears the text input and refocuses it for sending another message.\r\n     * In UI, can be triggered by pressing the submit button or pressing enter key when field is focused.\r\n     * It does not submit anything if text is empty.\r\n     */\r\n    __submit() {\r\n      if (this.value !== '') {\r\n        this.dispatchEvent(new CustomEvent('submit', { detail: { value: this.value } }));\r\n        this.value = '';\r\n      }\r\n      this._textArea.focus();\r\n    }\r\n\r\n    /**\r\n     * Fired when a new message is submitted with `<vaadin-message-input>`, either\r\n     * by clicking the \"send\" button, or pressing the Enter key.\r\n     * @event submit\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/button/src/vaadin-button.js';\r\nimport '@vaadin/text-area/src/vaadin-text-area.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { MessageInputMixin } from './vaadin-message-input-mixin.js';\r\n\r\n/**\r\n * `<vaadin-message-input>` is a Web Component for sending messages.\r\n * It consists of a text area that grows on along with the content, and a send button to send message.\r\n *\r\n * The message can be sent by one of the following actions:\r\n * - by pressing Enter (use Shift + Enter to add a new line)\r\n * - by clicking `submit` button.\r\n *\r\n * ```html\r\n * <vaadin-message-input></vaadin-message-input>\r\n * ```\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes MessageInputMixin\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n */\r\nclass MessageInput extends MessageInputMixin(ElementMixin(ThemableMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          align-items: flex-start;\r\n          box-sizing: border-box;\r\n          display: flex;\r\n          max-height: 50vh;\r\n          overflow: hidden;\r\n          flex-shrink: 0;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n\r\n        ::slotted([slot='button']) {\r\n          flex-shrink: 0;\r\n        }\r\n\r\n        ::slotted([slot='textarea']) {\r\n          align-self: stretch;\r\n          flex-grow: 1;\r\n        }\r\n      </style>\r\n      <slot name=\"textarea\"></slot>\r\n\r\n      <slot name=\"button\"></slot>\r\n\r\n      <slot name=\"tooltip\"></slot>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-message-input';\r\n  }\r\n}\r\n\r\ndefineCustomElement(MessageInput);\r\n\r\nexport { MessageInput };\r\n"],
  "mappings": "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",
  "names": []
}
