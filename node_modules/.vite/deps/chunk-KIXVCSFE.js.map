{
  "version": 3,
  "sources": ["../../@vaadin/field-base/src/pattern-mixin.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\r\n\r\n/**\r\n * A mixin to provide `pattern` property.\r\n *\r\n * @polymerMixin\r\n * @mixes InputConstraintsMixin\r\n */\r\nexport const PatternMixin = (superclass) =>\r\n  class PatternMixinClass extends InputConstraintsMixin(superclass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * A regular expression that the value is checked against.\r\n         * The pattern must match the entire value, not just some subset.\r\n         */\r\n        pattern: {\r\n          type: String,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get delegateAttrs() {\r\n      return [...super.delegateAttrs, 'pattern'];\r\n    }\r\n\r\n    static get constraints() {\r\n      return [...super.constraints, 'pattern'];\r\n    }\r\n  };\r\n"],
  "mappings": ";;;;;AAaO,IAAM,eAAe,CAAC,eAC3B,MAAM,0BAA0B,sBAAsB,UAAU,EAAE;AAAA,EAChE,WAAW,aAAa;AACtB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA,MAKL,SAAS;AAAA,QACP,MAAM;AAAA,MACR;AAAA,IACF;AAAA,EACF;AAAA,EAEA,WAAW,gBAAgB;AACzB,WAAO,CAAC,GAAG,MAAM,eAAe,SAAS;AAAA,EAC3C;AAAA,EAEA,WAAW,cAAc;AACvB,WAAO,CAAC,GAAG,MAAM,aAAa,SAAS;AAAA,EACzC;AACF;",
  "names": []
}
