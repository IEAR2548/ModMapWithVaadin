{
  "version": 3,
  "sources": ["../../@vaadin/notification/theme/lumo/vaadin-notification-styles.js", "../../@vaadin/notification/src/vaadin-notification-mixin.js", "../../@vaadin/notification/src/vaadin-notification-styles.js", "../../@vaadin/notification/src/vaadin-notification.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-notification-card',\r\n  css`\r\n    :host {\r\n      position: relative;\r\n      margin: var(--lumo-space-s);\r\n    }\r\n\r\n    [part='overlay'] {\r\n      background: var(--lumo-base-color) linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\r\n      border-radius: var(--lumo-border-radius-l);\r\n      box-shadow:\r\n        0 0 0 1px var(--lumo-contrast-10pct),\r\n        var(--lumo-box-shadow-l);\r\n      font-family: var(--lumo-font-family);\r\n      font-size: var(--lumo-font-size-m);\r\n      font-weight: 400;\r\n      line-height: var(--lumo-line-height-s);\r\n      letter-spacing: 0;\r\n      text-transform: none;\r\n      -webkit-text-size-adjust: 100%;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    [part='content'] {\r\n      padding: var(--lumo-space-wide-l);\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-between;\r\n    }\r\n\r\n    [part='content'] ::slotted(vaadin-button) {\r\n      flex: none;\r\n      margin: 0 calc(var(--lumo-space-s) * -1) 0 var(--lumo-space-m);\r\n    }\r\n\r\n    :host([slot^='middle']) {\r\n      max-width: 80vw;\r\n      margin: var(--lumo-space-s) auto;\r\n    }\r\n\r\n    :host([slot$='stretch']) {\r\n      margin: 0;\r\n    }\r\n\r\n    :host([slot$='stretch']) [part='overlay'] {\r\n      border-radius: 0;\r\n    }\r\n\r\n    @media (min-width: 421px) {\r\n      :host(:not([slot$='stretch'])) {\r\n        display: flex;\r\n      }\r\n\r\n      :host([slot$='end']) {\r\n        justify-content: flex-end;\r\n      }\r\n\r\n      :host([slot^='middle']),\r\n      :host([slot$='center']) {\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-exit-fade-out {\r\n      100% {\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-enter-fade-in {\r\n      0% {\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-enter-slide-down {\r\n      0% {\r\n        transform: translateY(-200%);\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-exit-slide-up {\r\n      100% {\r\n        transform: translateY(-200%);\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-enter-slide-up {\r\n      0% {\r\n        transform: translateY(200%);\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    @keyframes lumo-notification-exit-slide-down {\r\n      100% {\r\n        transform: translateY(200%);\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    :host([slot='middle'][opening]) {\r\n      animation: lumo-notification-enter-fade-in 300ms;\r\n    }\r\n\r\n    :host([slot='middle'][closing]) {\r\n      animation: lumo-notification-exit-fade-out 300ms;\r\n    }\r\n\r\n    :host([slot^='top'][opening]) {\r\n      animation: lumo-notification-enter-slide-down 300ms;\r\n    }\r\n\r\n    :host([slot^='top'][closing]) {\r\n      animation: lumo-notification-exit-slide-up 300ms;\r\n    }\r\n\r\n    :host([slot^='bottom'][opening]) {\r\n      animation: lumo-notification-enter-slide-up 300ms;\r\n    }\r\n\r\n    :host([slot^='bottom'][closing]) {\r\n      animation: lumo-notification-exit-slide-down 300ms;\r\n    }\r\n\r\n    :host([theme='success']) {\r\n      --_focus-ring-gap-color: var(--lumo-success-color);\r\n      --vaadin-focus-ring-color: var(--lumo-success-contrast-color);\r\n    }\r\n\r\n    :host([theme='warning']) {\r\n      --_focus-ring-gap-color: var(--lumo-warning-color);\r\n      --vaadin-focus-ring-color: var(--lumo-warning-contrast-color);\r\n    }\r\n\r\n    :host([theme='error']) {\r\n      --_focus-ring-gap-color: var(--lumo-error-color);\r\n      --vaadin-focus-ring-color: var(--lumo-error-contrast-color);\r\n    }\r\n\r\n    :host([theme='primary']) {\r\n      --_focus-ring-gap-color: var(--lumo-primary-color);\r\n      --vaadin-focus-ring-color: var(--lumo-primary-contrast-color);\r\n    }\r\n\r\n    :host([theme~='primary']) [part='overlay'] {\r\n      background: var(--lumo-primary-color);\r\n      color: var(--lumo-primary-contrast-color);\r\n      box-shadow: var(--lumo-box-shadow-l);\r\n    }\r\n\r\n    :host([theme~='primary']) {\r\n      --vaadin-button-background: var(--lumo-shade-20pct);\r\n      --vaadin-button-text-color: var(--lumo-primary-contrast-color);\r\n      --vaadin-button-primary-background: var(--lumo-primary-contrast-color);\r\n      --vaadin-button-primary-text-color: var(--lumo-primary-text-color);\r\n    }\r\n\r\n    :host([theme~='contrast']) [part='overlay'] {\r\n      background: var(--lumo-contrast);\r\n      color: var(--lumo-base-color);\r\n      box-shadow: var(--lumo-box-shadow-l);\r\n    }\r\n\r\n    :host([theme~='contrast']) {\r\n      --vaadin-button-background: var(--lumo-contrast-20pct);\r\n      --vaadin-button-text-color: var(--lumo-base-color);\r\n      --vaadin-button-primary-background: var(--lumo-base-color);\r\n      --vaadin-button-primary-text-color: var(--lumo-contrast);\r\n    }\r\n\r\n    :host([theme~='success']) [part='overlay'] {\r\n      background: var(--lumo-success-color);\r\n      color: var(--lumo-success-contrast-color);\r\n      box-shadow: var(--lumo-box-shadow-l);\r\n    }\r\n\r\n    :host([theme~='success']) {\r\n      --vaadin-button-background: var(--lumo-shade-20pct);\r\n      --vaadin-button-text-color: var(--lumo-success-contrast-color);\r\n      --vaadin-button-primary-background: var(--lumo-success-contrast-color);\r\n      --vaadin-button-primary-text-color: var(--lumo-success-text-color);\r\n    }\r\n\r\n    :host([theme~='error']) [part='overlay'] {\r\n      background: var(--lumo-error-color);\r\n      color: var(--lumo-error-contrast-color);\r\n      box-shadow: var(--lumo-box-shadow-l);\r\n    }\r\n\r\n    :host([theme~='error']) {\r\n      --vaadin-button-background: var(--lumo-shade-20pct);\r\n      --vaadin-button-text-color: var(--lumo-error-contrast-color);\r\n      --vaadin-button-primary-background: var(--lumo-error-contrast-color);\r\n      --vaadin-button-primary-text-color: var(--lumo-error-text-color);\r\n    }\r\n\r\n    :host([theme~='warning']) [part='overlay'] {\r\n      background: var(--lumo-warning-color);\r\n      color: var(--lumo-warning-contrast-color);\r\n      box-shadow:\r\n        inset 0 0 0 1px var(--lumo-contrast-20pct),\r\n        var(--lumo-box-shadow-l);\r\n    }\r\n\r\n    :host([theme~='warning']) {\r\n      --vaadin-button-background: var(--lumo-shade-20pct);\r\n      --vaadin-button-text-color: var(--lumo-warning-contrast-color);\r\n      --vaadin-button-primary-background: var(--lumo-shade-50pct);\r\n      --vaadin-button-primary-text-color: var(--lumo-primary-contrast-color);\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-notification-card' },\r\n);\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { render } from 'lit';\r\nimport { isTemplateResult } from 'lit/directive-helpers.js';\r\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\r\nimport { OverlayClassMixin } from '@vaadin/component-base/src/overlay-class-mixin.js';\r\nimport { processTemplates } from '@vaadin/component-base/src/templates.js';\r\nimport { OverlayStackMixin } from '@vaadin/overlay/src/vaadin-overlay-stack-mixin.js';\r\nimport { ThemePropertyMixin } from '@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js';\r\n\r\n/**\r\n * A mixin providing common notification container functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes OverlayStackMixin\r\n */\r\nexport const NotificationContainerMixin = (superClass) =>\r\n  class extends OverlayStackMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * True when the container is opened\r\n         * @type {boolean}\r\n         */\r\n        opened: {\r\n          type: Boolean,\r\n          value: false,\r\n          sync: true,\r\n          observer: '_openedChanged',\r\n        },\r\n      };\r\n    }\r\n\r\n    constructor() {\r\n      super();\r\n\r\n      this._boundVaadinOverlayClose = this._onVaadinOverlayClose.bind(this);\r\n      if (isIOS) {\r\n        this._boundIosResizeListener = () => this._detectIosNavbar();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _openedChanged(opened) {\r\n      if (opened) {\r\n        document.body.appendChild(this);\r\n        document.addEventListener('vaadin-overlay-close', this._boundVaadinOverlayClose);\r\n        if (this._boundIosResizeListener) {\r\n          this._detectIosNavbar();\r\n          window.addEventListener('resize', this._boundIosResizeListener);\r\n        }\r\n      } else {\r\n        document.body.removeChild(this);\r\n        document.removeEventListener('vaadin-overlay-close', this._boundVaadinOverlayClose);\r\n        if (this._boundIosResizeListener) {\r\n          window.removeEventListener('resize', this._boundIosResizeListener);\r\n        }\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _detectIosNavbar() {\r\n      const innerHeight = window.innerHeight;\r\n      const innerWidth = window.innerWidth;\r\n      const landscape = innerWidth > innerHeight;\r\n      const clientHeight = document.documentElement.clientHeight;\r\n      if (landscape && clientHeight > innerHeight) {\r\n        this.style.bottom = `${clientHeight - innerHeight}px`;\r\n      } else {\r\n        this.style.bottom = '0';\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onVaadinOverlayClose(event) {\r\n      // Notifications are a separate overlay mechanism from vaadin-overlay, and\r\n      // interacting with them should not close modal overlays\r\n      const sourceEvent = event.detail.sourceEvent;\r\n      const isFromNotification = sourceEvent && sourceEvent.composedPath().indexOf(this) >= 0;\r\n      if (isFromNotification) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n/**\r\n * A mixin providing common notification functionality.\r\n *\r\n * @polymerMixin\r\n * @mixes OverlayClassMixin\r\n * @mixes ThemePropertyMixin\r\n */\r\nexport const NotificationMixin = (superClass) =>\r\n  class extends ThemePropertyMixin(OverlayClassMixin(superClass)) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * When true, the notification card has `aria-live` attribute set to\r\n         * `assertive` instead of `polite`. This makes screen readers announce\r\n         * the notification content immediately when it appears.\r\n         */\r\n        assertive: {\r\n          type: Boolean,\r\n          value: false,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * The duration in milliseconds to show the notification.\r\n         * Set to `0` or a negative number to disable the notification auto-closing.\r\n         * @type {number}\r\n         */\r\n        duration: {\r\n          type: Number,\r\n          value: 5000,\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * True if the notification is currently displayed.\r\n         * @type {boolean}\r\n         */\r\n        opened: {\r\n          type: Boolean,\r\n          value: false,\r\n          notify: true,\r\n          sync: true,\r\n          observer: '_openedChanged',\r\n        },\r\n\r\n        /**\r\n         * Alignment of the notification in the viewport\r\n         * Valid values are `top-stretch|top-start|top-center|top-end|middle|bottom-start|bottom-center|bottom-end|bottom-stretch`\r\n         * @type {!NotificationPosition}\r\n         */\r\n        position: {\r\n          type: String,\r\n          value: 'bottom-start',\r\n          observer: '_positionChanged',\r\n          sync: true,\r\n        },\r\n\r\n        /**\r\n         * Custom function for rendering the content of the notification.\r\n         * Receives two arguments:\r\n         *\r\n         * - `root` The `<vaadin-notification-card>` DOM element. Append\r\n         *   your content to it.\r\n         * - `notification` The reference to the `<vaadin-notification>` element.\r\n         * @type {!NotificationRenderer | undefined}\r\n         */\r\n        renderer: {\r\n          type: Function,\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['_durationChanged(duration, opened)', '_rendererChanged(renderer, opened, _overlayElement)'];\r\n    }\r\n\r\n    /**\r\n     * Shows a notification with the given content.\r\n     * By default, positions the notification at `bottom-start` and uses a 5 second duration.\r\n     * An options object can be passed to configure the notification.\r\n     * The options object has the following structure:\r\n     *\r\n     * ```\r\n     * {\r\n     *   assertive?: boolean\r\n     *   position?: string\r\n     *   duration?: number\r\n     *   theme?: string\r\n     * }\r\n     * ```\r\n     *\r\n     * See the individual documentation for:\r\n     * - [`assertive`](#/elements/vaadin-notification#property-assertive)\r\n     * - [`position`](#/elements/vaadin-notification#property-position)\r\n     * - [`duration`](#/elements/vaadin-notification#property-duration)\r\n     *\r\n     * @param contents the contents to show, either as a string or a Lit template.\r\n     * @param options optional options for customizing the notification.\r\n     */\r\n    static show(contents, options) {\r\n      const Notification = customElements.get('vaadin-notification');\r\n      if (isTemplateResult(contents)) {\r\n        return Notification._createAndShowNotification((root) => {\r\n          render(contents, root);\r\n        }, options);\r\n      }\r\n      return Notification._createAndShowNotification((root) => {\r\n        root.innerText = contents;\r\n      }, options);\r\n    }\r\n\r\n    /** @private */\r\n    static _createAndShowNotification(renderer, options) {\r\n      const notification = document.createElement('vaadin-notification');\r\n      if (options && Number.isFinite(options.duration)) {\r\n        notification.duration = options.duration;\r\n      }\r\n      if (options && options.position) {\r\n        notification.position = options.position;\r\n      }\r\n      if (options && options.assertive) {\r\n        notification.assertive = options.assertive;\r\n      }\r\n      if (options && options.theme) {\r\n        notification.setAttribute('theme', options.theme);\r\n      }\r\n      notification.renderer = renderer;\r\n      document.body.appendChild(notification);\r\n      notification.opened = true;\r\n\r\n      notification.addEventListener('opened-changed', (e) => {\r\n        if (!e.detail.value) {\r\n          notification.remove();\r\n        }\r\n      });\r\n\r\n      return notification;\r\n    }\r\n\r\n    /** @private */\r\n    get _container() {\r\n      const Notification = customElements.get('vaadin-notification');\r\n      if (!Notification._container) {\r\n        Notification._container = document.createElement('vaadin-notification-container');\r\n        document.body.appendChild(Notification._container);\r\n      }\r\n      return Notification._container;\r\n    }\r\n\r\n    /** @protected */\r\n    get _card() {\r\n      return this._overlayElement;\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._overlayElement = this.shadowRoot.querySelector('vaadin-notification-card');\r\n\r\n      processTemplates(this);\r\n    }\r\n\r\n    /** @protected */\r\n    disconnectedCallback() {\r\n      super.disconnectedCallback();\r\n      queueMicrotask(() => {\r\n        if (!this.isConnected) {\r\n          this.opened = false;\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Requests an update for the content of the notification.\r\n     * While performing the update, it invokes the renderer passed in the `renderer` property.\r\n     *\r\n     * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\r\n     */\r\n    requestContentUpdate() {\r\n      if (!this.renderer || !this._card) {\r\n        return;\r\n      }\r\n\r\n      this.renderer(this._card, this);\r\n    }\r\n\r\n    /** @private */\r\n    __computeAriaLive(assertive) {\r\n      return assertive ? 'assertive' : 'polite';\r\n    }\r\n\r\n    /** @private */\r\n    _rendererChanged(renderer, opened, card) {\r\n      if (!card) {\r\n        return;\r\n      }\r\n\r\n      const rendererChanged = this._oldRenderer !== renderer;\r\n      this._oldRenderer = renderer;\r\n\r\n      if (rendererChanged) {\r\n        card.innerHTML = '';\r\n        // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\r\n        // When clearing the rendered content, this part needs to be manually disposed of.\r\n        // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\r\n        delete card._$litPart$;\r\n      }\r\n\r\n      if (opened) {\r\n        if (!this._didAnimateNotificationAppend) {\r\n          this._animatedAppendNotificationCard();\r\n        }\r\n        this.requestContentUpdate();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Opens the notification.\r\n     */\r\n    open() {\r\n      this.opened = true;\r\n    }\r\n\r\n    /**\r\n     * Closes the notification.\r\n     */\r\n    close() {\r\n      this.opened = false;\r\n    }\r\n\r\n    /** @private */\r\n    _openedChanged(opened) {\r\n      if (opened) {\r\n        this._container.opened = true;\r\n        this._animatedAppendNotificationCard();\r\n      } else if (this._card) {\r\n        this._closeNotificationCard();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    __cleanUpOpeningClosingState() {\r\n      this._card.removeAttribute('opening');\r\n      this._card.removeAttribute('closing');\r\n      this._card.removeEventListener('animationend', this.__animationEndListener);\r\n    }\r\n\r\n    /** @private */\r\n    _animatedAppendNotificationCard() {\r\n      if (this._card) {\r\n        this.__cleanUpOpeningClosingState();\r\n\r\n        this._card.setAttribute('opening', '');\r\n        this._appendNotificationCard();\r\n        this.__animationEndListener = () => this.__cleanUpOpeningClosingState();\r\n        this._card.addEventListener('animationend', this.__animationEndListener);\r\n        this._didAnimateNotificationAppend = true;\r\n      } else {\r\n        this._didAnimateNotificationAppend = false;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _appendNotificationCard() {\r\n      if (!this._card) {\r\n        return;\r\n      }\r\n\r\n      if (!this._container.shadowRoot.querySelector(`slot[name=\"${this.position}\"]`)) {\r\n        console.warn(`Invalid alignment parameter provided: position=${this.position}`);\r\n        return;\r\n      }\r\n\r\n      this._container.bringToFront();\r\n\r\n      this._card.slot = this.position;\r\n      if (this._container.firstElementChild && /top/u.test(this.position)) {\r\n        this._container.insertBefore(this._card, this._container.firstElementChild);\r\n      } else {\r\n        this._container.appendChild(this._card);\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _removeNotificationCard() {\r\n      if (!this._card) {\r\n        return;\r\n      }\r\n\r\n      if (this._card.parentNode) {\r\n        this._card.parentNode.removeChild(this._card);\r\n      }\r\n      this._card.removeAttribute('closing');\r\n      this._container.opened = Boolean(this._container.firstElementChild);\r\n      this.dispatchEvent(new CustomEvent('closed'));\r\n    }\r\n\r\n    /** @private */\r\n    _closeNotificationCard() {\r\n      if (this._durationTimeoutId) {\r\n        clearTimeout(this._durationTimeoutId);\r\n      }\r\n      this._animatedRemoveNotificationCard();\r\n    }\r\n\r\n    /** @private */\r\n    _animatedRemoveNotificationCard() {\r\n      this.__cleanUpOpeningClosingState();\r\n\r\n      this._card.setAttribute('closing', '');\r\n      const name = getComputedStyle(this._card).getPropertyValue('animation-name');\r\n      if (name && name !== 'none') {\r\n        this.__animationEndListener = () => {\r\n          this._removeNotificationCard();\r\n          this.__cleanUpOpeningClosingState();\r\n        };\r\n        this._card.addEventListener('animationend', this.__animationEndListener);\r\n      } else {\r\n        this._removeNotificationCard();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _positionChanged() {\r\n      if (this.opened) {\r\n        this._animatedAppendNotificationCard();\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _durationChanged(duration, opened) {\r\n      if (opened) {\r\n        clearTimeout(this._durationTimeoutId);\r\n        if (duration > 0) {\r\n          this._durationTimeoutId = setTimeout(() => this.close(), duration);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Fired when the notification is closed.\r\n     *\r\n     * @event closed\r\n     */\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2016 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const notificationContainerStyles = css`\r\n  :host {\r\n    position: fixed;\r\n    z-index: 1000;\r\n    inset: 0;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    pointer-events: none;\r\n  }\r\n\r\n  [region-group] {\r\n    flex: 1 1 0%;\r\n    display: flex;\r\n  }\r\n\r\n  [region-group='top'] {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  [region-group='bottom'] {\r\n    align-items: flex-end;\r\n  }\r\n\r\n  [region-group] > [region] {\r\n    flex: 1 1 0%;\r\n  }\r\n\r\n  @media (max-width: 420px) {\r\n    [region-group] {\r\n      flex-direction: column;\r\n      align-items: stretch;\r\n    }\r\n\r\n    [region-group='top'] {\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    [region-group='bottom'] {\r\n      justify-content: flex-end;\r\n    }\r\n\r\n    [region-group] > [region] {\r\n      flex: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const notificationCardStyles = css`\r\n  :host {\r\n    display: block;\r\n  }\r\n\r\n  [part='overlay'] {\r\n    pointer-events: auto;\r\n  }\r\n\r\n  @media (forced-colors: active) {\r\n    [part='overlay'] {\r\n      outline: 3px solid;\r\n    }\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2017 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { NotificationContainerMixin, NotificationMixin } from './vaadin-notification-mixin.js';\r\nimport { notificationCardStyles, notificationContainerStyles } from './vaadin-notification-styles.js';\r\n\r\nregisterStyles('vaadin-notification-container', notificationContainerStyles, {\r\n  moduleId: 'vaadin-notification-container-styles',\r\n});\r\n\r\nregisterStyles('vaadin-notification-card', notificationCardStyles, {\r\n  moduleId: 'vaadin-notification-card-styles',\r\n});\r\n\r\n/**\r\n * An element used internally by `<vaadin-notification>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes NotificationContainerMixin\r\n * @mixes ElementMixin\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass NotificationContainer extends NotificationContainerMixin(ThemableMixin(ElementMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <div region=\"top-stretch\"><slot name=\"top-stretch\"></slot></div>\r\n      <div region-group=\"top\">\r\n        <div region=\"top-start\"><slot name=\"top-start\"></slot></div>\r\n        <div region=\"top-center\"><slot name=\"top-center\"></slot></div>\r\n        <div region=\"top-end\"><slot name=\"top-end\"></slot></div>\r\n      </div>\r\n      <div region=\"middle\"><slot name=\"middle\"></slot></div>\r\n      <div region-group=\"bottom\">\r\n        <div region=\"bottom-start\"><slot name=\"bottom-start\"></slot></div>\r\n        <div region=\"bottom-center\"><slot name=\"bottom-center\"></slot></div>\r\n        <div region=\"bottom-end\"><slot name=\"bottom-end\"></slot></div>\r\n      </div>\r\n      <div region=\"bottom-stretch\"><slot name=\"bottom-stretch\"></slot></div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-notification-container';\r\n  }\r\n}\r\n\r\n/**\r\n * An element used internally by `<vaadin-notification>`. Not intended to be used separately.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @private\r\n */\r\nclass NotificationCard extends ThemableMixin(PolymerElement) {\r\n  static get template() {\r\n    return html`\r\n      <div part=\"overlay\">\r\n        <div part=\"content\">\r\n          <slot></slot>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-notification-card';\r\n  }\r\n\r\n  /** @protected */\r\n  ready() {\r\n    super.ready();\r\n    this.setAttribute('role', 'alert');\r\n  }\r\n}\r\n\r\n/**\r\n * `<vaadin-notification>` is a Web Component providing accessible and customizable notifications (toasts).\r\n *\r\n * ### Rendering\r\n *\r\n * The content of the notification can be populated by using the renderer callback function.\r\n *\r\n * The renderer function provides `root`, `notification` arguments.\r\n * Generate DOM content, append it to the `root` element and control the state\r\n * of the host element by accessing `notification`. Before generating new content,\r\n * users are able to check if there is already content in `root` for reusing it.\r\n *\r\n * ```html\r\n * <vaadin-notification id=\"notification\"></vaadin-notification>\r\n * ```\r\n * ```js\r\n * const notification = document.querySelector('#notification');\r\n * notification.renderer = function(root, notification) {\r\n *   root.textContent = \"Your work has been saved\";\r\n * };\r\n * ```\r\n *\r\n * Renderer is called on the opening of the notification.\r\n * DOM generated during the renderer call can be reused\r\n * in the next renderer call and will be provided with the `root` argument.\r\n * On first call it will be empty.\r\n *\r\n * ### Styling\r\n *\r\n * `<vaadin-notification>` uses `<vaadin-notification-card>` internal\r\n * themable component as the actual visible notification cards.\r\n *\r\n * The following shadow DOM parts of the `<vaadin-notification-card>` are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------------|----------------\r\n * `overlay` | The notification container\r\n * `content` | The content of the notification\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * Note: the `theme` attribute value set on `<vaadin-notification>` is\r\n * propagated to the internal `<vaadin-notification-card>`.\r\n *\r\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\r\n * @fires {CustomEvent} closed - Fired when the notification is closed.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes NotificationMixin\r\n * @mixes ElementMixin\r\n */\r\nclass Notification extends NotificationMixin(ElementMixin(PolymerElement)) {\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: none !important;\r\n        }\r\n      </style>\r\n      <vaadin-notification-card\r\n        theme$=\"[[_theme]]\"\r\n        aria-live$=\"[[__computeAriaLive(assertive)]]\"\r\n      ></vaadin-notification-card>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-notification';\r\n  }\r\n}\r\n\r\ndefineCustomElement(NotificationContainer);\r\ndefineCustomElement(NotificationCard);\r\ndefineCustomElement(Notification);\r\n\r\nexport { Notification };\r\n"],
  "mappings": "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",
  "names": ["Notification"]
}
