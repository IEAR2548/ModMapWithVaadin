{
  "version": 3,
  "sources": ["../../@vaadin/message-list/theme/lumo/vaadin-message-styles.js", "../../@vaadin/message-list/theme/lumo/vaadin-message-list-styles.js", "../../@vaadin/message-list/src/vaadin-message-mixin.js", "../../@vaadin/message-list/src/vaadin-message-styles.js", "../../@vaadin/message-list/src/vaadin-message.js", "../../@vaadin/message-list/src/vaadin-message-list-mixin.js", "../../@vaadin/message-list/src/vaadin-message-list.js"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport '@vaadin/vaadin-lumo-styles/typography.js';\r\nimport '@vaadin/avatar/theme/lumo/vaadin-avatar-styles.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles(\r\n  'vaadin-message',\r\n  css`\r\n    :host {\r\n      color: var(--lumo-body-text-color);\r\n      font-family: var(--lumo-font-family);\r\n      font-size: var(--lumo-font-size-m);\r\n      line-height: var(--lumo-line-height-m);\r\n      padding: var(--lumo-space-s) var(--lumo-space-m);\r\n      -moz-osx-font-smoothing: grayscale;\r\n      -webkit-font-smoothing: antialiased;\r\n      -webkit-text-size-adjust: 100%;\r\n      --_focus-ring-color: var(--vaadin-focus-ring-color, var(--lumo-primary-color-50pct));\r\n      --_focus-ring-width: var(--vaadin-focus-ring-width, 2px);\r\n    }\r\n\r\n    :host([focus-ring]) {\r\n      box-shadow: inset 0 0 0 var(--_focus-ring-width) var(--_focus-ring-color);\r\n    }\r\n\r\n    [part='header'] {\r\n      min-height: calc(var(--lumo-font-size-m) * var(--lumo-line-height-m));\r\n    }\r\n\r\n    [part='name'] {\r\n      margin-right: var(--lumo-space-s);\r\n    }\r\n\r\n    [part='name']:empty {\r\n      margin-right: 0;\r\n    }\r\n\r\n    :host([dir='rtl']) [part='name'] {\r\n      margin-left: var(--lumo-space-s);\r\n      margin-right: 0;\r\n    }\r\n\r\n    :host([dir='rtl']) [part='name']:empty {\r\n      margin-left: 0;\r\n    }\r\n\r\n    [part='time'] {\r\n      color: var(--lumo-secondary-text-color);\r\n      font-size: var(--lumo-font-size-s);\r\n    }\r\n\r\n    ::slotted([slot='avatar']) {\r\n      --vaadin-avatar-size: var(--lumo-size-m);\r\n      margin-top: calc(var(--lumo-space-s));\r\n      margin-inline-end: calc(var(--lumo-space-m));\r\n    }\r\n  `,\r\n  { moduleId: 'lumo-message' },\r\n);\r\n", "import '@vaadin/vaadin-lumo-styles/color.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\r\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\r\nimport '@vaadin/vaadin-lumo-styles/style.js';\r\nimport './vaadin-message-styles.js';\r\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\n\r\nregisterStyles('vaadin-message-list', css``, { moduleId: 'lumo-message-list' });\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\r\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\r\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes ControllerMixin\r\n * @mixes FocusMixin\r\n */\r\nexport const MessageMixin = (superClass) =>\r\n  class MessageMixinClass extends FocusMixin(ControllerMixin(superClass)) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * Time of sending the message. It is rendered as-is to the part='time' slot,\r\n         * so the formatting is up to you.\r\n         */\r\n        time: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * The name of the user posting the message.\r\n         * It will be placed in the name part to indicate who has sent the message.\r\n         * It is also used as a tooltip for the avatar.\r\n         * Example: `message.userName = \"Jessica Jacobs\";`\r\n         * @attr {string} user-name\r\n         */\r\n        userName: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * The abbreviation of the user.\r\n         * The abbreviation will be passed on to avatar of the message.\r\n         * If the user does not have an avatar picture set with `userImg`, `userAbbr` will be shown in the avatar.\r\n         * Example: `message.userAbbr = \"JJ\";`\r\n         * @attr {string} user-abbr\r\n         */\r\n        userAbbr: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * An URL for a user image.\r\n         * The image will be used in the avatar component to show who has sent the message.\r\n         * Example: `message.userImg = \"/static/img/avatar.jpg\";`\r\n         * @attr {string} user-img\r\n         */\r\n        userImg: {\r\n          type: String,\r\n        },\r\n\r\n        /**\r\n         * A color index to be used to render the color of the avatar.\r\n         * With no `userColorIndex` set, the basic avatar color will be used.\r\n         * By setting a userColorIndex, the component will check if there exists a CSS variable defining the color, and uses it if there is one.\r\n         * If now CSS variable is found for the color index, the property for the color will not be set.\r\n         *\r\n         * Example:\r\n         * CSS:\r\n         * ```css\r\n         * html {\r\n         *   --vaadin-user-color-1: red;\r\n         * }\r\n         * ```\r\n         *\r\n         * JavaScript:\r\n         * ```js\r\n         * message.userColorIndex = 1;\r\n         * ```\r\n         * @attr {number} user-color-index\r\n         */\r\n        userColorIndex: {\r\n          type: Number,\r\n        },\r\n\r\n        /** @private */\r\n        _avatar: {\r\n          type: Object,\r\n        },\r\n      };\r\n    }\r\n\r\n    static get observers() {\r\n      return ['__avatarChanged(_avatar, userName, userAbbr, userImg, userColorIndex)'];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      this._avatarController = new SlotController(this, 'avatar', 'vaadin-avatar', {\r\n        initializer: (avatar) => {\r\n          avatar.setAttribute('tabindex', '-1');\r\n          avatar.setAttribute('aria-hidden', 'true');\r\n          this._avatar = avatar;\r\n        },\r\n      });\r\n      this.addController(this._avatarController);\r\n    }\r\n\r\n    /** @private */\r\n    __avatarChanged(avatar, userName, userAbbr, userImg, userColorIndex) {\r\n      if (avatar) {\r\n        avatar.setProperties({\r\n          name: userName,\r\n          abbr: userAbbr,\r\n          img: userImg,\r\n          colorIndex: userColorIndex,\r\n        });\r\n      }\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { css } from 'lit';\r\n\r\nexport const messageStyles = css`\r\n  :host {\r\n    display: flex;\r\n    flex-direction: row;\r\n    outline: none;\r\n  }\r\n\r\n  :host([hidden]) {\r\n    display: none !important;\r\n  }\r\n\r\n  [part='content'] {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  [part='header'] {\r\n    align-items: baseline;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n\r\n  [part='name'] {\r\n    font-weight: 500;\r\n  }\r\n\r\n  [part='message'] {\r\n    white-space: pre-wrap;\r\n  }\r\n\r\n  ::slotted([slot='avatar']) {\r\n    --vaadin-avatar-outline-width: 0;\r\n    flex-shrink: 0;\r\n  }\r\n`;\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport '@vaadin/avatar/src/vaadin-avatar.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { MessageMixin } from './vaadin-message-mixin.js';\r\nimport { messageStyles } from './vaadin-message-styles.js';\r\n\r\nregisterStyles('vaadin-message', messageStyles, { moduleId: 'vaadin-message-styles' });\r\n\r\n/**\r\n * `<vaadin-message>` is a Web Component for showing a single message with an author, message and time.\r\n *\r\n * ```html\r\n * <vaadin-message time=\"2021-01-28 10:43\"\r\n *     user-name = \"Bob Ross\"\r\n *     user-abbr = \"BR\"\r\n *     user-img = \"/static/img/avatar.jpg\">There is no real ending. It's just the place where you stop the story.</vaadin-message>\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------|----------------\r\n * `name`    | Author's name\r\n * `time`    | When the message was posted\r\n * `content` | The message itself as a slotted content\r\n *\r\n * The following state attributes are available for styling:\r\n *\r\n * Attribute    | Description\r\n * -------------|-------------\r\n * `focus-ring` | Set when the message is focused using the keyboard.\r\n * `focused`    | Set when the message is focused.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes MessageMixin\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n */\r\nclass Message extends MessageMixin(ElementMixin(ThemableMixin(PolymerElement))) {\r\n  static get template() {\r\n    return html`\r\n      <slot name=\"avatar\"></slot>\r\n      <div part=\"content\">\r\n        <div part=\"header\">\r\n          <span part=\"name\">[[userName]]</span>\r\n          <span part=\"time\">[[time]]</span>\r\n        </div>\r\n        <div part=\"message\"><slot></slot></div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static get is() {\r\n    return 'vaadin-message';\r\n  }\r\n}\r\n\r\ndefineCustomElement(Message);\r\n\r\nexport { Message };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport { html, render } from 'lit';\r\nimport { ifDefined } from 'lit/directives/if-defined.js';\r\nimport { KeyboardDirectionMixin } from '@vaadin/a11y-base/src/keyboard-direction-mixin.js';\r\n\r\n/**\r\n * @polymerMixin\r\n * @mixes KeyboardDirectionMixin\r\n */\r\nexport const MessageListMixin = (superClass) =>\r\n  class MessageListMixinClass extends KeyboardDirectionMixin(superClass) {\r\n    static get properties() {\r\n      return {\r\n        /**\r\n         * An array of objects which will be rendered as messages.\r\n         * The message objects can have the following properties:\r\n         * ```js\r\n         * Array<{\r\n         *   text: string,\r\n         *   time: string,\r\n         *   userName: string,\r\n         *   userAbbr: string,\r\n         *   userImg: string,\r\n         *   userColorIndex: number,\r\n         *   className: string,\r\n         *   theme: string\r\n         * }>\r\n         * ```\r\n         */\r\n        items: {\r\n          type: Array,\r\n          value: () => [],\r\n          observer: '_itemsChanged',\r\n          sync: true,\r\n        },\r\n      };\r\n    }\r\n\r\n    /** @protected */\r\n    get _messages() {\r\n      return [...this.querySelectorAll('vaadin-message')];\r\n    }\r\n\r\n    /** @protected */\r\n    ready() {\r\n      super.ready();\r\n\r\n      // Make screen readers announce new messages\r\n      this.setAttribute('aria-relevant', 'additions');\r\n      this.setAttribute('role', 'log');\r\n    }\r\n\r\n    /**\r\n     * Override method inherited from `KeyboardDirectionMixin`\r\n     * to use the list of message elements as items.\r\n     *\r\n     * @return {Element[]}\r\n     * @protected\r\n     * @override\r\n     */\r\n    _getItems() {\r\n      return this._messages;\r\n    }\r\n\r\n    /** @private */\r\n    _itemsChanged(newVal, oldVal) {\r\n      const items = newVal || [];\r\n      const oldItems = oldVal || [];\r\n\r\n      if (items.length || oldItems.length) {\r\n        const focusedIndex = this._getIndexOfFocusableElement();\r\n        const closeToBottom = this.scrollHeight < this.clientHeight + this.scrollTop + 50;\r\n\r\n        this._renderMessages(items);\r\n        this._setTabIndexesByIndex(focusedIndex);\r\n\r\n        requestAnimationFrame(() => {\r\n          if (items.length > oldItems.length && closeToBottom) {\r\n            this._scrollToLastMessage();\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _renderMessages(items) {\r\n      render(\r\n        html`\r\n          ${items.map(\r\n            (item) => html`\r\n              <vaadin-message\r\n                role=\"listitem\"\r\n                .time=\"${item.time}\"\r\n                .userAbbr=\"${item.userAbbr}\"\r\n                .userName=\"${item.userName}\"\r\n                .userImg=\"${item.userImg}\"\r\n                .userColorIndex=\"${item.userColorIndex}\"\r\n                theme=\"${ifDefined(item.theme)}\"\r\n                class=\"${ifDefined(item.className)}\"\r\n                @focusin=\"${this._onMessageFocusIn}\"\r\n                >${item.text}<vaadin-avatar slot=\"avatar\"></vaadin-avatar\r\n              ></vaadin-message>\r\n            `,\r\n          )}\r\n        `,\r\n        this,\r\n        { host: this },\r\n      );\r\n    }\r\n\r\n    /** @private */\r\n    _scrollToLastMessage() {\r\n      if (this.items.length > 0) {\r\n        this.scrollTop = this.scrollHeight - this.clientHeight;\r\n      }\r\n    }\r\n\r\n    /** @private */\r\n    _onMessageFocusIn(e) {\r\n      const target = e.composedPath().find((node) => node instanceof customElements.get('vaadin-message'));\r\n      this._setTabIndexesByMessage(target);\r\n    }\r\n\r\n    /**\r\n     * @param {number} idx\r\n     * @protected\r\n     */\r\n    _setTabIndexesByIndex(index) {\r\n      const message = this._messages[index] || this._messages[0];\r\n      this._setTabIndexesByMessage(message);\r\n    }\r\n\r\n    /** @private */\r\n    _setTabIndexesByMessage(message) {\r\n      this._messages.forEach((e) => {\r\n        e.tabIndex = e === message ? 0 : -1;\r\n      });\r\n    }\r\n\r\n    /** @private */\r\n    _getIndexOfFocusableElement() {\r\n      const index = this._messages.findIndex((e) => e.tabIndex === 0);\r\n      return index !== -1 ? index : 0;\r\n    }\r\n  };\r\n", "/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\nimport './vaadin-message.js';\r\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\r\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\r\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\r\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\r\nimport { MessageListMixin } from './vaadin-message-list-mixin.js';\r\n\r\n/**\r\n * `<vaadin-message-list>` is a Web Component for showing an ordered list of messages. The messages are rendered as <vaadin-message>\r\n *\r\n * ### Example\r\n *\r\n * To create a new message list, add the component to the page:\r\n *\r\n * ```html\r\n * <vaadin-message-list></vaadin-message-list>\r\n * ```\r\n *\r\n * Provide the messages to the message list with the [`items`](#/elements/vaadin-message-list#property-items) property.\r\n *\r\n * ```js\r\n * document.querySelector('vaadin-message-list').items = [\r\n *   { text: 'Hello list', time: 'yesterday', userName: 'Matt Mambo', userAbbr: 'MM', userColorIndex: 1 },\r\n *   { text: 'Another message', time: 'right now', userName: 'Linsey Listy', userAbbr: 'LL', userColorIndex: 2, userImg: '/static/img/avatar.jpg' }\r\n * ];\r\n * ```\r\n *\r\n * ### Styling\r\n *\r\n * The following shadow DOM parts are available for styling:\r\n *\r\n * Part name | Description\r\n * ----------|----------------\r\n * `list`    | The container wrapping messages.\r\n *\r\n * See the [`<vaadin-message>`](#/elements/vaadin-message) documentation for the available\r\n * state attributes and stylable shadow parts of message elements.\r\n *\r\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\r\n *\r\n * @customElement\r\n * @extends HTMLElement\r\n * @mixes ThemableMixin\r\n * @mixes ElementMixin\r\n * @mixes MessageListMixin\r\n */\r\nclass MessageList extends MessageListMixin(ElementMixin(ThemableMixin(PolymerElement))) {\r\n  static get is() {\r\n    return 'vaadin-message-list';\r\n  }\r\n\r\n  static get template() {\r\n    return html`\r\n      <style>\r\n        :host {\r\n          display: block;\r\n          overflow: auto;\r\n        }\r\n\r\n        :host([hidden]) {\r\n          display: none !important;\r\n        }\r\n      </style>\r\n      <div part=\"list\" role=\"list\">\r\n        <slot></slot>\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n\r\ndefineCustomElement(MessageList);\r\n\r\nexport { MessageList };\r\n"],
  "mappings": "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",
  "names": ["html", "html"]
}
