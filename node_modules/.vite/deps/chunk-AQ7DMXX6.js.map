{
  "version": 3,
  "sources": ["../../@vaadin/component-base/src/define.js"],
  "sourcesContent": ["/**\r\n * @license\r\n * Copyright (c) 2021 - 2025 Vaadin Ltd.\r\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\r\n */\r\n\r\nwindow.Vaadin ||= {};\r\nwindow.Vaadin.featureFlags ||= {};\r\n\r\nfunction dashToCamelCase(dash) {\r\n  return dash.replace(/-[a-z]/gu, (m) => m[1].toUpperCase());\r\n}\r\n\r\nconst experimentalMap = {};\r\n\r\nexport function defineCustomElement(CustomElement, version = '24.7.3') {\r\n  Object.defineProperty(CustomElement, 'version', {\r\n    get() {\r\n      return version;\r\n    },\r\n  });\r\n\r\n  if (CustomElement.experimental) {\r\n    const featureFlagKey =\r\n      typeof CustomElement.experimental === 'string'\r\n        ? CustomElement.experimental\r\n        : `${dashToCamelCase(CustomElement.is.split('-').slice(1).join('-'))}Component`;\r\n\r\n    if (!window.Vaadin.featureFlags[featureFlagKey] && !experimentalMap[featureFlagKey]) {\r\n      // Add setter to define experimental component when it's set to true\r\n      experimentalMap[featureFlagKey] = new Set();\r\n      experimentalMap[featureFlagKey].add(CustomElement);\r\n\r\n      Object.defineProperty(window.Vaadin.featureFlags, featureFlagKey, {\r\n        get() {\r\n          return experimentalMap[featureFlagKey].size === 0;\r\n        },\r\n        set(value) {\r\n          if (!!value && experimentalMap[featureFlagKey].size > 0) {\r\n            experimentalMap[featureFlagKey].forEach((elementClass) => {\r\n              customElements.define(elementClass.is, elementClass);\r\n            });\r\n            experimentalMap[featureFlagKey].clear();\r\n          }\r\n        },\r\n      });\r\n\r\n      return;\r\n    } else if (experimentalMap[featureFlagKey]) {\r\n      // Allow to register multiple components with single flag\r\n      experimentalMap[featureFlagKey].add(CustomElement);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const defined = customElements.get(CustomElement.is);\r\n  if (!defined) {\r\n    customElements.define(CustomElement.is, CustomElement);\r\n  } else {\r\n    const definedVersion = defined.version;\r\n    if (definedVersion && CustomElement.version && definedVersion === CustomElement.version) {\r\n      // Just loading the same thing again\r\n      console.warn(`The component ${CustomElement.is} has been loaded twice`);\r\n    } else {\r\n      console.error(\r\n        `Tried to define ${CustomElement.is} version ${CustomElement.version} when version ${defined.version} is already in use. Something will probably break.`,\r\n      );\r\n    }\r\n  }\r\n}\r\n"],
  "mappings": ";AAMA,OAAO,WAAP,OAAO,SAAW,CAAC;AANnB;AAAA,CAOA,YAAO,QAAO,iBAAd,GAAc,eAAiB,CAAC;AAEhC,SAAS,gBAAgB,MAAM;AAC7B,SAAO,KAAK,QAAQ,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,YAAY,CAAC;AAC3D;AAEA,IAAM,kBAAkB,CAAC;AAElB,SAAS,oBAAoB,eAAe,UAAU,UAAU;AACrE,SAAO,eAAe,eAAe,WAAW;AAAA,IAC9C,MAAM;AACJ,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAED,MAAI,cAAc,cAAc;AAC9B,UAAM,iBACJ,OAAO,cAAc,iBAAiB,WAClC,cAAc,eACd,GAAG,gBAAgB,cAAc,GAAG,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;AAExE,QAAI,CAAC,OAAO,OAAO,aAAa,cAAc,KAAK,CAAC,gBAAgB,cAAc,GAAG;AAEnF,sBAAgB,cAAc,IAAI,oBAAI,IAAI;AAC1C,sBAAgB,cAAc,EAAE,IAAI,aAAa;AAEjD,aAAO,eAAe,OAAO,OAAO,cAAc,gBAAgB;AAAA,QAChE,MAAM;AACJ,iBAAO,gBAAgB,cAAc,EAAE,SAAS;AAAA,QAClD;AAAA,QACA,IAAI,OAAO;AACT,cAAI,CAAC,CAAC,SAAS,gBAAgB,cAAc,EAAE,OAAO,GAAG;AACvD,4BAAgB,cAAc,EAAE,QAAQ,CAAC,iBAAiB;AACxD,6BAAe,OAAO,aAAa,IAAI,YAAY;AAAA,YACrD,CAAC;AACD,4BAAgB,cAAc,EAAE,MAAM;AAAA,UACxC;AAAA,QACF;AAAA,MACF,CAAC;AAED;AAAA,IACF,WAAW,gBAAgB,cAAc,GAAG;AAE1C,sBAAgB,cAAc,EAAE,IAAI,aAAa;AACjD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,UAAU,eAAe,IAAI,cAAc,EAAE;AACnD,MAAI,CAAC,SAAS;AACZ,mBAAe,OAAO,cAAc,IAAI,aAAa;AAAA,EACvD,OAAO;AACL,UAAM,iBAAiB,QAAQ;AAC/B,QAAI,kBAAkB,cAAc,WAAW,mBAAmB,cAAc,SAAS;AAEvF,cAAQ,KAAK,iBAAiB,cAAc,EAAE,wBAAwB;AAAA,IACxE,OAAO;AACL,cAAQ;AAAA,QACN,mBAAmB,cAAc,EAAE,YAAY,cAAc,OAAO,iBAAiB,QAAQ,OAAO;AAAA,MACtG;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
